// This file is auto-generated, don't edit it. Thanks.
package com.aliyun.sofa20190815;

import com.aliyun.tea.*;
import com.aliyun.sofa20190815.models.*;
import com.aliyun.teautil.*;
import com.aliyun.teautil.models.*;
import com.aliyun.teaopenapi.*;
import com.aliyun.teaopenapi.models.*;
import com.aliyun.endpointutil.*;

public class Client extends com.aliyun.teaopenapi.Client {

    public Client(Config config) throws Exception {
        super(config);
        this._endpointRule = "regional";
        this._endpointMap = TeaConverter.buildMap(
            new TeaPair("cn-hangzhou-finance", "sofa.cn-shanghai.aliyuncs.com")
        );
        this.checkConfig(config);
        this._endpoint = this.getEndpoint("sofa", _regionId, _endpointRule, _network, _suffix, _endpointMap, _endpoint);
    }


    public String getEndpoint(String productId, String regionId, String endpointRule, String network, String suffix, java.util.Map<String, String> endpointMap, String endpoint) throws Exception {
        if (!com.aliyun.teautil.Common.empty(endpoint)) {
            return endpoint;
        }

        if (!com.aliyun.teautil.Common.isUnset(endpointMap) && !com.aliyun.teautil.Common.empty(endpointMap.get(regionId))) {
            return endpointMap.get(regionId);
        }

        return com.aliyun.endpointutil.Client.getEndpointRules(productId, regionId, endpointRule, network, suffix);
    }

    public ActiveTSJobResponse activeTSJobWithOptions(ActiveTSJobRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ActiveTSJob", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ActiveTSJobResponse());
    }

    public ActiveTSJobResponse activeTSJob(ActiveTSJobRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.activeTSJobWithOptions(request, runtime);
    }

    public AddAKSDeploymentSidecarResponse addAKSDeploymentSidecarWithOptions(AddAKSDeploymentSidecarRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddAKSDeploymentSidecar", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddAKSDeploymentSidecarResponse());
    }

    public AddAKSDeploymentSidecarResponse addAKSDeploymentSidecar(AddAKSDeploymentSidecarRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addAKSDeploymentSidecarWithOptions(request, runtime);
    }

    public AddAKSHelmRepoResponse addAKSHelmRepoWithOptions(AddAKSHelmRepoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddAKSHelmRepo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddAKSHelmRepoResponse());
    }

    public AddAKSHelmRepoResponse addAKSHelmRepo(AddAKSHelmRepoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addAKSHelmRepoWithOptions(request, runtime);
    }

    public AddAKSNodeLabelResponse addAKSNodeLabelWithOptions(AddAKSNodeLabelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddAKSNodeLabel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddAKSNodeLabelResponse());
    }

    public AddAKSNodeLabelResponse addAKSNodeLabel(AddAKSNodeLabelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addAKSNodeLabelWithOptions(request, runtime);
    }

    public AddAKSNodeTaintResponse addAKSNodeTaintWithOptions(AddAKSNodeTaintRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddAKSNodeTaint", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddAKSNodeTaintResponse());
    }

    public AddAKSNodeTaintResponse addAKSNodeTaint(AddAKSNodeTaintRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addAKSNodeTaintWithOptions(request, runtime);
    }

    public AddClriskDataNodeResponse addClriskDataNodeWithOptions(AddClriskDataNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddClriskDataNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddClriskDataNodeResponse());
    }

    public AddClriskDataNodeResponse addClriskDataNode(AddClriskDataNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addClriskDataNodeWithOptions(request, runtime);
    }

    public AddClriskProductSceneResponse addClriskProductSceneWithOptions(AddClriskProductSceneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddClriskProductScene", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddClriskProductSceneResponse());
    }

    public AddClriskProductSceneResponse addClriskProductScene(AddClriskProductSceneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addClriskProductSceneWithOptions(request, runtime);
    }

    public AddDWSUsersResponse addDWSUsersWithOptions(AddDWSUsersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddDWSUsers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddDWSUsersResponse());
    }

    public AddDWSUsersResponse addDWSUsers(AddDWSUsersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addDWSUsersWithOptions(request, runtime);
    }

    public AddDWSVpcResponse addDWSVpcWithOptions(AddDWSVpcRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddDWSVpc", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddDWSVpcResponse());
    }

    public AddDWSVpcResponse addDWSVpc(AddDWSVpcRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addDWSVpcWithOptions(request, runtime);
    }

    public AddDWSVpcServerResponse addDWSVpcServerWithOptions(AddDWSVpcServerRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddDWSVpcServer", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddDWSVpcServerResponse());
    }

    public AddDWSVpcServerResponse addDWSVpcServer(AddDWSVpcServerRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addDWSVpcServerWithOptions(request, runtime);
    }

    public AddGWApiGroupAuthUserResponse addGWApiGroupAuthUserWithOptions(AddGWApiGroupAuthUserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddGWApiGroupAuthUser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddGWApiGroupAuthUserResponse());
    }

    public AddGWApiGroupAuthUserResponse addGWApiGroupAuthUser(AddGWApiGroupAuthUserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addGWApiGroupAuthUserWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeAddnamespacememberResponse addLinkeantcodeAntcodeAddnamespacememberWithOptions(AddLinkeantcodeAntcodeAddnamespacememberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeAddnamespacemember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeAddnamespacememberResponse());
    }

    public AddLinkeantcodeAntcodeAddnamespacememberResponse addLinkeantcodeAntcodeAddnamespacemember(AddLinkeantcodeAntcodeAddnamespacememberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeAddnamespacememberWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeAddprojectkeyResponse addLinkeantcodeAntcodeAddprojectkeyWithOptions(AddLinkeantcodeAntcodeAddprojectkeyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeAddprojectkey", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeAddprojectkeyResponse());
    }

    public AddLinkeantcodeAntcodeAddprojectkeyResponse addLinkeantcodeAntcodeAddprojectkey(AddLinkeantcodeAntcodeAddprojectkeyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeAddprojectkeyWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeAddprojectmemberResponse addLinkeantcodeAntcodeAddprojectmemberWithOptions(AddLinkeantcodeAntcodeAddprojectmemberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeAddprojectmember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeAddprojectmemberResponse());
    }

    public AddLinkeantcodeAntcodeAddprojectmemberResponse addLinkeantcodeAntcodeAddprojectmember(AddLinkeantcodeAntcodeAddprojectmemberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeAddprojectmemberWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeAddreviewssubscriptionsResponse addLinkeantcodeAntcodeAddreviewssubscriptionsWithOptions(AddLinkeantcodeAntcodeAddreviewssubscriptionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeAddreviewssubscriptions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeAddreviewssubscriptionsResponse());
    }

    public AddLinkeantcodeAntcodeAddreviewssubscriptionsResponse addLinkeantcodeAntcodeAddreviewssubscriptions(AddLinkeantcodeAntcodeAddreviewssubscriptionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeAddreviewssubscriptionsWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeApiaddnamespacememberResponse addLinkeantcodeAntcodeApiaddnamespacememberWithOptions(AddLinkeantcodeAntcodeApiaddnamespacememberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeApiaddnamespacemember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeApiaddnamespacememberResponse());
    }

    public AddLinkeantcodeAntcodeApiaddnamespacememberResponse addLinkeantcodeAntcodeApiaddnamespacemember(AddLinkeantcodeAntcodeApiaddnamespacememberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeApiaddnamespacememberWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeGroupmemberResponse addLinkeantcodeAntcodeGroupmemberWithOptions(AddLinkeantcodeAntcodeGroupmemberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeGroupmember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeGroupmemberResponse());
    }

    public AddLinkeantcodeAntcodeGroupmemberResponse addLinkeantcodeAntcodeGroupmember(AddLinkeantcodeAntcodeGroupmemberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeGroupmemberWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeHookResponse addLinkeantcodeAntcodeHookWithOptions(AddLinkeantcodeAntcodeHookRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeHook", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeHookResponse());
    }

    public AddLinkeantcodeAntcodeHookResponse addLinkeantcodeAntcodeHook(AddLinkeantcodeAntcodeHookRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeHookWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeInstallationsserviceResponse addLinkeantcodeAntcodeInstallationsserviceWithOptions(AddLinkeantcodeAntcodeInstallationsserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeInstallationsservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeInstallationsserviceResponse());
    }

    public AddLinkeantcodeAntcodeInstallationsserviceResponse addLinkeantcodeAntcodeInstallationsservice(AddLinkeantcodeAntcodeInstallationsserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeInstallationsserviceWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeManagementtagsResponse addLinkeantcodeAntcodeManagementtagsWithOptions(AddLinkeantcodeAntcodeManagementtagsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeManagementtags", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeManagementtagsResponse());
    }

    public AddLinkeantcodeAntcodeManagementtagsResponse addLinkeantcodeAntcodeManagementtags(AddLinkeantcodeAntcodeManagementtagsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeManagementtagsWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeProjectmemeberResponse addLinkeantcodeAntcodeProjectmemeberWithOptions(AddLinkeantcodeAntcodeProjectmemeberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeProjectmemeber", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeProjectmemeberResponse());
    }

    public AddLinkeantcodeAntcodeProjectmemeberResponse addLinkeantcodeAntcodeProjectmemeber(AddLinkeantcodeAntcodeProjectmemeberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeProjectmemeberWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeProjectreviewmemberResponse addLinkeantcodeAntcodeProjectreviewmemberWithOptions(AddLinkeantcodeAntcodeProjectreviewmemberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeProjectreviewmember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeProjectreviewmemberResponse());
    }

    public AddLinkeantcodeAntcodeProjectreviewmemberResponse addLinkeantcodeAntcodeProjectreviewmember(AddLinkeantcodeAntcodeProjectreviewmemberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeProjectreviewmemberWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeProjectsidinstallationsResponse addLinkeantcodeAntcodeProjectsidinstallationsWithOptions(AddLinkeantcodeAntcodeProjectsidinstallationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeProjectsidinstallations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeProjectsidinstallationsResponse());
    }

    public AddLinkeantcodeAntcodeProjectsidinstallationsResponse addLinkeantcodeAntcodeProjectsidinstallations(AddLinkeantcodeAntcodeProjectsidinstallationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeProjectsidinstallationsWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeProjectsidpullrequestspullrequestidcommentsResponse addLinkeantcodeAntcodeProjectsidpullrequestspullrequestidcommentsWithOptions(AddLinkeantcodeAntcodeProjectsidpullrequestspullrequestidcommentsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeProjectsidpullrequestspullrequestidcomments", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeProjectsidpullrequestspullrequestidcommentsResponse());
    }

    public AddLinkeantcodeAntcodeProjectsidpullrequestspullrequestidcommentsResponse addLinkeantcodeAntcodeProjectsidpullrequestspullrequestidcomments(AddLinkeantcodeAntcodeProjectsidpullrequestspullrequestidcommentsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeProjectsidpullrequestspullrequestidcommentsWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeProjectsidreviewssubscriptionsResponse addLinkeantcodeAntcodeProjectsidreviewssubscriptionsWithOptions(AddLinkeantcodeAntcodeProjectsidreviewssubscriptionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeProjectsidreviewssubscriptions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeProjectsidreviewssubscriptionsResponse());
    }

    public AddLinkeantcodeAntcodeProjectsidreviewssubscriptionsResponse addLinkeantcodeAntcodeProjectsidreviewssubscriptions(AddLinkeantcodeAntcodeProjectsidreviewssubscriptionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeProjectsidreviewssubscriptionsWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeProjectsprojectidartifactsmanagementResponse addLinkeantcodeAntcodeProjectsprojectidartifactsmanagementWithOptions(AddLinkeantcodeAntcodeProjectsprojectidartifactsmanagementRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeProjectsprojectidartifactsmanagement", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeProjectsprojectidartifactsmanagementResponse());
    }

    public AddLinkeantcodeAntcodeProjectsprojectidartifactsmanagementResponse addLinkeantcodeAntcodeProjectsprojectidartifactsmanagement(AddLinkeantcodeAntcodeProjectsprojectidartifactsmanagementRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeProjectsprojectidartifactsmanagementWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeProjectsserviceResponse addLinkeantcodeAntcodeProjectsserviceWithOptions(AddLinkeantcodeAntcodeProjectsserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeProjectsservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeProjectsserviceResponse());
    }

    public AddLinkeantcodeAntcodeProjectsserviceResponse addLinkeantcodeAntcodeProjectsservice(AddLinkeantcodeAntcodeProjectsserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeProjectsserviceWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeTenantinstallationsResponse addLinkeantcodeAntcodeTenantinstallationsWithOptions(AddLinkeantcodeAntcodeTenantinstallationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeTenantinstallations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeTenantinstallationsResponse());
    }

    public AddLinkeantcodeAntcodeTenantinstallationsResponse addLinkeantcodeAntcodeTenantinstallations(AddLinkeantcodeAntcodeTenantinstallationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeTenantinstallationsWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeTenantmembersResponse addLinkeantcodeAntcodeTenantmembersWithOptions(AddLinkeantcodeAntcodeTenantmembersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeTenantmembers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeTenantmembersResponse());
    }

    public AddLinkeantcodeAntcodeTenantmembersResponse addLinkeantcodeAntcodeTenantmembers(AddLinkeantcodeAntcodeTenantmembersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeTenantmembersWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeUsergpgkeyResponse addLinkeantcodeAntcodeUsergpgkeyWithOptions(AddLinkeantcodeAntcodeUsergpgkeyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeUsergpgkey", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeUsergpgkeyResponse());
    }

    public AddLinkeantcodeAntcodeUsergpgkeyResponse addLinkeantcodeAntcodeUsergpgkey(AddLinkeantcodeAntcodeUsergpgkeyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeUsergpgkeyWithOptions(request, runtime);
    }

    public AddLinkeantcodeAntcodeUserpersonalaccesstokensResponse addLinkeantcodeAntcodeUserpersonalaccesstokensWithOptions(AddLinkeantcodeAntcodeUserpersonalaccesstokensRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeantcodeAntcodeUserpersonalaccesstokens", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeantcodeAntcodeUserpersonalaccesstokensResponse());
    }

    public AddLinkeantcodeAntcodeUserpersonalaccesstokensResponse addLinkeantcodeAntcodeUserpersonalaccesstokens(AddLinkeantcodeAntcodeUserpersonalaccesstokensRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeantcodeAntcodeUserpersonalaccesstokensWithOptions(request, runtime);
    }

    public AddLinkeBahamutAddaddinstanceResponse addLinkeBahamutAddaddinstanceWithOptions(AddLinkeBahamutAddaddinstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutAddaddinstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutAddaddinstanceResponse());
    }

    public AddLinkeBahamutAddaddinstanceResponse addLinkeBahamutAddaddinstance(AddLinkeBahamutAddaddinstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutAddaddinstanceWithOptions(request, runtime);
    }

    public AddLinkeBahamutAddbasejarmoduleResponse addLinkeBahamutAddbasejarmoduleWithOptions(AddLinkeBahamutAddbasejarmoduleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutAddbasejarmodule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutAddbasejarmoduleResponse());
    }

    public AddLinkeBahamutAddbasejarmoduleResponse addLinkeBahamutAddbasejarmodule(AddLinkeBahamutAddbasejarmoduleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutAddbasejarmoduleWithOptions(request, runtime);
    }

    public AddLinkeBahamutAdminaddproductResponse addLinkeBahamutAdminaddproductWithOptions(AddLinkeBahamutAdminaddproductRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutAdminaddproduct", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutAdminaddproductResponse());
    }

    public AddLinkeBahamutAdminaddproductResponse addLinkeBahamutAdminaddproduct(AddLinkeBahamutAdminaddproductRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutAdminaddproductWithOptions(request, runtime);
    }

    public AddLinkeBahamutAdminaddsecmenuResponse addLinkeBahamutAdminaddsecmenuWithOptions(AddLinkeBahamutAdminaddsecmenuRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutAdminaddsecmenu", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutAdminaddsecmenuResponse());
    }

    public AddLinkeBahamutAdminaddsecmenuResponse addLinkeBahamutAdminaddsecmenu(AddLinkeBahamutAdminaddsecmenuRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutAdminaddsecmenuWithOptions(request, runtime);
    }

    public AddLinkeBahamutAdmincommonuseResponse addLinkeBahamutAdmincommonuseWithOptions(AddLinkeBahamutAdmincommonuseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutAdmincommonuse", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutAdmincommonuseResponse());
    }

    public AddLinkeBahamutAdmincommonuseResponse addLinkeBahamutAdmincommonuse(AddLinkeBahamutAdmincommonuseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutAdmincommonuseWithOptions(request, runtime);
    }

    public AddLinkeBahamutAdmincreatebasejarResponse addLinkeBahamutAdmincreatebasejarWithOptions(AddLinkeBahamutAdmincreatebasejarRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutAdmincreatebasejar", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutAdmincreatebasejarResponse());
    }

    public AddLinkeBahamutAdmincreatebasejarResponse addLinkeBahamutAdmincreatebasejar(AddLinkeBahamutAdmincreatebasejarRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutAdmincreatebasejarWithOptions(request, runtime);
    }

    public AddLinkeBahamutAdminiterationtemplateResponse addLinkeBahamutAdminiterationtemplateWithOptions(AddLinkeBahamutAdminiterationtemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutAdminiterationtemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutAdminiterationtemplateResponse());
    }

    public AddLinkeBahamutAdminiterationtemplateResponse addLinkeBahamutAdminiterationtemplate(AddLinkeBahamutAdminiterationtemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutAdminiterationtemplateWithOptions(request, runtime);
    }

    public AddLinkeBahamutAdminproductidaddmenuResponse addLinkeBahamutAdminproductidaddmenuWithOptions(AddLinkeBahamutAdminproductidaddmenuRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutAdminproductidaddmenu", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutAdminproductidaddmenuResponse());
    }

    public AddLinkeBahamutAdminproductidaddmenuResponse addLinkeBahamutAdminproductidaddmenu(AddLinkeBahamutAdminproductidaddmenuRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutAdminproductidaddmenuWithOptions(request, runtime);
    }

    public AddLinkeBahamutAdminsecretdicResponse addLinkeBahamutAdminsecretdicWithOptions(AddLinkeBahamutAdminsecretdicRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutAdminsecretdic", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutAdminsecretdicResponse());
    }

    public AddLinkeBahamutAdminsecretdicResponse addLinkeBahamutAdminsecretdic(AddLinkeBahamutAdminsecretdicRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutAdminsecretdicWithOptions(request, runtime);
    }

    public AddLinkeBahamutAdmintenantiditerationtemplateResponse addLinkeBahamutAdmintenantiditerationtemplateWithOptions(AddLinkeBahamutAdmintenantiditerationtemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutAdmintenantiditerationtemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutAdmintenantiditerationtemplateResponse());
    }

    public AddLinkeBahamutAdmintenantiditerationtemplateResponse addLinkeBahamutAdmintenantiditerationtemplate(AddLinkeBahamutAdmintenantiditerationtemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutAdmintenantiditerationtemplateWithOptions(request, runtime);
    }

    public AddLinkeBahamutAdmintenantiditerationtemplateaddstageResponse addLinkeBahamutAdmintenantiditerationtemplateaddstageWithOptions(AddLinkeBahamutAdmintenantiditerationtemplateaddstageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutAdmintenantiditerationtemplateaddstage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutAdmintenantiditerationtemplateaddstageResponse());
    }

    public AddLinkeBahamutAdmintenantiditerationtemplateaddstageResponse addLinkeBahamutAdmintenantiditerationtemplateaddstage(AddLinkeBahamutAdmintenantiditerationtemplateaddstageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutAdmintenantiditerationtemplateaddstageWithOptions(request, runtime);
    }

    public AddLinkeBahamutAdminuserroleResponse addLinkeBahamutAdminuserroleWithOptions(AddLinkeBahamutAdminuserroleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutAdminuserrole", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutAdminuserroleResponse());
    }

    public AddLinkeBahamutAdminuserroleResponse addLinkeBahamutAdminuserrole(AddLinkeBahamutAdminuserroleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutAdminuserroleWithOptions(request, runtime);
    }

    public AddLinkeBahamutArchdomainResponse addLinkeBahamutArchdomainWithOptions(AddLinkeBahamutArchdomainRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutArchdomain", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutArchdomainResponse());
    }

    public AddLinkeBahamutArchdomainResponse addLinkeBahamutArchdomain(AddLinkeBahamutArchdomainRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutArchdomainWithOptions(request, runtime);
    }

    public AddLinkeBahamutArchdomainsResponse addLinkeBahamutArchdomainsWithOptions(AddLinkeBahamutArchdomainsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutArchdomains", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutArchdomainsResponse());
    }

    public AddLinkeBahamutArchdomainsResponse addLinkeBahamutArchdomains(AddLinkeBahamutArchdomainsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutArchdomainsWithOptions(request, runtime);
    }

    public AddLinkeBahamutIterationaddmemberResponse addLinkeBahamutIterationaddmemberWithOptions(AddLinkeBahamutIterationaddmemberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutIterationaddmember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutIterationaddmemberResponse());
    }

    public AddLinkeBahamutIterationaddmemberResponse addLinkeBahamutIterationaddmember(AddLinkeBahamutIterationaddmemberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutIterationaddmemberWithOptions(request, runtime);
    }

    public AddLinkeBahamutIterationaddprojectinfoResponse addLinkeBahamutIterationaddprojectinfoWithOptions(AddLinkeBahamutIterationaddprojectinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutIterationaddprojectinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutIterationaddprojectinfoResponse());
    }

    public AddLinkeBahamutIterationaddprojectinfoResponse addLinkeBahamutIterationaddprojectinfo(AddLinkeBahamutIterationaddprojectinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutIterationaddprojectinfoWithOptions(request, runtime);
    }

    public AddLinkeBahamutIterationaddunitsResponse addLinkeBahamutIterationaddunitsWithOptions(AddLinkeBahamutIterationaddunitsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutIterationaddunits", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutIterationaddunitsResponse());
    }

    public AddLinkeBahamutIterationaddunitsResponse addLinkeBahamutIterationaddunits(AddLinkeBahamutIterationaddunitsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutIterationaddunitsWithOptions(request, runtime);
    }

    public AddLinkeBahamutIterationunitaddmemberforunitResponse addLinkeBahamutIterationunitaddmemberforunitWithOptions(AddLinkeBahamutIterationunitaddmemberforunitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutIterationunitaddmemberforunit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutIterationunitaddmemberforunitResponse());
    }

    public AddLinkeBahamutIterationunitaddmemberforunitResponse addLinkeBahamutIterationunitaddmemberforunit(AddLinkeBahamutIterationunitaddmemberforunitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutIterationunitaddmemberforunitWithOptions(request, runtime);
    }

    public AddLinkeBahamutLogsinsertlogResponse addLinkeBahamutLogsinsertlogWithOptions(AddLinkeBahamutLogsinsertlogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutLogsinsertlog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutLogsinsertlogResponse());
    }

    public AddLinkeBahamutLogsinsertlogResponse addLinkeBahamutLogsinsertlog(AddLinkeBahamutLogsinsertlogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutLogsinsertlogWithOptions(request, runtime);
    }

    public AddLinkeBahamutOpenaddtrialResponse addLinkeBahamutOpenaddtrialWithOptions(AddLinkeBahamutOpenaddtrialRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutOpenaddtrial", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutOpenaddtrialResponse());
    }

    public AddLinkeBahamutOpenaddtrialResponse addLinkeBahamutOpenaddtrial(AddLinkeBahamutOpenaddtrialRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutOpenaddtrialWithOptions(request, runtime);
    }

    public AddLinkeBahamutServernotificationResponse addLinkeBahamutServernotificationWithOptions(AddLinkeBahamutServernotificationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutServernotification", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutServernotificationResponse());
    }

    public AddLinkeBahamutServernotificationResponse addLinkeBahamutServernotification(AddLinkeBahamutServernotificationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutServernotificationWithOptions(request, runtime);
    }

    public AddLinkeBahamutVcsmergerequestResponse addLinkeBahamutVcsmergerequestWithOptions(AddLinkeBahamutVcsmergerequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeBahamutVcsmergerequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeBahamutVcsmergerequestResponse());
    }

    public AddLinkeBahamutVcsmergerequestResponse addLinkeBahamutVcsmergerequest(AddLinkeBahamutVcsmergerequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeBahamutVcsmergerequestWithOptions(request, runtime);
    }

    public AddLinkeLinklogAccountResponse addLinkeLinklogAccountWithOptions(AddLinkeLinklogAccountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeLinklogAccount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeLinklogAccountResponse());
    }

    public AddLinkeLinklogAccountResponse addLinkeLinklogAccount(AddLinkeLinklogAccountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeLinklogAccountWithOptions(request, runtime);
    }

    public AddLinkeLinklogConfigResponse addLinkeLinklogConfigWithOptions(AddLinkeLinklogConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeLinklogConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeLinklogConfigResponse());
    }

    public AddLinkeLinklogConfigResponse addLinkeLinklogConfig(AddLinkeLinklogConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeLinklogConfigWithOptions(request, runtime);
    }

    public AddLinkeLinklogIndicationResponse addLinkeLinklogIndicationWithOptions(AddLinkeLinklogIndicationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeLinklogIndication", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeLinklogIndicationResponse());
    }

    public AddLinkeLinklogIndicationResponse addLinkeLinklogIndication(AddLinkeLinklogIndicationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeLinklogIndicationWithOptions(request, runtime);
    }

    public AddLinkeLinklogTagResponse addLinkeLinklogTagWithOptions(AddLinkeLinklogTagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeLinklogTag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeLinklogTagResponse());
    }

    public AddLinkeLinklogTagResponse addLinkeLinklogTag(AddLinkeLinklogTagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeLinklogTagWithOptions(request, runtime);
    }

    public AddLinkeLinktIterationResponse addLinkeLinktIterationWithOptions(AddLinkeLinktIterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeLinktIteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeLinktIterationResponse());
    }

    public AddLinkeLinktIterationResponse addLinkeLinktIteration(AddLinkeLinktIterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeLinktIterationWithOptions(request, runtime);
    }

    public AddLinkeLinktProjectroleforusersResponse addLinkeLinktProjectroleforusersWithOptions(AddLinkeLinktProjectroleforusersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeLinktProjectroleforusers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeLinktProjectroleforusersResponse());
    }

    public AddLinkeLinktProjectroleforusersResponse addLinkeLinktProjectroleforusers(AddLinkeLinktProjectroleforusersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeLinktProjectroleforusersWithOptions(request, runtime);
    }

    public AddLinkeLinktRelatedlinkeiterationResponse addLinkeLinktRelatedlinkeiterationWithOptions(AddLinkeLinktRelatedlinkeiterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeLinktRelatedlinkeiteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeLinktRelatedlinkeiterationResponse());
    }

    public AddLinkeLinktRelatedlinkeiterationResponse addLinkeLinktRelatedlinkeiteration(AddLinkeLinktRelatedlinkeiterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeLinktRelatedlinkeiterationWithOptions(request, runtime);
    }

    public AddLinkeLinktTemplatecustomfieldResponse addLinkeLinktTemplatecustomfieldWithOptions(AddLinkeLinktTemplatecustomfieldRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeLinktTemplatecustomfield", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeLinktTemplatecustomfieldResponse());
    }

    public AddLinkeLinktTemplatecustomfieldResponse addLinkeLinktTemplatecustomfield(AddLinkeLinktTemplatecustomfieldRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeLinktTemplatecustomfieldWithOptions(request, runtime);
    }

    public AddLinkeLinktWorkflowstatusResponse addLinkeLinktWorkflowstatusWithOptions(AddLinkeLinktWorkflowstatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeLinktWorkflowstatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeLinktWorkflowstatusResponse());
    }

    public AddLinkeLinktWorkflowstatusResponse addLinkeLinktWorkflowstatus(AddLinkeLinktWorkflowstatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeLinktWorkflowstatusWithOptions(request, runtime);
    }

    public AddLinkeLinktWorkitemrelationsResponse addLinkeLinktWorkitemrelationsWithOptions(AddLinkeLinktWorkitemrelationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddLinkeLinktWorkitemrelations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddLinkeLinktWorkitemrelationsResponse());
    }

    public AddLinkeLinktWorkitemrelationsResponse addLinkeLinktWorkitemrelations(AddLinkeLinktWorkitemrelationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addLinkeLinktWorkitemrelationsWithOptions(request, runtime);
    }

    public AddMsConfigAttributesResponse addMsConfigAttributesWithOptions(AddMsConfigAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsConfigAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsConfigAttributesResponse());
    }

    public AddMsConfigAttributesResponse addMsConfigAttributes(AddMsConfigAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsConfigAttributesWithOptions(request, runtime);
    }

    public AddMsConfigResourcesResponse addMsConfigResourcesWithOptions(AddMsConfigResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsConfigResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsConfigResourcesResponse());
    }

    public AddMsConfigResourcesResponse addMsConfigResources(AddMsConfigResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsConfigResourcesWithOptions(request, runtime);
    }

    public AddMSDdcsAttributesResponse addMSDdcsAttributesWithOptions(AddMSDdcsAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMSDdcsAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMSDdcsAttributesResponse());
    }

    public AddMSDdcsAttributesResponse addMSDdcsAttributes(AddMSDdcsAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMSDdcsAttributesWithOptions(request, runtime);
    }

    public AddMSDdcsDataResponse addMSDdcsDataWithOptions(AddMSDdcsDataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMSDdcsData", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMSDdcsDataResponse());
    }

    public AddMSDdcsDataResponse addMSDdcsData(AddMSDdcsDataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMSDdcsDataWithOptions(request, runtime);
    }

    public AddMSDdcsGrayDataResponse addMSDdcsGrayDataWithOptions(AddMSDdcsGrayDataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMSDdcsGrayData", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMSDdcsGrayDataResponse());
    }

    public AddMSDdcsGrayDataResponse addMSDdcsGrayData(AddMSDdcsGrayDataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMSDdcsGrayDataWithOptions(request, runtime);
    }

    public AddMSDdcsResourcesResponse addMSDdcsResourcesWithOptions(AddMSDdcsResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMSDdcsResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMSDdcsResourcesResponse());
    }

    public AddMSDdcsResourcesResponse addMSDdcsResources(AddMSDdcsResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMSDdcsResourcesWithOptions(request, runtime);
    }

    public AddMSDdsJobResponse addMSDdsJobWithOptions(AddMSDdsJobRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMSDdsJob", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMSDdsJobResponse());
    }

    public AddMSDdsJobResponse addMSDdsJob(AddMSDdsJobRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMSDdsJobWithOptions(request, runtime);
    }

    public AddMsDrmAttributesResponse addMsDrmAttributesWithOptions(AddMsDrmAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsDrmAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsDrmAttributesResponse());
    }

    public AddMsDrmAttributesResponse addMsDrmAttributes(AddMsDrmAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsDrmAttributesWithOptions(request, runtime);
    }

    public AddMsDrmDataResponse addMsDrmDataWithOptions(AddMsDrmDataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsDrmData", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsDrmDataResponse());
    }

    public AddMsDrmDataResponse addMsDrmData(AddMsDrmDataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsDrmDataWithOptions(request, runtime);
    }

    public AddMsDrmDrmResourceInstanceResponse addMsDrmDrmResourceInstanceWithOptions(AddMsDrmDrmResourceInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsDrmDrmResourceInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsDrmDrmResourceInstanceResponse());
    }

    public AddMsDrmDrmResourceInstanceResponse addMsDrmDrmResourceInstance(AddMsDrmDrmResourceInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsDrmDrmResourceInstanceWithOptions(request, runtime);
    }

    public AddMsDrmDrmResourceTplResponse addMsDrmDrmResourceTplWithOptions(AddMsDrmDrmResourceTplRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsDrmDrmResourceTpl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsDrmDrmResourceTplResponse());
    }

    public AddMsDrmDrmResourceTplResponse addMsDrmDrmResourceTpl(AddMsDrmDrmResourceTplRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsDrmDrmResourceTplWithOptions(request, runtime);
    }

    public AddMsDrmGrayDataResponse addMsDrmGrayDataWithOptions(AddMsDrmGrayDataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsDrmGrayData", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsDrmGrayDataResponse());
    }

    public AddMsDrmGrayDataResponse addMsDrmGrayData(AddMsDrmGrayDataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsDrmGrayDataWithOptions(request, runtime);
    }

    public AddMsDrmResourcesResponse addMsDrmResourcesWithOptions(AddMsDrmResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsDrmResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsDrmResourcesResponse());
    }

    public AddMsDrmResourcesResponse addMsDrmResources(AddMsDrmResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsDrmResourcesWithOptions(request, runtime);
    }

    public AddMsGuardianAppsResponse addMsGuardianAppsWithOptions(AddMsGuardianAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsGuardianApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsGuardianAppsResponse());
    }

    public AddMsGuardianAppsResponse addMsGuardianApps(AddMsGuardianAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsGuardianAppsWithOptions(request, runtime);
    }

    public AddMsGuardianGrayRulesResponse addMsGuardianGrayRulesWithOptions(AddMsGuardianGrayRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsGuardianGrayRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsGuardianGrayRulesResponse());
    }

    public AddMsGuardianGrayRulesResponse addMsGuardianGrayRules(AddMsGuardianGrayRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsGuardianGrayRulesWithOptions(request, runtime);
    }

    public AddMsGuardianRulesResponse addMsGuardianRulesWithOptions(AddMsGuardianRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsGuardianRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsGuardianRulesResponse());
    }

    public AddMsGuardianRulesResponse addMsGuardianRules(AddMsGuardianRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsGuardianRulesWithOptions(request, runtime);
    }

    public AddMsRcSyncBucketResponse addMsRcSyncBucketWithOptions(AddMsRcSyncBucketRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsRcSyncBucket", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsRcSyncBucketResponse());
    }

    public AddMsRcSyncBucketResponse addMsRcSyncBucket(AddMsRcSyncBucketRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsRcSyncBucketWithOptions(request, runtime);
    }

    public AddMSServiceClientResponse addMSServiceClientWithOptions(AddMSServiceClientRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMSServiceClient", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMSServiceClientResponse());
    }

    public AddMSServiceClientResponse addMSServiceClient(AddMSServiceClientRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMSServiceClientWithOptions(request, runtime);
    }

    public AddMsSgAuthRulesResponse addMsSgAuthRulesWithOptions(AddMsSgAuthRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsSgAuthRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsSgAuthRulesResponse());
    }

    public AddMsSgAuthRulesResponse addMsSgAuthRules(AddMsSgAuthRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsSgAuthRulesWithOptions(request, runtime);
    }

    public AddMsSgCircuitBreakerRuleResponse addMsSgCircuitBreakerRuleWithOptions(AddMsSgCircuitBreakerRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsSgCircuitBreakerRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsSgCircuitBreakerRuleResponse());
    }

    public AddMsSgCircuitBreakerRuleResponse addMsSgCircuitBreakerRule(AddMsSgCircuitBreakerRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsSgCircuitBreakerRuleWithOptions(request, runtime);
    }

    public AddMsSgDowngradesResponse addMsSgDowngradesWithOptions(AddMsSgDowngradesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsSgDowngrades", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsSgDowngradesResponse());
    }

    public AddMsSgDowngradesResponse addMsSgDowngrades(AddMsSgDowngradesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsSgDowngradesWithOptions(request, runtime);
    }

    public AddMsSgFaultInjectRuleResponse addMsSgFaultInjectRuleWithOptions(AddMsSgFaultInjectRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsSgFaultInjectRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsSgFaultInjectRuleResponse());
    }

    public AddMsSgFaultInjectRuleResponse addMsSgFaultInjectRule(AddMsSgFaultInjectRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsSgFaultInjectRuleWithOptions(request, runtime);
    }

    public AddMsSgFaultToleranceResponse addMsSgFaultToleranceWithOptions(AddMsSgFaultToleranceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsSgFaultTolerance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsSgFaultToleranceResponse());
    }

    public AddMsSgFaultToleranceResponse addMsSgFaultTolerance(AddMsSgFaultToleranceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsSgFaultToleranceWithOptions(request, runtime);
    }

    public AddMsSgRouterRuleGroupsResponse addMsSgRouterRuleGroupsWithOptions(AddMsSgRouterRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsSgRouterRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsSgRouterRuleGroupsResponse());
    }

    public AddMsSgRouterRuleGroupsResponse addMsSgRouterRuleGroups(AddMsSgRouterRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsSgRouterRuleGroupsWithOptions(request, runtime);
    }

    public AddMsSgServiceRateLimitRulesResponse addMsSgServiceRateLimitRulesWithOptions(AddMsSgServiceRateLimitRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsSgServiceRateLimitRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsSgServiceRateLimitRulesResponse());
    }

    public AddMsSgServiceRateLimitRulesResponse addMsSgServiceRateLimitRules(AddMsSgServiceRateLimitRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsSgServiceRateLimitRulesWithOptions(request, runtime);
    }

    public AddMsTransparentProxyAppResponse addMsTransparentProxyAppWithOptions(AddMsTransparentProxyAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsTransparentProxyApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsTransparentProxyAppResponse());
    }

    public AddMsTransparentProxyAppResponse addMsTransparentProxyApp(AddMsTransparentProxyAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsTransparentProxyAppWithOptions(request, runtime);
    }

    public AddMsTransparentProxyNodeResponse addMsTransparentProxyNodeWithOptions(AddMsTransparentProxyNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddMsTransparentProxyNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddMsTransparentProxyNodeResponse());
    }

    public AddMsTransparentProxyNodeResponse addMsTransparentProxyNode(AddMsTransparentProxyNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addMsTransparentProxyNodeWithOptions(request, runtime);
    }

    public AddRmsAlarmBlacklistResponse addRmsAlarmBlacklistWithOptions(AddRmsAlarmBlacklistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddRmsAlarmBlacklist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddRmsAlarmBlacklistResponse());
    }

    public AddRmsAlarmBlacklistResponse addRmsAlarmBlacklist(AddRmsAlarmBlacklistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addRmsAlarmBlacklistWithOptions(request, runtime);
    }

    public AddRmsAlertruleResponse addRmsAlertruleWithOptions(AddRmsAlertruleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddRmsAlertrule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddRmsAlertruleResponse());
    }

    public AddRmsAlertruleResponse addRmsAlertrule(AddRmsAlertruleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addRmsAlertruleWithOptions(request, runtime);
    }

    public AddRmsAlertruleTemplategroupResponse addRmsAlertruleTemplategroupWithOptions(AddRmsAlertruleTemplategroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddRmsAlertruleTemplategroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddRmsAlertruleTemplategroupResponse());
    }

    public AddRmsAlertruleTemplategroupResponse addRmsAlertruleTemplategroup(AddRmsAlertruleTemplategroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addRmsAlertruleTemplategroupWithOptions(request, runtime);
    }

    public AddRmsResourcegroupResponse addRmsResourcegroupWithOptions(AddRmsResourcegroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddRmsResourcegroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddRmsResourcegroupResponse());
    }

    public AddRmsResourcegroupResponse addRmsResourcegroup(AddRmsResourcegroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addRmsResourcegroupWithOptions(request, runtime);
    }

    public AddTSJobResponse addTSJobWithOptions(AddTSJobRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddTSJob", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddTSJobResponse());
    }

    public AddTSJobResponse addTSJob(AddTSJobRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addTSJobWithOptions(request, runtime);
    }

    public AddTSJobGroupResponse addTSJobGroupWithOptions(AddTSJobGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddTSJobGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddTSJobGroupResponse());
    }

    public AddTSJobGroupResponse addTSJobGroup(AddTSJobGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addTSJobGroupWithOptions(request, runtime);
    }

    public AddTSJobGroupJobsResponse addTSJobGroupJobsWithOptions(AddTSJobGroupJobsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddTSJobGroupJobs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddTSJobGroupJobsResponse());
    }

    public AddTSJobGroupJobsResponse addTSJobGroupJobs(AddTSJobGroupJobsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addTSJobGroupJobsWithOptions(request, runtime);
    }

    public AddTSTopologyVersionResponse addTSTopologyVersionWithOptions(AddTSTopologyVersionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AddTSTopologyVersion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AddTSTopologyVersionResponse());
    }

    public AddTSTopologyVersionResponse addTSTopologyVersion(AddTSTopologyVersionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.addTSTopologyVersionWithOptions(request, runtime);
    }

    public AllCasDatabaseEngineResponse allCasDatabaseEngineWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("AllCasDatabaseEngine", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AllCasDatabaseEngineResponse());
    }

    public AllCasDatabaseEngineResponse allCasDatabaseEngine() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.allCasDatabaseEngineWithOptions(runtime);
    }

    public AllCasLoadbalanceMountResponse allCasLoadbalanceMountWithOptions(AllCasLoadbalanceMountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AllCasLoadbalanceMount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AllCasLoadbalanceMountResponse());
    }

    public AllCasLoadbalanceMountResponse allCasLoadbalanceMount(AllCasLoadbalanceMountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.allCasLoadbalanceMountWithOptions(request, runtime);
    }

    public AllDTXParticipatorActionNamesResponse allDTXParticipatorActionNamesWithOptions(AllDTXParticipatorActionNamesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AllDTXParticipatorActionNames", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AllDTXParticipatorActionNamesResponse());
    }

    public AllDTXParticipatorActionNamesResponse allDTXParticipatorActionNames(AllDTXParticipatorActionNamesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.allDTXParticipatorActionNamesWithOptions(request, runtime);
    }

    public AllDTXZoneResponse allDTXZoneWithOptions(AllDTXZoneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AllDTXZone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AllDTXZoneResponse());
    }

    public AllDTXZoneResponse allDTXZone(AllDTXZoneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.allDTXZoneWithOptions(request, runtime);
    }

    public AllLinkeantcodeAntcodeProjectsallResponse allLinkeantcodeAntcodeProjectsallWithOptions(AllLinkeantcodeAntcodeProjectsallRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AllLinkeantcodeAntcodeProjectsall", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AllLinkeantcodeAntcodeProjectsallResponse());
    }

    public AllLinkeantcodeAntcodeProjectsallResponse allLinkeantcodeAntcodeProjectsall(AllLinkeantcodeAntcodeProjectsallRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.allLinkeantcodeAntcodeProjectsallWithOptions(request, runtime);
    }

    public AllLinkeBahamutAppmembersResponse allLinkeBahamutAppmembersWithOptions(AllLinkeBahamutAppmembersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AllLinkeBahamutAppmembers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AllLinkeBahamutAppmembersResponse());
    }

    public AllLinkeBahamutAppmembersResponse allLinkeBahamutAppmembers(AllLinkeBahamutAppmembersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.allLinkeBahamutAppmembersWithOptions(request, runtime);
    }

    public AllMsGuardianAppNamesResponse allMsGuardianAppNamesWithOptions(AllMsGuardianAppNamesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AllMsGuardianAppNames", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AllMsGuardianAppNamesResponse());
    }

    public AllMsGuardianAppNamesResponse allMsGuardianAppNames(AllMsGuardianAppNamesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.allMsGuardianAppNamesWithOptions(request, runtime);
    }

    public AllMsGuardianAppsResponse allMsGuardianAppsWithOptions(AllMsGuardianAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AllMsGuardianApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AllMsGuardianAppsResponse());
    }

    public AllMsGuardianAppsResponse allMsGuardianApps(AllMsGuardianAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.allMsGuardianAppsWithOptions(request, runtime);
    }

    public AllTSZoneLdcTypesResponse allTSZoneLdcTypesWithOptions(AllTSZoneLdcTypesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AllTSZoneLdcTypes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AllTSZoneLdcTypesResponse());
    }

    public AllTSZoneLdcTypesResponse allTSZoneLdcTypes(AllTSZoneLdcTypesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.allTSZoneLdcTypesWithOptions(request, runtime);
    }

    public ApplySidecarCertResponse applySidecarCertWithOptions(ApplySidecarCertRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ApplySidecarCert", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ApplySidecarCertResponse());
    }

    public ApplySidecarCertResponse applySidecarCert(ApplySidecarCertRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.applySidecarCertWithOptions(request, runtime);
    }

    public AuthCasDatabaseAccountResponse authCasDatabaseAccountWithOptions(AuthCasDatabaseAccountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AuthCasDatabaseAccount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AuthCasDatabaseAccountResponse());
    }

    public AuthCasDatabaseAccountResponse authCasDatabaseAccount(AuthCasDatabaseAccountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.authCasDatabaseAccountWithOptions(request, runtime);
    }

    public AuthDWSVpcAccessResponse authDWSVpcAccessWithOptions(AuthDWSVpcAccessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("AuthDWSVpcAccess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new AuthDWSVpcAccessResponse());
    }

    public AuthDWSVpcAccessResponse authDWSVpcAccess(AuthDWSVpcAccessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.authDWSVpcAccessWithOptions(request, runtime);
    }

    public BatchAddMsSgAuthRuleGroupsResponse batchAddMsSgAuthRuleGroupsWithOptions(BatchAddMsSgAuthRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchAddMsSgAuthRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchAddMsSgAuthRuleGroupsResponse());
    }

    public BatchAddMsSgAuthRuleGroupsResponse batchAddMsSgAuthRuleGroups(BatchAddMsSgAuthRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchAddMsSgAuthRuleGroupsWithOptions(request, runtime);
    }

    public BatchcreateDtxAppResponse batchcreateDtxAppWithOptions(BatchcreateDtxAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchcreateDtxApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchcreateDtxAppResponse());
    }

    public BatchcreateDtxAppResponse batchcreateDtxApp(BatchcreateDtxAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchcreateDtxAppWithOptions(request, runtime);
    }

    public BatchcreateDTXAppsResponse batchcreateDTXAppsWithOptions(BatchcreateDTXAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchcreateDTXApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchcreateDTXAppsResponse());
    }

    public BatchcreateDTXAppsResponse batchcreateDTXApps(BatchcreateDTXAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchcreateDTXAppsWithOptions(request, runtime);
    }

    public BatchcreateHasInspectMissionscheduleResponse batchcreateHasInspectMissionscheduleWithOptions(BatchcreateHasInspectMissionscheduleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchcreateHasInspectMissionschedule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchcreateHasInspectMissionscheduleResponse());
    }

    public BatchcreateHasInspectMissionscheduleResponse batchcreateHasInspectMissionschedule(BatchcreateHasInspectMissionscheduleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchcreateHasInspectMissionscheduleWithOptions(request, runtime);
    }

    public BatchcreateLinkeantcodeAntcodeProjectsartifactsResponse batchcreateLinkeantcodeAntcodeProjectsartifactsWithOptions(BatchcreateLinkeantcodeAntcodeProjectsartifactsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchcreateLinkeantcodeAntcodeProjectsartifacts", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchcreateLinkeantcodeAntcodeProjectsartifactsResponse());
    }

    public BatchcreateLinkeantcodeAntcodeProjectsartifactsResponse batchcreateLinkeantcodeAntcodeProjectsartifacts(BatchcreateLinkeantcodeAntcodeProjectsartifactsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchcreateLinkeantcodeAntcodeProjectsartifactsWithOptions(request, runtime);
    }

    public BatchcreateODPInstancesIPWhiiteListResponse batchcreateODPInstancesIPWhiiteListWithOptions(BatchcreateODPInstancesIPWhiiteListRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchcreateODPInstancesIPWhiiteList", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchcreateODPInstancesIPWhiiteListResponse());
    }

    public BatchcreateODPInstancesIPWhiiteListResponse batchcreateODPInstancesIPWhiiteList(BatchcreateODPInstancesIPWhiiteListRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchcreateODPInstancesIPWhiiteListWithOptions(request, runtime);
    }

    public BatchDeleteAKSClusterNodeResponse batchDeleteAKSClusterNodeWithOptions(BatchDeleteAKSClusterNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchDeleteAKSClusterNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchDeleteAKSClusterNodeResponse());
    }

    public BatchDeleteAKSClusterNodeResponse batchDeleteAKSClusterNode(BatchDeleteAKSClusterNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchDeleteAKSClusterNodeWithOptions(request, runtime);
    }

    public BatchdeleteDmsMsgResponse batchdeleteDmsMsgWithOptions(BatchdeleteDmsMsgRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchdeleteDmsMsg", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchdeleteDmsMsgResponse());
    }

    public BatchdeleteDmsMsgResponse batchdeleteDmsMsg(BatchdeleteDmsMsgRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchdeleteDmsMsgWithOptions(request, runtime);
    }

    public BatchDeleteLDCFederationSpannerClusterResponse batchDeleteLDCFederationSpannerClusterWithOptions(BatchDeleteLDCFederationSpannerClusterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchDeleteLDCFederationSpannerCluster", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchDeleteLDCFederationSpannerClusterResponse());
    }

    public BatchDeleteLDCFederationSpannerClusterResponse batchDeleteLDCFederationSpannerCluster(BatchDeleteLDCFederationSpannerClusterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchDeleteLDCFederationSpannerClusterWithOptions(request, runtime);
    }

    public BatchDeleteTSJobResponse batchDeleteTSJobWithOptions(BatchDeleteTSJobRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchDeleteTSJob", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchDeleteTSJobResponse());
    }

    public BatchDeleteTSJobResponse batchDeleteTSJob(BatchDeleteTSJobRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchDeleteTSJobWithOptions(request, runtime);
    }

    public BatchDisableMsSgAuthRuleGroupsResponse batchDisableMsSgAuthRuleGroupsWithOptions(BatchDisableMsSgAuthRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchDisableMsSgAuthRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchDisableMsSgAuthRuleGroupsResponse());
    }

    public BatchDisableMsSgAuthRuleGroupsResponse batchDisableMsSgAuthRuleGroups(BatchDisableMsSgAuthRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchDisableMsSgAuthRuleGroupsWithOptions(request, runtime);
    }

    public BatchEnableMsSgAuthRuleGroupsResponse batchEnableMsSgAuthRuleGroupsWithOptions(BatchEnableMsSgAuthRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchEnableMsSgAuthRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchEnableMsSgAuthRuleGroupsResponse());
    }

    public BatchEnableMsSgAuthRuleGroupsResponse batchEnableMsSgAuthRuleGroups(BatchEnableMsSgAuthRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchEnableMsSgAuthRuleGroupsWithOptions(request, runtime);
    }

    public BatchqueryDmsMsgResponse batchqueryDmsMsgWithOptions(BatchqueryDmsMsgRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchqueryDmsMsg", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryDmsMsgResponse());
    }

    public BatchqueryDmsMsgResponse batchqueryDmsMsg(BatchqueryDmsMsgRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryDmsMsgWithOptions(request, runtime);
    }

    public BatchqueryLinkeBahamutAntflowtaskResponse batchqueryLinkeBahamutAntflowtaskWithOptions(BatchqueryLinkeBahamutAntflowtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchqueryLinkeBahamutAntflowtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryLinkeBahamutAntflowtaskResponse());
    }

    public BatchqueryLinkeBahamutAntflowtaskResponse batchqueryLinkeBahamutAntflowtask(BatchqueryLinkeBahamutAntflowtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryLinkeBahamutAntflowtaskWithOptions(request, runtime);
    }

    public BatchqueryLinkeBahamutCloudtenantResponse batchqueryLinkeBahamutCloudtenantWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("BatchqueryLinkeBahamutCloudtenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryLinkeBahamutCloudtenantResponse());
    }

    public BatchqueryLinkeBahamutCloudtenantResponse batchqueryLinkeBahamutCloudtenant() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryLinkeBahamutCloudtenantWithOptions(runtime);
    }

    public BatchqueryLinkeLinktSimpleprojectsResponse batchqueryLinkeLinktSimpleprojectsWithOptions(BatchqueryLinkeLinktSimpleprojectsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchqueryLinkeLinktSimpleprojects", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryLinkeLinktSimpleprojectsResponse());
    }

    public BatchqueryLinkeLinktSimpleprojectsResponse batchqueryLinkeLinktSimpleprojects(BatchqueryLinkeLinktSimpleprojectsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryLinkeLinktSimpleprojectsWithOptions(request, runtime);
    }

    public BatchqueryLinkeLinktUsersResponse batchqueryLinkeLinktUsersWithOptions(BatchqueryLinkeLinktUsersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchqueryLinkeLinktUsers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryLinkeLinktUsersResponse());
    }

    public BatchqueryLinkeLinktUsersResponse batchqueryLinkeLinktUsers(BatchqueryLinkeLinktUsersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryLinkeLinktUsersWithOptions(request, runtime);
    }

    public BatchqueryODPDbnodesResponse batchqueryODPDbnodesWithOptions(BatchqueryODPDbnodesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchqueryODPDbnodes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryODPDbnodesResponse());
    }

    public BatchqueryODPDbnodesResponse batchqueryODPDbnodes(BatchqueryODPDbnodesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryODPDbnodesWithOptions(request, runtime);
    }

    public BatchqueryODPInstancesResponse batchqueryODPInstancesWithOptions(BatchqueryODPInstancesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchqueryODPInstances", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryODPInstancesResponse());
    }

    public BatchqueryODPInstancesResponse batchqueryODPInstances(BatchqueryODPInstancesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryODPInstancesWithOptions(request, runtime);
    }

    public BatchqueryODPInstancesMappingsResponse batchqueryODPInstancesMappingsWithOptions(BatchqueryODPInstancesMappingsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchqueryODPInstancesMappings", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryODPInstancesMappingsResponse());
    }

    public BatchqueryODPInstancesMappingsResponse batchqueryODPInstancesMappings(BatchqueryODPInstancesMappingsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryODPInstancesMappingsWithOptions(request, runtime);
    }

    public BatchqueryODPJobsSqlbatchResponse batchqueryODPJobsSqlbatchWithOptions(BatchqueryODPJobsSqlbatchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchqueryODPJobsSqlbatch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryODPJobsSqlbatchResponse());
    }

    public BatchqueryODPJobsSqlbatchResponse batchqueryODPJobsSqlbatch(BatchqueryODPJobsSqlbatchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryODPJobsSqlbatchWithOptions(request, runtime);
    }

    public BatchqueryODPOperationAuditResponse batchqueryODPOperationAuditWithOptions(BatchqueryODPOperationAuditRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchqueryODPOperationAudit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryODPOperationAuditResponse());
    }

    public BatchqueryODPOperationAuditResponse batchqueryODPOperationAudit(BatchqueryODPOperationAuditRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryODPOperationAuditWithOptions(request, runtime);
    }

    public BatchqueryODPSchemasResponse batchqueryODPSchemasWithOptions(BatchqueryODPSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchqueryODPSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryODPSchemasResponse());
    }

    public BatchqueryODPSchemasResponse batchqueryODPSchemas(BatchqueryODPSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryODPSchemasWithOptions(request, runtime);
    }

    public BatchqueryODPSchemasInterceptorsResponse batchqueryODPSchemasInterceptorsWithOptions(BatchqueryODPSchemasInterceptorsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchqueryODPSchemasInterceptors", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryODPSchemasInterceptorsResponse());
    }

    public BatchqueryODPSchemasInterceptorsResponse batchqueryODPSchemasInterceptors(BatchqueryODPSchemasInterceptorsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryODPSchemasInterceptorsWithOptions(request, runtime);
    }

    public BatchqueryODPSchemasLogicTablesResponse batchqueryODPSchemasLogicTablesWithOptions(BatchqueryODPSchemasLogicTablesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchqueryODPSchemasLogicTables", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryODPSchemasLogicTablesResponse());
    }

    public BatchqueryODPSchemasLogicTablesResponse batchqueryODPSchemasLogicTables(BatchqueryODPSchemasLogicTablesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryODPSchemasLogicTablesWithOptions(request, runtime);
    }

    public BatchqueryODPSchemasNamesResponse batchqueryODPSchemasNamesWithOptions(BatchqueryODPSchemasNamesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchqueryODPSchemasNames", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchqueryODPSchemasNamesResponse());
    }

    public BatchqueryODPSchemasNamesResponse batchqueryODPSchemasNames(BatchqueryODPSchemasNamesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchqueryODPSchemasNamesWithOptions(request, runtime);
    }

    public BatchQueryRmsMonitorMetricsResponse batchQueryRmsMonitorMetricsWithOptions(BatchQueryRmsMonitorMetricsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("BatchQueryRmsMonitorMetrics", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new BatchQueryRmsMonitorMetricsResponse());
    }

    public BatchQueryRmsMonitorMetricsResponse batchQueryRmsMonitorMetrics(BatchQueryRmsMonitorMetricsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.batchQueryRmsMonitorMetricsWithOptions(request, runtime);
    }

    public CallbackLinkeantcodeAntcodeAciprojectsidpipelinesjobrerunjobidResponse callbackLinkeantcodeAntcodeAciprojectsidpipelinesjobrerunjobidWithOptions(CallbackLinkeantcodeAntcodeAciprojectsidpipelinesjobrerunjobidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CallbackLinkeantcodeAntcodeAciprojectsidpipelinesjobrerunjobid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CallbackLinkeantcodeAntcodeAciprojectsidpipelinesjobrerunjobidResponse());
    }

    public CallbackLinkeantcodeAntcodeAciprojectsidpipelinesjobrerunjobidResponse callbackLinkeantcodeAntcodeAciprojectsidpipelinesjobrerunjobid(CallbackLinkeantcodeAntcodeAciprojectsidpipelinesjobrerunjobidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.callbackLinkeantcodeAntcodeAciprojectsidpipelinesjobrerunjobidWithOptions(request, runtime);
    }

    public CallbackLinkefabricFabricConfigtaskResponse callbackLinkefabricFabricConfigtaskWithOptions(CallbackLinkefabricFabricConfigtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CallbackLinkefabricFabricConfigtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CallbackLinkefabricFabricConfigtaskResponse());
    }

    public CallbackLinkefabricFabricConfigtaskResponse callbackLinkefabricFabricConfigtask(CallbackLinkefabricFabricConfigtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.callbackLinkefabricFabricConfigtaskWithOptions(request, runtime);
    }

    public CallbackMsSpiOmsResponse callbackMsSpiOmsWithOptions(CallbackMsSpiOmsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CallbackMsSpiOms", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CallbackMsSpiOmsResponse());
    }

    public CallbackMsSpiOmsResponse callbackMsSpiOms(CallbackMsSpiOmsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.callbackMsSpiOmsWithOptions(request, runtime);
    }

    public CancelAKSClusterTaskResponse cancelAKSClusterTaskWithOptions(CancelAKSClusterTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelAKSClusterTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelAKSClusterTaskResponse());
    }

    public CancelAKSClusterTaskResponse cancelAKSClusterTask(CancelAKSClusterTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelAKSClusterTaskWithOptions(request, runtime);
    }

    public CancelAKSHelmChartReleaseResponse cancelAKSHelmChartReleaseWithOptions(CancelAKSHelmChartReleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelAKSHelmChartRelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelAKSHelmChartReleaseResponse());
    }

    public CancelAKSHelmChartReleaseResponse cancelAKSHelmChartRelease(CancelAKSHelmChartReleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelAKSHelmChartReleaseWithOptions(request, runtime);
    }

    public CancelAKSPlanResponse cancelAKSPlanWithOptions(CancelAKSPlanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelAKSPlan", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelAKSPlanResponse());
    }

    public CancelAKSPlanResponse cancelAKSPlan(CancelAKSPlanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelAKSPlanWithOptions(request, runtime);
    }

    public CancelDWSSubsTaskResponse cancelDWSSubsTaskWithOptions(CancelDWSSubsTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelDWSSubsTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelDWSSubsTaskResponse());
    }

    public CancelDWSSubsTaskResponse cancelDWSSubsTask(CancelDWSSubsTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelDWSSubsTaskWithOptions(request, runtime);
    }

    public CancelLDCAppopsResponse cancelLDCAppopsWithOptions(CancelLDCAppopsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelLDCAppops", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLDCAppopsResponse());
    }

    public CancelLDCAppopsResponse cancelLDCAppops(CancelLDCAppopsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLDCAppopsWithOptions(request, runtime);
    }

    public CancelLDCOpsplanServiceResponse cancelLDCOpsplanServiceWithOptions(CancelLDCOpsplanServiceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelLDCOpsplanService", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLDCOpsplanServiceResponse());
    }

    public CancelLDCOpsplanServiceResponse cancelLDCOpsplanService(CancelLDCOpsplanServiceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLDCOpsplanServiceWithOptions(request, runtime);
    }

    public CancelLinkeantcodeAntcodeAciprojectsidpipelinesjobcanceljobidResponse cancelLinkeantcodeAntcodeAciprojectsidpipelinesjobcanceljobidWithOptions(CancelLinkeantcodeAntcodeAciprojectsidpipelinesjobcanceljobidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelLinkeantcodeAntcodeAciprojectsidpipelinesjobcanceljobid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLinkeantcodeAntcodeAciprojectsidpipelinesjobcanceljobidResponse());
    }

    public CancelLinkeantcodeAntcodeAciprojectsidpipelinesjobcanceljobidResponse cancelLinkeantcodeAntcodeAciprojectsidpipelinesjobcanceljobid(CancelLinkeantcodeAntcodeAciprojectsidpipelinesjobcanceljobidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLinkeantcodeAntcodeAciprojectsidpipelinesjobcanceljobidWithOptions(request, runtime);
    }

    public CancelLinkeantcodeAntcodeCancelpipelineexecResponse cancelLinkeantcodeAntcodeCancelpipelineexecWithOptions(CancelLinkeantcodeAntcodeCancelpipelineexecRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelLinkeantcodeAntcodeCancelpipelineexec", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLinkeantcodeAntcodeCancelpipelineexecResponse());
    }

    public CancelLinkeantcodeAntcodeCancelpipelineexecResponse cancelLinkeantcodeAntcodeCancelpipelineexec(CancelLinkeantcodeAntcodeCancelpipelineexecRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLinkeantcodeAntcodeCancelpipelineexecWithOptions(request, runtime);
    }

    public CancelLinkeantcodeAntcodeCancelreviewResponse cancelLinkeantcodeAntcodeCancelreviewWithOptions(CancelLinkeantcodeAntcodeCancelreviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelLinkeantcodeAntcodeCancelreview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLinkeantcodeAntcodeCancelreviewResponse());
    }

    public CancelLinkeantcodeAntcodeCancelreviewResponse cancelLinkeantcodeAntcodeCancelreview(CancelLinkeantcodeAntcodeCancelreviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLinkeantcodeAntcodeCancelreviewWithOptions(request, runtime);
    }

    public CancelLinkeantcodeAntcodePipelineResponse cancelLinkeantcodeAntcodePipelineWithOptions(CancelLinkeantcodeAntcodePipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelLinkeantcodeAntcodePipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLinkeantcodeAntcodePipelineResponse());
    }

    public CancelLinkeantcodeAntcodePipelineResponse cancelLinkeantcodeAntcodePipeline(CancelLinkeantcodeAntcodePipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLinkeantcodeAntcodePipelineWithOptions(request, runtime);
    }

    public CancelLinkeantcodeAntcodeUserpersonalaccesstokensidrevokeResponse cancelLinkeantcodeAntcodeUserpersonalaccesstokensidrevokeWithOptions(CancelLinkeantcodeAntcodeUserpersonalaccesstokensidrevokeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelLinkeantcodeAntcodeUserpersonalaccesstokensidrevoke", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLinkeantcodeAntcodeUserpersonalaccesstokensidrevokeResponse());
    }

    public CancelLinkeantcodeAntcodeUserpersonalaccesstokensidrevokeResponse cancelLinkeantcodeAntcodeUserpersonalaccesstokensidrevoke(CancelLinkeantcodeAntcodeUserpersonalaccesstokensidrevokeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLinkeantcodeAntcodeUserpersonalaccesstokensidrevokeWithOptions(request, runtime);
    }

    public CancelLinkeBahamutAppcustomciexecutionexecutionidResponse cancelLinkeBahamutAppcustomciexecutionexecutionidWithOptions(CancelLinkeBahamutAppcustomciexecutionexecutionidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelLinkeBahamutAppcustomciexecutionexecutionid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLinkeBahamutAppcustomciexecutionexecutionidResponse());
    }

    public CancelLinkeBahamutAppcustomciexecutionexecutionidResponse cancelLinkeBahamutAppcustomciexecutionexecutionid(CancelLinkeBahamutAppcustomciexecutionexecutionidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLinkeBahamutAppcustomciexecutionexecutionidWithOptions(request, runtime);
    }

    public CancelLinkeBahamutNotificationResponse cancelLinkeBahamutNotificationWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("CancelLinkeBahamutNotification", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLinkeBahamutNotificationResponse());
    }

    public CancelLinkeBahamutNotificationResponse cancelLinkeBahamutNotification() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLinkeBahamutNotificationWithOptions(runtime);
    }

    public CancelLinkeBahamutPipelineResponse cancelLinkeBahamutPipelineWithOptions(CancelLinkeBahamutPipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelLinkeBahamutPipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLinkeBahamutPipelineResponse());
    }

    public CancelLinkeBahamutPipelineResponse cancelLinkeBahamutPipeline(CancelLinkeBahamutPipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLinkeBahamutPipelineWithOptions(request, runtime);
    }

    public CancelLinkeBahamutPipelinecancelResponse cancelLinkeBahamutPipelinecancelWithOptions(CancelLinkeBahamutPipelinecancelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelLinkeBahamutPipelinecancel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLinkeBahamutPipelinecancelResponse());
    }

    public CancelLinkeBahamutPipelinecancelResponse cancelLinkeBahamutPipelinecancel(CancelLinkeBahamutPipelinecancelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLinkeBahamutPipelinecancelWithOptions(request, runtime);
    }

    public CancelLinkeBahamutTracecollectResponse cancelLinkeBahamutTracecollectWithOptions(CancelLinkeBahamutTracecollectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelLinkeBahamutTracecollect", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLinkeBahamutTracecollectResponse());
    }

    public CancelLinkeBahamutTracecollectResponse cancelLinkeBahamutTracecollect(CancelLinkeBahamutTracecollectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLinkeBahamutTracecollectWithOptions(request, runtime);
    }

    public CancelLinkedeploycoreDeploycoreActioncancelResponse cancelLinkedeploycoreDeploycoreActioncancelWithOptions(CancelLinkedeploycoreDeploycoreActioncancelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelLinkedeploycoreDeploycoreActioncancel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLinkedeploycoreDeploycoreActioncancelResponse());
    }

    public CancelLinkedeploycoreDeploycoreActioncancelResponse cancelLinkedeploycoreDeploycoreActioncancel(CancelLinkedeploycoreDeploycoreActioncancelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLinkedeploycoreDeploycoreActioncancelWithOptions(request, runtime);
    }

    public CancelLinkeLinktWorkitemreviewResponse cancelLinkeLinktWorkitemreviewWithOptions(CancelLinkeLinktWorkitemreviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelLinkeLinktWorkitemreview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelLinkeLinktWorkitemreviewResponse());
    }

    public CancelLinkeLinktWorkitemreviewResponse cancelLinkeLinktWorkitemreview(CancelLinkeLinktWorkitemreviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelLinkeLinktWorkitemreviewWithOptions(request, runtime);
    }

    public CancelODPJobsSqlbatchResponse cancelODPJobsSqlbatchWithOptions(CancelODPJobsSqlbatchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelODPJobsSqlbatch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelODPJobsSqlbatchResponse());
    }

    public CancelODPJobsSqlbatchResponse cancelODPJobsSqlbatch(CancelODPJobsSqlbatchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelODPJobsSqlbatchWithOptions(request, runtime);
    }

    public CancelTSActivityInstanceResponse cancelTSActivityInstanceWithOptions(CancelTSActivityInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelTSActivityInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelTSActivityInstanceResponse());
    }

    public CancelTSActivityInstanceResponse cancelTSActivityInstance(CancelTSActivityInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelTSActivityInstanceWithOptions(request, runtime);
    }

    public CancelTSTriggerInstanceResponse cancelTSTriggerInstanceWithOptions(CancelTSTriggerInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CancelTSTriggerInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CancelTSTriggerInstanceResponse());
    }

    public CancelTSTriggerInstanceResponse cancelTSTriggerInstance(CancelTSTriggerInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cancelTSTriggerInstanceWithOptions(request, runtime);
    }

    public CheckClriskAuthManagerResponse checkClriskAuthManagerWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("CheckClriskAuthManager", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckClriskAuthManagerResponse());
    }

    public CheckClriskAuthManagerResponse checkClriskAuthManager() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkClriskAuthManagerWithOptions(runtime);
    }

    public CheckClriskAuthTenantResponse checkClriskAuthTenantWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("CheckClriskAuthTenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckClriskAuthTenantResponse());
    }

    public CheckClriskAuthTenantResponse checkClriskAuthTenant() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkClriskAuthTenantWithOptions(runtime);
    }

    public CheckClriskSceneNameResponse checkClriskSceneNameWithOptions(CheckClriskSceneNameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckClriskSceneName", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckClriskSceneNameResponse());
    }

    public CheckClriskSceneNameResponse checkClriskSceneName(CheckClriskSceneNameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkClriskSceneNameWithOptions(request, runtime);
    }

    public CheckDWSTaskParamResponse checkDWSTaskParamWithOptions(CheckDWSTaskParamRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckDWSTaskParam", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckDWSTaskParamResponse());
    }

    public CheckDWSTaskParamResponse checkDWSTaskParam(CheckDWSTaskParamRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkDWSTaskParamWithOptions(request, runtime);
    }

    public CheckLinkeantcodeAntcodeCheckifyamlconfigisvalidResponse checkLinkeantcodeAntcodeCheckifyamlconfigisvalidWithOptions(CheckLinkeantcodeAntcodeCheckifyamlconfigisvalidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeantcodeAntcodeCheckifyamlconfigisvalid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeantcodeAntcodeCheckifyamlconfigisvalidResponse());
    }

    public CheckLinkeantcodeAntcodeCheckifyamlconfigisvalidResponse checkLinkeantcodeAntcodeCheckifyamlconfigisvalid(CheckLinkeantcodeAntcodeCheckifyamlconfigisvalidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeantcodeAntcodeCheckifyamlconfigisvalidWithOptions(request, runtime);
    }

    public CheckLinkeantcodeAntcodeLsifexistsResponse checkLinkeantcodeAntcodeLsifexistsWithOptions(CheckLinkeantcodeAntcodeLsifexistsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeantcodeAntcodeLsifexists", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeantcodeAntcodeLsifexistsResponse());
    }

    public CheckLinkeantcodeAntcodeLsifexistsResponse checkLinkeantcodeAntcodeLsifexists(CheckLinkeantcodeAntcodeLsifexistsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeantcodeAntcodeLsifexistsWithOptions(request, runtime);
    }

    public CheckLinkeBahamutAdminworkspacecheckdataResponse checkLinkeBahamutAdminworkspacecheckdataWithOptions(CheckLinkeBahamutAdminworkspacecheckdataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutAdminworkspacecheckdata", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutAdminworkspacecheckdataResponse());
    }

    public CheckLinkeBahamutAdminworkspacecheckdataResponse checkLinkeBahamutAdminworkspacecheckdata(CheckLinkeBahamutAdminworkspacecheckdataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutAdminworkspacecheckdataWithOptions(request, runtime);
    }

    public CheckLinkeBahamutApireleaseidcreatetagorremovefromreleaseResponse checkLinkeBahamutApireleaseidcreatetagorremovefromreleaseWithOptions(CheckLinkeBahamutApireleaseidcreatetagorremovefromreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutApireleaseidcreatetagorremovefromrelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutApireleaseidcreatetagorremovefromreleaseResponse());
    }

    public CheckLinkeBahamutApireleaseidcreatetagorremovefromreleaseResponse checkLinkeBahamutApireleaseidcreatetagorremovefromrelease(CheckLinkeBahamutApireleaseidcreatetagorremovefromreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutApireleaseidcreatetagorremovefromreleaseWithOptions(request, runtime);
    }

    public CheckLinkeBahamutAppdatascoretenantidResponse checkLinkeBahamutAppdatascoretenantidWithOptions(CheckLinkeBahamutAppdatascoretenantidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutAppdatascoretenantid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutAppdatascoretenantidResponse());
    }

    public CheckLinkeBahamutAppdatascoretenantidResponse checkLinkeBahamutAppdatascoretenantid(CheckLinkeBahamutAppdatascoretenantidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutAppdatascoretenantidWithOptions(request, runtime);
    }

    public CheckLinkeBahamutAppdatastctenantidResponse checkLinkeBahamutAppdatastctenantidWithOptions(CheckLinkeBahamutAppdatastctenantidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutAppdatastctenantid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutAppdatastctenantidResponse());
    }

    public CheckLinkeBahamutAppdatastctenantidResponse checkLinkeBahamutAppdatastctenantid(CheckLinkeBahamutAppdatastctenantidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutAppdatastctenantidWithOptions(request, runtime);
    }

    public CheckLinkeBahamutCeasingResponse checkLinkeBahamutCeasingWithOptions(CheckLinkeBahamutCeasingRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutCeasing", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutCeasingResponse());
    }

    public CheckLinkeBahamutCeasingResponse checkLinkeBahamutCeasing(CheckLinkeBahamutCeasingRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutCeasingWithOptions(request, runtime);
    }

    public CheckLinkeBahamutCodechangeResponse checkLinkeBahamutCodechangeWithOptions(CheckLinkeBahamutCodechangeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutCodechange", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutCodechangeResponse());
    }

    public CheckLinkeBahamutCodechangeResponse checkLinkeBahamutCodechange(CheckLinkeBahamutCodechangeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutCodechangeWithOptions(request, runtime);
    }

    public CheckLinkeBahamutFabricconfigResponse checkLinkeBahamutFabricconfigWithOptions(CheckLinkeBahamutFabricconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutFabricconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutFabricconfigResponse());
    }

    public CheckLinkeBahamutFabricconfigResponse checkLinkeBahamutFabricconfig(CheckLinkeBahamutFabricconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutFabricconfigWithOptions(request, runtime);
    }

    public CheckLinkeBahamutHealthResponse checkLinkeBahamutHealthWithOptions(CheckLinkeBahamutHealthRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutHealth", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutHealthResponse());
    }

    public CheckLinkeBahamutHealthResponse checkLinkeBahamutHealth(CheckLinkeBahamutHealthRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutHealthWithOptions(request, runtime);
    }

    public CheckLinkeBahamutIterationunitcodechangecheckResponse checkLinkeBahamutIterationunitcodechangecheckWithOptions(CheckLinkeBahamutIterationunitcodechangecheckRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutIterationunitcodechangecheck", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutIterationunitcodechangecheckResponse());
    }

    public CheckLinkeBahamutIterationunitcodechangecheckResponse checkLinkeBahamutIterationunitcodechangecheck(CheckLinkeBahamutIterationunitcodechangecheckRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutIterationunitcodechangecheckWithOptions(request, runtime);
    }

    public CheckLinkeBahamutIterationunitnextstagecheckResponse checkLinkeBahamutIterationunitnextstagecheckWithOptions(CheckLinkeBahamutIterationunitnextstagecheckRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutIterationunitnextstagecheck", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutIterationunitnextstagecheckResponse());
    }

    public CheckLinkeBahamutIterationunitnextstagecheckResponse checkLinkeBahamutIterationunitnextstagecheck(CheckLinkeBahamutIterationunitnextstagecheckRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutIterationunitnextstagecheckWithOptions(request, runtime);
    }

    public CheckLinkeBahamutNextstageResponse checkLinkeBahamutNextstageWithOptions(CheckLinkeBahamutNextstageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutNextstage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutNextstageResponse());
    }

    public CheckLinkeBahamutNextstageResponse checkLinkeBahamutNextstage(CheckLinkeBahamutNextstageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutNextstageWithOptions(request, runtime);
    }

    public CheckLinkeBahamutPointResponse checkLinkeBahamutPointWithOptions(CheckLinkeBahamutPointRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutPoint", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutPointResponse());
    }

    public CheckLinkeBahamutPointResponse checkLinkeBahamutPoint(CheckLinkeBahamutPointRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutPointWithOptions(request, runtime);
    }

    public CheckLinkeBahamutPrepubpipelinecheckResponse checkLinkeBahamutPrepubpipelinecheckWithOptions(CheckLinkeBahamutPrepubpipelinecheckRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutPrepubpipelinecheck", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutPrepubpipelinecheckResponse());
    }

    public CheckLinkeBahamutPrepubpipelinecheckResponse checkLinkeBahamutPrepubpipelinecheck(CheckLinkeBahamutPrepubpipelinecheckRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutPrepubpipelinecheckWithOptions(request, runtime);
    }

    public CheckLinkeBahamutReleaseidResponse checkLinkeBahamutReleaseidWithOptions(CheckLinkeBahamutReleaseidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutReleaseid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutReleaseidResponse());
    }

    public CheckLinkeBahamutReleaseidResponse checkLinkeBahamutReleaseid(CheckLinkeBahamutReleaseidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutReleaseidWithOptions(request, runtime);
    }

    public CheckLinkeBahamutReleasestabledeploycheckResponse checkLinkeBahamutReleasestabledeploycheckWithOptions(CheckLinkeBahamutReleasestabledeploycheckRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutReleasestabledeploycheck", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutReleasestabledeploycheckResponse());
    }

    public CheckLinkeBahamutReleasestabledeploycheckResponse checkLinkeBahamutReleasestabledeploycheck(CheckLinkeBahamutReleasestabledeploycheckRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutReleasestabledeploycheckWithOptions(request, runtime);
    }

    public CheckLinkeBahamutReleasestablestablerollbackdeploycheckResponse checkLinkeBahamutReleasestablestablerollbackdeploycheckWithOptions(CheckLinkeBahamutReleasestablestablerollbackdeploycheckRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutReleasestablestablerollbackdeploycheck", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutReleasestablestablerollbackdeploycheckResponse());
    }

    public CheckLinkeBahamutReleasestablestablerollbackdeploycheckResponse checkLinkeBahamutReleasestablestablerollbackdeploycheck(CheckLinkeBahamutReleasestablestablerollbackdeploycheckRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutReleasestablestablerollbackdeploycheckWithOptions(request, runtime);
    }

    public CheckLinkeBahamutReleasestatusResponse checkLinkeBahamutReleasestatusWithOptions(CheckLinkeBahamutReleasestatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutReleasestatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutReleasestatusResponse());
    }

    public CheckLinkeBahamutReleasestatusResponse checkLinkeBahamutReleasestatus(CheckLinkeBahamutReleasestatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutReleasestatusWithOptions(request, runtime);
    }

    public CheckLinkeBahamutSandboxsandboxdeploycheckResponse checkLinkeBahamutSandboxsandboxdeploycheckWithOptions(CheckLinkeBahamutSandboxsandboxdeploycheckRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutSandboxsandboxdeploycheck", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutSandboxsandboxdeploycheckResponse());
    }

    public CheckLinkeBahamutSandboxsandboxdeploycheckResponse checkLinkeBahamutSandboxsandboxdeploycheck(CheckLinkeBahamutSandboxsandboxdeploycheckRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutSandboxsandboxdeploycheckWithOptions(request, runtime);
    }

    public CheckLinkeBahamutStablerollbackdeploycheckResponse checkLinkeBahamutStablerollbackdeploycheckWithOptions(CheckLinkeBahamutStablerollbackdeploycheckRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutStablerollbackdeploycheck", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutStablerollbackdeploycheckResponse());
    }

    public CheckLinkeBahamutStablerollbackdeploycheckResponse checkLinkeBahamutStablerollbackdeploycheck(CheckLinkeBahamutStablerollbackdeploycheckRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutStablerollbackdeploycheckWithOptions(request, runtime);
    }

    public CheckLinkeBahamutStctaskResponse checkLinkeBahamutStctaskWithOptions(CheckLinkeBahamutStctaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutStctask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutStctaskResponse());
    }

    public CheckLinkeBahamutStctaskResponse checkLinkeBahamutStctask(CheckLinkeBahamutStctaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutStctaskWithOptions(request, runtime);
    }

    public CheckLinkeBahamutUnitbranchResponse checkLinkeBahamutUnitbranchWithOptions(CheckLinkeBahamutUnitbranchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutUnitbranch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutUnitbranchResponse());
    }

    public CheckLinkeBahamutUnitbranchResponse checkLinkeBahamutUnitbranch(CheckLinkeBahamutUnitbranchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutUnitbranchWithOptions(request, runtime);
    }

    public CheckLinkeBahamutWebapistabledeploycheckResponse checkLinkeBahamutWebapistabledeploycheckWithOptions(CheckLinkeBahamutWebapistabledeploycheckRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeBahamutWebapistabledeploycheck", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeBahamutWebapistabledeploycheckResponse());
    }

    public CheckLinkeBahamutWebapistabledeploycheckResponse checkLinkeBahamutWebapistabledeploycheck(CheckLinkeBahamutWebapistabledeploycheckRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeBahamutWebapistabledeploycheckWithOptions(request, runtime);
    }

    public CheckLinkefabricFabricReleasepaascheckResponse checkLinkefabricFabricReleasepaascheckWithOptions(CheckLinkefabricFabricReleasepaascheckRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkefabricFabricReleasepaascheck", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkefabricFabricReleasepaascheckResponse());
    }

    public CheckLinkefabricFabricReleasepaascheckResponse checkLinkefabricFabricReleasepaascheck(CheckLinkefabricFabricReleasepaascheckRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkefabricFabricReleasepaascheckWithOptions(request, runtime);
    }

    public CheckLinkefabricFabricReleasepaascheckwithappResponse checkLinkefabricFabricReleasepaascheckwithappWithOptions(CheckLinkefabricFabricReleasepaascheckwithappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkefabricFabricReleasepaascheckwithapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkefabricFabricReleasepaascheckwithappResponse());
    }

    public CheckLinkefabricFabricReleasepaascheckwithappResponse checkLinkefabricFabricReleasepaascheckwithapp(CheckLinkefabricFabricReleasepaascheckwithappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkefabricFabricReleasepaascheckwithappWithOptions(request, runtime);
    }

    public CheckLinkeLinkaHealthResponse checkLinkeLinkaHealthWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeLinkaHealth", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeLinkaHealthResponse());
    }

    public CheckLinkeLinkaHealthResponse checkLinkeLinkaHealth() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeLinkaHealthWithOptions(runtime);
    }

    public CheckLinkeLinklogRegexResponse checkLinkeLinklogRegexWithOptions(CheckLinkeLinklogRegexRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeLinklogRegex", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeLinklogRegexResponse());
    }

    public CheckLinkeLinklogRegexResponse checkLinkeLinklogRegex(CheckLinkeLinklogRegexRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeLinklogRegexWithOptions(request, runtime);
    }

    public CheckLinkeLinktDeleteworkflowstatusResponse checkLinkeLinktDeleteworkflowstatusWithOptions(CheckLinkeLinktDeleteworkflowstatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeLinktDeleteworkflowstatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeLinktDeleteworkflowstatusResponse());
    }

    public CheckLinkeLinktDeleteworkflowstatusResponse checkLinkeLinktDeleteworkflowstatus(CheckLinkeLinktDeleteworkflowstatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeLinktDeleteworkflowstatusWithOptions(request, runtime);
    }

    public CheckLinkeLinktRemovestatusResponse checkLinkeLinktRemovestatusWithOptions(CheckLinkeLinktRemovestatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeLinktRemovestatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeLinktRemovestatusResponse());
    }

    public CheckLinkeLinktRemovestatusResponse checkLinkeLinktRemovestatus(CheckLinkeLinktRemovestatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeLinktRemovestatusWithOptions(request, runtime);
    }

    public CheckLinkeLinktRemovetemplatefromprojectResponse checkLinkeLinktRemovetemplatefromprojectWithOptions(CheckLinkeLinktRemovetemplatefromprojectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckLinkeLinktRemovetemplatefromproject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckLinkeLinktRemovetemplatefromprojectResponse());
    }

    public CheckLinkeLinktRemovetemplatefromprojectResponse checkLinkeLinktRemovetemplatefromproject(CheckLinkeLinktRemovetemplatefromprojectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkLinkeLinktRemovetemplatefromprojectWithOptions(request, runtime);
    }

    public CheckODPDbnodesPrivilegesResponse checkODPDbnodesPrivilegesWithOptions(CheckODPDbnodesPrivilegesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckODPDbnodesPrivileges", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckODPDbnodesPrivilegesResponse());
    }

    public CheckODPDbnodesPrivilegesResponse checkODPDbnodesPrivileges(CheckODPDbnodesPrivilegesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkODPDbnodesPrivilegesWithOptions(request, runtime);
    }

    public CheckODPInstancesResponse checkODPInstancesWithOptions(CheckODPInstancesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckODPInstances", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckODPInstancesResponse());
    }

    public CheckODPInstancesResponse checkODPInstances(CheckODPInstancesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkODPInstancesWithOptions(request, runtime);
    }

    public CheckRmsRulegroupNameResponse checkRmsRulegroupNameWithOptions(CheckRmsRulegroupNameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckRmsRulegroupName", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckRmsRulegroupNameResponse());
    }

    public CheckRmsRulegroupNameResponse checkRmsRulegroupName(CheckRmsRulegroupNameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkRmsRulegroupNameWithOptions(request, runtime);
    }

    public CheckTSJobCronResponse checkTSJobCronWithOptions(CheckTSJobCronRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CheckTSJobCron", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CheckTSJobCronResponse());
    }

    public CheckTSJobCronResponse checkTSJobCron(CheckTSJobCronRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.checkTSJobCronWithOptions(request, runtime);
    }

    public CloneAKSHelmRepoChartResponse cloneAKSHelmRepoChartWithOptions(CloneAKSHelmRepoChartRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CloneAKSHelmRepoChart", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CloneAKSHelmRepoChartResponse());
    }

    public CloneAKSHelmRepoChartResponse cloneAKSHelmRepoChart(CloneAKSHelmRepoChartRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cloneAKSHelmRepoChartWithOptions(request, runtime);
    }

    public CloneHasDiagnosisNodeResponse cloneHasDiagnosisNodeWithOptions(CloneHasDiagnosisNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CloneHasDiagnosisNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CloneHasDiagnosisNodeResponse());
    }

    public CloneHasDiagnosisNodeResponse cloneHasDiagnosisNode(CloneHasDiagnosisNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cloneHasDiagnosisNodeWithOptions(request, runtime);
    }

    public CloneHasInspectMissionResponse cloneHasInspectMissionWithOptions(CloneHasInspectMissionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CloneHasInspectMission", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CloneHasInspectMissionResponse());
    }

    public CloneHasInspectMissionResponse cloneHasInspectMission(CloneHasInspectMissionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cloneHasInspectMissionWithOptions(request, runtime);
    }

    public CloneHasInspectRuleResponse cloneHasInspectRuleWithOptions(CloneHasInspectRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CloneHasInspectRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CloneHasInspectRuleResponse());
    }

    public CloneHasInspectRuleResponse cloneHasInspectRule(CloneHasInspectRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cloneHasInspectRuleWithOptions(request, runtime);
    }

    public CloneLinkeBahamutAoneinternalconverttolinkeiterationformResponse cloneLinkeBahamutAoneinternalconverttolinkeiterationformWithOptions(CloneLinkeBahamutAoneinternalconverttolinkeiterationformRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CloneLinkeBahamutAoneinternalconverttolinkeiterationform", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CloneLinkeBahamutAoneinternalconverttolinkeiterationformResponse());
    }

    public CloneLinkeBahamutAoneinternalconverttolinkeiterationformResponse cloneLinkeBahamutAoneinternalconverttolinkeiterationform(CloneLinkeBahamutAoneinternalconverttolinkeiterationformRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.cloneLinkeBahamutAoneinternalconverttolinkeiterationformWithOptions(request, runtime);
    }

    public CloseLinkeBahamutVcsmergerequestResponse closeLinkeBahamutVcsmergerequestWithOptions(CloseLinkeBahamutVcsmergerequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CloseLinkeBahamutVcsmergerequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CloseLinkeBahamutVcsmergerequestResponse());
    }

    public CloseLinkeBahamutVcsmergerequestResponse closeLinkeBahamutVcsmergerequest(CloseLinkeBahamutVcsmergerequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.closeLinkeBahamutVcsmergerequestWithOptions(request, runtime);
    }

    public CloseLinkeBahamutVcsmergerequestsResponse closeLinkeBahamutVcsmergerequestsWithOptions(CloseLinkeBahamutVcsmergerequestsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CloseLinkeBahamutVcsmergerequests", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CloseLinkeBahamutVcsmergerequestsResponse());
    }

    public CloseLinkeBahamutVcsmergerequestsResponse closeLinkeBahamutVcsmergerequests(CloseLinkeBahamutVcsmergerequestsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.closeLinkeBahamutVcsmergerequestsWithOptions(request, runtime);
    }

    public CloseODPInstancesPublicAccessResponse closeODPInstancesPublicAccessWithOptions(CloseODPInstancesPublicAccessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CloseODPInstancesPublicAccess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CloseODPInstancesPublicAccessResponse());
    }

    public CloseODPInstancesPublicAccessResponse closeODPInstancesPublicAccess(CloseODPInstancesPublicAccessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.closeODPInstancesPublicAccessWithOptions(request, runtime);
    }

    public CloseODPSqlAuditResponse closeODPSqlAuditWithOptions(CloseODPSqlAuditRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CloseODPSqlAudit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CloseODPSqlAuditResponse());
    }

    public CloseODPSqlAuditResponse closeODPSqlAudit(CloseODPSqlAuditRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.closeODPSqlAuditWithOptions(request, runtime);
    }

    public ConfirmAKSClusterOpsGroupArrangementResponse confirmAKSClusterOpsGroupArrangementWithOptions(ConfirmAKSClusterOpsGroupArrangementRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmAKSClusterOpsGroupArrangement", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmAKSClusterOpsGroupArrangementResponse());
    }

    public ConfirmAKSClusterOpsGroupArrangementResponse confirmAKSClusterOpsGroupArrangement(ConfirmAKSClusterOpsGroupArrangementRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmAKSClusterOpsGroupArrangementWithOptions(request, runtime);
    }

    public ConfirmAKSOpsContainerServiceResponse confirmAKSOpsContainerServiceWithOptions(ConfirmAKSOpsContainerServiceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmAKSOpsContainerService", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmAKSOpsContainerServiceResponse());
    }

    public ConfirmAKSOpsContainerServiceResponse confirmAKSOpsContainerService(ConfirmAKSOpsContainerServiceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmAKSOpsContainerServiceWithOptions(request, runtime);
    }

    public ConfirmAKSProductsEnabledResponse confirmAKSProductsEnabledWithOptions(ConfirmAKSProductsEnabledRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmAKSProductsEnabled", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmAKSProductsEnabledResponse());
    }

    public ConfirmAKSProductsEnabledResponse confirmAKSProductsEnabled(ConfirmAKSProductsEnabledRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmAKSProductsEnabledWithOptions(request, runtime);
    }

    public ConfirmClriskIssueResponse confirmClriskIssueWithOptions(ConfirmClriskIssueRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmClriskIssue", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmClriskIssueResponse());
    }

    public ConfirmClriskIssueResponse confirmClriskIssue(ConfirmClriskIssueRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmClriskIssueWithOptions(request, runtime);
    }

    public ConfirmLDCOpsplanServicerollbackResponse confirmLDCOpsplanServicerollbackWithOptions(ConfirmLDCOpsplanServicerollbackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLDCOpsplanServicerollback", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLDCOpsplanServicerollbackResponse());
    }

    public ConfirmLDCOpsplanServicerollbackResponse confirmLDCOpsplanServicerollback(ConfirmLDCOpsplanServicerollbackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLDCOpsplanServicerollbackWithOptions(request, runtime);
    }

    public ConfirmLinkeBahamutIterationconfigcheckResponse confirmLinkeBahamutIterationconfigcheckWithOptions(ConfirmLinkeBahamutIterationconfigcheckRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkeBahamutIterationconfigcheck", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkeBahamutIterationconfigcheckResponse());
    }

    public ConfirmLinkeBahamutIterationconfigcheckResponse confirmLinkeBahamutIterationconfigcheck(ConfirmLinkeBahamutIterationconfigcheckRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkeBahamutIterationconfigcheckWithOptions(request, runtime);
    }

    public ConfirmLinkeBahamutUserResponse confirmLinkeBahamutUserWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkeBahamutUser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkeBahamutUserResponse());
    }

    public ConfirmLinkeBahamutUserResponse confirmLinkeBahamutUser() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkeBahamutUserWithOptions(runtime);
    }

    public ConfirmLinkefabricFabricCibranchconfigsResponse confirmLinkefabricFabricCibranchconfigsWithOptions(ConfirmLinkefabricFabricCibranchconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkefabricFabricCibranchconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkefabricFabricCibranchconfigsResponse());
    }

    public ConfirmLinkefabricFabricCibranchconfigsResponse confirmLinkefabricFabricCibranchconfigs(ConfirmLinkefabricFabricCibranchconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkefabricFabricCibranchconfigsWithOptions(request, runtime);
    }

    public ConfirmLinkefabricFabricCiconfigsResponse confirmLinkefabricFabricCiconfigsWithOptions(ConfirmLinkefabricFabricCiconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkefabricFabricCiconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkefabricFabricCiconfigsResponse());
    }

    public ConfirmLinkefabricFabricCiconfigsResponse confirmLinkefabricFabricCiconfigs(ConfirmLinkefabricFabricCiconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkefabricFabricCiconfigsWithOptions(request, runtime);
    }

    public ConfirmLinkefabricFabricCloudmsgconfigsResponse confirmLinkefabricFabricCloudmsgconfigsWithOptions(ConfirmLinkefabricFabricCloudmsgconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkefabricFabricCloudmsgconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkefabricFabricCloudmsgconfigsResponse());
    }

    public ConfirmLinkefabricFabricCloudmsgconfigsResponse confirmLinkefabricFabricCloudmsgconfigs(ConfirmLinkefabricFabricCloudmsgconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkefabricFabricCloudmsgconfigsWithOptions(request, runtime);
    }

    public ConfirmLinkefabricFabricDevstageincludegrayornetpreResponse confirmLinkefabricFabricDevstageincludegrayornetpreWithOptions(ConfirmLinkefabricFabricDevstageincludegrayornetpreRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkefabricFabricDevstageincludegrayornetpre", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkefabricFabricDevstageincludegrayornetpreResponse());
    }

    public ConfirmLinkefabricFabricDevstageincludegrayornetpreResponse confirmLinkefabricFabricDevstageincludegrayornetpre(ConfirmLinkefabricFabricDevstageincludegrayornetpreRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkefabricFabricDevstageincludegrayornetpreWithOptions(request, runtime);
    }

    public ConfirmLinkefabricFabricDockerruleconfigsResponse confirmLinkefabricFabricDockerruleconfigsWithOptions(ConfirmLinkefabricFabricDockerruleconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkefabricFabricDockerruleconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkefabricFabricDockerruleconfigsResponse());
    }

    public ConfirmLinkefabricFabricDockerruleconfigsResponse confirmLinkefabricFabricDockerruleconfigs(ConfirmLinkefabricFabricDockerruleconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkefabricFabricDockerruleconfigsWithOptions(request, runtime);
    }

    public ConfirmLinkefabricFabricDrmconfigsResponse confirmLinkefabricFabricDrmconfigsWithOptions(ConfirmLinkefabricFabricDrmconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkefabricFabricDrmconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkefabricFabricDrmconfigsResponse());
    }

    public ConfirmLinkefabricFabricDrmconfigsResponse confirmLinkefabricFabricDrmconfigs(ConfirmLinkefabricFabricDrmconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkefabricFabricDrmconfigsWithOptions(request, runtime);
    }

    public ConfirmLinkefabricFabricEnvconfigsResponse confirmLinkefabricFabricEnvconfigsWithOptions(ConfirmLinkefabricFabricEnvconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkefabricFabricEnvconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkefabricFabricEnvconfigsResponse());
    }

    public ConfirmLinkefabricFabricEnvconfigsResponse confirmLinkefabricFabricEnvconfigs(ConfirmLinkefabricFabricEnvconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkefabricFabricEnvconfigsWithOptions(request, runtime);
    }

    public ConfirmLinkefabricFabricMsgconfigResponse confirmLinkefabricFabricMsgconfigWithOptions(ConfirmLinkefabricFabricMsgconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkefabricFabricMsgconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkefabricFabricMsgconfigResponse());
    }

    public ConfirmLinkefabricFabricMsgconfigResponse confirmLinkefabricFabricMsgconfig(ConfirmLinkefabricFabricMsgconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkefabricFabricMsgconfigWithOptions(request, runtime);
    }

    public ConfirmLinkefabricFabricNewappconfigsResponse confirmLinkefabricFabricNewappconfigsWithOptions(ConfirmLinkefabricFabricNewappconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkefabricFabricNewappconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkefabricFabricNewappconfigsResponse());
    }

    public ConfirmLinkefabricFabricNewappconfigsResponse confirmLinkefabricFabricNewappconfigs(ConfirmLinkefabricFabricNewappconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkefabricFabricNewappconfigsWithOptions(request, runtime);
    }

    public ConfirmLinkefabricFabricShedulerconfigsResponse confirmLinkefabricFabricShedulerconfigsWithOptions(ConfirmLinkefabricFabricShedulerconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkefabricFabricShedulerconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkefabricFabricShedulerconfigsResponse());
    }

    public ConfirmLinkefabricFabricShedulerconfigsResponse confirmLinkefabricFabricShedulerconfigs(ConfirmLinkefabricFabricShedulerconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkefabricFabricShedulerconfigsWithOptions(request, runtime);
    }

    public ConfirmLinkefabricFabricSmartdeployconfigsResponse confirmLinkefabricFabricSmartdeployconfigsWithOptions(ConfirmLinkefabricFabricSmartdeployconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkefabricFabricSmartdeployconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkefabricFabricSmartdeployconfigsResponse());
    }

    public ConfirmLinkefabricFabricSmartdeployconfigsResponse confirmLinkefabricFabricSmartdeployconfigs(ConfirmLinkefabricFabricSmartdeployconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkefabricFabricSmartdeployconfigsWithOptions(request, runtime);
    }

    public ConfirmLinkefabricFabricSwconfigsResponse confirmLinkefabricFabricSwconfigsWithOptions(ConfirmLinkefabricFabricSwconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkefabricFabricSwconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkefabricFabricSwconfigsResponse());
    }

    public ConfirmLinkefabricFabricSwconfigsResponse confirmLinkefabricFabricSwconfigs(ConfirmLinkefabricFabricSwconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkefabricFabricSwconfigsWithOptions(request, runtime);
    }

    public ConfirmLinkefabricFabricTechstackconfigsResponse confirmLinkefabricFabricTechstackconfigsWithOptions(ConfirmLinkefabricFabricTechstackconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmLinkefabricFabricTechstackconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmLinkefabricFabricTechstackconfigsResponse());
    }

    public ConfirmLinkefabricFabricTechstackconfigsResponse confirmLinkefabricFabricTechstackconfigs(ConfirmLinkefabricFabricTechstackconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmLinkefabricFabricTechstackconfigsWithOptions(request, runtime);
    }

    public ConfirmTSActivityInstanceResponse confirmTSActivityInstanceWithOptions(ConfirmTSActivityInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ConfirmTSActivityInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ConfirmTSActivityInstanceResponse());
    }

    public ConfirmTSActivityInstanceResponse confirmTSActivityInstance(ConfirmTSActivityInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.confirmTSActivityInstanceWithOptions(request, runtime);
    }

    public CountDTXAppStatsResponse countDTXAppStatsWithOptions(CountDTXAppStatsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CountDTXAppStats", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CountDTXAppStatsResponse());
    }

    public CountDTXAppStatsResponse countDTXAppStats(CountDTXAppStatsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.countDTXAppStatsWithOptions(request, runtime);
    }

    public CountDTXBizTypeTrendsResponse countDTXBizTypeTrendsWithOptions(CountDTXBizTypeTrendsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CountDTXBizTypeTrends", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CountDTXBizTypeTrendsResponse());
    }

    public CountDTXBizTypeTrendsResponse countDTXBizTypeTrends(CountDTXBizTypeTrendsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.countDTXBizTypeTrendsWithOptions(request, runtime);
    }

    public CountLinkeBahamutGlobalsearchResponse countLinkeBahamutGlobalsearchWithOptions(CountLinkeBahamutGlobalsearchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CountLinkeBahamutGlobalsearch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CountLinkeBahamutGlobalsearchResponse());
    }

    public CountLinkeBahamutGlobalsearchResponse countLinkeBahamutGlobalsearch(CountLinkeBahamutGlobalsearchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.countLinkeBahamutGlobalsearchWithOptions(request, runtime);
    }

    public CountLinkeBahamutMachinesbyaccountResponse countLinkeBahamutMachinesbyaccountWithOptions(CountLinkeBahamutMachinesbyaccountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CountLinkeBahamutMachinesbyaccount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CountLinkeBahamutMachinesbyaccountResponse());
    }

    public CountLinkeBahamutMachinesbyaccountResponse countLinkeBahamutMachinesbyaccount(CountLinkeBahamutMachinesbyaccountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.countLinkeBahamutMachinesbyaccountWithOptions(request, runtime);
    }

    public CountLinkeBahamutMonitoruserstatisticsmonitorResponse countLinkeBahamutMonitoruserstatisticsmonitorWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("CountLinkeBahamutMonitoruserstatisticsmonitor", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CountLinkeBahamutMonitoruserstatisticsmonitorResponse());
    }

    public CountLinkeBahamutMonitoruserstatisticsmonitorResponse countLinkeBahamutMonitoruserstatisticsmonitor() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.countLinkeBahamutMonitoruserstatisticsmonitorWithOptions(runtime);
    }

    public CountLinkeBahamutStageuncompleteflowtasksResponse countLinkeBahamutStageuncompleteflowtasksWithOptions(CountLinkeBahamutStageuncompleteflowtasksRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CountLinkeBahamutStageuncompleteflowtasks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CountLinkeBahamutStageuncompleteflowtasksResponse());
    }

    public CountLinkeBahamutStageuncompleteflowtasksResponse countLinkeBahamutStageuncompleteflowtasks(CountLinkeBahamutStageuncompleteflowtasksRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.countLinkeBahamutStageuncompleteflowtasksWithOptions(request, runtime);
    }

    public CountLinkeLinktRiskResponse countLinkeLinktRiskWithOptions(CountLinkeLinktRiskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CountLinkeLinktRisk", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CountLinkeLinktRiskResponse());
    }

    public CountLinkeLinktRiskResponse countLinkeLinktRisk(CountLinkeLinktRiskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.countLinkeLinktRiskWithOptions(request, runtime);
    }

    public CountLinkeLinktWorkitemgroupResponse countLinkeLinktWorkitemgroupWithOptions(CountLinkeLinktWorkitemgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CountLinkeLinktWorkitemgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CountLinkeLinktWorkitemgroupResponse());
    }

    public CountLinkeLinktWorkitemgroupResponse countLinkeLinktWorkitemgroup(CountLinkeLinktWorkitemgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.countLinkeLinktWorkitemgroupWithOptions(request, runtime);
    }

    public CountRmsAlertrecordsResponse countRmsAlertrecordsWithOptions(CountRmsAlertrecordsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CountRmsAlertrecords", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CountRmsAlertrecordsResponse());
    }

    public CountRmsAlertrecordsResponse countRmsAlertrecords(CountRmsAlertrecordsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.countRmsAlertrecordsWithOptions(request, runtime);
    }

    public CountTSClientCountResponse countTSClientCountWithOptions(CountTSClientCountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CountTSClientCount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CountTSClientCountResponse());
    }

    public CountTSClientCountResponse countTSClientCount(CountTSClientCountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.countTSClientCountWithOptions(request, runtime);
    }

    public CountTSJobByStatusResponse countTSJobByStatusWithOptions(CountTSJobByStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CountTSJobByStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CountTSJobByStatusResponse());
    }

    public CountTSJobByStatusResponse countTSJobByStatus(CountTSJobByStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.countTSJobByStatusWithOptions(request, runtime);
    }

    public CountTSJobTypeResponse countTSJobTypeWithOptions(CountTSJobTypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CountTSJobType", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CountTSJobTypeResponse());
    }

    public CountTSJobTypeResponse countTSJobType(CountTSJobTypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.countTSJobTypeWithOptions(request, runtime);
    }

    public CreateAKSBuildConfigResponse createAKSBuildConfigWithOptions(CreateAKSBuildConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateAKSBuildConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateAKSBuildConfigResponse());
    }

    public CreateAKSBuildConfigResponse createAKSBuildConfig(CreateAKSBuildConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createAKSBuildConfigWithOptions(request, runtime);
    }

    public CreateAKSClusterResponse createAKSClusterWithOptions(CreateAKSClusterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateAKSCluster", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateAKSClusterResponse());
    }

    public CreateAKSClusterResponse createAKSCluster(CreateAKSClusterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createAKSClusterWithOptions(request, runtime);
    }

    public CreateAKSClusterNamespaceResponse createAKSClusterNamespaceWithOptions(CreateAKSClusterNamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateAKSClusterNamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateAKSClusterNamespaceResponse());
    }

    public CreateAKSClusterNamespaceResponse createAKSClusterNamespace(CreateAKSClusterNamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createAKSClusterNamespaceWithOptions(request, runtime);
    }

    public CreateAKSConfigmapResponse createAKSConfigmapWithOptions(CreateAKSConfigmapRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateAKSConfigmap", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateAKSConfigmapResponse());
    }

    public CreateAKSConfigmapResponse createAKSConfigmap(CreateAKSConfigmapRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createAKSConfigmapWithOptions(request, runtime);
    }

    public CreateAKSContainerservicesResponse createAKSContainerservicesWithOptions(CreateAKSContainerservicesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateAKSContainerservices", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateAKSContainerservicesResponse());
    }

    public CreateAKSContainerservicesResponse createAKSContainerservices(CreateAKSContainerservicesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createAKSContainerservicesWithOptions(request, runtime);
    }

    public CreateAKSHelmChartReleaseResponse createAKSHelmChartReleaseWithOptions(CreateAKSHelmChartReleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateAKSHelmChartRelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateAKSHelmChartReleaseResponse());
    }

    public CreateAKSHelmChartReleaseResponse createAKSHelmChartRelease(CreateAKSHelmChartReleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createAKSHelmChartReleaseWithOptions(request, runtime);
    }

    public CreateAKSHelmRepoChartReleaseResponse createAKSHelmRepoChartReleaseWithOptions(CreateAKSHelmRepoChartReleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateAKSHelmRepoChartRelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateAKSHelmRepoChartReleaseResponse());
    }

    public CreateAKSHelmRepoChartReleaseResponse createAKSHelmRepoChartRelease(CreateAKSHelmRepoChartReleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createAKSHelmRepoChartReleaseWithOptions(request, runtime);
    }

    public CreateAKSKubernetesResourceResponse createAKSKubernetesResourceWithOptions(CreateAKSKubernetesResourceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateAKSKubernetesResource", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateAKSKubernetesResourceResponse());
    }

    public CreateAKSKubernetesResourceResponse createAKSKubernetesResource(CreateAKSKubernetesResourceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createAKSKubernetesResourceWithOptions(request, runtime);
    }

    public CreateAKSMeshWorkspaceResponse createAKSMeshWorkspaceWithOptions(CreateAKSMeshWorkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateAKSMeshWorkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateAKSMeshWorkspaceResponse());
    }

    public CreateAKSMeshWorkspaceResponse createAKSMeshWorkspace(CreateAKSMeshWorkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createAKSMeshWorkspaceWithOptions(request, runtime);
    }

    public CreateAKSPlanResponse createAKSPlanWithOptions(CreateAKSPlanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateAKSPlan", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateAKSPlanResponse());
    }

    public CreateAKSPlanResponse createAKSPlan(CreateAKSPlanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createAKSPlanWithOptions(request, runtime);
    }

    public CreateAKSSecretResponse createAKSSecretWithOptions(CreateAKSSecretRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateAKSSecret", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateAKSSecretResponse());
    }

    public CreateAKSSecretResponse createAKSSecret(CreateAKSSecretRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createAKSSecretWithOptions(request, runtime);
    }

    public CreateAKSSecretImagepullResponse createAKSSecretImagepullWithOptions(CreateAKSSecretImagepullRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateAKSSecretImagepull", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateAKSSecretImagepullResponse());
    }

    public CreateAKSSecretImagepullResponse createAKSSecretImagepull(CreateAKSSecretImagepullRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createAKSSecretImagepullWithOptions(request, runtime);
    }

    public CreateAKSTokenResponse createAKSTokenWithOptions(CreateAKSTokenRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateAKSToken", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateAKSTokenResponse());
    }

    public CreateAKSTokenResponse createAKSToken(CreateAKSTokenRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createAKSTokenWithOptions(request, runtime);
    }

    public CreateBuildpackResponse createBuildpackWithOptions(CreateBuildpackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateBuildpack", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateBuildpackResponse());
    }

    public CreateBuildpackResponse createBuildpack(CreateBuildpackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createBuildpackWithOptions(request, runtime);
    }

    public CreateBuildpackPackageSignUrlResponse createBuildpackPackageSignUrlWithOptions(CreateBuildpackPackageSignUrlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateBuildpackPackageSignUrl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateBuildpackPackageSignUrlResponse());
    }

    public CreateBuildpackPackageSignUrlResponse createBuildpackPackageSignUrl(CreateBuildpackPackageSignUrlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createBuildpackPackageSignUrlWithOptions(request, runtime);
    }

    public CreateCasApplicationResponse createCasApplicationWithOptions(CreateCasApplicationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCasApplication", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCasApplicationResponse());
    }

    public CreateCasApplicationResponse createCasApplication(CreateCasApplicationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCasApplicationWithOptions(request, runtime);
    }

    public CreateCasComputerResponse createCasComputerWithOptions(CreateCasComputerRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCasComputer", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCasComputerResponse());
    }

    public CreateCasComputerResponse createCasComputer(CreateCasComputerRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCasComputerWithOptions(request, runtime);
    }

    public CreateCasDatabaseResponse createCasDatabaseWithOptions(CreateCasDatabaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCasDatabase", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCasDatabaseResponse());
    }

    public CreateCasDatabaseResponse createCasDatabase(CreateCasDatabaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCasDatabaseWithOptions(request, runtime);
    }

    public CreateCasDatabaseAccountResponse createCasDatabaseAccountWithOptions(CreateCasDatabaseAccountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCasDatabaseAccount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCasDatabaseAccountResponse());
    }

    public CreateCasDatabaseAccountResponse createCasDatabaseAccount(CreateCasDatabaseAccountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCasDatabaseAccountWithOptions(request, runtime);
    }

    public CreateCasDatabaseSchemaResponse createCasDatabaseSchemaWithOptions(CreateCasDatabaseSchemaRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCasDatabaseSchema", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCasDatabaseSchemaResponse());
    }

    public CreateCasDatabaseSchemaResponse createCasDatabaseSchema(CreateCasDatabaseSchemaRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCasDatabaseSchemaWithOptions(request, runtime);
    }

    public CreateCasLoadbalanceResponse createCasLoadbalanceWithOptions(CreateCasLoadbalanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCasLoadbalance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCasLoadbalanceResponse());
    }

    public CreateCasLoadbalanceResponse createCasLoadbalance(CreateCasLoadbalanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCasLoadbalanceWithOptions(request, runtime);
    }

    public CreateCasLoadbalanceListenerResponse createCasLoadbalanceListenerWithOptions(CreateCasLoadbalanceListenerRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCasLoadbalanceListener", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCasLoadbalanceListenerResponse());
    }

    public CreateCasLoadbalanceListenerResponse createCasLoadbalanceListener(CreateCasLoadbalanceListenerRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCasLoadbalanceListenerWithOptions(request, runtime);
    }

    public CreateCasLoadbalanceMountResponse createCasLoadbalanceMountWithOptions(CreateCasLoadbalanceMountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCasLoadbalanceMount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCasLoadbalanceMountResponse());
    }

    public CreateCasLoadbalanceMountResponse createCasLoadbalanceMount(CreateCasLoadbalanceMountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCasLoadbalanceMountWithOptions(request, runtime);
    }

    public CreateCasSecuritygroupResponse createCasSecuritygroupWithOptions(CreateCasSecuritygroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCasSecuritygroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCasSecuritygroupResponse());
    }

    public CreateCasSecuritygroupResponse createCasSecuritygroup(CreateCasSecuritygroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCasSecuritygroupWithOptions(request, runtime);
    }

    public CreateCASSlsConfigResponse createCASSlsConfigWithOptions(CreateCASSlsConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCASSlsConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCASSlsConfigResponse());
    }

    public CreateCASSlsConfigResponse createCASSlsConfig(CreateCASSlsConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCASSlsConfigWithOptions(request, runtime);
    }

    public CreateCASSlsLogstoreResponse createCASSlsLogstoreWithOptions(CreateCASSlsLogstoreRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCASSlsLogstore", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCASSlsLogstoreResponse());
    }

    public CreateCASSlsLogstoreResponse createCASSlsLogstore(CreateCASSlsLogstoreRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCASSlsLogstoreWithOptions(request, runtime);
    }

    public CreateCASSlsProjectResponse createCASSlsProjectWithOptions(CreateCASSlsProjectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCASSlsProject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCASSlsProjectResponse());
    }

    public CreateCASSlsProjectResponse createCASSlsProject(CreateCASSlsProjectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCASSlsProjectWithOptions(request, runtime);
    }

    public CreateCasVpcResponse createCasVpcWithOptions(CreateCasVpcRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCasVpc", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCasVpcResponse());
    }

    public CreateCasVpcResponse createCasVpc(CreateCasVpcRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCasVpcWithOptions(request, runtime);
    }

    public CreateCasVpcVSwitchResponse createCasVpcVSwitchWithOptions(CreateCasVpcVSwitchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCasVpcVSwitch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCasVpcVSwitchResponse());
    }

    public CreateCasVpcVSwitchResponse createCasVpcVSwitch(CreateCasVpcVSwitchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCasVpcVSwitchWithOptions(request, runtime);
    }

    public CreateCellResponse createCellWithOptions(CreateCellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateCell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateCellResponse());
    }

    public CreateCellResponse createCell(CreateCellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createCellWithOptions(request, runtime);
    }

    public CreateDmsBindingResponse createDmsBindingWithOptions(CreateDmsBindingRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDmsBinding", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDmsBindingResponse());
    }

    public CreateDmsBindingResponse createDmsBinding(CreateDmsBindingRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDmsBindingWithOptions(request, runtime);
    }

    public CreateDmsMsgTypeResponse createDmsMsgTypeWithOptions(CreateDmsMsgTypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDmsMsgType", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDmsMsgTypeResponse());
    }

    public CreateDmsMsgTypeResponse createDmsMsgType(CreateDmsMsgTypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDmsMsgTypeWithOptions(request, runtime);
    }

    public CreateDmsWhitelistResponse createDmsWhitelistWithOptions(CreateDmsWhitelistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDmsWhitelist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDmsWhitelistResponse());
    }

    public CreateDmsWhitelistResponse createDmsWhitelist(CreateDmsWhitelistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDmsWhitelistWithOptions(request, runtime);
    }

    public CreateDSTBizLogConfigResponse createDSTBizLogConfigWithOptions(CreateDSTBizLogConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDSTBizLogConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDSTBizLogConfigResponse());
    }

    public CreateDSTBizLogConfigResponse createDSTBizLogConfig(CreateDSTBizLogConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDSTBizLogConfigWithOptions(request, runtime);
    }

    public CreateDSTTraceHistoryResponse createDSTTraceHistoryWithOptions(CreateDSTTraceHistoryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDSTTraceHistory", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDSTTraceHistoryResponse());
    }

    public CreateDSTTraceHistoryResponse createDSTTraceHistory(CreateDSTTraceHistoryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDSTTraceHistoryWithOptions(request, runtime);
    }

    public CreateDTXAppResponse createDTXAppWithOptions(CreateDTXAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDTXApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDTXAppResponse());
    }

    public CreateDTXAppResponse createDTXApp(CreateDTXAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDTXAppWithOptions(request, runtime);
    }

    public CreateDtxAppActionResponse createDtxAppActionWithOptions(CreateDtxAppActionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDtxAppAction", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDtxAppActionResponse());
    }

    public CreateDtxAppActionResponse createDtxAppAction(CreateDtxAppActionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDtxAppActionWithOptions(request, runtime);
    }

    public CreateDtxAppRecoveryResponse createDtxAppRecoveryWithOptions(CreateDtxAppRecoveryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDtxAppRecovery", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDtxAppRecoveryResponse());
    }

    public CreateDtxAppRecoveryResponse createDtxAppRecovery(CreateDtxAppRecoveryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDtxAppRecoveryWithOptions(request, runtime);
    }

    public CreateDTXAppsResponse createDTXAppsWithOptions(CreateDTXAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDTXApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDTXAppsResponse());
    }

    public CreateDTXAppsResponse createDTXApps(CreateDTXAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDTXAppsWithOptions(request, runtime);
    }

    public CreateDTXAppsActionResponse createDTXAppsActionWithOptions(CreateDTXAppsActionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDTXAppsAction", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDTXAppsActionResponse());
    }

    public CreateDTXAppsActionResponse createDTXAppsAction(CreateDTXAppsActionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDTXAppsActionWithOptions(request, runtime);
    }

    public CreateDTXAppsConfigsResponse createDTXAppsConfigsWithOptions(CreateDTXAppsConfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDTXAppsConfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDTXAppsConfigsResponse());
    }

    public CreateDTXAppsConfigsResponse createDTXAppsConfigs(CreateDTXAppsConfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDTXAppsConfigsWithOptions(request, runtime);
    }

    public CreateDTXAppsRecoveryResponse createDTXAppsRecoveryWithOptions(CreateDTXAppsRecoveryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDTXAppsRecovery", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDTXAppsRecoveryResponse());
    }

    public CreateDTXAppsRecoveryResponse createDTXAppsRecovery(CreateDTXAppsRecoveryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDTXAppsRecoveryWithOptions(request, runtime);
    }

    public CreateDTXBiztypeRelationResponse createDTXBiztypeRelationWithOptions(CreateDTXBiztypeRelationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDTXBiztypeRelation", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDTXBiztypeRelationResponse());
    }

    public CreateDTXBiztypeRelationResponse createDTXBiztypeRelation(CreateDTXBiztypeRelationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDTXBiztypeRelationWithOptions(request, runtime);
    }

    public CreateDTXRecoveryConfigurationResponse createDTXRecoveryConfigurationWithOptions(CreateDTXRecoveryConfigurationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDTXRecoveryConfiguration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDTXRecoveryConfigurationResponse());
    }

    public CreateDTXRecoveryConfigurationResponse createDTXRecoveryConfiguration(CreateDTXRecoveryConfigurationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDTXRecoveryConfigurationWithOptions(request, runtime);
    }

    public CreateDTXRecoveryInitiatorResponse createDTXRecoveryInitiatorWithOptions(CreateDTXRecoveryInitiatorRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDTXRecoveryInitiator", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDTXRecoveryInitiatorResponse());
    }

    public CreateDTXRecoveryInitiatorResponse createDTXRecoveryInitiator(CreateDTXRecoveryInitiatorRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDTXRecoveryInitiatorWithOptions(request, runtime);
    }

    public CreateDTXRecoveryInitiatorsResponse createDTXRecoveryInitiatorsWithOptions(CreateDTXRecoveryInitiatorsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDTXRecoveryInitiators", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDTXRecoveryInitiatorsResponse());
    }

    public CreateDTXRecoveryInitiatorsResponse createDTXRecoveryInitiators(CreateDTXRecoveryInitiatorsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDTXRecoveryInitiatorsWithOptions(request, runtime);
    }

    public CreateDTXRecoveryParticipatorResponse createDTXRecoveryParticipatorWithOptions(CreateDTXRecoveryParticipatorRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDTXRecoveryParticipator", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDTXRecoveryParticipatorResponse());
    }

    public CreateDTXRecoveryParticipatorResponse createDTXRecoveryParticipator(CreateDTXRecoveryParticipatorRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDTXRecoveryParticipatorWithOptions(request, runtime);
    }

    public CreateDWSDscfgResponse createDWSDscfgWithOptions(CreateDWSDscfgRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDWSDscfg", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDWSDscfgResponse());
    }

    public CreateDWSDscfgResponse createDWSDscfg(CreateDWSDscfgRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDWSDscfgWithOptions(request, runtime);
    }

    public CreateDWSMetadataLogictablesResponse createDWSMetadataLogictablesWithOptions(CreateDWSMetadataLogictablesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDWSMetadataLogictables", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDWSMetadataLogictablesResponse());
    }

    public CreateDWSMetadataLogictablesResponse createDWSMetadataLogictables(CreateDWSMetadataLogictablesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDWSMetadataLogictablesWithOptions(request, runtime);
    }

    public CreateDWSSubsTaskResponse createDWSSubsTaskWithOptions(CreateDWSSubsTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDWSSubsTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDWSSubsTaskResponse());
    }

    public CreateDWSSubsTaskResponse createDWSSubsTask(CreateDWSSubsTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDWSSubsTaskWithOptions(request, runtime);
    }

    public CreateDWSVpcAppResponse createDWSVpcAppWithOptions(CreateDWSVpcAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateDWSVpcApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateDWSVpcAppResponse());
    }

    public CreateDWSVpcAppResponse createDWSVpcApp(CreateDWSVpcAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createDWSVpcAppWithOptions(request, runtime);
    }

    public CreateGWAppResponse createGWAppWithOptions(CreateGWAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateGWApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateGWAppResponse());
    }

    public CreateGWAppResponse createGWApp(CreateGWAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createGWAppWithOptions(request, runtime);
    }

    public CreateHasAdminConfigResponse createHasAdminConfigWithOptions(CreateHasAdminConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasAdminConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasAdminConfigResponse());
    }

    public CreateHasAdminConfigResponse createHasAdminConfig(CreateHasAdminConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasAdminConfigWithOptions(request, runtime);
    }

    public CreateHasAdminSshResponse createHasAdminSshWithOptions(CreateHasAdminSshRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasAdminSsh", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasAdminSshResponse());
    }

    public CreateHasAdminSshResponse createHasAdminSsh(CreateHasAdminSshRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasAdminSshWithOptions(request, runtime);
    }

    public CreateHasBaselineNwapprovalprocessResponse createHasBaselineNwapprovalprocessWithOptions(CreateHasBaselineNwapprovalprocessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasBaselineNwapprovalprocess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasBaselineNwapprovalprocessResponse());
    }

    public CreateHasBaselineNwapprovalprocessResponse createHasBaselineNwapprovalprocess(CreateHasBaselineNwapprovalprocessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasBaselineNwapprovalprocessWithOptions(request, runtime);
    }

    public CreateHasBaselineUserappgroupResponse createHasBaselineUserappgroupWithOptions(CreateHasBaselineUserappgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasBaselineUserappgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasBaselineUserappgroupResponse());
    }

    public CreateHasBaselineUserappgroupResponse createHasBaselineUserappgroup(CreateHasBaselineUserappgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasBaselineUserappgroupWithOptions(request, runtime);
    }

    public CreateHasCloudarchCellResponse createHasCloudarchCellWithOptions(CreateHasCloudarchCellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasCloudarchCell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasCloudarchCellResponse());
    }

    public CreateHasCloudarchCellResponse createHasCloudarchCell(CreateHasCloudarchCellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasCloudarchCellWithOptions(request, runtime);
    }

    public CreateHasCloudarchCellgroupResponse createHasCloudarchCellgroupWithOptions(CreateHasCloudarchCellgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasCloudarchCellgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasCloudarchCellgroupResponse());
    }

    public CreateHasCloudarchCellgroupResponse createHasCloudarchCellgroup(CreateHasCloudarchCellgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasCloudarchCellgroupWithOptions(request, runtime);
    }

    public CreateHasCloudarchIaasakemetadataResponse createHasCloudarchIaasakemetadataWithOptions(CreateHasCloudarchIaasakemetadataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasCloudarchIaasakemetadata", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasCloudarchIaasakemetadataResponse());
    }

    public CreateHasCloudarchIaasakemetadataResponse createHasCloudarchIaasakemetadata(CreateHasCloudarchIaasakemetadataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasCloudarchIaasakemetadataWithOptions(request, runtime);
    }

    public CreateHasCloudarchIaasmetadataResponse createHasCloudarchIaasmetadataWithOptions(CreateHasCloudarchIaasmetadataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasCloudarchIaasmetadata", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasCloudarchIaasmetadataResponse());
    }

    public CreateHasCloudarchIaasmetadataResponse createHasCloudarchIaasmetadata(CreateHasCloudarchIaasmetadataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasCloudarchIaasmetadataWithOptions(request, runtime);
    }

    public CreateHasCloudarchRegionResponse createHasCloudarchRegionWithOptions(CreateHasCloudarchRegionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasCloudarchRegion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasCloudarchRegionResponse());
    }

    public CreateHasCloudarchRegionResponse createHasCloudarchRegion(CreateHasCloudarchRegionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasCloudarchRegionWithOptions(request, runtime);
    }

    public CreateHasCloudarchWorkspaceResponse createHasCloudarchWorkspaceWithOptions(CreateHasCloudarchWorkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasCloudarchWorkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasCloudarchWorkspaceResponse());
    }

    public CreateHasCloudarchWorkspaceResponse createHasCloudarchWorkspace(CreateHasCloudarchWorkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasCloudarchWorkspaceWithOptions(request, runtime);
    }

    public CreateHasCloudarchWorkspacegroupResponse createHasCloudarchWorkspacegroupWithOptions(CreateHasCloudarchWorkspacegroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasCloudarchWorkspacegroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasCloudarchWorkspacegroupResponse());
    }

    public CreateHasCloudarchWorkspacegroupResponse createHasCloudarchWorkspacegroup(CreateHasCloudarchWorkspacegroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasCloudarchWorkspacegroupWithOptions(request, runtime);
    }

    public CreateHasCloudarchZoneResponse createHasCloudarchZoneWithOptions(CreateHasCloudarchZoneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasCloudarchZone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasCloudarchZoneResponse());
    }

    public CreateHasCloudarchZoneResponse createHasCloudarchZone(CreateHasCloudarchZoneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasCloudarchZoneWithOptions(request, runtime);
    }

    public CreateHasDiagnosisGraphnodeResponse createHasDiagnosisGraphnodeWithOptions(CreateHasDiagnosisGraphnodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasDiagnosisGraphnode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasDiagnosisGraphnodeResponse());
    }

    public CreateHasDiagnosisGraphnodeResponse createHasDiagnosisGraphnode(CreateHasDiagnosisGraphnodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasDiagnosisGraphnodeWithOptions(request, runtime);
    }

    public CreateHasDiagnosisNodeResponse createHasDiagnosisNodeWithOptions(CreateHasDiagnosisNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasDiagnosisNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasDiagnosisNodeResponse());
    }

    public CreateHasDiagnosisNodeResponse createHasDiagnosisNode(CreateHasDiagnosisNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasDiagnosisNodeWithOptions(request, runtime);
    }

    public CreateHasDiagnosisPlanResponse createHasDiagnosisPlanWithOptions(CreateHasDiagnosisPlanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasDiagnosisPlan", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasDiagnosisPlanResponse());
    }

    public CreateHasDiagnosisPlanResponse createHasDiagnosisPlan(CreateHasDiagnosisPlanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasDiagnosisPlanWithOptions(request, runtime);
    }

    public CreateHasDiagnosisPlantriggerResponse createHasDiagnosisPlantriggerWithOptions(CreateHasDiagnosisPlantriggerRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasDiagnosisPlantrigger", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasDiagnosisPlantriggerResponse());
    }

    public CreateHasDiagnosisPlantriggerResponse createHasDiagnosisPlantrigger(CreateHasDiagnosisPlantriggerRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasDiagnosisPlantriggerWithOptions(request, runtime);
    }

    public CreateHasDiagnosisRuleResponse createHasDiagnosisRuleWithOptions(CreateHasDiagnosisRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasDiagnosisRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasDiagnosisRuleResponse());
    }

    public CreateHasDiagnosisRuleResponse createHasDiagnosisRule(CreateHasDiagnosisRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasDiagnosisRuleWithOptions(request, runtime);
    }

    public CreateHasDingtalkRobotResponse createHasDingtalkRobotWithOptions(CreateHasDingtalkRobotRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasDingtalkRobot", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasDingtalkRobotResponse());
    }

    public CreateHasDingtalkRobotResponse createHasDingtalkRobot(CreateHasDingtalkRobotRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasDingtalkRobotWithOptions(request, runtime);
    }

    public CreateHasInspectExectaskResponse createHasInspectExectaskWithOptions(CreateHasInspectExectaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasInspectExectask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasInspectExectaskResponse());
    }

    public CreateHasInspectExectaskResponse createHasInspectExectask(CreateHasInspectExectaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasInspectExectaskWithOptions(request, runtime);
    }

    public CreateHasInspectJavapluginResponse createHasInspectJavapluginWithOptions(CreateHasInspectJavapluginRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasInspectJavaplugin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasInspectJavapluginResponse());
    }

    public CreateHasInspectJavapluginResponse createHasInspectJavaplugin(CreateHasInspectJavapluginRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasInspectJavapluginWithOptions(request, runtime);
    }

    public CreateHasInspectMissionResponse createHasInspectMissionWithOptions(CreateHasInspectMissionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasInspectMission", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasInspectMissionResponse());
    }

    public CreateHasInspectMissionResponse createHasInspectMission(CreateHasInspectMissionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasInspectMissionWithOptions(request, runtime);
    }

    public CreateHasInspectParamResponse createHasInspectParamWithOptions(CreateHasInspectParamRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasInspectParam", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasInspectParamResponse());
    }

    public CreateHasInspectParamResponse createHasInspectParam(CreateHasInspectParamRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasInspectParamWithOptions(request, runtime);
    }

    public CreateHasInspectPodpluginResponse createHasInspectPodpluginWithOptions(CreateHasInspectPodpluginRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasInspectPodplugin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasInspectPodpluginResponse());
    }

    public CreateHasInspectPodpluginResponse createHasInspectPodplugin(CreateHasInspectPodpluginRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasInspectPodpluginWithOptions(request, runtime);
    }

    public CreateHasInspectProbpageResponse createHasInspectProbpageWithOptions(CreateHasInspectProbpageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasInspectProbpage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasInspectProbpageResponse());
    }

    public CreateHasInspectProbpageResponse createHasInspectProbpage(CreateHasInspectProbpageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasInspectProbpageWithOptions(request, runtime);
    }

    public CreateHasInspectPythonpluginResponse createHasInspectPythonpluginWithOptions(CreateHasInspectPythonpluginRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasInspectPythonplugin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasInspectPythonpluginResponse());
    }

    public CreateHasInspectPythonpluginResponse createHasInspectPythonplugin(CreateHasInspectPythonpluginRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasInspectPythonpluginWithOptions(request, runtime);
    }

    public CreateHasInspectRuleResponse createHasInspectRuleWithOptions(CreateHasInspectRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasInspectRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasInspectRuleResponse());
    }

    public CreateHasInspectRuleResponse createHasInspectRule(CreateHasInspectRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasInspectRuleWithOptions(request, runtime);
    }

    public CreateHasInspectShellpluginResponse createHasInspectShellpluginWithOptions(CreateHasInspectShellpluginRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasInspectShellplugin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasInspectShellpluginResponse());
    }

    public CreateHasInspectShellpluginResponse createHasInspectShellplugin(CreateHasInspectShellpluginRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasInspectShellpluginWithOptions(request, runtime);
    }

    public CreateHasRisksceneResponse createHasRisksceneWithOptions(CreateHasRisksceneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasRiskscene", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasRisksceneResponse());
    }

    public CreateHasRisksceneResponse createHasRiskscene(CreateHasRisksceneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasRisksceneWithOptions(request, runtime);
    }

    public CreateHasRisksceneOrderResponse createHasRisksceneOrderWithOptions(CreateHasRisksceneOrderRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateHasRisksceneOrder", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateHasRisksceneOrderResponse());
    }

    public CreateHasRisksceneOrderResponse createHasRisksceneOrder(CreateHasRisksceneOrderRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createHasRisksceneOrderWithOptions(request, runtime);
    }

    public CreateLDCCellResponse createLDCCellWithOptions(CreateLDCCellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLDCCell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLDCCellResponse());
    }

    public CreateLDCCellResponse createLDCCell(CreateLDCCellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLDCCellWithOptions(request, runtime);
    }

    public CreateLDCCellgroupResponse createLDCCellgroupWithOptions(CreateLDCCellgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLDCCellgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLDCCellgroupResponse());
    }

    public CreateLDCCellgroupResponse createLDCCellgroup(CreateLDCCellgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLDCCellgroupWithOptions(request, runtime);
    }

    public CreateLDCContainerServiceResponse createLDCContainerServiceWithOptions(CreateLDCContainerServiceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLDCContainerService", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLDCContainerServiceResponse());
    }

    public CreateLDCContainerServiceResponse createLDCContainerService(CreateLDCContainerServiceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLDCContainerServiceWithOptions(request, runtime);
    }

    public CreateLDCContainerServiceDeploymentResponse createLDCContainerServiceDeploymentWithOptions(CreateLDCContainerServiceDeploymentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLDCContainerServiceDeployment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLDCContainerServiceDeploymentResponse());
    }

    public CreateLDCContainerServiceDeploymentResponse createLDCContainerServiceDeployment(CreateLDCContainerServiceDeploymentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLDCContainerServiceDeploymentWithOptions(request, runtime);
    }

    public CreateLDCFederationConfigmapResponse createLDCFederationConfigmapWithOptions(CreateLDCFederationConfigmapRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLDCFederationConfigmap", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLDCFederationConfigmapResponse());
    }

    public CreateLDCFederationConfigmapResponse createLDCFederationConfigmap(CreateLDCFederationConfigmapRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLDCFederationConfigmapWithOptions(request, runtime);
    }

    public CreateLDCFederationImagepullsecretResponse createLDCFederationImagepullsecretWithOptions(CreateLDCFederationImagepullsecretRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLDCFederationImagepullsecret", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLDCFederationImagepullsecretResponse());
    }

    public CreateLDCFederationImagepullsecretResponse createLDCFederationImagepullsecret(CreateLDCFederationImagepullsecretRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLDCFederationImagepullsecretWithOptions(request, runtime);
    }

    public CreateLDCFederationNamespaceResponse createLDCFederationNamespaceWithOptions(CreateLDCFederationNamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLDCFederationNamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLDCFederationNamespaceResponse());
    }

    public CreateLDCFederationNamespaceResponse createLDCFederationNamespace(CreateLDCFederationNamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLDCFederationNamespaceWithOptions(request, runtime);
    }

    public CreateLDCFederationSecretResponse createLDCFederationSecretWithOptions(CreateLDCFederationSecretRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLDCFederationSecret", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLDCFederationSecretResponse());
    }

    public CreateLDCFederationSecretResponse createLDCFederationSecret(CreateLDCFederationSecretRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLDCFederationSecretWithOptions(request, runtime);
    }

    public CreateLDCFederationSpannerClusterResponse createLDCFederationSpannerClusterWithOptions(CreateLDCFederationSpannerClusterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLDCFederationSpannerCluster", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLDCFederationSpannerClusterResponse());
    }

    public CreateLDCFederationSpannerClusterResponse createLDCFederationSpannerCluster(CreateLDCFederationSpannerClusterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLDCFederationSpannerClusterWithOptions(request, runtime);
    }

    public CreateLDCFlowSiteResponse createLDCFlowSiteWithOptions(CreateLDCFlowSiteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLDCFlowSite", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLDCFlowSiteResponse());
    }

    public CreateLDCFlowSiteResponse createLDCFlowSite(CreateLDCFlowSiteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLDCFlowSiteWithOptions(request, runtime);
    }

    public CreateLDCReleaseplanResponse createLDCReleaseplanWithOptions(CreateLDCReleaseplanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLDCReleaseplan", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLDCReleaseplanResponse());
    }

    public CreateLDCReleaseplanResponse createLDCReleaseplan(CreateLDCReleaseplanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLDCReleaseplanWithOptions(request, runtime);
    }

    public CreateLDCUnifiedAccessInstanceResponse createLDCUnifiedAccessInstanceWithOptions(CreateLDCUnifiedAccessInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLDCUnifiedAccessInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLDCUnifiedAccessInstanceResponse());
    }

    public CreateLDCUnifiedAccessInstanceResponse createLDCUnifiedAccessInstance(CreateLDCUnifiedAccessInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLDCUnifiedAccessInstanceWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeApicreatereviewResponse createLinkeantcodeAntcodeApicreatereviewWithOptions(CreateLinkeantcodeAntcodeApicreatereviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeApicreatereview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeApicreatereviewResponse());
    }

    public CreateLinkeantcodeAntcodeApicreatereviewResponse createLinkeantcodeAntcodeApicreatereview(CreateLinkeantcodeAntcodeApicreatereviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeApicreatereviewWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeAuthenticatedgpgkeyResponse createLinkeantcodeAntcodeAuthenticatedgpgkeyWithOptions(CreateLinkeantcodeAntcodeAuthenticatedgpgkeyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeAuthenticatedgpgkey", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeAuthenticatedgpgkeyResponse());
    }

    public CreateLinkeantcodeAntcodeAuthenticatedgpgkeyResponse createLinkeantcodeAntcodeAuthenticatedgpgkey(CreateLinkeantcodeAntcodeAuthenticatedgpgkeyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeAuthenticatedgpgkeyWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeBroadcastmessageResponse createLinkeantcodeAntcodeBroadcastmessageWithOptions(CreateLinkeantcodeAntcodeBroadcastmessageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeBroadcastmessage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeBroadcastmessageResponse());
    }

    public CreateLinkeantcodeAntcodeBroadcastmessageResponse createLinkeantcodeAntcodeBroadcastmessage(CreateLinkeantcodeAntcodeBroadcastmessageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeBroadcastmessageWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeCreatenewfileinrepositoryResponse createLinkeantcodeAntcodeCreatenewfileinrepositoryWithOptions(CreateLinkeantcodeAntcodeCreatenewfileinrepositoryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeCreatenewfileinrepository", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeCreatenewfileinrepositoryResponse());
    }

    public CreateLinkeantcodeAntcodeCreatenewfileinrepositoryResponse createLinkeantcodeAntcodeCreatenewfileinrepository(CreateLinkeantcodeAntcodeCreatenewfileinrepositoryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeCreatenewfileinrepositoryWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeCreatenewgroupResponse createLinkeantcodeAntcodeCreatenewgroupWithOptions(CreateLinkeantcodeAntcodeCreatenewgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeCreatenewgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeCreatenewgroupResponse());
    }

    public CreateLinkeantcodeAntcodeCreatenewgroupResponse createLinkeantcodeAntcodeCreatenewgroup(CreateLinkeantcodeAntcodeCreatenewgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeCreatenewgroupWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeCreatepipelinetimingconfigResponse createLinkeantcodeAntcodeCreatepipelinetimingconfigWithOptions(CreateLinkeantcodeAntcodeCreatepipelinetimingconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeCreatepipelinetimingconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeCreatepipelinetimingconfigResponse());
    }

    public CreateLinkeantcodeAntcodeCreatepipelinetimingconfigResponse createLinkeantcodeAntcodeCreatepipelinetimingconfig(CreateLinkeantcodeAntcodeCreatepipelinetimingconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeCreatepipelinetimingconfigWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeCreateprojectbranchResponse createLinkeantcodeAntcodeCreateprojectbranchWithOptions(CreateLinkeantcodeAntcodeCreateprojectbranchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeCreateprojectbranch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeCreateprojectbranchResponse());
    }

    public CreateLinkeantcodeAntcodeCreateprojectbranchResponse createLinkeantcodeAntcodeCreateprojectbranch(CreateLinkeantcodeAntcodeCreateprojectbranchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeCreateprojectbranchWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeCreateprojectpullrequestResponse createLinkeantcodeAntcodeCreateprojectpullrequestWithOptions(CreateLinkeantcodeAntcodeCreateprojectpullrequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeCreateprojectpullrequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeCreateprojectpullrequestResponse());
    }

    public CreateLinkeantcodeAntcodeCreateprojectpullrequestResponse createLinkeantcodeAntcodeCreateprojectpullrequest(CreateLinkeantcodeAntcodeCreateprojectpullrequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeCreateprojectpullrequestWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeCreateprojectpullrequestnoteResponse createLinkeantcodeAntcodeCreateprojectpullrequestnoteWithOptions(CreateLinkeantcodeAntcodeCreateprojectpullrequestnoteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeCreateprojectpullrequestnote", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeCreateprojectpullrequestnoteResponse());
    }

    public CreateLinkeantcodeAntcodeCreateprojectpullrequestnoteResponse createLinkeantcodeAntcodeCreateprojectpullrequestnote(CreateLinkeantcodeAntcodeCreateprojectpullrequestnoteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeCreateprojectpullrequestnoteWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeCreateprojectvariableResponse createLinkeantcodeAntcodeCreateprojectvariableWithOptions(CreateLinkeantcodeAntcodeCreateprojectvariableRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeCreateprojectvariable", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeCreateprojectvariableResponse());
    }

    public CreateLinkeantcodeAntcodeCreateprojectvariableResponse createLinkeantcodeAntcodeCreateprojectvariable(CreateLinkeantcodeAntcodeCreateprojectvariableRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeCreateprojectvariableWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeCreatesanewlafgroupwithgivennameandcolorResponse createLinkeantcodeAntcodeCreatesanewlafgroupwithgivennameandcolorWithOptions(CreateLinkeantcodeAntcodeCreatesanewlafgroupwithgivennameandcolorRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeCreatesanewlafgroupwithgivennameandcolor", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeCreatesanewlafgroupwithgivennameandcolorResponse());
    }

    public CreateLinkeantcodeAntcodeCreatesanewlafgroupwithgivennameandcolorResponse createLinkeantcodeAntcodeCreatesanewlafgroupwithgivennameandcolor(CreateLinkeantcodeAntcodeCreatesanewlafgroupwithgivennameandcolorRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeCreatesanewlafgroupwithgivennameandcolorWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeGpgkeyResponse createLinkeantcodeAntcodeGpgkeyWithOptions(CreateLinkeantcodeAntcodeGpgkeyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeGpgkey", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeGpgkeyResponse());
    }

    public CreateLinkeantcodeAntcodeGpgkeyResponse createLinkeantcodeAntcodeGpgkey(CreateLinkeantcodeAntcodeGpgkeyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeGpgkeyWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeGrouplabelResponse createLinkeantcodeAntcodeGrouplabelWithOptions(CreateLinkeantcodeAntcodeGrouplabelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeGrouplabel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeGrouplabelResponse());
    }

    public CreateLinkeantcodeAntcodeGrouplabelResponse createLinkeantcodeAntcodeGrouplabel(CreateLinkeantcodeAntcodeGrouplabelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeGrouplabelWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeGroupsidservicesResponse createLinkeantcodeAntcodeGroupsidservicesWithOptions(CreateLinkeantcodeAntcodeGroupsidservicesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeGroupsidservices", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeGroupsidservicesResponse());
    }

    public CreateLinkeantcodeAntcodeGroupsidservicesResponse createLinkeantcodeAntcodeGroupsidservices(CreateLinkeantcodeAntcodeGroupsidservicesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeGroupsidservicesWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeLsifhoverResponse createLinkeantcodeAntcodeLsifhoverWithOptions(CreateLinkeantcodeAntcodeLsifhoverRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeLsifhover", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeLsifhoverResponse());
    }

    public CreateLinkeantcodeAntcodeLsifhoverResponse createLinkeantcodeAntcodeLsifhover(CreateLinkeantcodeAntcodeLsifhoverRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeLsifhoverWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeLsifreferencesResponse createLinkeantcodeAntcodeLsifreferencesWithOptions(CreateLinkeantcodeAntcodeLsifreferencesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeLsifreferences", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeLsifreferencesResponse());
    }

    public CreateLinkeantcodeAntcodeLsifreferencesResponse createLinkeantcodeAntcodeLsifreferences(CreateLinkeantcodeAntcodeLsifreferencesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeLsifreferencesWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeNamespacefeatureResponse createLinkeantcodeAntcodeNamespacefeatureWithOptions(CreateLinkeantcodeAntcodeNamespacefeatureRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeNamespacefeature", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeNamespacefeatureResponse());
    }

    public CreateLinkeantcodeAntcodeNamespacefeatureResponse createLinkeantcodeAntcodeNamespacefeature(CreateLinkeantcodeAntcodeNamespacefeatureRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeNamespacefeatureWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeNamespacesidservicesResponse createLinkeantcodeAntcodeNamespacesidservicesWithOptions(CreateLinkeantcodeAntcodeNamespacesidservicesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeNamespacesidservices", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeNamespacesidservicesResponse());
    }

    public CreateLinkeantcodeAntcodeNamespacesidservicesResponse createLinkeantcodeAntcodeNamespacesidservices(CreateLinkeantcodeAntcodeNamespacesidservicesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeNamespacesidservicesWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeNewlabelforgivenrepositorywithgivennameandcolorResponse createLinkeantcodeAntcodeNewlabelforgivenrepositorywithgivennameandcolorWithOptions(CreateLinkeantcodeAntcodeNewlabelforgivenrepositorywithgivennameandcolorRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeNewlabelforgivenrepositorywithgivennameandcolor", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeNewlabelforgivenrepositorywithgivennameandcolorResponse());
    }

    public CreateLinkeantcodeAntcodeNewlabelforgivenrepositorywithgivennameandcolorResponse createLinkeantcodeAntcodeNewlabelforgivenrepositorywithgivennameandcolor(CreateLinkeantcodeAntcodeNewlabelforgivenrepositorywithgivennameandcolorRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeNewlabelforgivenrepositorywithgivennameandcolorWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodePrissuedetailResponse createLinkeantcodeAntcodePrissuedetailWithOptions(CreateLinkeantcodeAntcodePrissuedetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodePrissuedetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodePrissuedetailResponse());
    }

    public CreateLinkeantcodeAntcodePrissuedetailResponse createLinkeantcodeAntcodePrissuedetail(CreateLinkeantcodeAntcodePrissuedetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodePrissuedetailWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeProjectfeatureResponse createLinkeantcodeAntcodeProjectfeatureWithOptions(CreateLinkeantcodeAntcodeProjectfeatureRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeProjectfeature", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeProjectfeatureResponse());
    }

    public CreateLinkeantcodeAntcodeProjectfeatureResponse createLinkeantcodeAntcodeProjectfeature(CreateLinkeantcodeAntcodeProjectfeatureRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeProjectfeatureWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeProjectreviewtaskResponse createLinkeantcodeAntcodeProjectreviewtaskWithOptions(CreateLinkeantcodeAntcodeProjectreviewtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeProjectreviewtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeProjectreviewtaskResponse());
    }

    public CreateLinkeantcodeAntcodeProjectreviewtaskResponse createLinkeantcodeAntcodeProjectreviewtask(CreateLinkeantcodeAntcodeProjectreviewtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeProjectreviewtaskWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeProjectsidrepositoryfilesResponse createLinkeantcodeAntcodeProjectsidrepositoryfilesWithOptions(CreateLinkeantcodeAntcodeProjectsidrepositoryfilesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeProjectsidrepositoryfiles", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeProjectsidrepositoryfilesResponse());
    }

    public CreateLinkeantcodeAntcodeProjectsidrepositoryfilesResponse createLinkeantcodeAntcodeProjectsidrepositoryfiles(CreateLinkeantcodeAntcodeProjectsidrepositoryfilesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeProjectsidrepositoryfilesWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeProjectsidrepositoryfilesfilepathResponse createLinkeantcodeAntcodeProjectsidrepositoryfilesfilepathWithOptions(CreateLinkeantcodeAntcodeProjectsidrepositoryfilesfilepathRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeProjectsidrepositoryfilesfilepath", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeProjectsidrepositoryfilesfilepathResponse());
    }

    public CreateLinkeantcodeAntcodeProjectsidrepositoryfilesfilepathResponse createLinkeantcodeAntcodeProjectsidrepositoryfilesfilepath(CreateLinkeantcodeAntcodeProjectsidrepositoryfilesfilepathRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeProjectsidrepositoryfilesfilepathWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeProjectslabelResponse createLinkeantcodeAntcodeProjectslabelWithOptions(CreateLinkeantcodeAntcodeProjectslabelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeProjectslabel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeProjectslabelResponse());
    }

    public CreateLinkeantcodeAntcodeProjectslabelResponse createLinkeantcodeAntcodeProjectslabel(CreateLinkeantcodeAntcodeProjectslabelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeProjectslabelWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeProjectsprojectidchecksuitesResponse createLinkeantcodeAntcodeProjectsprojectidchecksuitesWithOptions(CreateLinkeantcodeAntcodeProjectsprojectidchecksuitesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeProjectsprojectidchecksuites", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeProjectsprojectidchecksuitesResponse());
    }

    public CreateLinkeantcodeAntcodeProjectsprojectidchecksuitesResponse createLinkeantcodeAntcodeProjectsprojectidchecksuites(CreateLinkeantcodeAntcodeProjectsprojectidchecksuitesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeProjectsprojectidchecksuitesWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeProjecttagResponse createLinkeantcodeAntcodeProjecttagWithOptions(CreateLinkeantcodeAntcodeProjecttagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeProjecttag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeProjecttagResponse());
    }

    public CreateLinkeantcodeAntcodeProjecttagResponse createLinkeantcodeAntcodeProjecttag(CreateLinkeantcodeAntcodeProjecttagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeProjecttagWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodePullrequestissueResponse createLinkeantcodeAntcodePullrequestissueWithOptions(CreateLinkeantcodeAntcodePullrequestissueRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodePullrequestissue", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodePullrequestissueResponse());
    }

    public CreateLinkeantcodeAntcodePullrequestissueResponse createLinkeantcodeAntcodePullrequestissue(CreateLinkeantcodeAntcodePullrequestissueRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodePullrequestissueWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeRecoverytaskResponse createLinkeantcodeAntcodeRecoverytaskWithOptions(CreateLinkeantcodeAntcodeRecoverytaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeRecoverytask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeRecoverytaskResponse());
    }

    public CreateLinkeantcodeAntcodeRecoverytaskResponse createLinkeantcodeAntcodeRecoverytask(CreateLinkeantcodeAntcodeRecoverytaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeRecoverytaskWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeSearchmonitorResponse createLinkeantcodeAntcodeSearchmonitorWithOptions(CreateLinkeantcodeAntcodeSearchmonitorRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeSearchmonitor", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeSearchmonitorResponse());
    }

    public CreateLinkeantcodeAntcodeSearchmonitorResponse createLinkeantcodeAntcodeSearchmonitor(CreateLinkeantcodeAntcodeSearchmonitorRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeSearchmonitorWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeSnippetnoteResponse createLinkeantcodeAntcodeSnippetnoteWithOptions(CreateLinkeantcodeAntcodeSnippetnoteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeSnippetnote", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeSnippetnoteResponse());
    }

    public CreateLinkeantcodeAntcodeSnippetnoteResponse createLinkeantcodeAntcodeSnippetnote(CreateLinkeantcodeAntcodeSnippetnoteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeSnippetnoteWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeTenantpusheventsrecoveriesResponse createLinkeantcodeAntcodeTenantpusheventsrecoveriesWithOptions(CreateLinkeantcodeAntcodeTenantpusheventsrecoveriesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeTenantpusheventsrecoveries", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeTenantpusheventsrecoveriesResponse());
    }

    public CreateLinkeantcodeAntcodeTenantpusheventsrecoveriesResponse createLinkeantcodeAntcodeTenantpusheventsrecoveries(CreateLinkeantcodeAntcodeTenantpusheventsrecoveriesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeTenantpusheventsrecoveriesWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeTenantrecoverytaskResponse createLinkeantcodeAntcodeTenantrecoverytaskWithOptions(CreateLinkeantcodeAntcodeTenantrecoverytaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeTenantrecoverytask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeTenantrecoverytaskResponse());
    }

    public CreateLinkeantcodeAntcodeTenantrecoverytaskResponse createLinkeantcodeAntcodeTenantrecoverytask(CreateLinkeantcodeAntcodeTenantrecoverytaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeTenantrecoverytaskWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeTenantserviceResponse createLinkeantcodeAntcodeTenantserviceWithOptions(CreateLinkeantcodeAntcodeTenantserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeTenantservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeTenantserviceResponse());
    }

    public CreateLinkeantcodeAntcodeTenantserviceResponse createLinkeantcodeAntcodeTenantservice(CreateLinkeantcodeAntcodeTenantserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeTenantserviceWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeUserfeatureResponse createLinkeantcodeAntcodeUserfeatureWithOptions(CreateLinkeantcodeAntcodeUserfeatureRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeUserfeature", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeUserfeatureResponse());
    }

    public CreateLinkeantcodeAntcodeUserfeatureResponse createLinkeantcodeAntcodeUserfeature(CreateLinkeantcodeAntcodeUserfeatureRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeUserfeatureWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeUsergitoperateauthResponse createLinkeantcodeAntcodeUsergitoperateauthWithOptions(CreateLinkeantcodeAntcodeUsergitoperateauthRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeUsergitoperateauth", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeUsergitoperateauthResponse());
    }

    public CreateLinkeantcodeAntcodeUsergitoperateauthResponse createLinkeantcodeAntcodeUsergitoperateauth(CreateLinkeantcodeAntcodeUsergitoperateauthRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeUsergitoperateauthWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeUserkeysResponse createLinkeantcodeAntcodeUserkeysWithOptions(CreateLinkeantcodeAntcodeUserkeysRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeUserkeys", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeUserkeysResponse());
    }

    public CreateLinkeantcodeAntcodeUserkeysResponse createLinkeantcodeAntcodeUserkeys(CreateLinkeantcodeAntcodeUserkeysRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeUserkeysWithOptions(request, runtime);
    }

    public CreateLinkeantcodeAntcodeUsersResponse createLinkeantcodeAntcodeUsersWithOptions(CreateLinkeantcodeAntcodeUsersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeantcodeAntcodeUsers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeantcodeAntcodeUsersResponse());
    }

    public CreateLinkeantcodeAntcodeUsersResponse createLinkeantcodeAntcodeUsers(CreateLinkeantcodeAntcodeUsersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeantcodeAntcodeUsersWithOptions(request, runtime);
    }

    public CreateLinkeBahamutAdminiterationtemplateResponse createLinkeBahamutAdminiterationtemplateWithOptions(CreateLinkeBahamutAdminiterationtemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutAdminiterationtemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutAdminiterationtemplateResponse());
    }

    public CreateLinkeBahamutAdminiterationtemplateResponse createLinkeBahamutAdminiterationtemplate(CreateLinkeBahamutAdminiterationtemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutAdminiterationtemplateWithOptions(request, runtime);
    }

    public CreateLinkeBahamutAppcreateorimporttaskResponse createLinkeBahamutAppcreateorimporttaskWithOptions(CreateLinkeBahamutAppcreateorimporttaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutAppcreateorimporttask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutAppcreateorimporttaskResponse());
    }

    public CreateLinkeBahamutAppcreateorimporttaskResponse createLinkeBahamutAppcreateorimporttask(CreateLinkeBahamutAppcreateorimporttaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutAppcreateorimporttaskWithOptions(request, runtime);
    }

    public CreateLinkeBahamutAppcreateorimporttaskabortResponse createLinkeBahamutAppcreateorimporttaskabortWithOptions(CreateLinkeBahamutAppcreateorimporttaskabortRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutAppcreateorimporttaskabort", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutAppcreateorimporttaskabortResponse());
    }

    public CreateLinkeBahamutAppcreateorimporttaskabortResponse createLinkeBahamutAppcreateorimporttaskabort(CreateLinkeBahamutAppcreateorimporttaskabortRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutAppcreateorimporttaskabortWithOptions(request, runtime);
    }

    public CreateLinkeBahamutAppcreaterepoResponse createLinkeBahamutAppcreaterepoWithOptions(CreateLinkeBahamutAppcreaterepoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutAppcreaterepo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutAppcreaterepoResponse());
    }

    public CreateLinkeBahamutAppcreaterepoResponse createLinkeBahamutAppcreaterepo(CreateLinkeBahamutAppcreaterepoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutAppcreaterepoWithOptions(request, runtime);
    }

    public CreateLinkeBahamutAppgroupResponse createLinkeBahamutAppgroupWithOptions(CreateLinkeBahamutAppgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutAppgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutAppgroupResponse());
    }

    public CreateLinkeBahamutAppgroupResponse createLinkeBahamutAppgroup(CreateLinkeBahamutAppgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutAppgroupWithOptions(request, runtime);
    }

    public CreateLinkeBahamutAppofflinecreateofflineappResponse createLinkeBahamutAppofflinecreateofflineappWithOptions(CreateLinkeBahamutAppofflinecreateofflineappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutAppofflinecreateofflineapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutAppofflinecreateofflineappResponse());
    }

    public CreateLinkeBahamutAppofflinecreateofflineappResponse createLinkeBahamutAppofflinecreateofflineapp(CreateLinkeBahamutAppofflinecreateofflineappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutAppofflinecreateofflineappWithOptions(request, runtime);
    }

    public CreateLinkeBahamutCodequalitycheckandapproveResponse createLinkeBahamutCodequalitycheckandapproveWithOptions(CreateLinkeBahamutCodequalitycheckandapproveRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutCodequalitycheckandapprove", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutCodequalitycheckandapproveResponse());
    }

    public CreateLinkeBahamutCodequalitycheckandapproveResponse createLinkeBahamutCodequalitycheckandapprove(CreateLinkeBahamutCodequalitycheckandapproveRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutCodequalitycheckandapproveWithOptions(request, runtime);
    }

    public CreateLinkeBahamutCodequalityflowtaskResponse createLinkeBahamutCodequalityflowtaskWithOptions(CreateLinkeBahamutCodequalityflowtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutCodequalityflowtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutCodequalityflowtaskResponse());
    }

    public CreateLinkeBahamutCodequalityflowtaskResponse createLinkeBahamutCodequalityflowtask(CreateLinkeBahamutCodequalityflowtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutCodequalityflowtaskWithOptions(request, runtime);
    }

    public CreateLinkeBahamutCommonuserResponse createLinkeBahamutCommonuserWithOptions(CreateLinkeBahamutCommonuserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutCommonuser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutCommonuserResponse());
    }

    public CreateLinkeBahamutCommonuserResponse createLinkeBahamutCommonuser(CreateLinkeBahamutCommonuserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutCommonuserWithOptions(request, runtime);
    }

    public CreateLinkeBahamutCurrentuserswitchResponse createLinkeBahamutCurrentuserswitchWithOptions(CreateLinkeBahamutCurrentuserswitchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutCurrentuserswitch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutCurrentuserswitchResponse());
    }

    public CreateLinkeBahamutCurrentuserswitchResponse createLinkeBahamutCurrentuserswitch(CreateLinkeBahamutCurrentuserswitchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutCurrentuserswitchWithOptions(request, runtime);
    }

    public CreateLinkeBahamutCustomapprovaltaskResponse createLinkeBahamutCustomapprovaltaskWithOptions(CreateLinkeBahamutCustomapprovaltaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutCustomapprovaltask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutCustomapprovaltaskResponse());
    }

    public CreateLinkeBahamutCustomapprovaltaskResponse createLinkeBahamutCustomapprovaltask(CreateLinkeBahamutCustomapprovaltaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutCustomapprovaltaskWithOptions(request, runtime);
    }

    public CreateLinkeBahamutCustomflowtaskResponse createLinkeBahamutCustomflowtaskWithOptions(CreateLinkeBahamutCustomflowtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutCustomflowtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutCustomflowtaskResponse());
    }

    public CreateLinkeBahamutCustomflowtaskResponse createLinkeBahamutCustomflowtask(CreateLinkeBahamutCustomflowtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutCustomflowtaskWithOptions(request, runtime);
    }

    public CreateLinkeBahamutFlowtaskResponse createLinkeBahamutFlowtaskWithOptions(CreateLinkeBahamutFlowtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutFlowtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutFlowtaskResponse());
    }

    public CreateLinkeBahamutFlowtaskResponse createLinkeBahamutFlowtask(CreateLinkeBahamutFlowtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutFlowtaskWithOptions(request, runtime);
    }

    public CreateLinkeBahamutIterationsdocreateResponse createLinkeBahamutIterationsdocreateWithOptions(CreateLinkeBahamutIterationsdocreateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutIterationsdocreate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutIterationsdocreateResponse());
    }

    public CreateLinkeBahamutIterationsdocreateResponse createLinkeBahamutIterationsdocreate(CreateLinkeBahamutIterationsdocreateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutIterationsdocreateWithOptions(request, runtime);
    }

    public CreateLinkeBahamutReleaseResponse createLinkeBahamutReleaseWithOptions(CreateLinkeBahamutReleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutRelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutReleaseResponse());
    }

    public CreateLinkeBahamutReleaseResponse createLinkeBahamutRelease(CreateLinkeBahamutReleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutReleaseWithOptions(request, runtime);
    }

    public CreateLinkeBahamutStageflowtaskResponse createLinkeBahamutStageflowtaskWithOptions(CreateLinkeBahamutStageflowtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutStageflowtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutStageflowtaskResponse());
    }

    public CreateLinkeBahamutStageflowtaskResponse createLinkeBahamutStageflowtask(CreateLinkeBahamutStageflowtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutStageflowtaskWithOptions(request, runtime);
    }

    public CreateLinkeBahamutStagetaskResponse createLinkeBahamutStagetaskWithOptions(CreateLinkeBahamutStagetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutStagetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutStagetaskResponse());
    }

    public CreateLinkeBahamutStagetaskResponse createLinkeBahamutStagetask(CreateLinkeBahamutStagetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutStagetaskWithOptions(request, runtime);
    }

    public CreateLinkeBahamutSwitchconfigResponse createLinkeBahamutSwitchconfigWithOptions(CreateLinkeBahamutSwitchconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutSwitchconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutSwitchconfigResponse());
    }

    public CreateLinkeBahamutSwitchconfigResponse createLinkeBahamutSwitchconfig(CreateLinkeBahamutSwitchconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutSwitchconfigWithOptions(request, runtime);
    }

    public CreateLinkeBahamutTaskResponse createLinkeBahamutTaskWithOptions(CreateLinkeBahamutTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutTaskResponse());
    }

    public CreateLinkeBahamutTaskResponse createLinkeBahamutTask(CreateLinkeBahamutTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutTaskWithOptions(request, runtime);
    }

    public CreateLinkeBahamutTaskscreatecodequalitycheckandapproveResponse createLinkeBahamutTaskscreatecodequalitycheckandapproveWithOptions(CreateLinkeBahamutTaskscreatecodequalitycheckandapproveRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutTaskscreatecodequalitycheckandapprove", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutTaskscreatecodequalitycheckandapproveResponse());
    }

    public CreateLinkeBahamutTaskscreatecodequalitycheckandapproveResponse createLinkeBahamutTaskscreatecodequalitycheckandapprove(CreateLinkeBahamutTaskscreatecodequalitycheckandapproveRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutTaskscreatecodequalitycheckandapproveWithOptions(request, runtime);
    }

    public CreateLinkeBahamutUsermenucommonResponse createLinkeBahamutUsermenucommonWithOptions(CreateLinkeBahamutUsermenucommonRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutUsermenucommon", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutUsermenucommonResponse());
    }

    public CreateLinkeBahamutUsermenucommonResponse createLinkeBahamutUsermenucommon(CreateLinkeBahamutUsermenucommonRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutUsermenucommonWithOptions(request, runtime);
    }

    public CreateLinkeBahamutUsertokenResponse createLinkeBahamutUsertokenWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutUsertoken", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutUsertokenResponse());
    }

    public CreateLinkeBahamutUsertokenResponse createLinkeBahamutUsertoken() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutUsertokenWithOptions(runtime);
    }

    public CreateLinkeBahamutVcscommitcommentResponse createLinkeBahamutVcscommitcommentWithOptions(CreateLinkeBahamutVcscommitcommentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutVcscommitcomment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutVcscommitcommentResponse());
    }

    public CreateLinkeBahamutVcscommitcommentResponse createLinkeBahamutVcscommitcomment(CreateLinkeBahamutVcscommitcommentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutVcscommitcommentWithOptions(request, runtime);
    }

    public CreateLinkeBahamutVcsgroupResponse createLinkeBahamutVcsgroupWithOptions(CreateLinkeBahamutVcsgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutVcsgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutVcsgroupResponse());
    }

    public CreateLinkeBahamutVcsgroupResponse createLinkeBahamutVcsgroup(CreateLinkeBahamutVcsgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutVcsgroupWithOptions(request, runtime);
    }

    public CreateLinkeBahamutVcsmergerequestResponse createLinkeBahamutVcsmergerequestWithOptions(CreateLinkeBahamutVcsmergerequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutVcsmergerequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutVcsmergerequestResponse());
    }

    public CreateLinkeBahamutVcsmergerequestResponse createLinkeBahamutVcsmergerequest(CreateLinkeBahamutVcsmergerequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutVcsmergerequestWithOptions(request, runtime);
    }

    public CreateLinkeBahamutVcsmrcommentResponse createLinkeBahamutVcsmrcommentWithOptions(CreateLinkeBahamutVcsmrcommentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutVcsmrcomment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutVcsmrcommentResponse());
    }

    public CreateLinkeBahamutVcsmrcommentResponse createLinkeBahamutVcsmrcomment(CreateLinkeBahamutVcsmrcommentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutVcsmrcommentWithOptions(request, runtime);
    }

    public CreateLinkeBahamutWebapicreatedeploymentunitResponse createLinkeBahamutWebapicreatedeploymentunitWithOptions(CreateLinkeBahamutWebapicreatedeploymentunitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeBahamutWebapicreatedeploymentunit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeBahamutWebapicreatedeploymentunitResponse());
    }

    public CreateLinkeBahamutWebapicreatedeploymentunitResponse createLinkeBahamutWebapicreatedeploymentunit(CreateLinkeBahamutWebapicreatedeploymentunitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeBahamutWebapicreatedeploymentunitWithOptions(request, runtime);
    }

    public CreateLinkedeploycoreDeploycoreProfileResponse createLinkedeploycoreDeploycoreProfileWithOptions(CreateLinkedeploycoreDeploycoreProfileRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkedeploycoreDeploycoreProfile", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkedeploycoreDeploycoreProfileResponse());
    }

    public CreateLinkedeploycoreDeploycoreProfileResponse createLinkedeploycoreDeploycoreProfile(CreateLinkedeploycoreDeploycoreProfileRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkedeploycoreDeploycoreProfileWithOptions(request, runtime);
    }

    public CreateLinkefabricFabricOperationrecordResponse createLinkefabricFabricOperationrecordWithOptions(CreateLinkefabricFabricOperationrecordRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkefabricFabricOperationrecord", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkefabricFabricOperationrecordResponse());
    }

    public CreateLinkefabricFabricOperationrecordResponse createLinkefabricFabricOperationrecord(CreateLinkefabricFabricOperationrecordRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkefabricFabricOperationrecordWithOptions(request, runtime);
    }

    public CreateLinkelinkflowLinkflowAttachmentsResponse createLinkelinkflowLinkflowAttachmentsWithOptions(CreateLinkelinkflowLinkflowAttachmentsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkelinkflowLinkflowAttachments", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkelinkflowLinkflowAttachmentsResponse());
    }

    public CreateLinkelinkflowLinkflowAttachmentsResponse createLinkelinkflowLinkflowAttachments(CreateLinkelinkflowLinkflowAttachmentsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkelinkflowLinkflowAttachmentsWithOptions(request, runtime);
    }

    public CreateLinkeLinklogAccessResponse createLinkeLinklogAccessWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinklogAccess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinklogAccessResponse());
    }

    public CreateLinkeLinklogAccessResponse createLinkeLinklogAccess() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinklogAccessWithOptions(runtime);
    }

    public CreateLinkeLinklogKnowledgeResponse createLinkeLinklogKnowledgeWithOptions(CreateLinkeLinklogKnowledgeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinklogKnowledge", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinklogKnowledgeResponse());
    }

    public CreateLinkeLinklogKnowledgeResponse createLinkeLinklogKnowledge(CreateLinkeLinklogKnowledgeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinklogKnowledgeWithOptions(request, runtime);
    }

    public CreateLinkeLinklogStoreResponse createLinkeLinklogStoreWithOptions(CreateLinkeLinklogStoreRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinklogStore", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinklogStoreResponse());
    }

    public CreateLinkeLinklogStoreResponse createLinkeLinklogStore(CreateLinkeLinklogStoreRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinklogStoreWithOptions(request, runtime);
    }

    public CreateLinkeLinktAdmincustomfieldResponse createLinkeLinktAdmincustomfieldWithOptions(CreateLinkeLinktAdmincustomfieldRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktAdmincustomfield", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktAdmincustomfieldResponse());
    }

    public CreateLinkeLinktAdmincustomfieldResponse createLinkeLinktAdmincustomfield(CreateLinkeLinktAdmincustomfieldRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktAdmincustomfieldWithOptions(request, runtime);
    }

    public CreateLinkeLinktAdmintemplateResponse createLinkeLinktAdmintemplateWithOptions(CreateLinkeLinktAdmintemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktAdmintemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktAdmintemplateResponse());
    }

    public CreateLinkeLinktAdmintemplateResponse createLinkeLinktAdmintemplate(CreateLinkeLinktAdmintemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktAdmintemplateWithOptions(request, runtime);
    }

    public CreateLinkeLinktCustomfieldResponse createLinkeLinktCustomfieldWithOptions(CreateLinkeLinktCustomfieldRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktCustomfield", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktCustomfieldResponse());
    }

    public CreateLinkeLinktCustomfieldResponse createLinkeLinktCustomfield(CreateLinkeLinktCustomfieldRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktCustomfieldWithOptions(request, runtime);
    }

    public CreateLinkeLinktImporttemplateResponse createLinkeLinktImporttemplateWithOptions(CreateLinkeLinktImporttemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktImporttemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktImporttemplateResponse());
    }

    public CreateLinkeLinktImporttemplateResponse createLinkeLinktImporttemplate(CreateLinkeLinktImporttemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktImporttemplateWithOptions(request, runtime);
    }

    public CreateLinkeLinktIterationmeetingResponse createLinkeLinktIterationmeetingWithOptions(CreateLinkeLinktIterationmeetingRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktIterationmeeting", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktIterationmeetingResponse());
    }

    public CreateLinkeLinktIterationmeetingResponse createLinkeLinktIterationmeeting(CreateLinkeLinktIterationmeetingRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktIterationmeetingWithOptions(request, runtime);
    }

    public CreateLinkeLinktMilestoneResponse createLinkeLinktMilestoneWithOptions(CreateLinkeLinktMilestoneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktMilestone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktMilestoneResponse());
    }

    public CreateLinkeLinktMilestoneResponse createLinkeLinktMilestone(CreateLinkeLinktMilestoneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktMilestoneWithOptions(request, runtime);
    }

    public CreateLinkeLinktModuleResponse createLinkeLinktModuleWithOptions(CreateLinkeLinktModuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktModule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktModuleResponse());
    }

    public CreateLinkeLinktModuleResponse createLinkeLinktModule(CreateLinkeLinktModuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktModuleWithOptions(request, runtime);
    }

    public CreateLinkeLinktProjectResponse createLinkeLinktProjectWithOptions(CreateLinkeLinktProjectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktProject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktProjectResponse());
    }

    public CreateLinkeLinktProjectResponse createLinkeLinktProject(CreateLinkeLinktProjectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktProjectWithOptions(request, runtime);
    }

    public CreateLinkeLinktProjectroleResponse createLinkeLinktProjectroleWithOptions(CreateLinkeLinktProjectroleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktProjectrole", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktProjectroleResponse());
    }

    public CreateLinkeLinktProjectroleResponse createLinkeLinktProjectrole(CreateLinkeLinktProjectroleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktProjectroleWithOptions(request, runtime);
    }

    public CreateLinkeLinktRiskResponse createLinkeLinktRiskWithOptions(CreateLinkeLinktRiskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktRisk", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktRiskResponse());
    }

    public CreateLinkeLinktRiskResponse createLinkeLinktRisk(CreateLinkeLinktRiskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktRiskWithOptions(request, runtime);
    }

    public CreateLinkeLinktStatusResponse createLinkeLinktStatusWithOptions(CreateLinkeLinktStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktStatusResponse());
    }

    public CreateLinkeLinktStatusResponse createLinkeLinktStatus(CreateLinkeLinktStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktStatusWithOptions(request, runtime);
    }

    public CreateLinkeLinktTagResponse createLinkeLinktTagWithOptions(CreateLinkeLinktTagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktTag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktTagResponse());
    }

    public CreateLinkeLinktTagResponse createLinkeLinktTag(CreateLinkeLinktTagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktTagWithOptions(request, runtime);
    }

    public CreateLinkeLinktTemplateResponse createLinkeLinktTemplateWithOptions(CreateLinkeLinktTemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktTemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktTemplateResponse());
    }

    public CreateLinkeLinktTemplateResponse createLinkeLinktTemplate(CreateLinkeLinktTemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktTemplateWithOptions(request, runtime);
    }

    public CreateLinkeLinktWorkitemResponse createLinkeLinktWorkitemWithOptions(CreateLinkeLinktWorkitemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktWorkitem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktWorkitemResponse());
    }

    public CreateLinkeLinktWorkitemResponse createLinkeLinktWorkitem(CreateLinkeLinktWorkitemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktWorkitemWithOptions(request, runtime);
    }

    public CreateLinkeLinktWorkitemreviewResponse createLinkeLinktWorkitemreviewWithOptions(CreateLinkeLinktWorkitemreviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateLinkeLinktWorkitemreview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateLinkeLinktWorkitemreviewResponse());
    }

    public CreateLinkeLinktWorkitemreviewResponse createLinkeLinktWorkitemreview(CreateLinkeLinktWorkitemreviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createLinkeLinktWorkitemreviewWithOptions(request, runtime);
    }

    public CreateMqSofamqGroupResponse createMqSofamqGroupWithOptions(CreateMqSofamqGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateMqSofamqGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateMqSofamqGroupResponse());
    }

    public CreateMqSofamqGroupResponse createMqSofamqGroup(CreateMqSofamqGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createMqSofamqGroupWithOptions(request, runtime);
    }

    public CreateMqSofamqRouterResponse createMqSofamqRouterWithOptions(CreateMqSofamqRouterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateMqSofamqRouter", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateMqSofamqRouterResponse());
    }

    public CreateMqSofamqRouterResponse createMqSofamqRouter(CreateMqSofamqRouterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createMqSofamqRouterWithOptions(request, runtime);
    }

    public CreateMqSofamqTopicResponse createMqSofamqTopicWithOptions(CreateMqSofamqTopicRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateMqSofamqTopic", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateMqSofamqTopicResponse());
    }

    public CreateMqSofamqTopicResponse createMqSofamqTopic(CreateMqSofamqTopicRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createMqSofamqTopicWithOptions(request, runtime);
    }

    public CreateMqSofamqWarnResponse createMqSofamqWarnWithOptions(CreateMqSofamqWarnRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateMqSofamqWarn", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateMqSofamqWarnResponse());
    }

    public CreateMqSofamqWarnResponse createMqSofamqWarn(CreateMqSofamqWarnRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createMqSofamqWarnWithOptions(request, runtime);
    }

    public CreateODPDbnodesResponse createODPDbnodesWithOptions(CreateODPDbnodesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateODPDbnodes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateODPDbnodesResponse());
    }

    public CreateODPDbnodesResponse createODPDbnodes(CreateODPDbnodesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createODPDbnodesWithOptions(request, runtime);
    }

    public CreateODPInstancesUsersResponse createODPInstancesUsersWithOptions(CreateODPInstancesUsersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateODPInstancesUsers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateODPInstancesUsersResponse());
    }

    public CreateODPInstancesUsersResponse createODPInstancesUsers(CreateODPInstancesUsersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createODPInstancesUsersWithOptions(request, runtime);
    }

    public CreateODPJobsSqlbatchResponse createODPJobsSqlbatchWithOptions(CreateODPJobsSqlbatchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateODPJobsSqlbatch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateODPJobsSqlbatchResponse());
    }

    public CreateODPJobsSqlbatchResponse createODPJobsSqlbatch(CreateODPJobsSqlbatchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createODPJobsSqlbatchWithOptions(request, runtime);
    }

    public CreateODPSchemasResponse createODPSchemasWithOptions(CreateODPSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateODPSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateODPSchemasResponse());
    }

    public CreateODPSchemasResponse createODPSchemas(CreateODPSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createODPSchemasWithOptions(request, runtime);
    }

    public CreateODPSchemasInterceptorsResponse createODPSchemasInterceptorsWithOptions(CreateODPSchemasInterceptorsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateODPSchemasInterceptors", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateODPSchemasInterceptorsResponse());
    }

    public CreateODPSchemasInterceptorsResponse createODPSchemasInterceptors(CreateODPSchemasInterceptorsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createODPSchemasInterceptorsWithOptions(request, runtime);
    }

    public CreateODPSchemasLogicTablesResponse createODPSchemasLogicTablesWithOptions(CreateODPSchemasLogicTablesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateODPSchemasLogicTables", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateODPSchemasLogicTablesResponse());
    }

    public CreateODPSchemasLogicTablesResponse createODPSchemasLogicTables(CreateODPSchemasLogicTablesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createODPSchemasLogicTablesWithOptions(request, runtime);
    }

    public CreateTSTopologyResponse createTSTopologyWithOptions(CreateTSTopologyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateTSTopology", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateTSTopologyResponse());
    }

    public CreateTSTopologyResponse createTSTopology(CreateTSTopologyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createTSTopologyWithOptions(request, runtime);
    }

    public CreateWorkspaceResponse createWorkspaceWithOptions(CreateWorkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("CreateWorkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new CreateWorkspaceResponse());
    }

    public CreateWorkspaceResponse createWorkspace(CreateWorkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.createWorkspaceWithOptions(request, runtime);
    }

    public DeactiveTSJobItemResponse deactiveTSJobItemWithOptions(DeactiveTSJobItemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeactiveTSJobItem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeactiveTSJobItemResponse());
    }

    public DeactiveTSJobItemResponse deactiveTSJobItem(DeactiveTSJobItemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deactiveTSJobItemWithOptions(request, runtime);
    }

    public DeleteAKSBuildConfigResponse deleteAKSBuildConfigWithOptions(DeleteAKSBuildConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteAKSBuildConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteAKSBuildConfigResponse());
    }

    public DeleteAKSBuildConfigResponse deleteAKSBuildConfig(DeleteAKSBuildConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteAKSBuildConfigWithOptions(request, runtime);
    }

    public DeleteAKSClusterMeshResponse deleteAKSClusterMeshWithOptions(DeleteAKSClusterMeshRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteAKSClusterMesh", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteAKSClusterMeshResponse());
    }

    public DeleteAKSClusterMeshResponse deleteAKSClusterMesh(DeleteAKSClusterMeshRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteAKSClusterMeshWithOptions(request, runtime);
    }

    public DeleteAKSClusterNamespaceResponse deleteAKSClusterNamespaceWithOptions(DeleteAKSClusterNamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteAKSClusterNamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteAKSClusterNamespaceResponse());
    }

    public DeleteAKSClusterNamespaceResponse deleteAKSClusterNamespace(DeleteAKSClusterNamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteAKSClusterNamespaceWithOptions(request, runtime);
    }

    public DeleteAKSConfigmapResponse deleteAKSConfigmapWithOptions(DeleteAKSConfigmapRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteAKSConfigmap", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteAKSConfigmapResponse());
    }

    public DeleteAKSConfigmapResponse deleteAKSConfigmap(DeleteAKSConfigmapRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteAKSConfigmapWithOptions(request, runtime);
    }

    public DeleteAKSContainerservicesResponse deleteAKSContainerservicesWithOptions(DeleteAKSContainerservicesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteAKSContainerservices", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteAKSContainerservicesResponse());
    }

    public DeleteAKSContainerservicesResponse deleteAKSContainerservices(DeleteAKSContainerservicesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteAKSContainerservicesWithOptions(request, runtime);
    }

    public DeleteAKSHelmChartReleaseResponse deleteAKSHelmChartReleaseWithOptions(DeleteAKSHelmChartReleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteAKSHelmChartRelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteAKSHelmChartReleaseResponse());
    }

    public DeleteAKSHelmChartReleaseResponse deleteAKSHelmChartRelease(DeleteAKSHelmChartReleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteAKSHelmChartReleaseWithOptions(request, runtime);
    }

    public DeleteAKSHelmChartReleaseVersionResponse deleteAKSHelmChartReleaseVersionWithOptions(DeleteAKSHelmChartReleaseVersionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteAKSHelmChartReleaseVersion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteAKSHelmChartReleaseVersionResponse());
    }

    public DeleteAKSHelmChartReleaseVersionResponse deleteAKSHelmChartReleaseVersion(DeleteAKSHelmChartReleaseVersionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteAKSHelmChartReleaseVersionWithOptions(request, runtime);
    }

    public DeleteAKSHelmChartVersionResponse deleteAKSHelmChartVersionWithOptions(DeleteAKSHelmChartVersionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteAKSHelmChartVersion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteAKSHelmChartVersionResponse());
    }

    public DeleteAKSHelmChartVersionResponse deleteAKSHelmChartVersion(DeleteAKSHelmChartVersionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteAKSHelmChartVersionWithOptions(request, runtime);
    }

    public DeleteAKSHelmRepoResponse deleteAKSHelmRepoWithOptions(DeleteAKSHelmRepoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteAKSHelmRepo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteAKSHelmRepoResponse());
    }

    public DeleteAKSHelmRepoResponse deleteAKSHelmRepo(DeleteAKSHelmRepoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteAKSHelmRepoWithOptions(request, runtime);
    }

    public DeleteAKSKubernetesResourceResponse deleteAKSKubernetesResourceWithOptions(DeleteAKSKubernetesResourceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteAKSKubernetesResource", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteAKSKubernetesResourceResponse());
    }

    public DeleteAKSKubernetesResourceResponse deleteAKSKubernetesResource(DeleteAKSKubernetesResourceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteAKSKubernetesResourceWithOptions(request, runtime);
    }

    public DeleteAKSMeshWorkspaceResponse deleteAKSMeshWorkspaceWithOptions(DeleteAKSMeshWorkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteAKSMeshWorkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteAKSMeshWorkspaceResponse());
    }

    public DeleteAKSMeshWorkspaceResponse deleteAKSMeshWorkspace(DeleteAKSMeshWorkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteAKSMeshWorkspaceWithOptions(request, runtime);
    }

    public DeleteAKSSecretResponse deleteAKSSecretWithOptions(DeleteAKSSecretRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteAKSSecret", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteAKSSecretResponse());
    }

    public DeleteAKSSecretResponse deleteAKSSecret(DeleteAKSSecretRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteAKSSecretWithOptions(request, runtime);
    }

    public DeleteAKSSecretImagepullResponse deleteAKSSecretImagepullWithOptions(DeleteAKSSecretImagepullRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteAKSSecretImagepull", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteAKSSecretImagepullResponse());
    }

    public DeleteAKSSecretImagepullResponse deleteAKSSecretImagepull(DeleteAKSSecretImagepullRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteAKSSecretImagepullWithOptions(request, runtime);
    }

    public DeleteBuildpacksResponse deleteBuildpacksWithOptions(DeleteBuildpacksRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteBuildpacks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteBuildpacksResponse());
    }

    public DeleteBuildpacksResponse deleteBuildpacks(DeleteBuildpacksRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteBuildpacksWithOptions(request, runtime);
    }

    public DeleteCasLoadbalanceMountResponse deleteCasLoadbalanceMountWithOptions(DeleteCasLoadbalanceMountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteCasLoadbalanceMount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteCasLoadbalanceMountResponse());
    }

    public DeleteCasLoadbalanceMountResponse deleteCasLoadbalanceMount(DeleteCasLoadbalanceMountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteCasLoadbalanceMountWithOptions(request, runtime);
    }

    public DeleteCASSlsConfigResponse deleteCASSlsConfigWithOptions(DeleteCASSlsConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteCASSlsConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteCASSlsConfigResponse());
    }

    public DeleteCASSlsConfigResponse deleteCASSlsConfig(DeleteCASSlsConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteCASSlsConfigWithOptions(request, runtime);
    }

    public DeleteCellResponse deleteCellWithOptions(DeleteCellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteCell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteCellResponse());
    }

    public DeleteCellResponse deleteCell(DeleteCellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteCellWithOptions(request, runtime);
    }

    public DeleteClriskDataNodeResponse deleteClriskDataNodeWithOptions(DeleteClriskDataNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteClriskDataNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteClriskDataNodeResponse());
    }

    public DeleteClriskDataNodeResponse deleteClriskDataNode(DeleteClriskDataNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteClriskDataNodeWithOptions(request, runtime);
    }

    public DeleteClriskModelResponse deleteClriskModelWithOptions(DeleteClriskModelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteClriskModel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteClriskModelResponse());
    }

    public DeleteClriskModelResponse deleteClriskModel(DeleteClriskModelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteClriskModelWithOptions(request, runtime);
    }

    public DeleteClriskProductSceneResponse deleteClriskProductSceneWithOptions(DeleteClriskProductSceneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteClriskProductScene", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteClriskProductSceneResponse());
    }

    public DeleteClriskProductSceneResponse deleteClriskProductScene(DeleteClriskProductSceneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteClriskProductSceneWithOptions(request, runtime);
    }

    public DeleteClriskRuleResponse deleteClriskRuleWithOptions(DeleteClriskRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteClriskRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteClriskRuleResponse());
    }

    public DeleteClriskRuleResponse deleteClriskRule(DeleteClriskRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteClriskRuleWithOptions(request, runtime);
    }

    public DeleteClriskSubscriberResponse deleteClriskSubscriberWithOptions(DeleteClriskSubscriberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteClriskSubscriber", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteClriskSubscriberResponse());
    }

    public DeleteClriskSubscriberResponse deleteClriskSubscriber(DeleteClriskSubscriberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteClriskSubscriberWithOptions(request, runtime);
    }

    public DeleteClriskTemplateResponse deleteClriskTemplateWithOptions(DeleteClriskTemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteClriskTemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteClriskTemplateResponse());
    }

    public DeleteClriskTemplateResponse deleteClriskTemplate(DeleteClriskTemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteClriskTemplateWithOptions(request, runtime);
    }

    public DeleteClriskTemplateRuleResponse deleteClriskTemplateRuleWithOptions(DeleteClriskTemplateRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteClriskTemplateRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteClriskTemplateRuleResponse());
    }

    public DeleteClriskTemplateRuleResponse deleteClriskTemplateRule(DeleteClriskTemplateRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteClriskTemplateRuleWithOptions(request, runtime);
    }

    public DeleteDEPSServiceGroupCollectionResponse deleteDEPSServiceGroupCollectionWithOptions(DeleteDEPSServiceGroupCollectionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDEPSServiceGroupCollection", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDEPSServiceGroupCollectionResponse());
    }

    public DeleteDEPSServiceGroupCollectionResponse deleteDEPSServiceGroupCollection(DeleteDEPSServiceGroupCollectionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDEPSServiceGroupCollectionWithOptions(request, runtime);
    }

    public DeleteDmsBindingResponse deleteDmsBindingWithOptions(DeleteDmsBindingRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDmsBinding", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDmsBindingResponse());
    }

    public DeleteDmsBindingResponse deleteDmsBinding(DeleteDmsBindingRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDmsBindingWithOptions(request, runtime);
    }

    public DeleteDmsMsgResponse deleteDmsMsgWithOptions(DeleteDmsMsgRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDmsMsg", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDmsMsgResponse());
    }

    public DeleteDmsMsgResponse deleteDmsMsg(DeleteDmsMsgRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDmsMsgWithOptions(request, runtime);
    }

    public DeleteDmsMsgTypeResponse deleteDmsMsgTypeWithOptions(DeleteDmsMsgTypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDmsMsgType", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDmsMsgTypeResponse());
    }

    public DeleteDmsMsgTypeResponse deleteDmsMsgType(DeleteDmsMsgTypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDmsMsgTypeWithOptions(request, runtime);
    }

    public DeleteDmsWhitelistResponse deleteDmsWhitelistWithOptions(DeleteDmsWhitelistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDmsWhitelist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDmsWhitelistResponse());
    }

    public DeleteDmsWhitelistResponse deleteDmsWhitelist(DeleteDmsWhitelistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDmsWhitelistWithOptions(request, runtime);
    }

    public DeleteDSTAppCollectionResponse deleteDSTAppCollectionWithOptions(DeleteDSTAppCollectionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDSTAppCollection", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDSTAppCollectionResponse());
    }

    public DeleteDSTAppCollectionResponse deleteDSTAppCollection(DeleteDSTAppCollectionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDSTAppCollectionWithOptions(request, runtime);
    }

    public DeleteDSTBizLogConfigResponse deleteDSTBizLogConfigWithOptions(DeleteDSTBizLogConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDSTBizLogConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDSTBizLogConfigResponse());
    }

    public DeleteDSTBizLogConfigResponse deleteDSTBizLogConfig(DeleteDSTBizLogConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDSTBizLogConfigWithOptions(request, runtime);
    }

    public DeleteDSTTraceCollectionResponse deleteDSTTraceCollectionWithOptions(DeleteDSTTraceCollectionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDSTTraceCollection", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDSTTraceCollectionResponse());
    }

    public DeleteDSTTraceCollectionResponse deleteDSTTraceCollection(DeleteDSTTraceCollectionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDSTTraceCollectionWithOptions(request, runtime);
    }

    public DeleteDSTTraceHistoryResponse deleteDSTTraceHistoryWithOptions(DeleteDSTTraceHistoryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDSTTraceHistory", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDSTTraceHistoryResponse());
    }

    public DeleteDSTTraceHistoryResponse deleteDSTTraceHistory(DeleteDSTTraceHistoryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDSTTraceHistoryWithOptions(request, runtime);
    }

    public DeleteDtxAppResponse deleteDtxAppWithOptions(DeleteDtxAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDtxApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDtxAppResponse());
    }

    public DeleteDtxAppResponse deleteDtxApp(DeleteDtxAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDtxAppWithOptions(request, runtime);
    }

    public DeleteDtxAppActionResponse deleteDtxAppActionWithOptions(DeleteDtxAppActionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDtxAppAction", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDtxAppActionResponse());
    }

    public DeleteDtxAppActionResponse deleteDtxAppAction(DeleteDtxAppActionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDtxAppActionWithOptions(request, runtime);
    }

    public DeleteDtxAppBiztypeResponse deleteDtxAppBiztypeWithOptions(DeleteDtxAppBiztypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDtxAppBiztype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDtxAppBiztypeResponse());
    }

    public DeleteDtxAppBiztypeResponse deleteDtxAppBiztype(DeleteDtxAppBiztypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDtxAppBiztypeWithOptions(request, runtime);
    }

    public DeleteDTXAppsResponse deleteDTXAppsWithOptions(DeleteDTXAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDTXApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDTXAppsResponse());
    }

    public DeleteDTXAppsResponse deleteDTXApps(DeleteDTXAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDTXAppsWithOptions(request, runtime);
    }

    public DeleteDTXAppsActionResponse deleteDTXAppsActionWithOptions(DeleteDTXAppsActionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDTXAppsAction", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDTXAppsActionResponse());
    }

    public DeleteDTXAppsActionResponse deleteDTXAppsAction(DeleteDTXAppsActionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDTXAppsActionWithOptions(request, runtime);
    }

    public DeleteDTXAppsBiztypeResponse deleteDTXAppsBiztypeWithOptions(DeleteDTXAppsBiztypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDTXAppsBiztype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDTXAppsBiztypeResponse());
    }

    public DeleteDTXAppsBiztypeResponse deleteDTXAppsBiztype(DeleteDTXAppsBiztypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDTXAppsBiztypeWithOptions(request, runtime);
    }

    public DeleteDTXAppsRecoveryResponse deleteDTXAppsRecoveryWithOptions(DeleteDTXAppsRecoveryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDTXAppsRecovery", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDTXAppsRecoveryResponse());
    }

    public DeleteDTXAppsRecoveryResponse deleteDTXAppsRecovery(DeleteDTXAppsRecoveryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDTXAppsRecoveryWithOptions(request, runtime);
    }

    public DeleteDTXTransactionsResponse deleteDTXTransactionsWithOptions(DeleteDTXTransactionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDTXTransactions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDTXTransactionsResponse());
    }

    public DeleteDTXTransactionsResponse deleteDTXTransactions(DeleteDTXTransactionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDTXTransactionsWithOptions(request, runtime);
    }

    public DeleteDWSDscfgResponse deleteDWSDscfgWithOptions(DeleteDWSDscfgRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDWSDscfg", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDWSDscfgResponse());
    }

    public DeleteDWSDscfgResponse deleteDWSDscfg(DeleteDWSDscfgRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDWSDscfgWithOptions(request, runtime);
    }

    public DeleteDWSMetadataLogictablesResponse deleteDWSMetadataLogictablesWithOptions(DeleteDWSMetadataLogictablesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDWSMetadataLogictables", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDWSMetadataLogictablesResponse());
    }

    public DeleteDWSMetadataLogictablesResponse deleteDWSMetadataLogictables(DeleteDWSMetadataLogictablesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDWSMetadataLogictablesWithOptions(request, runtime);
    }

    public DeleteDWSSubsTaskResponse deleteDWSSubsTaskWithOptions(DeleteDWSSubsTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDWSSubsTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDWSSubsTaskResponse());
    }

    public DeleteDWSSubsTaskResponse deleteDWSSubsTask(DeleteDWSSubsTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDWSSubsTaskWithOptions(request, runtime);
    }

    public DeleteDWSTaskResponse deleteDWSTaskWithOptions(DeleteDWSTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDWSTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDWSTaskResponse());
    }

    public DeleteDWSTaskResponse deleteDWSTask(DeleteDWSTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDWSTaskWithOptions(request, runtime);
    }

    public DeleteDWSUsersResponse deleteDWSUsersWithOptions(DeleteDWSUsersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDWSUsers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDWSUsersResponse());
    }

    public DeleteDWSUsersResponse deleteDWSUsers(DeleteDWSUsersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDWSUsersWithOptions(request, runtime);
    }

    public DeleteDWSVpcAccessResponse deleteDWSVpcAccessWithOptions(DeleteDWSVpcAccessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDWSVpcAccess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDWSVpcAccessResponse());
    }

    public DeleteDWSVpcAccessResponse deleteDWSVpcAccess(DeleteDWSVpcAccessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDWSVpcAccessWithOptions(request, runtime);
    }

    public DeleteDWSVpcServerResponse deleteDWSVpcServerWithOptions(DeleteDWSVpcServerRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteDWSVpcServer", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteDWSVpcServerResponse());
    }

    public DeleteDWSVpcServerResponse deleteDWSVpcServer(DeleteDWSVpcServerRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteDWSVpcServerWithOptions(request, runtime);
    }

    public DeleteGWApiGroupAuthUserResponse deleteGWApiGroupAuthUserWithOptions(DeleteGWApiGroupAuthUserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteGWApiGroupAuthUser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteGWApiGroupAuthUserResponse());
    }

    public DeleteGWApiGroupAuthUserResponse deleteGWApiGroupAuthUser(DeleteGWApiGroupAuthUserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteGWApiGroupAuthUserWithOptions(request, runtime);
    }

    public DeleteHasAdminConfigResponse deleteHasAdminConfigWithOptions(DeleteHasAdminConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasAdminConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasAdminConfigResponse());
    }

    public DeleteHasAdminConfigResponse deleteHasAdminConfig(DeleteHasAdminConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasAdminConfigWithOptions(request, runtime);
    }

    public DeleteHasAdminSshResponse deleteHasAdminSshWithOptions(DeleteHasAdminSshRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasAdminSsh", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasAdminSshResponse());
    }

    public DeleteHasAdminSshResponse deleteHasAdminSsh(DeleteHasAdminSshRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasAdminSshWithOptions(request, runtime);
    }

    public DeleteHasBaselineNwapprovalprocessResponse deleteHasBaselineNwapprovalprocessWithOptions(DeleteHasBaselineNwapprovalprocessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasBaselineNwapprovalprocess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasBaselineNwapprovalprocessResponse());
    }

    public DeleteHasBaselineNwapprovalprocessResponse deleteHasBaselineNwapprovalprocess(DeleteHasBaselineNwapprovalprocessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasBaselineNwapprovalprocessWithOptions(request, runtime);
    }

    public DeleteHasBaselineUserappgroupResponse deleteHasBaselineUserappgroupWithOptions(DeleteHasBaselineUserappgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasBaselineUserappgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasBaselineUserappgroupResponse());
    }

    public DeleteHasBaselineUserappgroupResponse deleteHasBaselineUserappgroup(DeleteHasBaselineUserappgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasBaselineUserappgroupWithOptions(request, runtime);
    }

    public DeleteHasCloudarchCellResponse deleteHasCloudarchCellWithOptions(DeleteHasCloudarchCellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasCloudarchCell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasCloudarchCellResponse());
    }

    public DeleteHasCloudarchCellResponse deleteHasCloudarchCell(DeleteHasCloudarchCellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasCloudarchCellWithOptions(request, runtime);
    }

    public DeleteHasCloudarchCellgroupResponse deleteHasCloudarchCellgroupWithOptions(DeleteHasCloudarchCellgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasCloudarchCellgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasCloudarchCellgroupResponse());
    }

    public DeleteHasCloudarchCellgroupResponse deleteHasCloudarchCellgroup(DeleteHasCloudarchCellgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasCloudarchCellgroupWithOptions(request, runtime);
    }

    public DeleteHasCloudarchIaasakemetadataResponse deleteHasCloudarchIaasakemetadataWithOptions(DeleteHasCloudarchIaasakemetadataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasCloudarchIaasakemetadata", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasCloudarchIaasakemetadataResponse());
    }

    public DeleteHasCloudarchIaasakemetadataResponse deleteHasCloudarchIaasakemetadata(DeleteHasCloudarchIaasakemetadataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasCloudarchIaasakemetadataWithOptions(request, runtime);
    }

    public DeleteHasCloudarchIaasmetadataResponse deleteHasCloudarchIaasmetadataWithOptions(DeleteHasCloudarchIaasmetadataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasCloudarchIaasmetadata", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasCloudarchIaasmetadataResponse());
    }

    public DeleteHasCloudarchIaasmetadataResponse deleteHasCloudarchIaasmetadata(DeleteHasCloudarchIaasmetadataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasCloudarchIaasmetadataWithOptions(request, runtime);
    }

    public DeleteHasCloudarchRegionResponse deleteHasCloudarchRegionWithOptions(DeleteHasCloudarchRegionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasCloudarchRegion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasCloudarchRegionResponse());
    }

    public DeleteHasCloudarchRegionResponse deleteHasCloudarchRegion(DeleteHasCloudarchRegionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasCloudarchRegionWithOptions(request, runtime);
    }

    public DeleteHasCloudarchWorkspaceResponse deleteHasCloudarchWorkspaceWithOptions(DeleteHasCloudarchWorkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasCloudarchWorkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasCloudarchWorkspaceResponse());
    }

    public DeleteHasCloudarchWorkspaceResponse deleteHasCloudarchWorkspace(DeleteHasCloudarchWorkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasCloudarchWorkspaceWithOptions(request, runtime);
    }

    public DeleteHasCloudarchWorkspacegroupResponse deleteHasCloudarchWorkspacegroupWithOptions(DeleteHasCloudarchWorkspacegroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasCloudarchWorkspacegroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasCloudarchWorkspacegroupResponse());
    }

    public DeleteHasCloudarchWorkspacegroupResponse deleteHasCloudarchWorkspacegroup(DeleteHasCloudarchWorkspacegroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasCloudarchWorkspacegroupWithOptions(request, runtime);
    }

    public DeleteHasCloudarchZoneResponse deleteHasCloudarchZoneWithOptions(DeleteHasCloudarchZoneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasCloudarchZone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasCloudarchZoneResponse());
    }

    public DeleteHasCloudarchZoneResponse deleteHasCloudarchZone(DeleteHasCloudarchZoneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasCloudarchZoneWithOptions(request, runtime);
    }

    public DeleteHasDiagnosisGraphnodeResponse deleteHasDiagnosisGraphnodeWithOptions(DeleteHasDiagnosisGraphnodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasDiagnosisGraphnode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasDiagnosisGraphnodeResponse());
    }

    public DeleteHasDiagnosisGraphnodeResponse deleteHasDiagnosisGraphnode(DeleteHasDiagnosisGraphnodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasDiagnosisGraphnodeWithOptions(request, runtime);
    }

    public DeleteHasDiagnosisNodeResponse deleteHasDiagnosisNodeWithOptions(DeleteHasDiagnosisNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasDiagnosisNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasDiagnosisNodeResponse());
    }

    public DeleteHasDiagnosisNodeResponse deleteHasDiagnosisNode(DeleteHasDiagnosisNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasDiagnosisNodeWithOptions(request, runtime);
    }

    public DeleteHasDiagnosisPlanResponse deleteHasDiagnosisPlanWithOptions(DeleteHasDiagnosisPlanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasDiagnosisPlan", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasDiagnosisPlanResponse());
    }

    public DeleteHasDiagnosisPlanResponse deleteHasDiagnosisPlan(DeleteHasDiagnosisPlanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasDiagnosisPlanWithOptions(request, runtime);
    }

    public DeleteHasDiagnosisPlantriggerResponse deleteHasDiagnosisPlantriggerWithOptions(DeleteHasDiagnosisPlantriggerRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasDiagnosisPlantrigger", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasDiagnosisPlantriggerResponse());
    }

    public DeleteHasDiagnosisPlantriggerResponse deleteHasDiagnosisPlantrigger(DeleteHasDiagnosisPlantriggerRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasDiagnosisPlantriggerWithOptions(request, runtime);
    }

    public DeleteHasDiagnosisRuleResponse deleteHasDiagnosisRuleWithOptions(DeleteHasDiagnosisRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasDiagnosisRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasDiagnosisRuleResponse());
    }

    public DeleteHasDiagnosisRuleResponse deleteHasDiagnosisRule(DeleteHasDiagnosisRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasDiagnosisRuleWithOptions(request, runtime);
    }

    public DeleteHasDingtalkRobotResponse deleteHasDingtalkRobotWithOptions(DeleteHasDingtalkRobotRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasDingtalkRobot", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasDingtalkRobotResponse());
    }

    public DeleteHasDingtalkRobotResponse deleteHasDingtalkRobot(DeleteHasDingtalkRobotRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasDingtalkRobotWithOptions(request, runtime);
    }

    public DeleteHasDingtalkRobotrelationResponse deleteHasDingtalkRobotrelationWithOptions(DeleteHasDingtalkRobotrelationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasDingtalkRobotrelation", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasDingtalkRobotrelationResponse());
    }

    public DeleteHasDingtalkRobotrelationResponse deleteHasDingtalkRobotrelation(DeleteHasDingtalkRobotrelationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasDingtalkRobotrelationWithOptions(request, runtime);
    }

    public DeleteHasInspectJavajarResponse deleteHasInspectJavajarWithOptions(DeleteHasInspectJavajarRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasInspectJavajar", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasInspectJavajarResponse());
    }

    public DeleteHasInspectJavajarResponse deleteHasInspectJavajar(DeleteHasInspectJavajarRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasInspectJavajarWithOptions(request, runtime);
    }

    public DeleteHasInspectMissionResponse deleteHasInspectMissionWithOptions(DeleteHasInspectMissionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasInspectMission", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasInspectMissionResponse());
    }

    public DeleteHasInspectMissionResponse deleteHasInspectMission(DeleteHasInspectMissionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasInspectMissionWithOptions(request, runtime);
    }

    public DeleteHasInspectMissionscheduleResponse deleteHasInspectMissionscheduleWithOptions(DeleteHasInspectMissionscheduleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasInspectMissionschedule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasInspectMissionscheduleResponse());
    }

    public DeleteHasInspectMissionscheduleResponse deleteHasInspectMissionschedule(DeleteHasInspectMissionscheduleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasInspectMissionscheduleWithOptions(request, runtime);
    }

    public DeleteHasInspectParamResponse deleteHasInspectParamWithOptions(DeleteHasInspectParamRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasInspectParam", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasInspectParamResponse());
    }

    public DeleteHasInspectParamResponse deleteHasInspectParam(DeleteHasInspectParamRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasInspectParamWithOptions(request, runtime);
    }

    public DeleteHasInspectPluginResponse deleteHasInspectPluginWithOptions(DeleteHasInspectPluginRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasInspectPlugin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasInspectPluginResponse());
    }

    public DeleteHasInspectPluginResponse deleteHasInspectPlugin(DeleteHasInspectPluginRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasInspectPluginWithOptions(request, runtime);
    }

    public DeleteHasInspectRuleResponse deleteHasInspectRuleWithOptions(DeleteHasInspectRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasInspectRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasInspectRuleResponse());
    }

    public DeleteHasInspectRuleResponse deleteHasInspectRule(DeleteHasInspectRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasInspectRuleWithOptions(request, runtime);
    }

    public DeleteHasRisksceneResponse deleteHasRisksceneWithOptions(DeleteHasRisksceneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteHasRiskscene", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteHasRisksceneResponse());
    }

    public DeleteHasRisksceneResponse deleteHasRiskscene(DeleteHasRisksceneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteHasRisksceneWithOptions(request, runtime);
    }

    public DeleteLDCCellResponse deleteLDCCellWithOptions(DeleteLDCCellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLDCCell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLDCCellResponse());
    }

    public DeleteLDCCellResponse deleteLDCCell(DeleteLDCCellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLDCCellWithOptions(request, runtime);
    }

    public DeleteLDCCellgroupResponse deleteLDCCellgroupWithOptions(DeleteLDCCellgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLDCCellgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLDCCellgroupResponse());
    }

    public DeleteLDCCellgroupResponse deleteLDCCellgroup(DeleteLDCCellgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLDCCellgroupWithOptions(request, runtime);
    }

    public DeleteLDCContainerserviceResponse deleteLDCContainerserviceWithOptions(DeleteLDCContainerserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLDCContainerservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLDCContainerserviceResponse());
    }

    public DeleteLDCContainerserviceResponse deleteLDCContainerservice(DeleteLDCContainerserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLDCContainerserviceWithOptions(request, runtime);
    }

    public DeleteLDCFederationConfigmapResponse deleteLDCFederationConfigmapWithOptions(DeleteLDCFederationConfigmapRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLDCFederationConfigmap", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLDCFederationConfigmapResponse());
    }

    public DeleteLDCFederationConfigmapResponse deleteLDCFederationConfigmap(DeleteLDCFederationConfigmapRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLDCFederationConfigmapWithOptions(request, runtime);
    }

    public DeleteLDCFederationNamespaceResponse deleteLDCFederationNamespaceWithOptions(DeleteLDCFederationNamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLDCFederationNamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLDCFederationNamespaceResponse());
    }

    public DeleteLDCFederationNamespaceResponse deleteLDCFederationNamespace(DeleteLDCFederationNamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLDCFederationNamespaceWithOptions(request, runtime);
    }

    public DeleteLDCFederationSecretResponse deleteLDCFederationSecretWithOptions(DeleteLDCFederationSecretRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLDCFederationSecret", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLDCFederationSecretResponse());
    }

    public DeleteLDCFederationSecretResponse deleteLDCFederationSecret(DeleteLDCFederationSecretRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLDCFederationSecretWithOptions(request, runtime);
    }

    public DeleteLDCFederationSpannerClusterResponse deleteLDCFederationSpannerClusterWithOptions(DeleteLDCFederationSpannerClusterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLDCFederationSpannerCluster", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLDCFederationSpannerClusterResponse());
    }

    public DeleteLDCFederationSpannerClusterResponse deleteLDCFederationSpannerCluster(DeleteLDCFederationSpannerClusterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLDCFederationSpannerClusterWithOptions(request, runtime);
    }

    public DeleteLDCFlowSiteResponse deleteLDCFlowSiteWithOptions(DeleteLDCFlowSiteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLDCFlowSite", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLDCFlowSiteResponse());
    }

    public DeleteLDCFlowSiteResponse deleteLDCFlowSite(DeleteLDCFlowSiteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLDCFlowSiteWithOptions(request, runtime);
    }

    public DeleteLDCUnifiedAccessInstanceResponse deleteLDCUnifiedAccessInstanceWithOptions(DeleteLDCUnifiedAccessInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLDCUnifiedAccessInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLDCUnifiedAccessInstanceResponse());
    }

    public DeleteLDCUnifiedAccessInstanceResponse deleteLDCUnifiedAccessInstance(DeleteLDCUnifiedAccessInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLDCUnifiedAccessInstanceWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeApideletesalabelgivenbyitsnameResponse deleteLinkeantcodeAntcodeApideletesalabelgivenbyitsnameWithOptions(DeleteLinkeantcodeAntcodeApideletesalabelgivenbyitsnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeApideletesalabelgivenbyitsname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeApideletesalabelgivenbyitsnameResponse());
    }

    public DeleteLinkeantcodeAntcodeApideletesalabelgivenbyitsnameResponse deleteLinkeantcodeAntcodeApideletesalabelgivenbyitsname(DeleteLinkeantcodeAntcodeApideletesalabelgivenbyitsnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeApideletesalabelgivenbyitsnameWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeArtifactsmanagementResponse deleteLinkeantcodeAntcodeArtifactsmanagementWithOptions(DeleteLinkeantcodeAntcodeArtifactsmanagementRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeArtifactsmanagement", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeArtifactsmanagementResponse());
    }

    public DeleteLinkeantcodeAntcodeArtifactsmanagementResponse deleteLinkeantcodeAntcodeArtifactsmanagement(DeleteLinkeantcodeAntcodeArtifactsmanagementRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeArtifactsmanagementWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeBroadcastmessageResponse deleteLinkeantcodeAntcodeBroadcastmessageWithOptions(DeleteLinkeantcodeAntcodeBroadcastmessageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeBroadcastmessage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeBroadcastmessageResponse());
    }

    public DeleteLinkeantcodeAntcodeBroadcastmessageResponse deleteLinkeantcodeAntcodeBroadcastmessage(DeleteLinkeantcodeAntcodeBroadcastmessageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeBroadcastmessageWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeCommentofsnippetResponse deleteLinkeantcodeAntcodeCommentofsnippetWithOptions(DeleteLinkeantcodeAntcodeCommentofsnippetRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeCommentofsnippet", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeCommentofsnippetResponse());
    }

    public DeleteLinkeantcodeAntcodeCommentofsnippetResponse deleteLinkeantcodeAntcodeCommentofsnippet(DeleteLinkeantcodeAntcodeCommentofsnippetRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeCommentofsnippetWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeCycleuserpermissionsResponse deleteLinkeantcodeAntcodeCycleuserpermissionsWithOptions(DeleteLinkeantcodeAntcodeCycleuserpermissionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeCycleuserpermissions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeCycleuserpermissionsResponse());
    }

    public DeleteLinkeantcodeAntcodeCycleuserpermissionsResponse deleteLinkeantcodeAntcodeCycleuserpermissions(DeleteLinkeantcodeAntcodeCycleuserpermissionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeCycleuserpermissionsWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeDeletecommitnoteResponse deleteLinkeantcodeAntcodeDeletecommitnoteWithOptions(DeleteLinkeantcodeAntcodeDeletecommitnoteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeDeletecommitnote", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeDeletecommitnoteResponse());
    }

    public DeleteLinkeantcodeAntcodeDeletecommitnoteResponse deleteLinkeantcodeAntcodeDeletecommitnote(DeleteLinkeantcodeAntcodeDeletecommitnoteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeDeletecommitnoteWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeDeleteexistingfileinrepositoryResponse deleteLinkeantcodeAntcodeDeleteexistingfileinrepositoryWithOptions(DeleteLinkeantcodeAntcodeDeleteexistingfileinrepositoryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeDeleteexistingfileinrepository", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeDeleteexistingfileinrepositoryResponse());
    }

    public DeleteLinkeantcodeAntcodeDeleteexistingfileinrepositoryResponse deleteLinkeantcodeAntcodeDeleteexistingfileinrepository(DeleteLinkeantcodeAntcodeDeleteexistingfileinrepositoryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeDeleteexistingfileinrepositoryWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeDeletenamespacememberResponse deleteLinkeantcodeAntcodeDeletenamespacememberWithOptions(DeleteLinkeantcodeAntcodeDeletenamespacememberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeDeletenamespacemember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeDeletenamespacememberResponse());
    }

    public DeleteLinkeantcodeAntcodeDeletenamespacememberResponse deleteLinkeantcodeAntcodeDeletenamespacemember(DeleteLinkeantcodeAntcodeDeletenamespacememberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeDeletenamespacememberWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeDeletepipelinetimingconfigResponse deleteLinkeantcodeAntcodeDeletepipelinetimingconfigWithOptions(DeleteLinkeantcodeAntcodeDeletepipelinetimingconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeDeletepipelinetimingconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeDeletepipelinetimingconfigResponse());
    }

    public DeleteLinkeantcodeAntcodeDeletepipelinetimingconfigResponse deleteLinkeantcodeAntcodeDeletepipelinetimingconfig(DeleteLinkeantcodeAntcodeDeletepipelinetimingconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeDeletepipelinetimingconfigWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeDeleteprojectkeyResponse deleteLinkeantcodeAntcodeDeleteprojectkeyWithOptions(DeleteLinkeantcodeAntcodeDeleteprojectkeyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeDeleteprojectkey", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeDeleteprojectkeyResponse());
    }

    public DeleteLinkeantcodeAntcodeDeleteprojectkeyResponse deleteLinkeantcodeAntcodeDeleteprojectkey(DeleteLinkeantcodeAntcodeDeleteprojectkeyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeDeleteprojectkeyWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeDeleteprojectmemberResponse deleteLinkeantcodeAntcodeDeleteprojectmemberWithOptions(DeleteLinkeantcodeAntcodeDeleteprojectmemberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeDeleteprojectmember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeDeleteprojectmemberResponse());
    }

    public DeleteLinkeantcodeAntcodeDeleteprojectmemberResponse deleteLinkeantcodeAntcodeDeleteprojectmember(DeleteLinkeantcodeAntcodeDeleteprojectmemberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeDeleteprojectmemberWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeDeleteprojectvariableResponse deleteLinkeantcodeAntcodeDeleteprojectvariableWithOptions(DeleteLinkeantcodeAntcodeDeleteprojectvariableRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeDeleteprojectvariable", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeDeleteprojectvariableResponse());
    }

    public DeleteLinkeantcodeAntcodeDeleteprojectvariableResponse deleteLinkeantcodeAntcodeDeleteprojectvariable(DeleteLinkeantcodeAntcodeDeleteprojectvariableRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeDeleteprojectvariableWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeDeletesalabelgivenbyitsnameResponse deleteLinkeantcodeAntcodeDeletesalabelgivenbyitsnameWithOptions(DeleteLinkeantcodeAntcodeDeletesalabelgivenbyitsnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeDeletesalabelgivenbyitsname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeDeletesalabelgivenbyitsnameResponse());
    }

    public DeleteLinkeantcodeAntcodeDeletesalabelgivenbyitsnameResponse deleteLinkeantcodeAntcodeDeletesalabelgivenbyitsname(DeleteLinkeantcodeAntcodeDeletesalabelgivenbyitsnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeDeletesalabelgivenbyitsnameWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeGpgkeyResponse deleteLinkeantcodeAntcodeGpgkeyWithOptions(DeleteLinkeantcodeAntcodeGpgkeyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeGpgkey", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeGpgkeyResponse());
    }

    public DeleteLinkeantcodeAntcodeGpgkeyResponse deleteLinkeantcodeAntcodeGpgkey(DeleteLinkeantcodeAntcodeGpgkeyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeGpgkeyWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeGrouplabelResponse deleteLinkeantcodeAntcodeGrouplabelWithOptions(DeleteLinkeantcodeAntcodeGrouplabelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeGrouplabel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeGrouplabelResponse());
    }

    public DeleteLinkeantcodeAntcodeGrouplabelResponse deleteLinkeantcodeAntcodeGrouplabel(DeleteLinkeantcodeAntcodeGrouplabelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeGrouplabelWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeGroupsResponse deleteLinkeantcodeAntcodeGroupsWithOptions(DeleteLinkeantcodeAntcodeGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeGroupsResponse());
    }

    public DeleteLinkeantcodeAntcodeGroupsResponse deleteLinkeantcodeAntcodeGroups(DeleteLinkeantcodeAntcodeGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeGroupsWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeGroupsdeletesalabelgivenbyitsnameResponse deleteLinkeantcodeAntcodeGroupsdeletesalabelgivenbyitsnameWithOptions(DeleteLinkeantcodeAntcodeGroupsdeletesalabelgivenbyitsnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeGroupsdeletesalabelgivenbyitsname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeGroupsdeletesalabelgivenbyitsnameResponse());
    }

    public DeleteLinkeantcodeAntcodeGroupsdeletesalabelgivenbyitsnameResponse deleteLinkeantcodeAntcodeGroupsdeletesalabelgivenbyitsname(DeleteLinkeantcodeAntcodeGroupsdeletesalabelgivenbyitsnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeGroupsdeletesalabelgivenbyitsnameWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeHooksdeletehookResponse deleteLinkeantcodeAntcodeHooksdeletehookWithOptions(DeleteLinkeantcodeAntcodeHooksdeletehookRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeHooksdeletehook", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeHooksdeletehookResponse());
    }

    public DeleteLinkeantcodeAntcodeHooksdeletehookResponse deleteLinkeantcodeAntcodeHooksdeletehook(DeleteLinkeantcodeAntcodeHooksdeletehookRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeHooksdeletehookWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeInstallationsserfviceResponse deleteLinkeantcodeAntcodeInstallationsserfviceWithOptions(DeleteLinkeantcodeAntcodeInstallationsserfviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeInstallationsserfvice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeInstallationsserfviceResponse());
    }

    public DeleteLinkeantcodeAntcodeInstallationsserfviceResponse deleteLinkeantcodeAntcodeInstallationsserfvice(DeleteLinkeantcodeAntcodeInstallationsserfviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeInstallationsserfviceWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeLabelgivenbyitsnameResponse deleteLinkeantcodeAntcodeLabelgivenbyitsnameWithOptions(DeleteLinkeantcodeAntcodeLabelgivenbyitsnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeLabelgivenbyitsname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeLabelgivenbyitsnameResponse());
    }

    public DeleteLinkeantcodeAntcodeLabelgivenbyitsnameResponse deleteLinkeantcodeAntcodeLabelgivenbyitsname(DeleteLinkeantcodeAntcodeLabelgivenbyitsnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeLabelgivenbyitsnameWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeManagementrecyclebinResponse deleteLinkeantcodeAntcodeManagementrecyclebinWithOptions(DeleteLinkeantcodeAntcodeManagementrecyclebinRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeManagementrecyclebin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeManagementrecyclebinResponse());
    }

    public DeleteLinkeantcodeAntcodeManagementrecyclebinResponse deleteLinkeantcodeAntcodeManagementrecyclebin(DeleteLinkeantcodeAntcodeManagementrecyclebinRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeManagementrecyclebinWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeManagementtagResponse deleteLinkeantcodeAntcodeManagementtagWithOptions(DeleteLinkeantcodeAntcodeManagementtagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeManagementtag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeManagementtagResponse());
    }

    public DeleteLinkeantcodeAntcodeManagementtagResponse deleteLinkeantcodeAntcodeManagementtag(DeleteLinkeantcodeAntcodeManagementtagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeManagementtagWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeMembersdeletenamespacememberResponse deleteLinkeantcodeAntcodeMembersdeletenamespacememberWithOptions(DeleteLinkeantcodeAntcodeMembersdeletenamespacememberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeMembersdeletenamespacemember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeMembersdeletenamespacememberResponse());
    }

    public DeleteLinkeantcodeAntcodeMembersdeletenamespacememberResponse deleteLinkeantcodeAntcodeMembersdeletenamespacemember(DeleteLinkeantcodeAntcodeMembersdeletenamespacememberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeMembersdeletenamespacememberWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeNamespacefeatureResponse deleteLinkeantcodeAntcodeNamespacefeatureWithOptions(DeleteLinkeantcodeAntcodeNamespacefeatureRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeNamespacefeature", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeNamespacefeatureResponse());
    }

    public DeleteLinkeantcodeAntcodeNamespacefeatureResponse deleteLinkeantcodeAntcodeNamespacefeature(DeleteLinkeantcodeAntcodeNamespacefeatureRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeNamespacefeatureWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeOperateauthlimitResponse deleteLinkeantcodeAntcodeOperateauthlimitWithOptions(DeleteLinkeantcodeAntcodeOperateauthlimitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeOperateauthlimit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeOperateauthlimitResponse());
    }

    public DeleteLinkeantcodeAntcodeOperateauthlimitResponse deleteLinkeantcodeAntcodeOperateauthlimit(DeleteLinkeantcodeAntcodeOperateauthlimitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeOperateauthlimitWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeProjectfeatureResponse deleteLinkeantcodeAntcodeProjectfeatureWithOptions(DeleteLinkeantcodeAntcodeProjectfeatureRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeProjectfeature", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeProjectfeatureResponse());
    }

    public DeleteLinkeantcodeAntcodeProjectfeatureResponse deleteLinkeantcodeAntcodeProjectfeature(DeleteLinkeantcodeAntcodeProjectfeatureRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeProjectfeatureWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeProjectreviewmemberResponse deleteLinkeantcodeAntcodeProjectreviewmemberWithOptions(DeleteLinkeantcodeAntcodeProjectreviewmemberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeProjectreviewmember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeProjectreviewmemberResponse());
    }

    public DeleteLinkeantcodeAntcodeProjectreviewmemberResponse deleteLinkeantcodeAntcodeProjectreviewmember(DeleteLinkeantcodeAntcodeProjectreviewmemberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeProjectreviewmemberWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeProjectreviewtaskResponse deleteLinkeantcodeAntcodeProjectreviewtaskWithOptions(DeleteLinkeantcodeAntcodeProjectreviewtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeProjectreviewtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeProjectreviewtaskResponse());
    }

    public DeleteLinkeantcodeAntcodeProjectreviewtaskResponse deleteLinkeantcodeAntcodeProjectreviewtask(DeleteLinkeantcodeAntcodeProjectreviewtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeProjectreviewtaskWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeProjectslabelResponse deleteLinkeantcodeAntcodeProjectslabelWithOptions(DeleteLinkeantcodeAntcodeProjectslabelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeProjectslabel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeProjectslabelResponse());
    }

    public DeleteLinkeantcodeAntcodeProjectslabelResponse deleteLinkeantcodeAntcodeProjectslabel(DeleteLinkeantcodeAntcodeProjectslabelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeProjectslabelWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodePullrequestissueResponse deleteLinkeantcodeAntcodePullrequestissueWithOptions(DeleteLinkeantcodeAntcodePullrequestissueRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodePullrequestissue", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodePullrequestissueResponse());
    }

    public DeleteLinkeantcodeAntcodePullrequestissueResponse deleteLinkeantcodeAntcodePullrequestissue(DeleteLinkeantcodeAntcodePullrequestissueRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodePullrequestissueWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeRecyclebinResponse deleteLinkeantcodeAntcodeRecyclebinWithOptions(DeleteLinkeantcodeAntcodeRecyclebinRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeRecyclebin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeRecyclebinResponse());
    }

    public DeleteLinkeantcodeAntcodeRecyclebinResponse deleteLinkeantcodeAntcodeRecyclebin(DeleteLinkeantcodeAntcodeRecyclebinRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeRecyclebinWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeRepositorytagResponse deleteLinkeantcodeAntcodeRepositorytagWithOptions(DeleteLinkeantcodeAntcodeRepositorytagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeRepositorytag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeRepositorytagResponse());
    }

    public DeleteLinkeantcodeAntcodeRepositorytagResponse deleteLinkeantcodeAntcodeRepositorytag(DeleteLinkeantcodeAntcodeRepositorytagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeRepositorytagWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeSnippetsResponse deleteLinkeantcodeAntcodeSnippetsWithOptions(DeleteLinkeantcodeAntcodeSnippetsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeSnippets", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeSnippetsResponse());
    }

    public DeleteLinkeantcodeAntcodeSnippetsResponse deleteLinkeantcodeAntcodeSnippets(DeleteLinkeantcodeAntcodeSnippetsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeSnippetsWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeStarsResponse deleteLinkeantcodeAntcodeStarsWithOptions(DeleteLinkeantcodeAntcodeStarsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeStars", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeStarsResponse());
    }

    public DeleteLinkeantcodeAntcodeStarsResponse deleteLinkeantcodeAntcodeStars(DeleteLinkeantcodeAntcodeStarsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeStarsWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeTenantlabelsResponse deleteLinkeantcodeAntcodeTenantlabelsWithOptions(DeleteLinkeantcodeAntcodeTenantlabelsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeTenantlabels", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeTenantlabelsResponse());
    }

    public DeleteLinkeantcodeAntcodeTenantlabelsResponse deleteLinkeantcodeAntcodeTenantlabels(DeleteLinkeantcodeAntcodeTenantlabelsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeTenantlabelsWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeTenantmembersuseridResponse deleteLinkeantcodeAntcodeTenantmembersuseridWithOptions(DeleteLinkeantcodeAntcodeTenantmembersuseridRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeTenantmembersuserid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeTenantmembersuseridResponse());
    }

    public DeleteLinkeantcodeAntcodeTenantmembersuseridResponse deleteLinkeantcodeAntcodeTenantmembersuserid(DeleteLinkeantcodeAntcodeTenantmembersuseridRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeTenantmembersuseridWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeTenantusedserviceResponse deleteLinkeantcodeAntcodeTenantusedserviceWithOptions(DeleteLinkeantcodeAntcodeTenantusedserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeTenantusedservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeTenantusedserviceResponse());
    }

    public DeleteLinkeantcodeAntcodeTenantusedserviceResponse deleteLinkeantcodeAntcodeTenantusedservice(DeleteLinkeantcodeAntcodeTenantusedserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeTenantusedserviceWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeUserfeaturesbytypeResponse deleteLinkeantcodeAntcodeUserfeaturesbytypeWithOptions(DeleteLinkeantcodeAntcodeUserfeaturesbytypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeUserfeaturesbytype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeUserfeaturesbytypeResponse());
    }

    public DeleteLinkeantcodeAntcodeUserfeaturesbytypeResponse deleteLinkeantcodeAntcodeUserfeaturesbytype(DeleteLinkeantcodeAntcodeUserfeaturesbytypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeUserfeaturesbytypeWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeUsergitauthidResponse deleteLinkeantcodeAntcodeUsergitauthidWithOptions(DeleteLinkeantcodeAntcodeUsergitauthidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeUsergitauthid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeUsergitauthidResponse());
    }

    public DeleteLinkeantcodeAntcodeUsergitauthidResponse deleteLinkeantcodeAntcodeUsergitauthid(DeleteLinkeantcodeAntcodeUsergitauthidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeUsergitauthidWithOptions(request, runtime);
    }

    public DeleteLinkeantcodeAntcodeUserkeysResponse deleteLinkeantcodeAntcodeUserkeysWithOptions(DeleteLinkeantcodeAntcodeUserkeysRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeantcodeAntcodeUserkeys", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeantcodeAntcodeUserkeysResponse());
    }

    public DeleteLinkeantcodeAntcodeUserkeysResponse deleteLinkeantcodeAntcodeUserkeys(DeleteLinkeantcodeAntcodeUserkeysRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeantcodeAntcodeUserkeysWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutAdminpipelineResponse deleteLinkeBahamutAdminpipelineWithOptions(DeleteLinkeBahamutAdminpipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutAdminpipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutAdminpipelineResponse());
    }

    public DeleteLinkeBahamutAdminpipelineResponse deleteLinkeBahamutAdminpipeline(DeleteLinkeBahamutAdminpipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutAdminpipelineWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutAdminsecretdicResponse deleteLinkeBahamutAdminsecretdicWithOptions(DeleteLinkeBahamutAdminsecretdicRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutAdminsecretdic", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutAdminsecretdicResponse());
    }

    public DeleteLinkeBahamutAdminsecretdicResponse deleteLinkeBahamutAdminsecretdic(DeleteLinkeBahamutAdminsecretdicRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutAdminsecretdicWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutAdmintenantiditerationtemplatedeletestageResponse deleteLinkeBahamutAdmintenantiditerationtemplatedeletestageWithOptions(DeleteLinkeBahamutAdmintenantiditerationtemplatedeletestageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutAdmintenantiditerationtemplatedeletestage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutAdmintenantiditerationtemplatedeletestageResponse());
    }

    public DeleteLinkeBahamutAdmintenantiditerationtemplatedeletestageResponse deleteLinkeBahamutAdmintenantiditerationtemplatedeletestage(DeleteLinkeBahamutAdmintenantiditerationtemplatedeletestageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutAdmintenantiditerationtemplatedeletestageWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutAdminuserroleResponse deleteLinkeBahamutAdminuserroleWithOptions(DeleteLinkeBahamutAdminuserroleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutAdminuserrole", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutAdminuserroleResponse());
    }

    public DeleteLinkeBahamutAdminuserroleResponse deleteLinkeBahamutAdminuserrole(DeleteLinkeBahamutAdminuserroleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutAdminuserroleWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutAdminworkspaceResponse deleteLinkeBahamutAdminworkspaceWithOptions(DeleteLinkeBahamutAdminworkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutAdminworkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutAdminworkspaceResponse());
    }

    public DeleteLinkeBahamutAdminworkspaceResponse deleteLinkeBahamutAdminworkspace(DeleteLinkeBahamutAdminworkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutAdminworkspaceWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutAppResponse deleteLinkeBahamutAppWithOptions(DeleteLinkeBahamutAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutAppResponse());
    }

    public DeleteLinkeBahamutAppResponse deleteLinkeBahamutApp(DeleteLinkeBahamutAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutAppWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutAppcustomciconfigResponse deleteLinkeBahamutAppcustomciconfigWithOptions(DeleteLinkeBahamutAppcustomciconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutAppcustomciconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutAppcustomciconfigResponse());
    }

    public DeleteLinkeBahamutAppcustomciconfigResponse deleteLinkeBahamutAppcustomciconfig(DeleteLinkeBahamutAppcustomciconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutAppcustomciconfigWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutAppgroupResponse deleteLinkeBahamutAppgroupWithOptions(DeleteLinkeBahamutAppgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutAppgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutAppgroupResponse());
    }

    public DeleteLinkeBahamutAppgroupResponse deleteLinkeBahamutAppgroup(DeleteLinkeBahamutAppgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutAppgroupWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutApptenantidappnamecustompipelinedeleteidResponse deleteLinkeBahamutApptenantidappnamecustompipelinedeleteidWithOptions(DeleteLinkeBahamutApptenantidappnamecustompipelinedeleteidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutApptenantidappnamecustompipelinedeleteid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutApptenantidappnamecustompipelinedeleteidResponse());
    }

    public DeleteLinkeBahamutApptenantidappnamecustompipelinedeleteidResponse deleteLinkeBahamutApptenantidappnamecustompipelinedeleteid(DeleteLinkeBahamutApptenantidappnamecustompipelinedeleteidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutApptenantidappnamecustompipelinedeleteidWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutArchdomainResponse deleteLinkeBahamutArchdomainWithOptions(DeleteLinkeBahamutArchdomainRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutArchdomain", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutArchdomainResponse());
    }

    public DeleteLinkeBahamutArchdomainResponse deleteLinkeBahamutArchdomain(DeleteLinkeBahamutArchdomainRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutArchdomainWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutArchdomainsResponse deleteLinkeBahamutArchdomainsWithOptions(DeleteLinkeBahamutArchdomainsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutArchdomains", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutArchdomainsResponse());
    }

    public DeleteLinkeBahamutArchdomainsResponse deleteLinkeBahamutArchdomains(DeleteLinkeBahamutArchdomainsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutArchdomainsWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutCloudtenantResponse deleteLinkeBahamutCloudtenantWithOptions(DeleteLinkeBahamutCloudtenantRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutCloudtenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutCloudtenantResponse());
    }

    public DeleteLinkeBahamutCloudtenantResponse deleteLinkeBahamutCloudtenant(DeleteLinkeBahamutCloudtenantRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutCloudtenantWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutIterationdeleteinstanceResponse deleteLinkeBahamutIterationdeleteinstanceWithOptions(DeleteLinkeBahamutIterationdeleteinstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutIterationdeleteinstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutIterationdeleteinstanceResponse());
    }

    public DeleteLinkeBahamutIterationdeleteinstanceResponse deleteLinkeBahamutIterationdeleteinstance(DeleteLinkeBahamutIterationdeleteinstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutIterationdeleteinstanceWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutIterationtemplateResponse deleteLinkeBahamutIterationtemplateWithOptions(DeleteLinkeBahamutIterationtemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutIterationtemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutIterationtemplateResponse());
    }

    public DeleteLinkeBahamutIterationtemplateResponse deleteLinkeBahamutIterationtemplate(DeleteLinkeBahamutIterationtemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutIterationtemplateWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutPaasdeleteserversResponse deleteLinkeBahamutPaasdeleteserversWithOptions(DeleteLinkeBahamutPaasdeleteserversRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutPaasdeleteservers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutPaasdeleteserversResponse());
    }

    public DeleteLinkeBahamutPaasdeleteserversResponse deleteLinkeBahamutPaasdeleteservers(DeleteLinkeBahamutPaasdeleteserversRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutPaasdeleteserversWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutReleaseResponse deleteLinkeBahamutReleaseWithOptions(DeleteLinkeBahamutReleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutRelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutReleaseResponse());
    }

    public DeleteLinkeBahamutReleaseResponse deleteLinkeBahamutRelease(DeleteLinkeBahamutReleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutReleaseWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutReleaseappResponse deleteLinkeBahamutReleaseappWithOptions(DeleteLinkeBahamutReleaseappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutReleaseapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutReleaseappResponse());
    }

    public DeleteLinkeBahamutReleaseappResponse deleteLinkeBahamutReleaseapp(DeleteLinkeBahamutReleaseappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutReleaseappWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutReleasemanageiterationrelationshipappResponse deleteLinkeBahamutReleasemanageiterationrelationshipappWithOptions(DeleteLinkeBahamutReleasemanageiterationrelationshipappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutReleasemanageiterationrelationshipapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutReleasemanageiterationrelationshipappResponse());
    }

    public DeleteLinkeBahamutReleasemanageiterationrelationshipappResponse deleteLinkeBahamutReleasemanageiterationrelationshipapp(DeleteLinkeBahamutReleasemanageiterationrelationshipappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutReleasemanageiterationrelationshipappWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutTemplateResponse deleteLinkeBahamutTemplateWithOptions(DeleteLinkeBahamutTemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutTemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutTemplateResponse());
    }

    public DeleteLinkeBahamutTemplateResponse deleteLinkeBahamutTemplate(DeleteLinkeBahamutTemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutTemplateWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutVcsbranchResponse deleteLinkeBahamutVcsbranchWithOptions(DeleteLinkeBahamutVcsbranchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutVcsbranch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutVcsbranchResponse());
    }

    public DeleteLinkeBahamutVcsbranchResponse deleteLinkeBahamutVcsbranch(DeleteLinkeBahamutVcsbranchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutVcsbranchWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutVcscommitcommentResponse deleteLinkeBahamutVcscommitcommentWithOptions(DeleteLinkeBahamutVcscommitcommentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutVcscommitcomment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutVcscommitcommentResponse());
    }

    public DeleteLinkeBahamutVcscommitcommentResponse deleteLinkeBahamutVcscommitcomment(DeleteLinkeBahamutVcscommitcommentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutVcscommitcommentWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutVcsmergerequestResponse deleteLinkeBahamutVcsmergerequestWithOptions(DeleteLinkeBahamutVcsmergerequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutVcsmergerequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutVcsmergerequestResponse());
    }

    public DeleteLinkeBahamutVcsmergerequestResponse deleteLinkeBahamutVcsmergerequest(DeleteLinkeBahamutVcsmergerequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutVcsmergerequestWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutVcsmrcommentResponse deleteLinkeBahamutVcsmrcommentWithOptions(DeleteLinkeBahamutVcsmrcommentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutVcsmrcomment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutVcsmrcommentResponse());
    }

    public DeleteLinkeBahamutVcsmrcommentResponse deleteLinkeBahamutVcsmrcomment(DeleteLinkeBahamutVcsmrcommentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutVcsmrcommentWithOptions(request, runtime);
    }

    public DeleteLinkeBahamutWebapideletelterationResponse deleteLinkeBahamutWebapideletelterationWithOptions(DeleteLinkeBahamutWebapideletelterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeBahamutWebapideletelteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeBahamutWebapideletelterationResponse());
    }

    public DeleteLinkeBahamutWebapideletelterationResponse deleteLinkeBahamutWebapideletelteration(DeleteLinkeBahamutWebapideletelterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeBahamutWebapideletelterationWithOptions(request, runtime);
    }

    public DeleteLinkedeploycoreDeploycoreAppserviceResponse deleteLinkedeploycoreDeploycoreAppserviceWithOptions(DeleteLinkedeploycoreDeploycoreAppserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkedeploycoreDeploycoreAppservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkedeploycoreDeploycoreAppserviceResponse());
    }

    public DeleteLinkedeploycoreDeploycoreAppserviceResponse deleteLinkedeploycoreDeploycoreAppservice(DeleteLinkedeploycoreDeploycoreAppserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkedeploycoreDeploycoreAppserviceWithOptions(request, runtime);
    }

    public DeleteLinkedeploycoreDeploycoreProfiledeleteprofileidResponse deleteLinkedeploycoreDeploycoreProfiledeleteprofileidWithOptions(DeleteLinkedeploycoreDeploycoreProfiledeleteprofileidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkedeploycoreDeploycoreProfiledeleteprofileid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkedeploycoreDeploycoreProfiledeleteprofileidResponse());
    }

    public DeleteLinkedeploycoreDeploycoreProfiledeleteprofileidResponse deleteLinkedeploycoreDeploycoreProfiledeleteprofileid(DeleteLinkedeploycoreDeploycoreProfiledeleteprofileidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkedeploycoreDeploycoreProfiledeleteprofileidWithOptions(request, runtime);
    }

    public DeleteLinkelinkflowLinkflowAttachmentsResponse deleteLinkelinkflowLinkflowAttachmentsWithOptions(DeleteLinkelinkflowLinkflowAttachmentsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkelinkflowLinkflowAttachments", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkelinkflowLinkflowAttachmentsResponse());
    }

    public DeleteLinkelinkflowLinkflowAttachmentsResponse deleteLinkelinkflowLinkflowAttachments(DeleteLinkelinkflowLinkflowAttachmentsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkelinkflowLinkflowAttachmentsWithOptions(request, runtime);
    }

    public DeleteLinkeLinklogAccessResponse deleteLinkeLinklogAccessWithOptions(DeleteLinkeLinklogAccessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinklogAccess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinklogAccessResponse());
    }

    public DeleteLinkeLinklogAccessResponse deleteLinkeLinklogAccess(DeleteLinkeLinklogAccessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinklogAccessWithOptions(request, runtime);
    }

    public DeleteLinkeLinklogAccountResponse deleteLinkeLinklogAccountWithOptions(DeleteLinkeLinklogAccountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinklogAccount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinklogAccountResponse());
    }

    public DeleteLinkeLinklogAccountResponse deleteLinkeLinklogAccount(DeleteLinkeLinklogAccountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinklogAccountWithOptions(request, runtime);
    }

    public DeleteLinkeLinklogConditionResponse deleteLinkeLinklogConditionWithOptions(DeleteLinkeLinklogConditionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinklogCondition", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinklogConditionResponse());
    }

    public DeleteLinkeLinklogConditionResponse deleteLinkeLinklogCondition(DeleteLinkeLinklogConditionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinklogConditionWithOptions(request, runtime);
    }

    public DeleteLinkeLinklogIndicationResponse deleteLinkeLinklogIndicationWithOptions(DeleteLinkeLinklogIndicationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinklogIndication", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinklogIndicationResponse());
    }

    public DeleteLinkeLinklogIndicationResponse deleteLinkeLinklogIndication(DeleteLinkeLinklogIndicationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinklogIndicationWithOptions(request, runtime);
    }

    public DeleteLinkeLinklogKnowledgeResponse deleteLinkeLinklogKnowledgeWithOptions(DeleteLinkeLinklogKnowledgeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinklogKnowledge", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinklogKnowledgeResponse());
    }

    public DeleteLinkeLinklogKnowledgeResponse deleteLinkeLinklogKnowledge(DeleteLinkeLinklogKnowledgeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinklogKnowledgeWithOptions(request, runtime);
    }

    public DeleteLinkeLinklogStoreResponse deleteLinkeLinklogStoreWithOptions(DeleteLinkeLinklogStoreRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinklogStore", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinklogStoreResponse());
    }

    public DeleteLinkeLinklogStoreResponse deleteLinkeLinklogStore(DeleteLinkeLinklogStoreRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinklogStoreWithOptions(request, runtime);
    }

    public DeleteLinkeLinklogTagResponse deleteLinkeLinklogTagWithOptions(DeleteLinkeLinklogTagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinklogTag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinklogTagResponse());
    }

    public DeleteLinkeLinklogTagResponse deleteLinkeLinklogTag(DeleteLinkeLinklogTagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinklogTagWithOptions(request, runtime);
    }

    public DeleteLinkeLinktAdmincustomfieldResponse deleteLinkeLinktAdmincustomfieldWithOptions(DeleteLinkeLinktAdmincustomfieldRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinktAdmincustomfield", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinktAdmincustomfieldResponse());
    }

    public DeleteLinkeLinktAdmincustomfieldResponse deleteLinkeLinktAdmincustomfield(DeleteLinkeLinktAdmincustomfieldRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinktAdmincustomfieldWithOptions(request, runtime);
    }

    public DeleteLinkeLinktAdmintemplateResponse deleteLinkeLinktAdmintemplateWithOptions(DeleteLinkeLinktAdmintemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinktAdmintemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinktAdmintemplateResponse());
    }

    public DeleteLinkeLinktAdmintemplateResponse deleteLinkeLinktAdmintemplate(DeleteLinkeLinktAdmintemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinktAdmintemplateWithOptions(request, runtime);
    }

    public DeleteLinkeLinktCustomfieldResponse deleteLinkeLinktCustomfieldWithOptions(DeleteLinkeLinktCustomfieldRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinktCustomfield", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinktCustomfieldResponse());
    }

    public DeleteLinkeLinktCustomfieldResponse deleteLinkeLinktCustomfield(DeleteLinkeLinktCustomfieldRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinktCustomfieldWithOptions(request, runtime);
    }

    public DeleteLinkeLinktIterationResponse deleteLinkeLinktIterationWithOptions(DeleteLinkeLinktIterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinktIteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinktIterationResponse());
    }

    public DeleteLinkeLinktIterationResponse deleteLinkeLinktIteration(DeleteLinkeLinktIterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinktIterationWithOptions(request, runtime);
    }

    public DeleteLinkeLinktIterationmeetingResponse deleteLinkeLinktIterationmeetingWithOptions(DeleteLinkeLinktIterationmeetingRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinktIterationmeeting", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinktIterationmeetingResponse());
    }

    public DeleteLinkeLinktIterationmeetingResponse deleteLinkeLinktIterationmeeting(DeleteLinkeLinktIterationmeetingRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinktIterationmeetingWithOptions(request, runtime);
    }

    public DeleteLinkeLinktMilestoneResponse deleteLinkeLinktMilestoneWithOptions(DeleteLinkeLinktMilestoneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinktMilestone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinktMilestoneResponse());
    }

    public DeleteLinkeLinktMilestoneResponse deleteLinkeLinktMilestone(DeleteLinkeLinktMilestoneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinktMilestoneWithOptions(request, runtime);
    }

    public DeleteLinkeLinktModuleResponse deleteLinkeLinktModuleWithOptions(DeleteLinkeLinktModuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinktModule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinktModuleResponse());
    }

    public DeleteLinkeLinktModuleResponse deleteLinkeLinktModule(DeleteLinkeLinktModuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinktModuleWithOptions(request, runtime);
    }

    public DeleteLinkeLinktProjectResponse deleteLinkeLinktProjectWithOptions(DeleteLinkeLinktProjectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinktProject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinktProjectResponse());
    }

    public DeleteLinkeLinktProjectResponse deleteLinkeLinktProject(DeleteLinkeLinktProjectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinktProjectWithOptions(request, runtime);
    }

    public DeleteLinkeLinktProjectroleResponse deleteLinkeLinktProjectroleWithOptions(DeleteLinkeLinktProjectroleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinktProjectrole", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinktProjectroleResponse());
    }

    public DeleteLinkeLinktProjectroleResponse deleteLinkeLinktProjectrole(DeleteLinkeLinktProjectroleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinktProjectroleWithOptions(request, runtime);
    }

    public DeleteLinkeLinktTagResponse deleteLinkeLinktTagWithOptions(DeleteLinkeLinktTagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinktTag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinktTagResponse());
    }

    public DeleteLinkeLinktTagResponse deleteLinkeLinktTag(DeleteLinkeLinktTagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinktTagWithOptions(request, runtime);
    }

    public DeleteLinkeLinktWorkflowstatusResponse deleteLinkeLinktWorkflowstatusWithOptions(DeleteLinkeLinktWorkflowstatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteLinkeLinktWorkflowstatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteLinkeLinktWorkflowstatusResponse());
    }

    public DeleteLinkeLinktWorkflowstatusResponse deleteLinkeLinktWorkflowstatus(DeleteLinkeLinktWorkflowstatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteLinkeLinktWorkflowstatusWithOptions(request, runtime);
    }

    public DeleteMqSofamqGroupResponse deleteMqSofamqGroupWithOptions(DeleteMqSofamqGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMqSofamqGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMqSofamqGroupResponse());
    }

    public DeleteMqSofamqGroupResponse deleteMqSofamqGroup(DeleteMqSofamqGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMqSofamqGroupWithOptions(request, runtime);
    }

    public DeleteMqSofamqRouterResponse deleteMqSofamqRouterWithOptions(DeleteMqSofamqRouterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMqSofamqRouter", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMqSofamqRouterResponse());
    }

    public DeleteMqSofamqRouterResponse deleteMqSofamqRouter(DeleteMqSofamqRouterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMqSofamqRouterWithOptions(request, runtime);
    }

    public DeleteMqSofamqTopicResponse deleteMqSofamqTopicWithOptions(DeleteMqSofamqTopicRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMqSofamqTopic", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMqSofamqTopicResponse());
    }

    public DeleteMqSofamqTopicResponse deleteMqSofamqTopic(DeleteMqSofamqTopicRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMqSofamqTopicWithOptions(request, runtime);
    }

    public DeleteMqSofamqTraceResponse deleteMqSofamqTraceWithOptions(DeleteMqSofamqTraceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMqSofamqTrace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMqSofamqTraceResponse());
    }

    public DeleteMqSofamqTraceResponse deleteMqSofamqTrace(DeleteMqSofamqTraceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMqSofamqTraceWithOptions(request, runtime);
    }

    public DeleteMqSofamqWarnResponse deleteMqSofamqWarnWithOptions(DeleteMqSofamqWarnRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMqSofamqWarn", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMqSofamqWarnResponse());
    }

    public DeleteMqSofamqWarnResponse deleteMqSofamqWarn(DeleteMqSofamqWarnRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMqSofamqWarnWithOptions(request, runtime);
    }

    public DeleteMsConfigAttributesResponse deleteMsConfigAttributesWithOptions(DeleteMsConfigAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsConfigAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsConfigAttributesResponse());
    }

    public DeleteMsConfigAttributesResponse deleteMsConfigAttributes(DeleteMsConfigAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsConfigAttributesWithOptions(request, runtime);
    }

    public DeleteMsConfigResourcesResponse deleteMsConfigResourcesWithOptions(DeleteMsConfigResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsConfigResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsConfigResourcesResponse());
    }

    public DeleteMsConfigResourcesResponse deleteMsConfigResources(DeleteMsConfigResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsConfigResourcesWithOptions(request, runtime);
    }

    public DeleteMSDdcsAttributesResponse deleteMSDdcsAttributesWithOptions(DeleteMSDdcsAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMSDdcsAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMSDdcsAttributesResponse());
    }

    public DeleteMSDdcsAttributesResponse deleteMSDdcsAttributes(DeleteMSDdcsAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMSDdcsAttributesWithOptions(request, runtime);
    }

    public DeleteMSDdcsResourcesResponse deleteMSDdcsResourcesWithOptions(DeleteMSDdcsResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMSDdcsResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMSDdcsResourcesResponse());
    }

    public DeleteMSDdcsResourcesResponse deleteMSDdcsResources(DeleteMSDdcsResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMSDdcsResourcesWithOptions(request, runtime);
    }

    public DeleteMSDdsJobResponse deleteMSDdsJobWithOptions(DeleteMSDdsJobRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMSDdsJob", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMSDdsJobResponse());
    }

    public DeleteMSDdsJobResponse deleteMSDdsJob(DeleteMSDdsJobRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMSDdsJobWithOptions(request, runtime);
    }

    public DeleteMsDrmAttributesResponse deleteMsDrmAttributesWithOptions(DeleteMsDrmAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsDrmAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsDrmAttributesResponse());
    }

    public DeleteMsDrmAttributesResponse deleteMsDrmAttributes(DeleteMsDrmAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsDrmAttributesWithOptions(request, runtime);
    }

    public DeleteMsDrmDrmResourceTplResponse deleteMsDrmDrmResourceTplWithOptions(DeleteMsDrmDrmResourceTplRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsDrmDrmResourceTpl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsDrmDrmResourceTplResponse());
    }

    public DeleteMsDrmDrmResourceTplResponse deleteMsDrmDrmResourceTpl(DeleteMsDrmDrmResourceTplRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsDrmDrmResourceTplWithOptions(request, runtime);
    }

    public DeleteMsDrmResourcesResponse deleteMsDrmResourcesWithOptions(DeleteMsDrmResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsDrmResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsDrmResourcesResponse());
    }

    public DeleteMsDrmResourcesResponse deleteMsDrmResources(DeleteMsDrmResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsDrmResourcesWithOptions(request, runtime);
    }

    public DeleteMsGuardianAppsResponse deleteMsGuardianAppsWithOptions(DeleteMsGuardianAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsGuardianApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsGuardianAppsResponse());
    }

    public DeleteMsGuardianAppsResponse deleteMsGuardianApps(DeleteMsGuardianAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsGuardianAppsWithOptions(request, runtime);
    }

    public DeleteMsGuardianRulesResponse deleteMsGuardianRulesWithOptions(DeleteMsGuardianRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsGuardianRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsGuardianRulesResponse());
    }

    public DeleteMsGuardianRulesResponse deleteMsGuardianRules(DeleteMsGuardianRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsGuardianRulesWithOptions(request, runtime);
    }

    public DeleteMsSgAuthRulesResponse deleteMsSgAuthRulesWithOptions(DeleteMsSgAuthRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsSgAuthRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsSgAuthRulesResponse());
    }

    public DeleteMsSgAuthRulesResponse deleteMsSgAuthRules(DeleteMsSgAuthRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsSgAuthRulesWithOptions(request, runtime);
    }

    public DeleteMsSgCircuitBreakerRuleResponse deleteMsSgCircuitBreakerRuleWithOptions(DeleteMsSgCircuitBreakerRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsSgCircuitBreakerRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsSgCircuitBreakerRuleResponse());
    }

    public DeleteMsSgCircuitBreakerRuleResponse deleteMsSgCircuitBreakerRule(DeleteMsSgCircuitBreakerRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsSgCircuitBreakerRuleWithOptions(request, runtime);
    }

    public DeleteMsSgDowngradeResponse deleteMsSgDowngradeWithOptions(DeleteMsSgDowngradeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsSgDowngrade", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsSgDowngradeResponse());
    }

    public DeleteMsSgDowngradeResponse deleteMsSgDowngrade(DeleteMsSgDowngradeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsSgDowngradeWithOptions(request, runtime);
    }

    public DeleteMsSgFaultInjectRuleResponse deleteMsSgFaultInjectRuleWithOptions(DeleteMsSgFaultInjectRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsSgFaultInjectRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsSgFaultInjectRuleResponse());
    }

    public DeleteMsSgFaultInjectRuleResponse deleteMsSgFaultInjectRule(DeleteMsSgFaultInjectRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsSgFaultInjectRuleWithOptions(request, runtime);
    }

    public DeleteMsSgFaultToleranceResponse deleteMsSgFaultToleranceWithOptions(DeleteMsSgFaultToleranceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsSgFaultTolerance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsSgFaultToleranceResponse());
    }

    public DeleteMsSgFaultToleranceResponse deleteMsSgFaultTolerance(DeleteMsSgFaultToleranceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsSgFaultToleranceWithOptions(request, runtime);
    }

    public DeleteMsSgRouterRuleGroupResponse deleteMsSgRouterRuleGroupWithOptions(DeleteMsSgRouterRuleGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsSgRouterRuleGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsSgRouterRuleGroupResponse());
    }

    public DeleteMsSgRouterRuleGroupResponse deleteMsSgRouterRuleGroup(DeleteMsSgRouterRuleGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsSgRouterRuleGroupWithOptions(request, runtime);
    }

    public DeleteMsSgServiceRateLimitRulesResponse deleteMsSgServiceRateLimitRulesWithOptions(DeleteMsSgServiceRateLimitRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsSgServiceRateLimitRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsSgServiceRateLimitRulesResponse());
    }

    public DeleteMsSgServiceRateLimitRulesResponse deleteMsSgServiceRateLimitRules(DeleteMsSgServiceRateLimitRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsSgServiceRateLimitRulesWithOptions(request, runtime);
    }

    public DeleteMsTransparentProxyAppResponse deleteMsTransparentProxyAppWithOptions(DeleteMsTransparentProxyAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsTransparentProxyApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsTransparentProxyAppResponse());
    }

    public DeleteMsTransparentProxyAppResponse deleteMsTransparentProxyApp(DeleteMsTransparentProxyAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsTransparentProxyAppWithOptions(request, runtime);
    }

    public DeleteMsTransparentProxyNodeResponse deleteMsTransparentProxyNodeWithOptions(DeleteMsTransparentProxyNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteMsTransparentProxyNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteMsTransparentProxyNodeResponse());
    }

    public DeleteMsTransparentProxyNodeResponse deleteMsTransparentProxyNode(DeleteMsTransparentProxyNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteMsTransparentProxyNodeWithOptions(request, runtime);
    }

    public DeleteODPDbnodesResponse deleteODPDbnodesWithOptions(DeleteODPDbnodesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteODPDbnodes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteODPDbnodesResponse());
    }

    public DeleteODPDbnodesResponse deleteODPDbnodes(DeleteODPDbnodesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteODPDbnodesWithOptions(request, runtime);
    }

    public DeleteODPInstancesResponse deleteODPInstancesWithOptions(DeleteODPInstancesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteODPInstances", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteODPInstancesResponse());
    }

    public DeleteODPInstancesResponse deleteODPInstances(DeleteODPInstancesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteODPInstancesWithOptions(request, runtime);
    }

    public DeleteODPInstancesUsersResponse deleteODPInstancesUsersWithOptions(DeleteODPInstancesUsersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteODPInstancesUsers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteODPInstancesUsersResponse());
    }

    public DeleteODPInstancesUsersResponse deleteODPInstancesUsers(DeleteODPInstancesUsersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteODPInstancesUsersWithOptions(request, runtime);
    }

    public DeleteODPSchemasResponse deleteODPSchemasWithOptions(DeleteODPSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteODPSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteODPSchemasResponse());
    }

    public DeleteODPSchemasResponse deleteODPSchemas(DeleteODPSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteODPSchemasWithOptions(request, runtime);
    }

    public DeleteODPSchemasInterceptorsResponse deleteODPSchemasInterceptorsWithOptions(DeleteODPSchemasInterceptorsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteODPSchemasInterceptors", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteODPSchemasInterceptorsResponse());
    }

    public DeleteODPSchemasInterceptorsResponse deleteODPSchemasInterceptors(DeleteODPSchemasInterceptorsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteODPSchemasInterceptorsWithOptions(request, runtime);
    }

    public DeleteODPSchemasLogicTablesResponse deleteODPSchemasLogicTablesWithOptions(DeleteODPSchemasLogicTablesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteODPSchemasLogicTables", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteODPSchemasLogicTablesResponse());
    }

    public DeleteODPSchemasLogicTablesResponse deleteODPSchemasLogicTables(DeleteODPSchemasLogicTablesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteODPSchemasLogicTablesWithOptions(request, runtime);
    }

    public DeleteODPSqlAuditResponse deleteODPSqlAuditWithOptions(DeleteODPSqlAuditRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteODPSqlAudit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteODPSqlAuditResponse());
    }

    public DeleteODPSqlAuditResponse deleteODPSqlAudit(DeleteODPSqlAuditRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteODPSqlAuditWithOptions(request, runtime);
    }

    public DeleteRmsAlarmBlacklistResponse deleteRmsAlarmBlacklistWithOptions(DeleteRmsAlarmBlacklistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteRmsAlarmBlacklist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteRmsAlarmBlacklistResponse());
    }

    public DeleteRmsAlarmBlacklistResponse deleteRmsAlarmBlacklist(DeleteRmsAlarmBlacklistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteRmsAlarmBlacklistWithOptions(request, runtime);
    }

    public DeleteRmsAlertruleResponse deleteRmsAlertruleWithOptions(DeleteRmsAlertruleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteRmsAlertrule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteRmsAlertruleResponse());
    }

    public DeleteRmsAlertruleResponse deleteRmsAlertrule(DeleteRmsAlertruleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteRmsAlertruleWithOptions(request, runtime);
    }

    public DeleteRmsAlertRuleSubscribeResponse deleteRmsAlertRuleSubscribeWithOptions(DeleteRmsAlertRuleSubscribeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteRmsAlertRuleSubscribe", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteRmsAlertRuleSubscribeResponse());
    }

    public DeleteRmsAlertRuleSubscribeResponse deleteRmsAlertRuleSubscribe(DeleteRmsAlertRuleSubscribeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteRmsAlertRuleSubscribeWithOptions(request, runtime);
    }

    public DeleteRmsResourceGroupResponse deleteRmsResourceGroupWithOptions(DeleteRmsResourceGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteRmsResourceGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteRmsResourceGroupResponse());
    }

    public DeleteRmsResourceGroupResponse deleteRmsResourceGroup(DeleteRmsResourceGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteRmsResourceGroupWithOptions(request, runtime);
    }

    public DeleteRmsRuleGroupByNameResponse deleteRmsRuleGroupByNameWithOptions(DeleteRmsRuleGroupByNameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteRmsRuleGroupByName", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteRmsRuleGroupByNameResponse());
    }

    public DeleteRmsRuleGroupByNameResponse deleteRmsRuleGroupByName(DeleteRmsRuleGroupByNameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteRmsRuleGroupByNameWithOptions(request, runtime);
    }

    public DeleteTSJobGroupResponse deleteTSJobGroupWithOptions(DeleteTSJobGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteTSJobGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteTSJobGroupResponse());
    }

    public DeleteTSJobGroupResponse deleteTSJobGroup(DeleteTSJobGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteTSJobGroupWithOptions(request, runtime);
    }

    public DeleteTSTopologyVersionResponse deleteTSTopologyVersionWithOptions(DeleteTSTopologyVersionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteTSTopologyVersion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteTSTopologyVersionResponse());
    }

    public DeleteTSTopologyVersionResponse deleteTSTopologyVersion(DeleteTSTopologyVersionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteTSTopologyVersionWithOptions(request, runtime);
    }

    public DeleteWorkspaceResponse deleteWorkspaceWithOptions(DeleteWorkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteWorkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteWorkspaceResponse());
    }

    public DeleteWorkspaceResponse deleteWorkspace(DeleteWorkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteWorkspaceWithOptions(request, runtime);
    }

    public DeleteWorkspaceGroupResponse deleteWorkspaceGroupWithOptions(DeleteWorkspaceGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeleteWorkspaceGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeleteWorkspaceGroupResponse());
    }

    public DeleteWorkspaceGroupResponse deleteWorkspaceGroup(DeleteWorkspaceGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deleteWorkspaceGroupWithOptions(request, runtime);
    }

    public DeprecateBuildpackResponse deprecateBuildpackWithOptions(DeprecateBuildpackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DeprecateBuildpack", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DeprecateBuildpackResponse());
    }

    public DeprecateBuildpackResponse deprecateBuildpack(DeprecateBuildpackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.deprecateBuildpackWithOptions(request, runtime);
    }

    public DescribeAppServiceEnvParamResponse describeAppServiceEnvParamWithOptions(DescribeAppServiceEnvParamRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeAppServiceEnvParam", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeAppServiceEnvParamResponse());
    }

    public DescribeAppServiceEnvParamResponse describeAppServiceEnvParam(DescribeAppServiceEnvParamRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeAppServiceEnvParamWithOptions(request, runtime);
    }

    public DescribeAppServiceEnvParamWithDiffResponse describeAppServiceEnvParamWithDiffWithOptions(DescribeAppServiceEnvParamWithDiffRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeAppServiceEnvParamWithDiff", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeAppServiceEnvParamWithDiffResponse());
    }

    public DescribeAppServiceEnvParamWithDiffResponse describeAppServiceEnvParamWithDiff(DescribeAppServiceEnvParamWithDiffRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeAppServiceEnvParamWithDiffWithOptions(request, runtime);
    }

    public DescribeBacklogMetricsResponse describeBacklogMetricsWithOptions(DescribeBacklogMetricsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeBacklogMetrics", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeBacklogMetricsResponse());
    }

    public DescribeBacklogMetricsResponse describeBacklogMetrics(DescribeBacklogMetricsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeBacklogMetricsWithOptions(request, runtime);
    }

    public DescribeBuildpackResponse describeBuildpackWithOptions(DescribeBuildpackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeBuildpack", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeBuildpackResponse());
    }

    public DescribeBuildpackResponse describeBuildpack(DescribeBuildpackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeBuildpackWithOptions(request, runtime);
    }

    public DescribeBuildpackByAppsResponse describeBuildpackByAppsWithOptions(DescribeBuildpackByAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeBuildpackByApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeBuildpackByAppsResponse());
    }

    public DescribeBuildpackByAppsResponse describeBuildpackByApps(DescribeBuildpackByAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeBuildpackByAppsWithOptions(request, runtime);
    }

    public DescribeBuildpackGroupByTechstackResponse describeBuildpackGroupByTechstackWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("DescribeBuildpackGroupByTechstack", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeBuildpackGroupByTechstackResponse());
    }

    public DescribeBuildpackGroupByTechstackResponse describeBuildpackGroupByTechstack() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeBuildpackGroupByTechstackWithOptions(runtime);
    }

    public DescribeBuildpackIdVersionPairsResponse describeBuildpackIdVersionPairsWithOptions(DescribeBuildpackIdVersionPairsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeBuildpackIdVersionPairs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeBuildpackIdVersionPairsResponse());
    }

    public DescribeBuildpackIdVersionPairsResponse describeBuildpackIdVersionPairs(DescribeBuildpackIdVersionPairsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeBuildpackIdVersionPairsWithOptions(request, runtime);
    }

    public DescribeBuildpackOSByCurrentCloudResponse describeBuildpackOSByCurrentCloudWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("DescribeBuildpackOSByCurrentCloud", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeBuildpackOSByCurrentCloudResponse());
    }

    public DescribeBuildpackOSByCurrentCloudResponse describeBuildpackOSByCurrentCloud() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeBuildpackOSByCurrentCloudWithOptions(runtime);
    }

    public DescribeBuildpackSupportCodeRepoResponse describeBuildpackSupportCodeRepoWithOptions(DescribeBuildpackSupportCodeRepoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeBuildpackSupportCodeRepo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeBuildpackSupportCodeRepoResponse());
    }

    public DescribeBuildpackSupportCodeRepoResponse describeBuildpackSupportCodeRepo(DescribeBuildpackSupportCodeRepoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeBuildpackSupportCodeRepoWithOptions(request, runtime);
    }

    public DescribeBuildpackTotalPackagesSizeResponse describeBuildpackTotalPackagesSizeWithOptions(DescribeBuildpackTotalPackagesSizeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeBuildpackTotalPackagesSize", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeBuildpackTotalPackagesSizeResponse());
    }

    public DescribeBuildpackTotalPackagesSizeResponse describeBuildpackTotalPackagesSize(DescribeBuildpackTotalPackagesSizeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeBuildpackTotalPackagesSizeWithOptions(request, runtime);
    }

    public DescribeCellsResponse describeCellsWithOptions(DescribeCellsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeCells", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeCellsResponse());
    }

    public DescribeCellsResponse describeCells(DescribeCellsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeCellsWithOptions(request, runtime);
    }

    public DescribeDSTAppResponse describeDSTAppWithOptions(DescribeDSTAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeDSTApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeDSTAppResponse());
    }

    public DescribeDSTAppResponse describeDSTApp(DescribeDSTAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeDSTAppWithOptions(request, runtime);
    }

    public DescribeDSTSlsConfigResponse describeDSTSlsConfigWithOptions(DescribeDSTSlsConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeDSTSlsConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeDSTSlsConfigResponse());
    }

    public DescribeDSTSlsConfigResponse describeDSTSlsConfig(DescribeDSTSlsConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeDSTSlsConfigWithOptions(request, runtime);
    }

    public DescribeDSTTimeSeriesMetricsResponse describeDSTTimeSeriesMetricsWithOptions(DescribeDSTTimeSeriesMetricsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeDSTTimeSeriesMetrics", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeDSTTimeSeriesMetricsResponse());
    }

    public DescribeDSTTimeSeriesMetricsResponse describeDSTTimeSeriesMetrics(DescribeDSTTimeSeriesMetricsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeDSTTimeSeriesMetricsWithOptions(request, runtime);
    }

    public DescribeDSTTopologyResponse describeDSTTopologyWithOptions(DescribeDSTTopologyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeDSTTopology", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeDSTTopologyResponse());
    }

    public DescribeDSTTopologyResponse describeDSTTopology(DescribeDSTTopologyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeDSTTopologyWithOptions(request, runtime);
    }

    public DescribeDSTTraceResponse describeDSTTraceWithOptions(DescribeDSTTraceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeDSTTrace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeDSTTraceResponse());
    }

    public DescribeDSTTraceResponse describeDSTTrace(DescribeDSTTraceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeDSTTraceWithOptions(request, runtime);
    }

    public DescribeDSTTraceAgentResponse describeDSTTraceAgentWithOptions(DescribeDSTTraceAgentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeDSTTraceAgent", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeDSTTraceAgentResponse());
    }

    public DescribeDSTTraceAgentResponse describeDSTTraceAgent(DescribeDSTTraceAgentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeDSTTraceAgentWithOptions(request, runtime);
    }

    public DescribeDSTTraceTreeResponse describeDSTTraceTreeWithOptions(DescribeDSTTraceTreeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeDSTTraceTree", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeDSTTraceTreeResponse());
    }

    public DescribeDSTTraceTreeResponse describeDSTTraceTree(DescribeDSTTraceTreeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeDSTTraceTreeWithOptions(request, runtime);
    }

    public DescribeDWSTaskResponse describeDWSTaskWithOptions(DescribeDWSTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeDWSTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeDWSTaskResponse());
    }

    public DescribeDWSTaskResponse describeDWSTask(DescribeDWSTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeDWSTaskWithOptions(request, runtime);
    }

    public DescribeLDCContainerServiceRevisionResponse describeLDCContainerServiceRevisionWithOptions(DescribeLDCContainerServiceRevisionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeLDCContainerServiceRevision", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeLDCContainerServiceRevisionResponse());
    }

    public DescribeLDCContainerServiceRevisionResponse describeLDCContainerServiceRevision(DescribeLDCContainerServiceRevisionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeLDCContainerServiceRevisionWithOptions(request, runtime);
    }

    public DescribeMetricsOverviewResponse describeMetricsOverviewWithOptions(DescribeMetricsOverviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeMetricsOverview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeMetricsOverviewResponse());
    }

    public DescribeMetricsOverviewResponse describeMetricsOverview(DescribeMetricsOverviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeMetricsOverviewWithOptions(request, runtime);
    }

    public DescribeRegionsResponse describeRegionsWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("DescribeRegions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeRegionsResponse());
    }

    public DescribeRegionsResponse describeRegions() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeRegionsWithOptions(runtime);
    }

    public DescribeSidecarInstancesResponse describeSidecarInstancesWithOptions(DescribeSidecarInstancesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeSidecarInstances", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeSidecarInstancesResponse());
    }

    public DescribeSidecarInstancesResponse describeSidecarInstances(DescribeSidecarInstancesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeSidecarInstancesWithOptions(request, runtime);
    }

    public DescribeTopicMetricsResponse describeTopicMetricsWithOptions(DescribeTopicMetricsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeTopicMetrics", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeTopicMetricsResponse());
    }

    public DescribeTopicMetricsResponse describeTopicMetrics(DescribeTopicMetricsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeTopicMetricsWithOptions(request, runtime);
    }

    public DescribeTSTopologyVersionResponse describeTSTopologyVersionWithOptions(DescribeTSTopologyVersionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeTSTopologyVersion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeTSTopologyVersionResponse());
    }

    public DescribeTSTopologyVersionResponse describeTSTopologyVersion(DescribeTSTopologyVersionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeTSTopologyVersionWithOptions(request, runtime);
    }

    public DescribeVisibleTechstacksResponse describeVisibleTechstacksWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("DescribeVisibleTechstacks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeVisibleTechstacksResponse());
    }

    public DescribeVisibleTechstacksResponse describeVisibleTechstacks() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeVisibleTechstacksWithOptions(runtime);
    }

    public DescribeWorkspaceGroupsResponse describeWorkspaceGroupsWithOptions(DescribeWorkspaceGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeWorkspaceGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeWorkspaceGroupsResponse());
    }

    public DescribeWorkspaceGroupsResponse describeWorkspaceGroups(DescribeWorkspaceGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeWorkspaceGroupsWithOptions(request, runtime);
    }

    public DescribeWorkspacesResponse describeWorkspacesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("DescribeWorkspaces", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeWorkspacesResponse());
    }

    public DescribeWorkspacesResponse describeWorkspaces() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeWorkspacesWithOptions(runtime);
    }

    public DescribeWritableTechstacksResponse describeWritableTechstacksWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("DescribeWritableTechstacks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeWritableTechstacksResponse());
    }

    public DescribeWritableTechstacksResponse describeWritableTechstacks() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeWritableTechstacksWithOptions(runtime);
    }

    public DescribeZonesResponse describeZonesWithOptions(DescribeZonesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DescribeZones", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DescribeZonesResponse());
    }

    public DescribeZonesResponse describeZones(DescribeZonesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.describeZonesWithOptions(request, runtime);
    }

    public DisableDSTAppBizLogResponse disableDSTAppBizLogWithOptions(DisableDSTAppBizLogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DisableDSTAppBizLog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DisableDSTAppBizLogResponse());
    }

    public DisableDSTAppBizLogResponse disableDSTAppBizLog(DisableDSTAppBizLogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.disableDSTAppBizLogWithOptions(request, runtime);
    }

    public DisableDWSTaskSubscribeResponse disableDWSTaskSubscribeWithOptions(DisableDWSTaskSubscribeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DisableDWSTaskSubscribe", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DisableDWSTaskSubscribeResponse());
    }

    public DisableDWSTaskSubscribeResponse disableDWSTaskSubscribe(DisableDWSTaskSubscribeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.disableDWSTaskSubscribeWithOptions(request, runtime);
    }

    public DisableLinkeantcodeAntcodeGroupsidinstallationsserviceidResponse disableLinkeantcodeAntcodeGroupsidinstallationsserviceidWithOptions(DisableLinkeantcodeAntcodeGroupsidinstallationsserviceidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DisableLinkeantcodeAntcodeGroupsidinstallationsserviceid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DisableLinkeantcodeAntcodeGroupsidinstallationsserviceidResponse());
    }

    public DisableLinkeantcodeAntcodeGroupsidinstallationsserviceidResponse disableLinkeantcodeAntcodeGroupsidinstallationsserviceid(DisableLinkeantcodeAntcodeGroupsidinstallationsserviceidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.disableLinkeantcodeAntcodeGroupsidinstallationsserviceidWithOptions(request, runtime);
    }

    public DisableLinkeantcodeAntcodeNamespacesidinstallationsserviceidResponse disableLinkeantcodeAntcodeNamespacesidinstallationsserviceidWithOptions(DisableLinkeantcodeAntcodeNamespacesidinstallationsserviceidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DisableLinkeantcodeAntcodeNamespacesidinstallationsserviceid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DisableLinkeantcodeAntcodeNamespacesidinstallationsserviceidResponse());
    }

    public DisableLinkeantcodeAntcodeNamespacesidinstallationsserviceidResponse disableLinkeantcodeAntcodeNamespacesidinstallationsserviceid(DisableLinkeantcodeAntcodeNamespacesidinstallationsserviceidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.disableLinkeantcodeAntcodeNamespacesidinstallationsserviceidWithOptions(request, runtime);
    }

    public DisableLinkelinkflowLinkflowTaskResponse disableLinkelinkflowLinkflowTaskWithOptions(DisableLinkelinkflowLinkflowTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DisableLinkelinkflowLinkflowTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DisableLinkelinkflowLinkflowTaskResponse());
    }

    public DisableLinkelinkflowLinkflowTaskResponse disableLinkelinkflowLinkflowTask(DisableLinkelinkflowLinkflowTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.disableLinkelinkflowLinkflowTaskWithOptions(request, runtime);
    }

    public DisableMqSofamqWarnResponse disableMqSofamqWarnWithOptions(DisableMqSofamqWarnRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DisableMqSofamqWarn", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DisableMqSofamqWarnResponse());
    }

    public DisableMqSofamqWarnResponse disableMqSofamqWarn(DisableMqSofamqWarnRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.disableMqSofamqWarnWithOptions(request, runtime);
    }

    public DisableMsSgAuthRuleGroupsResponse disableMsSgAuthRuleGroupsWithOptions(DisableMsSgAuthRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DisableMsSgAuthRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DisableMsSgAuthRuleGroupsResponse());
    }

    public DisableMsSgAuthRuleGroupsResponse disableMsSgAuthRuleGroups(DisableMsSgAuthRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.disableMsSgAuthRuleGroupsWithOptions(request, runtime);
    }

    public DisableMsSgAuthRulesResponse disableMsSgAuthRulesWithOptions(DisableMsSgAuthRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DisableMsSgAuthRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DisableMsSgAuthRulesResponse());
    }

    public DisableMsSgAuthRulesResponse disableMsSgAuthRules(DisableMsSgAuthRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.disableMsSgAuthRulesWithOptions(request, runtime);
    }

    public DisableMsSgDowngradeResponse disableMsSgDowngradeWithOptions(DisableMsSgDowngradeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DisableMsSgDowngrade", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DisableMsSgDowngradeResponse());
    }

    public DisableMsSgDowngradeResponse disableMsSgDowngrade(DisableMsSgDowngradeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.disableMsSgDowngradeWithOptions(request, runtime);
    }

    public DisableMsSgDowngradeGroupResponse disableMsSgDowngradeGroupWithOptions(DisableMsSgDowngradeGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DisableMsSgDowngradeGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DisableMsSgDowngradeGroupResponse());
    }

    public DisableMsSgDowngradeGroupResponse disableMsSgDowngradeGroup(DisableMsSgDowngradeGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.disableMsSgDowngradeGroupWithOptions(request, runtime);
    }

    public DisableMsSgServiceParamsResponse disableMsSgServiceParamsWithOptions(DisableMsSgServiceParamsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DisableMsSgServiceParams", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DisableMsSgServiceParamsResponse());
    }

    public DisableMsSgServiceParamsResponse disableMsSgServiceParams(DisableMsSgServiceParamsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.disableMsSgServiceParamsWithOptions(request, runtime);
    }

    public DisableMsTransparentProxyNodeResponse disableMsTransparentProxyNodeWithOptions(DisableMsTransparentProxyNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DisableMsTransparentProxyNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DisableMsTransparentProxyNodeResponse());
    }

    public DisableMsTransparentProxyNodeResponse disableMsTransparentProxyNode(DisableMsTransparentProxyNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.disableMsTransparentProxyNodeWithOptions(request, runtime);
    }

    public DownloadLinkelinkflowLinkflowAttachmentsResponse downloadLinkelinkflowLinkflowAttachmentsWithOptions(DownloadLinkelinkflowLinkflowAttachmentsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DownloadLinkelinkflowLinkflowAttachments", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DownloadLinkelinkflowLinkflowAttachmentsResponse());
    }

    public DownloadLinkelinkflowLinkflowAttachmentsResponse downloadLinkelinkflowLinkflowAttachments(DownloadLinkelinkflowLinkflowAttachmentsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.downloadLinkelinkflowLinkflowAttachmentsWithOptions(request, runtime);
    }

    public DownloadLinkelinkflowLinkflowAttachmentsinfoResponse downloadLinkelinkflowLinkflowAttachmentsinfoWithOptions(DownloadLinkelinkflowLinkflowAttachmentsinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DownloadLinkelinkflowLinkflowAttachmentsinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DownloadLinkelinkflowLinkflowAttachmentsinfoResponse());
    }

    public DownloadLinkelinkflowLinkflowAttachmentsinfoResponse downloadLinkelinkflowLinkflowAttachmentsinfo(DownloadLinkelinkflowLinkflowAttachmentsinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.downloadLinkelinkflowLinkflowAttachmentsinfoWithOptions(request, runtime);
    }

    public DownloadLinkeLinklogStoreslogsfileResponse downloadLinkeLinklogStoreslogsfileWithOptions(DownloadLinkeLinklogStoreslogsfileRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DownloadLinkeLinklogStoreslogsfile", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DownloadLinkeLinklogStoreslogsfileResponse());
    }

    public DownloadLinkeLinklogStoreslogsfileResponse downloadLinkeLinklogStoreslogsfile(DownloadLinkeLinklogStoreslogsfileRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.downloadLinkeLinklogStoreslogsfileWithOptions(request, runtime);
    }

    public DownloadLinkeLinklogStoreslogsfilefromossResponse downloadLinkeLinklogStoreslogsfilefromossWithOptions(DownloadLinkeLinklogStoreslogsfilefromossRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("DownloadLinkeLinklogStoreslogsfilefromoss", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new DownloadLinkeLinklogStoreslogsfilefromossResponse());
    }

    public DownloadLinkeLinklogStoreslogsfilefromossResponse downloadLinkeLinklogStoreslogsfilefromoss(DownloadLinkeLinklogStoreslogsfilefromossRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.downloadLinkeLinklogStoreslogsfilefromossWithOptions(request, runtime);
    }

    public EnableAKSClusterMeshResponse enableAKSClusterMeshWithOptions(EnableAKSClusterMeshRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableAKSClusterMesh", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableAKSClusterMeshResponse());
    }

    public EnableAKSClusterMeshResponse enableAKSClusterMesh(EnableAKSClusterMeshRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableAKSClusterMeshWithOptions(request, runtime);
    }

    public EnableClusterMeshResponse enableClusterMeshWithOptions(EnableClusterMeshRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableClusterMesh", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableClusterMeshResponse());
    }

    public EnableClusterMeshResponse enableClusterMesh(EnableClusterMeshRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableClusterMeshWithOptions(request, runtime);
    }

    public EnableDSTAppBizLogResponse enableDSTAppBizLogWithOptions(EnableDSTAppBizLogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableDSTAppBizLog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableDSTAppBizLogResponse());
    }

    public EnableDSTAppBizLogResponse enableDSTAppBizLog(EnableDSTAppBizLogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableDSTAppBizLogWithOptions(request, runtime);
    }

    public EnableDSTTraceAgentResponse enableDSTTraceAgentWithOptions(EnableDSTTraceAgentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableDSTTraceAgent", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableDSTTraceAgentResponse());
    }

    public EnableDSTTraceAgentResponse enableDSTTraceAgent(EnableDSTTraceAgentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableDSTTraceAgentWithOptions(request, runtime);
    }

    public EnableLinkeantcodeAntcodeGroupsidinstallationsResponse enableLinkeantcodeAntcodeGroupsidinstallationsWithOptions(EnableLinkeantcodeAntcodeGroupsidinstallationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableLinkeantcodeAntcodeGroupsidinstallations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableLinkeantcodeAntcodeGroupsidinstallationsResponse());
    }

    public EnableLinkeantcodeAntcodeGroupsidinstallationsResponse enableLinkeantcodeAntcodeGroupsidinstallations(EnableLinkeantcodeAntcodeGroupsidinstallationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableLinkeantcodeAntcodeGroupsidinstallationsWithOptions(request, runtime);
    }

    public EnableLinkeantcodeAntcodeNamespacesidinstallationsResponse enableLinkeantcodeAntcodeNamespacesidinstallationsWithOptions(EnableLinkeantcodeAntcodeNamespacesidinstallationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableLinkeantcodeAntcodeNamespacesidinstallations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableLinkeantcodeAntcodeNamespacesidinstallationsResponse());
    }

    public EnableLinkeantcodeAntcodeNamespacesidinstallationsResponse enableLinkeantcodeAntcodeNamespacesidinstallations(EnableLinkeantcodeAntcodeNamespacesidinstallationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableLinkeantcodeAntcodeNamespacesidinstallationsWithOptions(request, runtime);
    }

    public EnableLinkeBahamutAdminiterationtemplateResponse enableLinkeBahamutAdminiterationtemplateWithOptions(EnableLinkeBahamutAdminiterationtemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableLinkeBahamutAdminiterationtemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableLinkeBahamutAdminiterationtemplateResponse());
    }

    public EnableLinkeBahamutAdminiterationtemplateResponse enableLinkeBahamutAdminiterationtemplate(EnableLinkeBahamutAdminiterationtemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableLinkeBahamutAdminiterationtemplateWithOptions(request, runtime);
    }

    public EnableLinkelinkflowLinkflowProcessResponse enableLinkelinkflowLinkflowProcessWithOptions(EnableLinkelinkflowLinkflowProcessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableLinkelinkflowLinkflowProcess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableLinkelinkflowLinkflowProcessResponse());
    }

    public EnableLinkelinkflowLinkflowProcessResponse enableLinkelinkflowLinkflowProcess(EnableLinkelinkflowLinkflowProcessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableLinkelinkflowLinkflowProcessWithOptions(request, runtime);
    }

    public EnableMeshVmResponse enableMeshVmWithOptions(EnableMeshVmRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableMeshVm", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableMeshVmResponse());
    }

    public EnableMeshVmResponse enableMeshVm(EnableMeshVmRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableMeshVmWithOptions(request, runtime);
    }

    public EnableMqSofamqWarnResponse enableMqSofamqWarnWithOptions(EnableMqSofamqWarnRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableMqSofamqWarn", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableMqSofamqWarnResponse());
    }

    public EnableMqSofamqWarnResponse enableMqSofamqWarn(EnableMqSofamqWarnRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableMqSofamqWarnWithOptions(request, runtime);
    }

    public EnableMsSgAuthRuleGroupsResponse enableMsSgAuthRuleGroupsWithOptions(EnableMsSgAuthRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableMsSgAuthRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableMsSgAuthRuleGroupsResponse());
    }

    public EnableMsSgAuthRuleGroupsResponse enableMsSgAuthRuleGroups(EnableMsSgAuthRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableMsSgAuthRuleGroupsWithOptions(request, runtime);
    }

    public EnableMsSgAuthRulesResponse enableMsSgAuthRulesWithOptions(EnableMsSgAuthRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableMsSgAuthRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableMsSgAuthRulesResponse());
    }

    public EnableMsSgAuthRulesResponse enableMsSgAuthRules(EnableMsSgAuthRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableMsSgAuthRulesWithOptions(request, runtime);
    }

    public EnableMsSgCircuitBreakerRuleResponse enableMsSgCircuitBreakerRuleWithOptions(EnableMsSgCircuitBreakerRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableMsSgCircuitBreakerRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableMsSgCircuitBreakerRuleResponse());
    }

    public EnableMsSgCircuitBreakerRuleResponse enableMsSgCircuitBreakerRule(EnableMsSgCircuitBreakerRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableMsSgCircuitBreakerRuleWithOptions(request, runtime);
    }

    public EnableMsSgDowngradeResponse enableMsSgDowngradeWithOptions(EnableMsSgDowngradeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableMsSgDowngrade", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableMsSgDowngradeResponse());
    }

    public EnableMsSgDowngradeResponse enableMsSgDowngrade(EnableMsSgDowngradeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableMsSgDowngradeWithOptions(request, runtime);
    }

    public EnableMsSgDowngradegroupResponse enableMsSgDowngradegroupWithOptions(EnableMsSgDowngradegroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableMsSgDowngradegroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableMsSgDowngradegroupResponse());
    }

    public EnableMsSgDowngradegroupResponse enableMsSgDowngradegroup(EnableMsSgDowngradegroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableMsSgDowngradegroupWithOptions(request, runtime);
    }

    public EnableMsSgFaultToleranceResponse enableMsSgFaultToleranceWithOptions(EnableMsSgFaultToleranceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableMsSgFaultTolerance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableMsSgFaultToleranceResponse());
    }

    public EnableMsSgFaultToleranceResponse enableMsSgFaultTolerance(EnableMsSgFaultToleranceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableMsSgFaultToleranceWithOptions(request, runtime);
    }

    public EnableMsSgServiceParamsResponse enableMsSgServiceParamsWithOptions(EnableMsSgServiceParamsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableMsSgServiceParams", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableMsSgServiceParamsResponse());
    }

    public EnableMsSgServiceParamsResponse enableMsSgServiceParams(EnableMsSgServiceParamsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableMsSgServiceParamsWithOptions(request, runtime);
    }

    public EnableMsTransparentProxyNodeResponse enableMsTransparentProxyNodeWithOptions(EnableMsTransparentProxyNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableMsTransparentProxyNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableMsTransparentProxyNodeResponse());
    }

    public EnableMsTransparentProxyNodeResponse enableMsTransparentProxyNode(EnableMsTransparentProxyNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableMsTransparentProxyNodeWithOptions(request, runtime);
    }

    public EnableTSJobItemResponse enableTSJobItemWithOptions(EnableTSJobItemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("EnableTSJobItem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new EnableTSJobItemResponse());
    }

    public EnableTSJobItemResponse enableTSJobItem(EnableTSJobItemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.enableTSJobItemWithOptions(request, runtime);
    }

    public ExecAKSBuildResponse execAKSBuildWithOptions(ExecAKSBuildRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecAKSBuild", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecAKSBuildResponse());
    }

    public ExecAKSBuildResponse execAKSBuild(ExecAKSBuildRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execAKSBuildWithOptions(request, runtime);
    }

    public ExecAKSNodeNoscheduleResponse execAKSNodeNoscheduleWithOptions(ExecAKSNodeNoscheduleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecAKSNodeNoschedule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecAKSNodeNoscheduleResponse());
    }

    public ExecAKSNodeNoscheduleResponse execAKSNodeNoschedule(ExecAKSNodeNoscheduleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execAKSNodeNoscheduleWithOptions(request, runtime);
    }

    public ExecAKSNodeScheduleResponse execAKSNodeScheduleWithOptions(ExecAKSNodeScheduleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecAKSNodeSchedule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecAKSNodeScheduleResponse());
    }

    public ExecAKSNodeScheduleResponse execAKSNodeSchedule(ExecAKSNodeScheduleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execAKSNodeScheduleWithOptions(request, runtime);
    }

    public ExecAKSPlanResponse execAKSPlanWithOptions(ExecAKSPlanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecAKSPlan", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecAKSPlanResponse());
    }

    public ExecAKSPlanResponse execAKSPlan(ExecAKSPlanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execAKSPlanWithOptions(request, runtime);
    }

    public ExecDWSJwriterMigrateResponse execDWSJwriterMigrateWithOptions(ExecDWSJwriterMigrateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecDWSJwriterMigrate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecDWSJwriterMigrateResponse());
    }

    public ExecDWSJwriterMigrateResponse execDWSJwriterMigrate(ExecDWSJwriterMigrateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execDWSJwriterMigrateWithOptions(request, runtime);
    }

    public ExecDWSJwriterUpdateResponse execDWSJwriterUpdateWithOptions(ExecDWSJwriterUpdateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecDWSJwriterUpdate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecDWSJwriterUpdateResponse());
    }

    public ExecDWSJwriterUpdateResponse execDWSJwriterUpdate(ExecDWSJwriterUpdateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execDWSJwriterUpdateWithOptions(request, runtime);
    }

    public ExecDWSStoreClearResponse execDWSStoreClearWithOptions(ExecDWSStoreClearRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecDWSStoreClear", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecDWSStoreClearResponse());
    }

    public ExecDWSStoreClearResponse execDWSStoreClear(ExecDWSStoreClearRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execDWSStoreClearWithOptions(request, runtime);
    }

    public ExecDWSStoreCreateResponse execDWSStoreCreateWithOptions(ExecDWSStoreCreateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecDWSStoreCreate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecDWSStoreCreateResponse());
    }

    public ExecDWSStoreCreateResponse execDWSStoreCreate(ExecDWSStoreCreateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execDWSStoreCreateWithOptions(request, runtime);
    }

    public ExecDWSStoreDestroyResponse execDWSStoreDestroyWithOptions(ExecDWSStoreDestroyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecDWSStoreDestroy", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecDWSStoreDestroyResponse());
    }

    public ExecDWSStoreDestroyResponse execDWSStoreDestroy(ExecDWSStoreDestroyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execDWSStoreDestroyWithOptions(request, runtime);
    }

    public ExecDWSStoreRestartResponse execDWSStoreRestartWithOptions(ExecDWSStoreRestartRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecDWSStoreRestart", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecDWSStoreRestartResponse());
    }

    public ExecDWSStoreRestartResponse execDWSStoreRestart(ExecDWSStoreRestartRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execDWSStoreRestartWithOptions(request, runtime);
    }

    public ExecDWSStoreRestoreResponse execDWSStoreRestoreWithOptions(ExecDWSStoreRestoreRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecDWSStoreRestore", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecDWSStoreRestoreResponse());
    }

    public ExecDWSStoreRestoreResponse execDWSStoreRestore(ExecDWSStoreRestoreRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execDWSStoreRestoreWithOptions(request, runtime);
    }

    public ExecHasApprovalNwacceptResponse execHasApprovalNwacceptWithOptions(ExecHasApprovalNwacceptRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasApprovalNwaccept", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasApprovalNwacceptResponse());
    }

    public ExecHasApprovalNwacceptResponse execHasApprovalNwaccept(ExecHasApprovalNwacceptRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasApprovalNwacceptWithOptions(request, runtime);
    }

    public ExecHasApprovalNwcancelResponse execHasApprovalNwcancelWithOptions(ExecHasApprovalNwcancelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasApprovalNwcancel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasApprovalNwcancelResponse());
    }

    public ExecHasApprovalNwcancelResponse execHasApprovalNwcancel(ExecHasApprovalNwcancelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasApprovalNwcancelWithOptions(request, runtime);
    }

    public ExecHasApprovalNwforwardResponse execHasApprovalNwforwardWithOptions(ExecHasApprovalNwforwardRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasApprovalNwforward", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasApprovalNwforwardResponse());
    }

    public ExecHasApprovalNwforwardResponse execHasApprovalNwforward(ExecHasApprovalNwforwardRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasApprovalNwforwardWithOptions(request, runtime);
    }

    public ExecHasApprovalNwrejectResponse execHasApprovalNwrejectWithOptions(ExecHasApprovalNwrejectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasApprovalNwreject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasApprovalNwrejectResponse());
    }

    public ExecHasApprovalNwrejectResponse execHasApprovalNwreject(ExecHasApprovalNwrejectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasApprovalNwrejectWithOptions(request, runtime);
    }

    public ExecHasAuthlogoutResponse execHasAuthlogoutWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ExecHasAuthlogout", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasAuthlogoutResponse());
    }

    public ExecHasAuthlogoutResponse execHasAuthlogout() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasAuthlogoutWithOptions(runtime);
    }

    public ExecHasDiagnosisNodebindruleResponse execHasDiagnosisNodebindruleWithOptions(ExecHasDiagnosisNodebindruleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasDiagnosisNodebindrule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasDiagnosisNodebindruleResponse());
    }

    public ExecHasDiagnosisNodebindruleResponse execHasDiagnosisNodebindrule(ExecHasDiagnosisNodebindruleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasDiagnosisNodebindruleWithOptions(request, runtime);
    }

    public ExecHasDiagnosisNodeunbindruleResponse execHasDiagnosisNodeunbindruleWithOptions(ExecHasDiagnosisNodeunbindruleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasDiagnosisNodeunbindrule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasDiagnosisNodeunbindruleResponse());
    }

    public ExecHasDiagnosisNodeunbindruleResponse execHasDiagnosisNodeunbindrule(ExecHasDiagnosisNodeunbindruleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasDiagnosisNodeunbindruleWithOptions(request, runtime);
    }

    public ExecHasDiagPlanResponse execHasDiagPlanWithOptions(ExecHasDiagPlanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasDiagPlan", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasDiagPlanResponse());
    }

    public ExecHasDiagPlanResponse execHasDiagPlan(ExecHasDiagPlanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasDiagPlanWithOptions(request, runtime);
    }

    public ExecHasEmergencyOrderResponse execHasEmergencyOrderWithOptions(ExecHasEmergencyOrderRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasEmergencyOrder", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasEmergencyOrderResponse());
    }

    public ExecHasEmergencyOrderResponse execHasEmergencyOrder(ExecHasEmergencyOrderRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasEmergencyOrderWithOptions(request, runtime);
    }

    public ExecHasEmergencyordersResponse execHasEmergencyordersWithOptions(ExecHasEmergencyordersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasEmergencyorders", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasEmergencyordersResponse());
    }

    public ExecHasEmergencyordersResponse execHasEmergencyorders(ExecHasEmergencyordersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasEmergencyordersWithOptions(request, runtime);
    }

    public ExecHasInspectBindmissionResponse execHasInspectBindmissionWithOptions(ExecHasInspectBindmissionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectBindmission", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectBindmissionResponse());
    }

    public ExecHasInspectBindmissionResponse execHasInspectBindmission(ExecHasInspectBindmissionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectBindmissionWithOptions(request, runtime);
    }

    public ExecHasInspectFixmissionscheduleResponse execHasInspectFixmissionscheduleWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectFixmissionschedule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectFixmissionscheduleResponse());
    }

    public ExecHasInspectFixmissionscheduleResponse execHasInspectFixmissionschedule() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectFixmissionscheduleWithOptions(runtime);
    }

    public ExecHasInspectFixreportResponse execHasInspectFixreportWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectFixreport", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectFixreportResponse());
    }

    public ExecHasInspectFixreportResponse execHasInspectFixreport() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectFixreportWithOptions(runtime);
    }

    public ExecHasInspectJavaplugincopyResponse execHasInspectJavaplugincopyWithOptions(ExecHasInspectJavaplugincopyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectJavaplugincopy", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectJavaplugincopyResponse());
    }

    public ExecHasInspectJavaplugincopyResponse execHasInspectJavaplugincopy(ExecHasInspectJavaplugincopyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectJavaplugincopyWithOptions(request, runtime);
    }

    public ExecHasInspectMissionResponse execHasInspectMissionWithOptions(ExecHasInspectMissionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectMission", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectMissionResponse());
    }

    public ExecHasInspectMissionResponse execHasInspectMission(ExecHasInspectMissionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectMissionWithOptions(request, runtime);
    }

    public ExecHasInspectPluginapplyforpublishResponse execHasInspectPluginapplyforpublishWithOptions(ExecHasInspectPluginapplyforpublishRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectPluginapplyforpublish", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectPluginapplyforpublishResponse());
    }

    public ExecHasInspectPluginapplyforpublishResponse execHasInspectPluginapplyforpublish(ExecHasInspectPluginapplyforpublishRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectPluginapplyforpublishWithOptions(request, runtime);
    }

    public ExecHasInspectPluginistestedResponse execHasInspectPluginistestedWithOptions(ExecHasInspectPluginistestedRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectPluginistested", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectPluginistestedResponse());
    }

    public ExecHasInspectPluginistestedResponse execHasInspectPluginistested(ExecHasInspectPluginistestedRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectPluginistestedWithOptions(request, runtime);
    }

    public ExecHasInspectPluginpublishResponse execHasInspectPluginpublishWithOptions(ExecHasInspectPluginpublishRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectPluginpublish", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectPluginpublishResponse());
    }

    public ExecHasInspectPluginpublishResponse execHasInspectPluginpublish(ExecHasInspectPluginpublishRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectPluginpublishWithOptions(request, runtime);
    }

    public ExecHasInspectPublishruleResponse execHasInspectPublishruleWithOptions(ExecHasInspectPublishruleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectPublishrule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectPublishruleResponse());
    }

    public ExecHasInspectPublishruleResponse execHasInspectPublishrule(ExecHasInspectPublishruleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectPublishruleWithOptions(request, runtime);
    }

    public ExecHasInspectPythonplugincopyResponse execHasInspectPythonplugincopyWithOptions(ExecHasInspectPythonplugincopyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectPythonplugincopy", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectPythonplugincopyResponse());
    }

    public ExecHasInspectPythonplugincopyResponse execHasInspectPythonplugincopy(ExecHasInspectPythonplugincopyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectPythonplugincopyWithOptions(request, runtime);
    }

    public ExecHasInspectRebindallruleResponse execHasInspectRebindallruleWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectRebindallrule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectRebindallruleResponse());
    }

    public ExecHasInspectRebindallruleResponse execHasInspectRebindallrule() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectRebindallruleWithOptions(runtime);
    }

    public ExecHasInspectRuleapplyfordeleteResponse execHasInspectRuleapplyfordeleteWithOptions(ExecHasInspectRuleapplyfordeleteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectRuleapplyfordelete", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectRuleapplyfordeleteResponse());
    }

    public ExecHasInspectRuleapplyfordeleteResponse execHasInspectRuleapplyfordelete(ExecHasInspectRuleapplyfordeleteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectRuleapplyfordeleteWithOptions(request, runtime);
    }

    public ExecHasInspectRuleapplyforpublishResponse execHasInspectRuleapplyforpublishWithOptions(ExecHasInspectRuleapplyforpublishRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectRuleapplyforpublish", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectRuleapplyforpublishResponse());
    }

    public ExecHasInspectRuleapplyforpublishResponse execHasInspectRuleapplyforpublish(ExecHasInspectRuleapplyforpublishRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectRuleapplyforpublishWithOptions(request, runtime);
    }

    public ExecHasInspectRuleapplyforupdateResponse execHasInspectRuleapplyforupdateWithOptions(ExecHasInspectRuleapplyforupdateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectRuleapplyforupdate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectRuleapplyforupdateResponse());
    }

    public ExecHasInspectRuleapplyforupdateResponse execHasInspectRuleapplyforupdate(ExecHasInspectRuleapplyforupdateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectRuleapplyforupdateWithOptions(request, runtime);
    }

    public ExecHasInspectRulebacktotestResponse execHasInspectRulebacktotestWithOptions(ExecHasInspectRulebacktotestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectRulebacktotest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectRulebacktotestResponse());
    }

    public ExecHasInspectRulebacktotestResponse execHasInspectRulebacktotest(ExecHasInspectRulebacktotestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectRulebacktotestWithOptions(request, runtime);
    }

    public ExecHasInspectRuleistestedResponse execHasInspectRuleistestedWithOptions(ExecHasInspectRuleistestedRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectRuleistested", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectRuleistestedResponse());
    }

    public ExecHasInspectRuleistestedResponse execHasInspectRuleistested(ExecHasInspectRuleistestedRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectRuleistestedWithOptions(request, runtime);
    }

    public ExecHasInspectSavejavacodeResponse execHasInspectSavejavacodeWithOptions(ExecHasInspectSavejavacodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectSavejavacode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectSavejavacodeResponse());
    }

    public ExecHasInspectSavejavacodeResponse execHasInspectSavejavacode(ExecHasInspectSavejavacodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectSavejavacodeWithOptions(request, runtime);
    }

    public ExecHasInspectSavepythoncodeResponse execHasInspectSavepythoncodeWithOptions(ExecHasInspectSavepythoncodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectSavepythoncode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectSavepythoncodeResponse());
    }

    public ExecHasInspectSavepythoncodeResponse execHasInspectSavepythoncode(ExecHasInspectSavepythoncodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectSavepythoncodeWithOptions(request, runtime);
    }

    public ExecHasInspectSaveshellcodeResponse execHasInspectSaveshellcodeWithOptions(ExecHasInspectSaveshellcodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectSaveshellcode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectSaveshellcodeResponse());
    }

    public ExecHasInspectSaveshellcodeResponse execHasInspectSaveshellcode(ExecHasInspectSaveshellcodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectSaveshellcodeWithOptions(request, runtime);
    }

    public ExecHasInspectShellplugincopyResponse execHasInspectShellplugincopyWithOptions(ExecHasInspectShellplugincopyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectShellplugincopy", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectShellplugincopyResponse());
    }

    public ExecHasInspectShellplugincopyResponse execHasInspectShellplugincopy(ExecHasInspectShellplugincopyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectShellplugincopyWithOptions(request, runtime);
    }

    public ExecHasInspectUnbindmissionResponse execHasInspectUnbindmissionWithOptions(ExecHasInspectUnbindmissionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasInspectUnbindmission", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasInspectUnbindmissionResponse());
    }

    public ExecHasInspectUnbindmissionResponse execHasInspectUnbindmission(ExecHasInspectUnbindmissionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasInspectUnbindmissionWithOptions(request, runtime);
    }

    public ExecHasRiskAggregationassociatesceneResponse execHasRiskAggregationassociatesceneWithOptions(ExecHasRiskAggregationassociatesceneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecHasRiskAggregationassociatescene", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecHasRiskAggregationassociatesceneResponse());
    }

    public ExecHasRiskAggregationassociatesceneResponse execHasRiskAggregationassociatescene(ExecHasRiskAggregationassociatesceneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execHasRiskAggregationassociatesceneWithOptions(request, runtime);
    }

    public ExecLDCOpsplanAppopstaskResponse execLDCOpsplanAppopstaskWithOptions(ExecLDCOpsplanAppopstaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLDCOpsplanAppopstask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLDCOpsplanAppopstaskResponse());
    }

    public ExecLDCOpsplanAppopstaskResponse execLDCOpsplanAppopstask(ExecLDCOpsplanAppopstaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLDCOpsplanAppopstaskWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeAcceptprojectreviewResponse execLinkeantcodeAntcodeAcceptprojectreviewWithOptions(ExecLinkeantcodeAntcodeAcceptprojectreviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeAcceptprojectreview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeAcceptprojectreviewResponse());
    }

    public ExecLinkeantcodeAntcodeAcceptprojectreviewResponse execLinkeantcodeAntcodeAcceptprojectreview(ExecLinkeantcodeAntcodeAcceptprojectreviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeAcceptprojectreviewWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeAcceptreviewResponse execLinkeantcodeAntcodeAcceptreviewWithOptions(ExecLinkeantcodeAntcodeAcceptreviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeAcceptreview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeAcceptreviewResponse());
    }

    public ExecLinkeantcodeAntcodeAcceptreviewResponse execLinkeantcodeAntcodeAcceptreview(ExecLinkeantcodeAntcodeAcceptreviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeAcceptreviewWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeAcipipelinewebhookResponse execLinkeantcodeAntcodeAcipipelinewebhookWithOptions(ExecLinkeantcodeAntcodeAcipipelinewebhookRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeAcipipelinewebhook", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeAcipipelinewebhookResponse());
    }

    public ExecLinkeantcodeAntcodeAcipipelinewebhookResponse execLinkeantcodeAntcodeAcipipelinewebhook(ExecLinkeantcodeAntcodeAcipipelinewebhookRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeAcipipelinewebhookWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeBlobssearchResponse execLinkeantcodeAntcodeBlobssearchWithOptions(ExecLinkeantcodeAntcodeBlobssearchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeBlobssearch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeBlobssearchResponse());
    }

    public ExecLinkeantcodeAntcodeBlobssearchResponse execLinkeantcodeAntcodeBlobssearch(ExecLinkeantcodeAntcodeBlobssearchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeBlobssearchWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeCommitreviewResponse execLinkeantcodeAntcodeCommitreviewWithOptions(ExecLinkeantcodeAntcodeCommitreviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeCommitreview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeCommitreviewResponse());
    }

    public ExecLinkeantcodeAntcodeCommitreviewResponse execLinkeantcodeAntcodeCommitreview(ExecLinkeantcodeAntcodeCommitreviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeCommitreviewWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeComplexfindfilesResponse execLinkeantcodeAntcodeComplexfindfilesWithOptions(ExecLinkeantcodeAntcodeComplexfindfilesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeComplexfindfiles", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeComplexfindfilesResponse());
    }

    public ExecLinkeantcodeAntcodeComplexfindfilesResponse execLinkeantcodeAntcodeComplexfindfiles(ExecLinkeantcodeAntcodeComplexfindfilesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeComplexfindfilesWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeDoprojectbranchmergeResponse execLinkeantcodeAntcodeDoprojectbranchmergeWithOptions(ExecLinkeantcodeAntcodeDoprojectbranchmergeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeDoprojectbranchmerge", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeDoprojectbranchmergeResponse());
    }

    public ExecLinkeantcodeAntcodeDoprojectbranchmergeResponse execLinkeantcodeAntcodeDoprojectbranchmerge(ExecLinkeantcodeAntcodeDoprojectbranchmergeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeDoprojectbranchmergeWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeLockprojectvariableResponse execLinkeantcodeAntcodeLockprojectvariableWithOptions(ExecLinkeantcodeAntcodeLockprojectvariableRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeLockprojectvariable", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeLockprojectvariableResponse());
    }

    public ExecLinkeantcodeAntcodeLockprojectvariableResponse execLinkeantcodeAntcodeLockprojectvariable(ExecLinkeantcodeAntcodeLockprojectvariableRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeLockprojectvariableWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeManualbranchpipelineResponse execLinkeantcodeAntcodeManualbranchpipelineWithOptions(ExecLinkeantcodeAntcodeManualbranchpipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeManualbranchpipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeManualbranchpipelineResponse());
    }

    public ExecLinkeantcodeAntcodeManualbranchpipelineResponse execLinkeantcodeAntcodeManualbranchpipeline(ExecLinkeantcodeAntcodeManualbranchpipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeManualbranchpipelineWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeMergepullrequestResponse execLinkeantcodeAntcodeMergepullrequestWithOptions(ExecLinkeantcodeAntcodeMergepullrequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeMergepullrequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeMergepullrequestResponse());
    }

    public ExecLinkeantcodeAntcodeMergepullrequestResponse execLinkeantcodeAntcodeMergepullrequest(ExecLinkeantcodeAntcodeMergepullrequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeMergepullrequestWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeNsubscribepullrequestResponse execLinkeantcodeAntcodeNsubscribepullrequestWithOptions(ExecLinkeantcodeAntcodeNsubscribepullrequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeNsubscribepullrequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeNsubscribepullrequestResponse());
    }

    public ExecLinkeantcodeAntcodeNsubscribepullrequestResponse execLinkeantcodeAntcodeNsubscribepullrequest(ExecLinkeantcodeAntcodeNsubscribepullrequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeNsubscribepullrequestWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeProjectbranchmergeResponse execLinkeantcodeAntcodeProjectbranchmergeWithOptions(ExecLinkeantcodeAntcodeProjectbranchmergeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeProjectbranchmerge", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeProjectbranchmergeResponse());
    }

    public ExecLinkeantcodeAntcodeProjectbranchmergeResponse execLinkeantcodeAntcodeProjectbranchmerge(ExecLinkeantcodeAntcodeProjectbranchmergeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeProjectbranchmergeWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeProjectrepositorysearchResponse execLinkeantcodeAntcodeProjectrepositorysearchWithOptions(ExecLinkeantcodeAntcodeProjectrepositorysearchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeProjectrepositorysearch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeProjectrepositorysearchResponse());
    }

    public ExecLinkeantcodeAntcodeProjectrepositorysearchResponse execLinkeantcodeAntcodeProjectrepositorysearch(ExecLinkeantcodeAntcodeProjectrepositorysearchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeProjectrepositorysearchWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeProjectsgcResponse execLinkeantcodeAntcodeProjectsgcWithOptions(ExecLinkeantcodeAntcodeProjectsgcRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeProjectsgc", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeProjectsgcResponse());
    }

    public ExecLinkeantcodeAntcodeProjectsgcResponse execLinkeantcodeAntcodeProjectsgc(ExecLinkeantcodeAntcodeProjectsgcRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeProjectsgcWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeProtectbranchbynameResponse execLinkeantcodeAntcodeProtectbranchbynameWithOptions(ExecLinkeantcodeAntcodeProtectbranchbynameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeProtectbranchbyname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeProtectbranchbynameResponse());
    }

    public ExecLinkeantcodeAntcodeProtectbranchbynameResponse execLinkeantcodeAntcodeProtectbranchbyname(ExecLinkeantcodeAntcodeProtectbranchbynameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeProtectbranchbynameWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeProtectbrancheResponse execLinkeantcodeAntcodeProtectbrancheWithOptions(ExecLinkeantcodeAntcodeProtectbrancheRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeProtectbranche", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeProtectbrancheResponse());
    }

    public ExecLinkeantcodeAntcodeProtectbrancheResponse execLinkeantcodeAntcodeProtectbranche(ExecLinkeantcodeAntcodeProtectbrancheRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeProtectbrancheWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeRebasepullrequestResponse execLinkeantcodeAntcodeRebasepullrequestWithOptions(ExecLinkeantcodeAntcodeRebasepullrequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeRebasepullrequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeRebasepullrequestResponse());
    }

    public ExecLinkeantcodeAntcodeRebasepullrequestResponse execLinkeantcodeAntcodeRebasepullrequest(ExecLinkeantcodeAntcodeRebasepullrequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeRebasepullrequestWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeRecovermanagementResponse execLinkeantcodeAntcodeRecovermanagementWithOptions(ExecLinkeantcodeAntcodeRecovermanagementRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeRecovermanagement", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeRecovermanagementResponse());
    }

    public ExecLinkeantcodeAntcodeRecovermanagementResponse execLinkeantcodeAntcodeRecovermanagement(ExecLinkeantcodeAntcodeRecovermanagementRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeRecovermanagementWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeRerunfailedbypipelineResponse execLinkeantcodeAntcodeRerunfailedbypipelineWithOptions(ExecLinkeantcodeAntcodeRerunfailedbypipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeRerunfailedbypipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeRerunfailedbypipelineResponse());
    }

    public ExecLinkeantcodeAntcodeRerunfailedbypipelineResponse execLinkeantcodeAntcodeRerunfailedbypipeline(ExecLinkeantcodeAntcodeRerunfailedbypipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeRerunfailedbypipelineWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeReturnfailedpipelinejobsResponse execLinkeantcodeAntcodeReturnfailedpipelinejobsWithOptions(ExecLinkeantcodeAntcodeReturnfailedpipelinejobsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeReturnfailedpipelinejobs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeReturnfailedpipelinejobsResponse());
    }

    public ExecLinkeantcodeAntcodeReturnfailedpipelinejobsResponse execLinkeantcodeAntcodeReturnfailedpipelinejobs(ExecLinkeantcodeAntcodeReturnfailedpipelinejobsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeReturnfailedpipelinejobsWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeRevokepersonalaccesstokenResponse execLinkeantcodeAntcodeRevokepersonalaccesstokenWithOptions(ExecLinkeantcodeAntcodeRevokepersonalaccesstokenRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeRevokepersonalaccesstoken", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeRevokepersonalaccesstokenResponse());
    }

    public ExecLinkeantcodeAntcodeRevokepersonalaccesstokenResponse execLinkeantcodeAntcodeRevokepersonalaccesstoken(ExecLinkeantcodeAntcodeRevokepersonalaccesstokenRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeRevokepersonalaccesstokenWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeStartprojectResponse execLinkeantcodeAntcodeStartprojectWithOptions(ExecLinkeantcodeAntcodeStartprojectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeStartproject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeStartprojectResponse());
    }

    public ExecLinkeantcodeAntcodeStartprojectResponse execLinkeantcodeAntcodeStartproject(ExecLinkeantcodeAntcodeStartprojectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeStartprojectWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeSubscribepullrequestsResponse execLinkeantcodeAntcodeSubscribepullrequestsWithOptions(ExecLinkeantcodeAntcodeSubscribepullrequestsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeSubscribepullrequests", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeSubscribepullrequestsResponse());
    }

    public ExecLinkeantcodeAntcodeSubscribepullrequestsResponse execLinkeantcodeAntcodeSubscribepullrequests(ExecLinkeantcodeAntcodeSubscribepullrequestsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeSubscribepullrequestsWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeTesthookResponse execLinkeantcodeAntcodeTesthookWithOptions(ExecLinkeantcodeAntcodeTesthookRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeTesthook", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeTesthookResponse());
    }

    public ExecLinkeantcodeAntcodeTesthookResponse execLinkeantcodeAntcodeTesthook(ExecLinkeantcodeAntcodeTesthookRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeTesthookWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeUnlockprojectvariableResponse execLinkeantcodeAntcodeUnlockprojectvariableWithOptions(ExecLinkeantcodeAntcodeUnlockprojectvariableRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeUnlockprojectvariable", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeUnlockprojectvariableResponse());
    }

    public ExecLinkeantcodeAntcodeUnlockprojectvariableResponse execLinkeantcodeAntcodeUnlockprojectvariable(ExecLinkeantcodeAntcodeUnlockprojectvariableRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeUnlockprojectvariableWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeUnprotectbranchbynameResponse execLinkeantcodeAntcodeUnprotectbranchbynameWithOptions(ExecLinkeantcodeAntcodeUnprotectbranchbynameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeUnprotectbranchbyname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeUnprotectbranchbynameResponse());
    }

    public ExecLinkeantcodeAntcodeUnprotectbranchbynameResponse execLinkeantcodeAntcodeUnprotectbranchbyname(ExecLinkeantcodeAntcodeUnprotectbranchbynameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeUnprotectbranchbynameWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeUnprotectbrancheResponse execLinkeantcodeAntcodeUnprotectbrancheWithOptions(ExecLinkeantcodeAntcodeUnprotectbrancheRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeUnprotectbranche", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeUnprotectbrancheResponse());
    }

    public ExecLinkeantcodeAntcodeUnprotectbrancheResponse execLinkeantcodeAntcodeUnprotectbranche(ExecLinkeantcodeAntcodeUnprotectbrancheRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeUnprotectbrancheWithOptions(request, runtime);
    }

    public ExecLinkeantcodeAntcodeUsertrackResponse execLinkeantcodeAntcodeUsertrackWithOptions(ExecLinkeantcodeAntcodeUsertrackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeantcodeAntcodeUsertrack", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeantcodeAntcodeUsertrackResponse());
    }

    public ExecLinkeantcodeAntcodeUsertrackResponse execLinkeantcodeAntcodeUsertrack(ExecLinkeantcodeAntcodeUsertrackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeantcodeAntcodeUsertrackWithOptions(request, runtime);
    }

    public ExecLinkeBahamutAppcustomciexecuteonceResponse execLinkeBahamutAppcustomciexecuteonceWithOptions(ExecLinkeBahamutAppcustomciexecuteonceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeBahamutAppcustomciexecuteonce", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeBahamutAppcustomciexecuteonceResponse());
    }

    public ExecLinkeBahamutAppcustomciexecuteonceResponse execLinkeBahamutAppcustomciexecuteonce(ExecLinkeBahamutAppcustomciexecuteonceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeBahamutAppcustomciexecuteonceWithOptions(request, runtime);
    }

    public ExecLinkeBahamutAppcustompipelineResponse execLinkeBahamutAppcustompipelineWithOptions(ExecLinkeBahamutAppcustompipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeBahamutAppcustompipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeBahamutAppcustompipelineResponse());
    }

    public ExecLinkeBahamutAppcustompipelineResponse execLinkeBahamutAppcustompipeline(ExecLinkeBahamutAppcustompipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeBahamutAppcustompipelineWithOptions(request, runtime);
    }

    public ExecLinkeBahamutCompleteunitswheniterationcompletedResponse execLinkeBahamutCompleteunitswheniterationcompletedWithOptions(ExecLinkeBahamutCompleteunitswheniterationcompletedRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeBahamutCompleteunitswheniterationcompleted", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeBahamutCompleteunitswheniterationcompletedResponse());
    }

    public ExecLinkeBahamutCompleteunitswheniterationcompletedResponse execLinkeBahamutCompleteunitswheniterationcompleted(ExecLinkeBahamutCompleteunitswheniterationcompletedRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeBahamutCompleteunitswheniterationcompletedWithOptions(request, runtime);
    }

    public ExecLinkeBahamutEnvinmultienvResponse execLinkeBahamutEnvinmultienvWithOptions(ExecLinkeBahamutEnvinmultienvRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeBahamutEnvinmultienv", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeBahamutEnvinmultienvResponse());
    }

    public ExecLinkeBahamutEnvinmultienvResponse execLinkeBahamutEnvinmultienv(ExecLinkeBahamutEnvinmultienvRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeBahamutEnvinmultienvWithOptions(request, runtime);
    }

    public ExecLinkeBahamutSearchantcloudappResponse execLinkeBahamutSearchantcloudappWithOptions(ExecLinkeBahamutSearchantcloudappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeBahamutSearchantcloudapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeBahamutSearchantcloudappResponse());
    }

    public ExecLinkeBahamutSearchantcloudappResponse execLinkeBahamutSearchantcloudapp(ExecLinkeBahamutSearchantcloudappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeBahamutSearchantcloudappWithOptions(request, runtime);
    }

    public ExecLinkeBahamutSearchappResponse execLinkeBahamutSearchappWithOptions(ExecLinkeBahamutSearchappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeBahamutSearchapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeBahamutSearchappResponse());
    }

    public ExecLinkeBahamutSearchappResponse execLinkeBahamutSearchapp(ExecLinkeBahamutSearchappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeBahamutSearchappWithOptions(request, runtime);
    }

    public ExecLinkeBahamutSearcharchdomainResponse execLinkeBahamutSearcharchdomainWithOptions(ExecLinkeBahamutSearcharchdomainRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeBahamutSearcharchdomain", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeBahamutSearcharchdomainResponse());
    }

    public ExecLinkeBahamutSearcharchdomainResponse execLinkeBahamutSearcharchdomain(ExecLinkeBahamutSearcharchdomainRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeBahamutSearcharchdomainWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricCloudmsgtaskResponse execLinkefabricFabricCloudmsgtaskWithOptions(ExecLinkefabricFabricCloudmsgtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricCloudmsgtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricCloudmsgtaskResponse());
    }

    public ExecLinkefabricFabricCloudmsgtaskResponse execLinkefabricFabricCloudmsgtask(ExecLinkefabricFabricCloudmsgtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricCloudmsgtaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricCloudschedulerofflinetaskResponse execLinkefabricFabricCloudschedulerofflinetaskWithOptions(ExecLinkefabricFabricCloudschedulerofflinetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricCloudschedulerofflinetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricCloudschedulerofflinetaskResponse());
    }

    public ExecLinkefabricFabricCloudschedulerofflinetaskResponse execLinkefabricFabricCloudschedulerofflinetask(ExecLinkefabricFabricCloudschedulerofflinetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricCloudschedulerofflinetaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricDeletedrmofflinetaskResponse execLinkefabricFabricDeletedrmofflinetaskWithOptions(ExecLinkefabricFabricDeletedrmofflinetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricDeletedrmofflinetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricDeletedrmofflinetaskResponse());
    }

    public ExecLinkefabricFabricDeletedrmofflinetaskResponse execLinkefabricFabricDeletedrmofflinetask(ExecLinkefabricFabricDeletedrmofflinetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricDeletedrmofflinetaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricDeletedrmtaskResponse execLinkefabricFabricDeletedrmtaskWithOptions(ExecLinkefabricFabricDeletedrmtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricDeletedrmtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricDeletedrmtaskResponse());
    }

    public ExecLinkefabricFabricDeletedrmtaskResponse execLinkefabricFabricDeletedrmtask(ExecLinkefabricFabricDeletedrmtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricDeletedrmtaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricGetdrmofflinetaskResponse execLinkefabricFabricGetdrmofflinetaskWithOptions(ExecLinkefabricFabricGetdrmofflinetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricGetdrmofflinetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricGetdrmofflinetaskResponse());
    }

    public ExecLinkefabricFabricGetdrmofflinetaskResponse execLinkefabricFabricGetdrmofflinetask(ExecLinkefabricFabricGetdrmofflinetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricGetdrmofflinetaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricGetdrmtaskResponse execLinkefabricFabricGetdrmtaskWithOptions(ExecLinkefabricFabricGetdrmtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricGetdrmtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricGetdrmtaskResponse());
    }

    public ExecLinkefabricFabricGetdrmtaskResponse execLinkefabricFabricGetdrmtask(ExecLinkefabricFabricGetdrmtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricGetdrmtaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricHeaddrmofflinetaskResponse execLinkefabricFabricHeaddrmofflinetaskWithOptions(ExecLinkefabricFabricHeaddrmofflinetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricHeaddrmofflinetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricHeaddrmofflinetaskResponse());
    }

    public ExecLinkefabricFabricHeaddrmofflinetaskResponse execLinkefabricFabricHeaddrmofflinetask(ExecLinkefabricFabricHeaddrmofflinetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricHeaddrmofflinetaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricHeaddrmtaskResponse execLinkefabricFabricHeaddrmtaskWithOptions(ExecLinkefabricFabricHeaddrmtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricHeaddrmtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricHeaddrmtaskResponse());
    }

    public ExecLinkefabricFabricHeaddrmtaskResponse execLinkefabricFabricHeaddrmtask(ExecLinkefabricFabricHeaddrmtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricHeaddrmtaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricMsgconfigtaskResponse execLinkefabricFabricMsgconfigtaskWithOptions(ExecLinkefabricFabricMsgconfigtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricMsgconfigtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricMsgconfigtaskResponse());
    }

    public ExecLinkefabricFabricMsgconfigtaskResponse execLinkefabricFabricMsgconfigtask(ExecLinkefabricFabricMsgconfigtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricMsgconfigtaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricMsgpretaskResponse execLinkefabricFabricMsgpretaskWithOptions(ExecLinkefabricFabricMsgpretaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricMsgpretask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricMsgpretaskResponse());
    }

    public ExecLinkefabricFabricMsgpretaskResponse execLinkefabricFabricMsgpretask(ExecLinkefabricFabricMsgpretaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricMsgpretaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricOptdrmtaskResponse execLinkefabricFabricOptdrmtaskWithOptions(ExecLinkefabricFabricOptdrmtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricOptdrmtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricOptdrmtaskResponse());
    }

    public ExecLinkefabricFabricOptdrmtaskResponse execLinkefabricFabricOptdrmtask(ExecLinkefabricFabricOptdrmtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricOptdrmtaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricOptionsdrmofflinetaskResponse execLinkefabricFabricOptionsdrmofflinetaskWithOptions(ExecLinkefabricFabricOptionsdrmofflinetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricOptionsdrmofflinetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricOptionsdrmofflinetaskResponse());
    }

    public ExecLinkefabricFabricOptionsdrmofflinetaskResponse execLinkefabricFabricOptionsdrmofflinetask(ExecLinkefabricFabricOptionsdrmofflinetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricOptionsdrmofflinetaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricPatchdrmofflinetaskResponse execLinkefabricFabricPatchdrmofflinetaskWithOptions(ExecLinkefabricFabricPatchdrmofflinetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricPatchdrmofflinetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricPatchdrmofflinetaskResponse());
    }

    public ExecLinkefabricFabricPatchdrmofflinetaskResponse execLinkefabricFabricPatchdrmofflinetask(ExecLinkefabricFabricPatchdrmofflinetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricPatchdrmofflinetaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricPatchdrmtaskResponse execLinkefabricFabricPatchdrmtaskWithOptions(ExecLinkefabricFabricPatchdrmtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricPatchdrmtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricPatchdrmtaskResponse());
    }

    public ExecLinkefabricFabricPatchdrmtaskResponse execLinkefabricFabricPatchdrmtask(ExecLinkefabricFabricPatchdrmtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricPatchdrmtaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricPostdrmofflinetaskResponse execLinkefabricFabricPostdrmofflinetaskWithOptions(ExecLinkefabricFabricPostdrmofflinetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricPostdrmofflinetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricPostdrmofflinetaskResponse());
    }

    public ExecLinkefabricFabricPostdrmofflinetaskResponse execLinkefabricFabricPostdrmofflinetask(ExecLinkefabricFabricPostdrmofflinetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricPostdrmofflinetaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricPostdrmtaskResponse execLinkefabricFabricPostdrmtaskWithOptions(ExecLinkefabricFabricPostdrmtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricPostdrmtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricPostdrmtaskResponse());
    }

    public ExecLinkefabricFabricPostdrmtaskResponse execLinkefabricFabricPostdrmtask(ExecLinkefabricFabricPostdrmtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricPostdrmtaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricPutdrmofflinetaskResponse execLinkefabricFabricPutdrmofflinetaskWithOptions(ExecLinkefabricFabricPutdrmofflinetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricPutdrmofflinetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricPutdrmofflinetaskResponse());
    }

    public ExecLinkefabricFabricPutdrmofflinetaskResponse execLinkefabricFabricPutdrmofflinetask(ExecLinkefabricFabricPutdrmofflinetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricPutdrmofflinetaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricPutdrmtaskResponse execLinkefabricFabricPutdrmtaskWithOptions(ExecLinkefabricFabricPutdrmtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricPutdrmtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricPutdrmtaskResponse());
    }

    public ExecLinkefabricFabricPutdrmtaskResponse execLinkefabricFabricPutdrmtask(ExecLinkefabricFabricPutdrmtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricPutdrmtaskWithOptions(request, runtime);
    }

    public ExecLinkefabricFabricSchedulerofflinetaskResponse execLinkefabricFabricSchedulerofflinetaskWithOptions(ExecLinkefabricFabricSchedulerofflinetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkefabricFabricSchedulerofflinetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkefabricFabricSchedulerofflinetaskResponse());
    }

    public ExecLinkefabricFabricSchedulerofflinetaskResponse execLinkefabricFabricSchedulerofflinetask(ExecLinkefabricFabricSchedulerofflinetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkefabricFabricSchedulerofflinetaskWithOptions(request, runtime);
    }

    public ExecLinkeLinkaHealthcheckResponse execLinkeLinkaHealthcheckWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinkaHealthcheck", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinkaHealthcheckResponse());
    }

    public ExecLinkeLinkaHealthcheckResponse execLinkeLinkaHealthcheck() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinkaHealthcheckWithOptions(runtime);
    }

    public ExecLinkeLinkaResetcoverageResponse execLinkeLinkaResetcoverageWithOptions(ExecLinkeLinkaResetcoverageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinkaResetcoverage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinkaResetcoverageResponse());
    }

    public ExecLinkeLinkaResetcoverageResponse execLinkeLinkaResetcoverage(ExecLinkeLinkaResetcoverageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinkaResetcoverageWithOptions(request, runtime);
    }

    public ExecLinkeLinkaTurnoffonlysummaryandrecreatetaskResponse execLinkeLinkaTurnoffonlysummaryandrecreatetaskWithOptions(ExecLinkeLinkaTurnoffonlysummaryandrecreatetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinkaTurnoffonlysummaryandrecreatetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinkaTurnoffonlysummaryandrecreatetaskResponse());
    }

    public ExecLinkeLinkaTurnoffonlysummaryandrecreatetaskResponse execLinkeLinkaTurnoffonlysummaryandrecreatetask(ExecLinkeLinkaTurnoffonlysummaryandrecreatetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinkaTurnoffonlysummaryandrecreatetaskWithOptions(request, runtime);
    }

    public ExecLinkeLinklogKnowledgefeedbackResponse execLinkeLinklogKnowledgefeedbackWithOptions(ExecLinkeLinklogKnowledgefeedbackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinklogKnowledgefeedback", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinklogKnowledgefeedbackResponse());
    }

    public ExecLinkeLinklogKnowledgefeedbackResponse execLinkeLinklogKnowledgefeedback(ExecLinkeLinklogKnowledgefeedbackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinklogKnowledgefeedbackWithOptions(request, runtime);
    }

    public ExecLinkeLinklogNothitlogsResponse execLinkeLinklogNothitlogsWithOptions(ExecLinkeLinklogNothitlogsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinklogNothitlogs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinklogNothitlogsResponse());
    }

    public ExecLinkeLinklogNothitlogsResponse execLinkeLinklogNothitlogs(ExecLinkeLinklogNothitlogsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinklogNothitlogsWithOptions(request, runtime);
    }

    public ExecLinkeLinktCreatecustomfieldanddaddtotemplateResponse execLinkeLinktCreatecustomfieldanddaddtotemplateWithOptions(ExecLinkeLinktCreatecustomfieldanddaddtotemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktCreatecustomfieldanddaddtotemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktCreatecustomfieldanddaddtotemplateResponse());
    }

    public ExecLinkeLinktCreatecustomfieldanddaddtotemplateResponse execLinkeLinktCreatecustomfieldanddaddtotemplate(ExecLinkeLinktCreatecustomfieldanddaddtotemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktCreatecustomfieldanddaddtotemplateWithOptions(request, runtime);
    }

    public ExecLinkeLinktCreatestatusandaddtoworkflowResponse execLinkeLinktCreatestatusandaddtoworkflowWithOptions(ExecLinkeLinktCreatestatusandaddtoworkflowRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktCreatestatusandaddtoworkflow", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktCreatestatusandaddtoworkflowResponse());
    }

    public ExecLinkeLinktCreatestatusandaddtoworkflowResponse execLinkeLinktCreatestatusandaddtoworkflow(ExecLinkeLinktCreatestatusandaddtoworkflowRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktCreatestatusandaddtoworkflowWithOptions(request, runtime);
    }

    public ExecLinkeLinktCreatestatusandupdatetoworkflowResponse execLinkeLinktCreatestatusandupdatetoworkflowWithOptions(ExecLinkeLinktCreatestatusandupdatetoworkflowRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktCreatestatusandupdatetoworkflow", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktCreatestatusandupdatetoworkflowResponse());
    }

    public ExecLinkeLinktCreatestatusandupdatetoworkflowResponse execLinkeLinktCreatestatusandupdatetoworkflow(ExecLinkeLinktCreatestatusandupdatetoworkflowRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktCreatestatusandupdatetoworkflowWithOptions(request, runtime);
    }

    public ExecLinkeLinktHandoverworkitemreviewResponse execLinkeLinktHandoverworkitemreviewWithOptions(ExecLinkeLinktHandoverworkitemreviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktHandoverworkitemreview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktHandoverworkitemreviewResponse());
    }

    public ExecLinkeLinktHandoverworkitemreviewResponse execLinkeLinktHandoverworkitemreview(ExecLinkeLinktHandoverworkitemreviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktHandoverworkitemreviewWithOptions(request, runtime);
    }

    public ExecLinkeLinktImportResponse execLinkeLinktImportWithOptions(ExecLinkeLinktImportRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktImport", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktImportResponse());
    }

    public ExecLinkeLinktImportResponse execLinkeLinktImport(ExecLinkeLinktImportRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktImportWithOptions(request, runtime);
    }

    public ExecLinkeLinktRisksearchResponse execLinkeLinktRisksearchWithOptions(ExecLinkeLinktRisksearchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktRisksearch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktRisksearchResponse());
    }

    public ExecLinkeLinktRisksearchResponse execLinkeLinktRisksearch(ExecLinkeLinktRisksearchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktRisksearchWithOptions(request, runtime);
    }

    public ExecLinkeLinktSearchprojectsResponse execLinkeLinktSearchprojectsWithOptions(ExecLinkeLinktSearchprojectsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktSearchprojects", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktSearchprojectsResponse());
    }

    public ExecLinkeLinktSearchprojectsResponse execLinkeLinktSearchprojects(ExecLinkeLinktSearchprojectsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktSearchprojectsWithOptions(request, runtime);
    }

    public ExecLinkeLinktSearchtagResponse execLinkeLinktSearchtagWithOptions(ExecLinkeLinktSearchtagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktSearchtag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktSearchtagResponse());
    }

    public ExecLinkeLinktSearchtagResponse execLinkeLinktSearchtag(ExecLinkeLinktSearchtagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktSearchtagWithOptions(request, runtime);
    }

    public ExecLinkeLinktSearchusersResponse execLinkeLinktSearchusersWithOptions(ExecLinkeLinktSearchusersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktSearchusers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktSearchusersResponse());
    }

    public ExecLinkeLinktSearchusersResponse execLinkeLinktSearchusers(ExecLinkeLinktSearchusersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktSearchusersWithOptions(request, runtime);
    }

    public ExecLinkeLinktSearchworkitemResponse execLinkeLinktSearchworkitemWithOptions(ExecLinkeLinktSearchworkitemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktSearchworkitem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktSearchworkitemResponse());
    }

    public ExecLinkeLinktSearchworkitemResponse execLinkeLinktSearchworkitem(ExecLinkeLinktSearchworkitemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktSearchworkitemWithOptions(request, runtime);
    }

    public ExecLinkeLinktSwapworkflowstatuspositionResponse execLinkeLinktSwapworkflowstatuspositionWithOptions(ExecLinkeLinktSwapworkflowstatuspositionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktSwapworkflowstatusposition", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktSwapworkflowstatuspositionResponse());
    }

    public ExecLinkeLinktSwapworkflowstatuspositionResponse execLinkeLinktSwapworkflowstatusposition(ExecLinkeLinktSwapworkflowstatuspositionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktSwapworkflowstatuspositionWithOptions(request, runtime);
    }

    public ExecLinkeLinktTemplatecopyResponse execLinkeLinktTemplatecopyWithOptions(ExecLinkeLinktTemplatecopyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktTemplatecopy", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktTemplatecopyResponse());
    }

    public ExecLinkeLinktTemplatecopyResponse execLinkeLinktTemplatecopy(ExecLinkeLinktTemplatecopyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktTemplatecopyWithOptions(request, runtime);
    }

    public ExecLinkeLinktTemplatescopyResponse execLinkeLinktTemplatescopyWithOptions(ExecLinkeLinktTemplatescopyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktTemplatescopy", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktTemplatescopyResponse());
    }

    public ExecLinkeLinktTemplatescopyResponse execLinkeLinktTemplatescopy(ExecLinkeLinktTemplatescopyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktTemplatescopyWithOptions(request, runtime);
    }

    public ExecLinkeLinktUrgetworkitemreviewResponse execLinkeLinktUrgetworkitemreviewWithOptions(ExecLinkeLinktUrgetworkitemreviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecLinkeLinktUrgetworkitemreview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecLinkeLinktUrgetworkitemreviewResponse());
    }

    public ExecLinkeLinktUrgetworkitemreviewResponse execLinkeLinktUrgetworkitemreview(ExecLinkeLinktUrgetworkitemreviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execLinkeLinktUrgetworkitemreviewWithOptions(request, runtime);
    }

    public ExecTSJobResponse execTSJobWithOptions(ExecTSJobRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExecTSJob", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExecTSJobResponse());
    }

    public ExecTSJobResponse execTSJob(ExecTSJobRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.execTSJobWithOptions(request, runtime);
    }

    public ExistBuildpackResponse existBuildpackWithOptions(ExistBuildpackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExistBuildpack", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExistBuildpackResponse());
    }

    public ExistBuildpackResponse existBuildpack(ExistBuildpackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.existBuildpackWithOptions(request, runtime);
    }

    public ExistCASApplicationResponse existCASApplicationWithOptions(ExistCASApplicationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExistCASApplication", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExistCASApplicationResponse());
    }

    public ExistCASApplicationResponse existCASApplication(ExistCASApplicationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.existCASApplicationWithOptions(request, runtime);
    }

    public ExistCASApplicationPackageResponse existCASApplicationPackageWithOptions(ExistCASApplicationPackageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExistCASApplicationPackage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExistCASApplicationPackageResponse());
    }

    public ExistCASApplicationPackageResponse existCASApplicationPackage(ExistCASApplicationPackageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.existCASApplicationPackageWithOptions(request, runtime);
    }

    public ExistClriskProductSceneResponse existClriskProductSceneWithOptions(ExistClriskProductSceneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExistClriskProductScene", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExistClriskProductSceneResponse());
    }

    public ExistClriskProductSceneResponse existClriskProductScene(ExistClriskProductSceneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.existClriskProductSceneWithOptions(request, runtime);
    }

    public ExistLDCContainerServiceResponse existLDCContainerServiceWithOptions(ExistLDCContainerServiceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExistLDCContainerService", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExistLDCContainerServiceResponse());
    }

    public ExistLDCContainerServiceResponse existLDCContainerService(ExistLDCContainerServiceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.existLDCContainerServiceWithOptions(request, runtime);
    }

    public ExistODPSchemasResponse existODPSchemasWithOptions(ExistODPSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExistODPSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExistODPSchemasResponse());
    }

    public ExistODPSchemasResponse existODPSchemas(ExistODPSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.existODPSchemasWithOptions(request, runtime);
    }

    public ExistTSJobGroupResponse existTSJobGroupWithOptions(ExistTSJobGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExistTSJobGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExistTSJobGroupResponse());
    }

    public ExistTSJobGroupResponse existTSJobGroup(ExistTSJobGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.existTSJobGroupWithOptions(request, runtime);
    }

    public ExistTSJobNameResponse existTSJobNameWithOptions(ExistTSJobNameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExistTSJobName", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExistTSJobNameResponse());
    }

    public ExistTSJobNameResponse existTSJobName(ExistTSJobNameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.existTSJobNameWithOptions(request, runtime);
    }

    public ExportDmsBindingResponse exportDmsBindingWithOptions(ExportDmsBindingRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportDmsBinding", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportDmsBindingResponse());
    }

    public ExportDmsBindingResponse exportDmsBinding(ExportDmsBindingRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportDmsBindingWithOptions(request, runtime);
    }

    public ExportDmsMsgTypeResponse exportDmsMsgTypeWithOptions(ExportDmsMsgTypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportDmsMsgType", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportDmsMsgTypeResponse());
    }

    public ExportDmsMsgTypeResponse exportDmsMsgType(ExportDmsMsgTypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportDmsMsgTypeWithOptions(request, runtime);
    }

    public ExportDTXAppConfigResponse exportDTXAppConfigWithOptions(ExportDTXAppConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportDTXAppConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportDTXAppConfigResponse());
    }

    public ExportDTXAppConfigResponse exportDTXAppConfig(ExportDTXAppConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportDTXAppConfigWithOptions(request, runtime);
    }

    public ExportHasInspectPluginResponse exportHasInspectPluginWithOptions(ExportHasInspectPluginRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportHasInspectPlugin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportHasInspectPluginResponse());
    }

    public ExportHasInspectPluginResponse exportHasInspectPlugin(ExportHasInspectPluginRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportHasInspectPluginWithOptions(request, runtime);
    }

    public ExportHasInspectRuleResponse exportHasInspectRuleWithOptions(ExportHasInspectRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportHasInspectRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportHasInspectRuleResponse());
    }

    public ExportHasInspectRuleResponse exportHasInspectRule(ExportHasInspectRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportHasInspectRuleWithOptions(request, runtime);
    }

    public ExportHasInspectSingledayreportResponse exportHasInspectSingledayreportWithOptions(ExportHasInspectSingledayreportRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportHasInspectSingledayreport", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportHasInspectSingledayreportResponse());
    }

    public ExportHasInspectSingledayreportResponse exportHasInspectSingledayreport(ExportHasInspectSingledayreportRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportHasInspectSingledayreportWithOptions(request, runtime);
    }

    public ExportHasInspectSinglereportResponse exportHasInspectSinglereportWithOptions(ExportHasInspectSinglereportRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportHasInspectSinglereport", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportHasInspectSinglereportResponse());
    }

    public ExportHasInspectSinglereportResponse exportHasInspectSinglereport(ExportHasInspectSinglereportRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportHasInspectSinglereportWithOptions(request, runtime);
    }

    public ExportJobsOssResponse exportJobsOssWithOptions(ExportJobsOssRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportJobsOss", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportJobsOssResponse());
    }

    public ExportJobsOssResponse exportJobsOss(ExportJobsOssRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportJobsOssWithOptions(request, runtime);
    }

    public ExportLDCFlowRuleResponse exportLDCFlowRuleWithOptions(ExportLDCFlowRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportLDCFlowRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportLDCFlowRuleResponse());
    }

    public ExportLDCFlowRuleResponse exportLDCFlowRule(ExportLDCFlowRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportLDCFlowRuleWithOptions(request, runtime);
    }

    public ExportLinkeLinktWorkitemResponse exportLinkeLinktWorkitemWithOptions(ExportLinkeLinktWorkitemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportLinkeLinktWorkitem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportLinkeLinktWorkitemResponse());
    }

    public ExportLinkeLinktWorkitemResponse exportLinkeLinktWorkitem(ExportLinkeLinktWorkitemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportLinkeLinktWorkitemWithOptions(request, runtime);
    }

    public ExportMsDrmResourcesResponse exportMsDrmResourcesWithOptions(ExportMsDrmResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportMsDrmResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportMsDrmResourcesResponse());
    }

    public ExportMsDrmResourcesResponse exportMsDrmResources(ExportMsDrmResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportMsDrmResourcesWithOptions(request, runtime);
    }

    public ExportMsGuardianRulesResponse exportMsGuardianRulesWithOptions(ExportMsGuardianRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportMsGuardianRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportMsGuardianRulesResponse());
    }

    public ExportMsGuardianRulesResponse exportMsGuardianRules(ExportMsGuardianRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportMsGuardianRulesWithOptions(request, runtime);
    }

    public ExportMsSgAuthRuleGroupsResponse exportMsSgAuthRuleGroupsWithOptions(ExportMsSgAuthRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportMsSgAuthRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportMsSgAuthRuleGroupsResponse());
    }

    public ExportMsSgAuthRuleGroupsResponse exportMsSgAuthRuleGroups(ExportMsSgAuthRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportMsSgAuthRuleGroupsWithOptions(request, runtime);
    }

    public ExportMsSgResourceResponse exportMsSgResourceWithOptions(ExportMsSgResourceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportMsSgResource", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportMsSgResourceResponse());
    }

    public ExportMsSgResourceResponse exportMsSgResource(ExportMsSgResourceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportMsSgResourceWithOptions(request, runtime);
    }

    public ExportODPSchemasResponse exportODPSchemasWithOptions(ExportODPSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportODPSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportODPSchemasResponse());
    }

    public ExportODPSchemasResponse exportODPSchemas(ExportODPSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportODPSchemasWithOptions(request, runtime);
    }

    public ExportTSJobsResponse exportTSJobsWithOptions(ExportTSJobsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ExportTSJobs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ExportTSJobsResponse());
    }

    public ExportTSJobsResponse exportTSJobs(ExportTSJobsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.exportTSJobsWithOptions(request, runtime);
    }

    public FinishLinkeantcodeAntcodeAciprojectsidpipelinestaskfinishexecidResponse finishLinkeantcodeAntcodeAciprojectsidpipelinestaskfinishexecidWithOptions(FinishLinkeantcodeAntcodeAciprojectsidpipelinestaskfinishexecidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("FinishLinkeantcodeAntcodeAciprojectsidpipelinestaskfinishexecid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new FinishLinkeantcodeAntcodeAciprojectsidpipelinestaskfinishexecidResponse());
    }

    public FinishLinkeantcodeAntcodeAciprojectsidpipelinestaskfinishexecidResponse finishLinkeantcodeAntcodeAciprojectsidpipelinestaskfinishexecid(FinishLinkeantcodeAntcodeAciprojectsidpipelinestaskfinishexecidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.finishLinkeantcodeAntcodeAciprojectsidpipelinestaskfinishexecidWithOptions(request, runtime);
    }

    public FinishLinkeBahamutTenantinitResponse finishLinkeBahamutTenantinitWithOptions(FinishLinkeBahamutTenantinitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("FinishLinkeBahamutTenantinit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new FinishLinkeBahamutTenantinitResponse());
    }

    public FinishLinkeBahamutTenantinitResponse finishLinkeBahamutTenantinit(FinishLinkeBahamutTenantinitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.finishLinkeBahamutTenantinitWithOptions(request, runtime);
    }

    public FinishLinkelinkflowLinkflowTaskResponse finishLinkelinkflowLinkflowTaskWithOptions(FinishLinkelinkflowLinkflowTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("FinishLinkelinkflowLinkflowTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new FinishLinkelinkflowLinkflowTaskResponse());
    }

    public FinishLinkelinkflowLinkflowTaskResponse finishLinkelinkflowLinkflowTask(FinishLinkelinkflowLinkflowTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.finishLinkelinkflowLinkflowTaskWithOptions(request, runtime);
    }

    public GetAKSAcrRepoResponse getAKSAcrRepoWithOptions(GetAKSAcrRepoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSAcrRepo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSAcrRepoResponse());
    }

    public GetAKSAcrRepoResponse getAKSAcrRepo(GetAKSAcrRepoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSAcrRepoWithOptions(request, runtime);
    }

    public GetAKSAcrTempAccountResponse getAKSAcrTempAccountWithOptions(GetAKSAcrTempAccountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSAcrTempAccount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSAcrTempAccountResponse());
    }

    public GetAKSAcrTempAccountResponse getAKSAcrTempAccount(GetAKSAcrTempAccountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSAcrTempAccountWithOptions(request, runtime);
    }

    public GetAKSClusterNamespaceResponse getAKSClusterNamespaceWithOptions(GetAKSClusterNamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSClusterNamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSClusterNamespaceResponse());
    }

    public GetAKSClusterNamespaceResponse getAKSClusterNamespace(GetAKSClusterNamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSClusterNamespaceWithOptions(request, runtime);
    }

    public GetAKSContainerservicesResponse getAKSContainerservicesWithOptions(GetAKSContainerservicesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSContainerservices", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSContainerservicesResponse());
    }

    public GetAKSContainerservicesResponse getAKSContainerservices(GetAKSContainerservicesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSContainerservicesWithOptions(request, runtime);
    }

    public GetAKSHelmChartResponse getAKSHelmChartWithOptions(GetAKSHelmChartRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSHelmChart", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSHelmChartResponse());
    }

    public GetAKSHelmChartResponse getAKSHelmChart(GetAKSHelmChartRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSHelmChartWithOptions(request, runtime);
    }

    public GetAKSHelmChartDownloadUrlResponse getAKSHelmChartDownloadUrlWithOptions(GetAKSHelmChartDownloadUrlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSHelmChartDownloadUrl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSHelmChartDownloadUrlResponse());
    }

    public GetAKSHelmChartDownloadUrlResponse getAKSHelmChartDownloadUrl(GetAKSHelmChartDownloadUrlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSHelmChartDownloadUrlWithOptions(request, runtime);
    }

    public GetAKSHelmChartPackageTreeResponse getAKSHelmChartPackageTreeWithOptions(GetAKSHelmChartPackageTreeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSHelmChartPackageTree", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSHelmChartPackageTreeResponse());
    }

    public GetAKSHelmChartPackageTreeResponse getAKSHelmChartPackageTree(GetAKSHelmChartPackageTreeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSHelmChartPackageTreeWithOptions(request, runtime);
    }

    public GetAKSHelmChartReleaseResourceResponse getAKSHelmChartReleaseResourceWithOptions(GetAKSHelmChartReleaseResourceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSHelmChartReleaseResource", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSHelmChartReleaseResourceResponse());
    }

    public GetAKSHelmChartReleaseResourceResponse getAKSHelmChartReleaseResource(GetAKSHelmChartReleaseResourceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSHelmChartReleaseResourceWithOptions(request, runtime);
    }

    public GetAKSHelmChartReleaseStatusResponse getAKSHelmChartReleaseStatusWithOptions(GetAKSHelmChartReleaseStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSHelmChartReleaseStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSHelmChartReleaseStatusResponse());
    }

    public GetAKSHelmChartReleaseStatusResponse getAKSHelmChartReleaseStatus(GetAKSHelmChartReleaseStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSHelmChartReleaseStatusWithOptions(request, runtime);
    }

    public GetAKSHelmMainChartReleaseLogResponse getAKSHelmMainChartReleaseLogWithOptions(GetAKSHelmMainChartReleaseLogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSHelmMainChartReleaseLog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSHelmMainChartReleaseLogResponse());
    }

    public GetAKSHelmMainChartReleaseLogResponse getAKSHelmMainChartReleaseLog(GetAKSHelmMainChartReleaseLogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSHelmMainChartReleaseLogWithOptions(request, runtime);
    }

    public GetAKSHelmRepoChartResponse getAKSHelmRepoChartWithOptions(GetAKSHelmRepoChartRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSHelmRepoChart", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSHelmRepoChartResponse());
    }

    public GetAKSHelmRepoChartResponse getAKSHelmRepoChart(GetAKSHelmRepoChartRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSHelmRepoChartWithOptions(request, runtime);
    }

    public GetAKSHelmSubChartReleaseLogResponse getAKSHelmSubChartReleaseLogWithOptions(GetAKSHelmSubChartReleaseLogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSHelmSubChartReleaseLog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSHelmSubChartReleaseLogResponse());
    }

    public GetAKSHelmSubChartReleaseLogResponse getAKSHelmSubChartReleaseLog(GetAKSHelmSubChartReleaseLogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSHelmSubChartReleaseLogWithOptions(request, runtime);
    }

    public GetAKSKubernetesResourceResponse getAKSKubernetesResourceWithOptions(GetAKSKubernetesResourceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSKubernetesResource", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSKubernetesResourceResponse());
    }

    public GetAKSKubernetesResourceResponse getAKSKubernetesResource(GetAKSKubernetesResourceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSKubernetesResourceWithOptions(request, runtime);
    }

    public GetAKSPlanResponse getAKSPlanWithOptions(GetAKSPlanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSPlan", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSPlanResponse());
    }

    public GetAKSPlanResponse getAKSPlan(GetAKSPlanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSPlanWithOptions(request, runtime);
    }

    public GetAKSPlanStatesResponse getAKSPlanStatesWithOptions(GetAKSPlanStatesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSPlanStates", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSPlanStatesResponse());
    }

    public GetAKSPlanStatesResponse getAKSPlanStates(GetAKSPlanStatesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSPlanStatesWithOptions(request, runtime);
    }

    public GetAKSPlanTimeseriesResponse getAKSPlanTimeseriesWithOptions(GetAKSPlanTimeseriesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetAKSPlanTimeseries", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetAKSPlanTimeseriesResponse());
    }

    public GetAKSPlanTimeseriesResponse getAKSPlanTimeseries(GetAKSPlanTimeseriesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getAKSPlanTimeseriesWithOptions(request, runtime);
    }

    public GetBuildpackResponse getBuildpackWithOptions(GetBuildpackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetBuildpack", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetBuildpackResponse());
    }

    public GetBuildpackResponse getBuildpack(GetBuildpackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getBuildpackWithOptions(request, runtime);
    }

    public GetBuildpackCountResponse getBuildpackCountWithOptions(GetBuildpackCountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetBuildpackCount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetBuildpackCountResponse());
    }

    public GetBuildpackCountResponse getBuildpackCount(GetBuildpackCountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getBuildpackCountWithOptions(request, runtime);
    }

    public GetCASAppgrayconfigsResponse getCASAppgrayconfigsWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetCASAppgrayconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetCASAppgrayconfigsResponse());
    }

    public GetCASAppgrayconfigsResponse getCASAppgrayconfigs() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getCASAppgrayconfigsWithOptions(runtime);
    }

    public GetCASApplicationDetailResponse getCASApplicationDetailWithOptions(GetCASApplicationDetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetCASApplicationDetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetCASApplicationDetailResponse());
    }

    public GetCASApplicationDetailResponse getCASApplicationDetail(GetCASApplicationDetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getCASApplicationDetailWithOptions(request, runtime);
    }

    public GetCASApplicationPackageDownloadUrlResponse getCASApplicationPackageDownloadUrlWithOptions(GetCASApplicationPackageDownloadUrlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetCASApplicationPackageDownloadUrl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetCASApplicationPackageDownloadUrlResponse());
    }

    public GetCASApplicationPackageDownloadUrlResponse getCASApplicationPackageDownloadUrl(GetCASApplicationPackageDownloadUrlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getCASApplicationPackageDownloadUrlWithOptions(request, runtime);
    }

    public GetCASApplicationPackageUploadPolicyResponse getCASApplicationPackageUploadPolicyWithOptions(GetCASApplicationPackageUploadPolicyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetCASApplicationPackageUploadPolicy", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetCASApplicationPackageUploadPolicyResponse());
    }

    public GetCASApplicationPackageUploadPolicyResponse getCASApplicationPackageUploadPolicy(GetCASApplicationPackageUploadPolicyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getCASApplicationPackageUploadPolicyWithOptions(request, runtime);
    }

    public GetCasDatabaseResponse getCasDatabaseWithOptions(GetCasDatabaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetCasDatabase", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetCasDatabaseResponse());
    }

    public GetCasDatabaseResponse getCasDatabase(GetCasDatabaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getCasDatabaseWithOptions(request, runtime);
    }

    public GetCasLoadbalanceResponse getCasLoadbalanceWithOptions(GetCasLoadbalanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetCasLoadbalance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetCasLoadbalanceResponse());
    }

    public GetCasLoadbalanceResponse getCasLoadbalance(GetCasLoadbalanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getCasLoadbalanceWithOptions(request, runtime);
    }

    public GetCasRequestResponse getCasRequestWithOptions(GetCasRequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetCasRequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetCasRequestResponse());
    }

    public GetCasRequestResponse getCasRequest(GetCasRequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getCasRequestWithOptions(request, runtime);
    }

    public GetCASSlsLogstoreResponse getCASSlsLogstoreWithOptions(GetCASSlsLogstoreRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetCASSlsLogstore", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetCASSlsLogstoreResponse());
    }

    public GetCASSlsLogstoreResponse getCASSlsLogstore(GetCASSlsLogstoreRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getCASSlsLogstoreWithOptions(request, runtime);
    }

    public GetClriskDataNodeResponse getClriskDataNodeWithOptions(GetClriskDataNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskDataNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskDataNodeResponse());
    }

    public GetClriskDataNodeResponse getClriskDataNode(GetClriskDataNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskDataNodeWithOptions(request, runtime);
    }

    public GetClriskIssueResponse getClriskIssueWithOptions(GetClriskIssueRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskIssue", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskIssueResponse());
    }

    public GetClriskIssueResponse getClriskIssue(GetClriskIssueRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskIssueWithOptions(request, runtime);
    }

    public GetClriskIssueDataResponse getClriskIssueDataWithOptions(GetClriskIssueDataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskIssueData", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskIssueDataResponse());
    }

    public GetClriskIssueDataResponse getClriskIssueData(GetClriskIssueDataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskIssueDataWithOptions(request, runtime);
    }

    public GetClriskModelResponse getClriskModelWithOptions(GetClriskModelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskModel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskModelResponse());
    }

    public GetClriskModelResponse getClriskModel(GetClriskModelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskModelWithOptions(request, runtime);
    }

    public GetClriskOdpsSchemaResponse getClriskOdpsSchemaWithOptions(GetClriskOdpsSchemaRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskOdpsSchema", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskOdpsSchemaResponse());
    }

    public GetClriskOdpsSchemaResponse getClriskOdpsSchema(GetClriskOdpsSchemaRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskOdpsSchemaWithOptions(request, runtime);
    }

    public GetClriskOdpsTemplateResponse getClriskOdpsTemplateWithOptions(GetClriskOdpsTemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskOdpsTemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskOdpsTemplateResponse());
    }

    public GetClriskOdpsTemplateResponse getClriskOdpsTemplate(GetClriskOdpsTemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskOdpsTemplateWithOptions(request, runtime);
    }

    public GetClriskRuleResponse getClriskRuleWithOptions(GetClriskRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskRuleResponse());
    }

    public GetClriskRuleResponse getClriskRule(GetClriskRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskRuleWithOptions(request, runtime);
    }

    public GetClriskRuleResultResponse getClriskRuleResultWithOptions(GetClriskRuleResultRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskRuleResult", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskRuleResultResponse());
    }

    public GetClriskRuleResultResponse getClriskRuleResult(GetClriskRuleResultRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskRuleResultWithOptions(request, runtime);
    }

    public GetClriskSubscriberResponse getClriskSubscriberWithOptions(GetClriskSubscriberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskSubscriber", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskSubscriberResponse());
    }

    public GetClriskSubscriberResponse getClriskSubscriber(GetClriskSubscriberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskSubscriberWithOptions(request, runtime);
    }

    public GetClriskSubscribeUserInfoResponse getClriskSubscribeUserInfoWithOptions(GetClriskSubscribeUserInfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskSubscribeUserInfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskSubscribeUserInfoResponse());
    }

    public GetClriskSubscribeUserInfoResponse getClriskSubscribeUserInfo(GetClriskSubscribeUserInfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskSubscribeUserInfoWithOptions(request, runtime);
    }

    public GetClriskTemplateResponse getClriskTemplateWithOptions(GetClriskTemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskTemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskTemplateResponse());
    }

    public GetClriskTemplateResponse getClriskTemplate(GetClriskTemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskTemplateWithOptions(request, runtime);
    }

    public GetClriskTemplateContrastResponse getClriskTemplateContrastWithOptions(GetClriskTemplateContrastRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskTemplateContrast", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskTemplateContrastResponse());
    }

    public GetClriskTemplateContrastResponse getClriskTemplateContrast(GetClriskTemplateContrastRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskTemplateContrastWithOptions(request, runtime);
    }

    public GetClriskTemplateImportResponse getClriskTemplateImportWithOptions(GetClriskTemplateImportRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskTemplateImport", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskTemplateImportResponse());
    }

    public GetClriskTemplateImportResponse getClriskTemplateImport(GetClriskTemplateImportRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskTemplateImportWithOptions(request, runtime);
    }

    public GetClriskTemplateRuleResponse getClriskTemplateRuleWithOptions(GetClriskTemplateRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskTemplateRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskTemplateRuleResponse());
    }

    public GetClriskTemplateRuleResponse getClriskTemplateRule(GetClriskTemplateRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskTemplateRuleWithOptions(request, runtime);
    }

    public GetClriskUserResponse getClriskUserWithOptions(GetClriskUserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetClriskUser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetClriskUserResponse());
    }

    public GetClriskUserResponse getClriskUser(GetClriskUserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getClriskUserWithOptions(request, runtime);
    }

    public GetDEPSSingleWorkspaceGroupResponse getDEPSSingleWorkspaceGroupWithOptions(GetDEPSSingleWorkspaceGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDEPSSingleWorkspaceGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDEPSSingleWorkspaceGroupResponse());
    }

    public GetDEPSSingleWorkspaceGroupResponse getDEPSSingleWorkspaceGroup(GetDEPSSingleWorkspaceGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDEPSSingleWorkspaceGroupWithOptions(request, runtime);
    }

    public GetDmsBindingTemplateResponse getDmsBindingTemplateWithOptions(GetDmsBindingTemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDmsBindingTemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDmsBindingTemplateResponse());
    }

    public GetDmsBindingTemplateResponse getDmsBindingTemplate(GetDmsBindingTemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDmsBindingTemplateWithOptions(request, runtime);
    }

    public GetDmsMsgTypeTemplateResponse getDmsMsgTypeTemplateWithOptions(GetDmsMsgTypeTemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDmsMsgTypeTemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDmsMsgTypeTemplateResponse());
    }

    public GetDmsMsgTypeTemplateResponse getDmsMsgTypeTemplate(GetDmsMsgTypeTemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDmsMsgTypeTemplateWithOptions(request, runtime);
    }

    public GetDmsTopicsResponse getDmsTopicsWithOptions(GetDmsTopicsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDmsTopics", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDmsTopicsResponse());
    }

    public GetDmsTopicsResponse getDmsTopics(GetDmsTopicsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDmsTopicsWithOptions(request, runtime);
    }

    public GetDSTGlobalConfigResponse getDSTGlobalConfigWithOptions(GetDSTGlobalConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDSTGlobalConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDSTGlobalConfigResponse());
    }

    public GetDSTGlobalConfigResponse getDSTGlobalConfig(GetDSTGlobalConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDSTGlobalConfigWithOptions(request, runtime);
    }

    public GetDSTMiddlewareInstanceResponse getDSTMiddlewareInstanceWithOptions(GetDSTMiddlewareInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDSTMiddlewareInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDSTMiddlewareInstanceResponse());
    }

    public GetDSTMiddlewareInstanceResponse getDSTMiddlewareInstance(GetDSTMiddlewareInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDSTMiddlewareInstanceWithOptions(request, runtime);
    }

    public GetDSTSpanConfigResponse getDSTSpanConfigWithOptions(GetDSTSpanConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDSTSpanConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDSTSpanConfigResponse());
    }

    public GetDSTSpanConfigResponse getDSTSpanConfig(GetDSTSpanConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDSTSpanConfigWithOptions(request, runtime);
    }

    public GetDTXAppsBiztypeResponse getDTXAppsBiztypeWithOptions(GetDTXAppsBiztypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDTXAppsBiztype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDTXAppsBiztypeResponse());
    }

    public GetDTXAppsBiztypeResponse getDTXAppsBiztype(GetDTXAppsBiztypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDTXAppsBiztypeWithOptions(request, runtime);
    }

    public GetDTXGlobalEnvResponse getDTXGlobalEnvWithOptions(GetDTXGlobalEnvRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDTXGlobalEnv", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDTXGlobalEnvResponse());
    }

    public GetDTXGlobalEnvResponse getDTXGlobalEnv(GetDTXGlobalEnvRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDTXGlobalEnvWithOptions(request, runtime);
    }

    public GetDTXGlobalStatsResponse getDTXGlobalStatsWithOptions(GetDTXGlobalStatsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDTXGlobalStats", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDTXGlobalStatsResponse());
    }

    public GetDTXGlobalStatsResponse getDTXGlobalStats(GetDTXGlobalStatsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDTXGlobalStatsWithOptions(request, runtime);
    }

    public GetDTXMiddlewareInstanceResponse getDTXMiddlewareInstanceWithOptions(GetDTXMiddlewareInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDTXMiddlewareInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDTXMiddlewareInstanceResponse());
    }

    public GetDTXMiddlewareInstanceResponse getDTXMiddlewareInstance(GetDTXMiddlewareInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDTXMiddlewareInstanceWithOptions(request, runtime);
    }

    public GetDTXTransactionChartResponse getDTXTransactionChartWithOptions(GetDTXTransactionChartRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDTXTransactionChart", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDTXTransactionChartResponse());
    }

    public GetDTXTransactionChartResponse getDTXTransactionChart(GetDTXTransactionChartRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDTXTransactionChartWithOptions(request, runtime);
    }

    public GetDTXTransactionSagaResponse getDTXTransactionSagaWithOptions(GetDTXTransactionSagaRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDTXTransactionSaga", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDTXTransactionSagaResponse());
    }

    public GetDTXTransactionSagaResponse getDTXTransactionSaga(GetDTXTransactionSagaRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDTXTransactionSagaWithOptions(request, runtime);
    }

    public GetDTXUploadUrlResponse getDTXUploadUrlWithOptions(GetDTXUploadUrlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDTXUploadUrl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDTXUploadUrlResponse());
    }

    public GetDTXUploadUrlResponse getDTXUploadUrl(GetDTXUploadUrlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDTXUploadUrlWithOptions(request, runtime);
    }

    public GetDWSConfigResponse getDWSConfigWithOptions(GetDWSConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSConfigResponse());
    }

    public GetDWSConfigResponse getDWSConfig(GetDWSConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSConfigWithOptions(request, runtime);
    }

    public GetDWSConfigVpcwhitelistResponse getDWSConfigVpcwhitelistWithOptions(GetDWSConfigVpcwhitelistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSConfigVpcwhitelist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSConfigVpcwhitelistResponse());
    }

    public GetDWSConfigVpcwhitelistResponse getDWSConfigVpcwhitelist(GetDWSConfigVpcwhitelistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSConfigVpcwhitelistWithOptions(request, runtime);
    }

    public GetDWSCrawlerConnectionResponse getDWSCrawlerConnectionWithOptions(GetDWSCrawlerConnectionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSCrawlerConnection", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSCrawlerConnectionResponse());
    }

    public GetDWSCrawlerConnectionResponse getDWSCrawlerConnection(GetDWSCrawlerConnectionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSCrawlerConnectionWithOptions(request, runtime);
    }

    public GetDWSCrawlerDelayResponse getDWSCrawlerDelayWithOptions(GetDWSCrawlerDelayRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSCrawlerDelay", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSCrawlerDelayResponse());
    }

    public GetDWSCrawlerDelayResponse getDWSCrawlerDelay(GetDWSCrawlerDelayRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSCrawlerDelayWithOptions(request, runtime);
    }

    public GetDWSCrawlerIosResponse getDWSCrawlerIosWithOptions(GetDWSCrawlerIosRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSCrawlerIos", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSCrawlerIosResponse());
    }

    public GetDWSCrawlerIosResponse getDWSCrawlerIos(GetDWSCrawlerIosRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSCrawlerIosWithOptions(request, runtime);
    }

    public GetDWSCrawlerOverviewResponse getDWSCrawlerOverviewWithOptions(GetDWSCrawlerOverviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSCrawlerOverview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSCrawlerOverviewResponse());
    }

    public GetDWSCrawlerOverviewResponse getDWSCrawlerOverview(GetDWSCrawlerOverviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSCrawlerOverviewWithOptions(request, runtime);
    }

    public GetDWSCrawlerTpsResponse getDWSCrawlerTpsWithOptions(GetDWSCrawlerTpsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSCrawlerTps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSCrawlerTpsResponse());
    }

    public GetDWSCrawlerTpsResponse getDWSCrawlerTps(GetDWSCrawlerTpsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSCrawlerTpsWithOptions(request, runtime);
    }

    public GetDWSFaviconicoResponse getDWSFaviconicoWithOptions(GetDWSFaviconicoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSFaviconico", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSFaviconicoResponse());
    }

    public GetDWSFaviconicoResponse getDWSFaviconico(GetDWSFaviconicoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSFaviconicoWithOptions(request, runtime);
    }

    public GetDWSJdbcwriterDelayResponse getDWSJdbcwriterDelayWithOptions(GetDWSJdbcwriterDelayRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSJdbcwriterDelay", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSJdbcwriterDelayResponse());
    }

    public GetDWSJdbcwriterDelayResponse getDWSJdbcwriterDelay(GetDWSJdbcwriterDelayRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSJdbcwriterDelayWithOptions(request, runtime);
    }

    public GetDWSJdbcwriterIopsResponse getDWSJdbcwriterIopsWithOptions(GetDWSJdbcwriterIopsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSJdbcwriterIops", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSJdbcwriterIopsResponse());
    }

    public GetDWSJdbcwriterIopsResponse getDWSJdbcwriterIops(GetDWSJdbcwriterIopsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSJdbcwriterIopsWithOptions(request, runtime);
    }

    public GetDWSJdbcwriterOverviewResponse getDWSJdbcwriterOverviewWithOptions(GetDWSJdbcwriterOverviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSJdbcwriterOverview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSJdbcwriterOverviewResponse());
    }

    public GetDWSJdbcwriterOverviewResponse getDWSJdbcwriterOverview(GetDWSJdbcwriterOverviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSJdbcwriterOverviewWithOptions(request, runtime);
    }

    public GetDWSJdbcwriterRpsResponse getDWSJdbcwriterRpsWithOptions(GetDWSJdbcwriterRpsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSJdbcwriterRps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSJdbcwriterRpsResponse());
    }

    public GetDWSJdbcwriterRpsResponse getDWSJdbcwriterRps(GetDWSJdbcwriterRpsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSJdbcwriterRpsWithOptions(request, runtime);
    }

    public GetDWSJdbcwriterStoredelayResponse getDWSJdbcwriterStoredelayWithOptions(GetDWSJdbcwriterStoredelayRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSJdbcwriterStoredelay", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSJdbcwriterStoredelayResponse());
    }

    public GetDWSJdbcwriterStoredelayResponse getDWSJdbcwriterStoredelay(GetDWSJdbcwriterStoredelayRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSJdbcwriterStoredelayWithOptions(request, runtime);
    }

    public GetDWSMetaHierarchyResponse getDWSMetaHierarchyWithOptions(GetDWSMetaHierarchyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSMetaHierarchy", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSMetaHierarchyResponse());
    }

    public GetDWSMetaHierarchyResponse getDWSMetaHierarchy(GetDWSMetaHierarchyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSMetaHierarchyWithOptions(request, runtime);
    }

    public GetDWSMetaHierarchystringResponse getDWSMetaHierarchystringWithOptions(GetDWSMetaHierarchystringRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSMetaHierarchystring", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSMetaHierarchystringResponse());
    }

    public GetDWSMetaHierarchystringResponse getDWSMetaHierarchystring(GetDWSMetaHierarchystringRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSMetaHierarchystringWithOptions(request, runtime);
    }

    public GetDWSMiddlewareInstanceResponse getDWSMiddlewareInstanceWithOptions(GetDWSMiddlewareInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSMiddlewareInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSMiddlewareInstanceResponse());
    }

    public GetDWSMiddlewareInstanceResponse getDWSMiddlewareInstance(GetDWSMiddlewareInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSMiddlewareInstanceWithOptions(request, runtime);
    }

    public GetDWSMonitorEncodednameResponse getDWSMonitorEncodednameWithOptions(GetDWSMonitorEncodednameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSMonitorEncodedname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSMonitorEncodednameResponse());
    }

    public GetDWSMonitorEncodednameResponse getDWSMonitorEncodedname(GetDWSMonitorEncodednameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSMonitorEncodednameWithOptions(request, runtime);
    }

    public GetDWSOpenedscenariosResponse getDWSOpenedscenariosWithOptions(GetDWSOpenedscenariosRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSOpenedscenarios", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSOpenedscenariosResponse());
    }

    public GetDWSOpenedscenariosResponse getDWSOpenedscenarios(GetDWSOpenedscenariosRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSOpenedscenariosWithOptions(request, runtime);
    }

    public GetDWSPartitionConsumptionLatencyHisResponse getDWSPartitionConsumptionLatencyHisWithOptions(GetDWSPartitionConsumptionLatencyHisRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSPartitionConsumptionLatencyHis", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSPartitionConsumptionLatencyHisResponse());
    }

    public GetDWSPartitionConsumptionLatencyHisResponse getDWSPartitionConsumptionLatencyHis(GetDWSPartitionConsumptionLatencyHisRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSPartitionConsumptionLatencyHisWithOptions(request, runtime);
    }

    public GetDWSPartitionsConsumptionRpsHisResponse getDWSPartitionsConsumptionRpsHisWithOptions(GetDWSPartitionsConsumptionRpsHisRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSPartitionsConsumptionRpsHis", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSPartitionsConsumptionRpsHisResponse());
    }

    public GetDWSPartitionsConsumptionRpsHisResponse getDWSPartitionsConsumptionRpsHis(GetDWSPartitionsConsumptionRpsHisRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSPartitionsConsumptionRpsHisWithOptions(request, runtime);
    }

    public GetDWSPartitionsDailyConsumedRecordResponse getDWSPartitionsDailyConsumedRecordWithOptions(GetDWSPartitionsDailyConsumedRecordRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSPartitionsDailyConsumedRecord", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSPartitionsDailyConsumedRecordResponse());
    }

    public GetDWSPartitionsDailyConsumedRecordResponse getDWSPartitionsDailyConsumedRecord(GetDWSPartitionsDailyConsumedRecordRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSPartitionsDailyConsumedRecordWithOptions(request, runtime);
    }

    public GetDWSPartitionsStoreLatencyHisResponse getDWSPartitionsStoreLatencyHisWithOptions(GetDWSPartitionsStoreLatencyHisRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSPartitionsStoreLatencyHis", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSPartitionsStoreLatencyHisResponse());
    }

    public GetDWSPartitionsStoreLatencyHisResponse getDWSPartitionsStoreLatencyHis(GetDWSPartitionsStoreLatencyHisRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSPartitionsStoreLatencyHisWithOptions(request, runtime);
    }

    public GetDWSRdsWhitelistResponse getDWSRdsWhitelistWithOptions(GetDWSRdsWhitelistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSRdsWhitelist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSRdsWhitelistResponse());
    }

    public GetDWSRdsWhitelistResponse getDWSRdsWhitelist(GetDWSRdsWhitelistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSRdsWhitelistWithOptions(request, runtime);
    }

    public GetDWSSubsConnectionStringResponse getDWSSubsConnectionStringWithOptions(GetDWSSubsConnectionStringRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSSubsConnectionString", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSSubsConnectionStringResponse());
    }

    public GetDWSSubsConnectionStringResponse getDWSSubsConnectionString(GetDWSSubsConnectionStringRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSSubsConnectionStringWithOptions(request, runtime);
    }

    public GetDWSSubsConsumptionLatencyResponse getDWSSubsConsumptionLatencyWithOptions(GetDWSSubsConsumptionLatencyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSSubsConsumptionLatency", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSSubsConsumptionLatencyResponse());
    }

    public GetDWSSubsConsumptionLatencyResponse getDWSSubsConsumptionLatency(GetDWSSubsConsumptionLatencyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSSubsConsumptionLatencyWithOptions(request, runtime);
    }

    public GetDWSSubsConsumptionRpsResponse getDWSSubsConsumptionRpsWithOptions(GetDWSSubsConsumptionRpsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSSubsConsumptionRps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSSubsConsumptionRpsResponse());
    }

    public GetDWSSubsConsumptionRpsResponse getDWSSubsConsumptionRps(GetDWSSubsConsumptionRpsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSSubsConsumptionRpsWithOptions(request, runtime);
    }

    public GetDWSSubsDailyConsumedRecordResponse getDWSSubsDailyConsumedRecordWithOptions(GetDWSSubsDailyConsumedRecordRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSSubsDailyConsumedRecord", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSSubsDailyConsumedRecordResponse());
    }

    public GetDWSSubsDailyConsumedRecordResponse getDWSSubsDailyConsumedRecord(GetDWSSubsDailyConsumedRecordRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSSubsDailyConsumedRecordWithOptions(request, runtime);
    }

    public GetDWSSubsPartitionsResponse getDWSSubsPartitionsWithOptions(GetDWSSubsPartitionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSSubsPartitions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSSubsPartitionsResponse());
    }

    public GetDWSSubsPartitionsResponse getDWSSubsPartitions(GetDWSSubsPartitionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSSubsPartitionsWithOptions(request, runtime);
    }

    public GetDWSSubsStatsResponse getDWSSubsStatsWithOptions(GetDWSSubsStatsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSSubsStats", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSSubsStatsResponse());
    }

    public GetDWSSubsStatsResponse getDWSSubsStats(GetDWSSubsStatsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSSubsStatsWithOptions(request, runtime);
    }

    public GetDWSSubsTaskResponse getDWSSubsTaskWithOptions(GetDWSSubsTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSSubsTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSSubsTaskResponse());
    }

    public GetDWSSubsTaskResponse getDWSSubsTask(GetDWSSubsTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSSubsTaskWithOptions(request, runtime);
    }

    public GetDWSSubsTaskMetricsResponse getDWSSubsTaskMetricsWithOptions(GetDWSSubsTaskMetricsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSSubsTaskMetrics", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSSubsTaskMetricsResponse());
    }

    public GetDWSSubsTaskMetricsResponse getDWSSubsTaskMetrics(GetDWSSubsTaskMetricsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSSubsTaskMetricsWithOptions(request, runtime);
    }

    public GetDWSSubsTasksResponse getDWSSubsTasksWithOptions(GetDWSSubsTasksRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSSubsTasks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSSubsTasksResponse());
    }

    public GetDWSSubsTasksResponse getDWSSubsTasks(GetDWSSubsTasksRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSSubsTasksWithOptions(request, runtime);
    }

    public GetDWSTaskLogResponse getDWSTaskLogWithOptions(GetDWSTaskLogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSTaskLog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSTaskLogResponse());
    }

    public GetDWSTaskLogResponse getDWSTaskLog(GetDWSTaskLogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSTaskLogWithOptions(request, runtime);
    }

    public GetDWSUsersResponse getDWSUsersWithOptions(GetDWSUsersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSUsers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSUsersResponse());
    }

    public GetDWSUsersResponse getDWSUsers(GetDWSUsersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSUsersWithOptions(request, runtime);
    }

    public GetDWSVpcAddrpoolResponse getDWSVpcAddrpoolWithOptions(GetDWSVpcAddrpoolRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetDWSVpcAddrpool", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetDWSVpcAddrpoolResponse());
    }

    public GetDWSVpcAddrpoolResponse getDWSVpcAddrpool(GetDWSVpcAddrpoolRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getDWSVpcAddrpoolWithOptions(request, runtime);
    }

    public GetGWApiGroupResponse getGWApiGroupWithOptions(GetGWApiGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetGWApiGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetGWApiGroupResponse());
    }

    public GetGWApiGroupResponse getGWApiGroup(GetGWApiGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getGWApiGroupWithOptions(request, runtime);
    }

    public GetGWApiGroupAuthUserConfigResponse getGWApiGroupAuthUserConfigWithOptions(GetGWApiGroupAuthUserConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetGWApiGroupAuthUserConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetGWApiGroupAuthUserConfigResponse());
    }

    public GetGWApiGroupAuthUserConfigResponse getGWApiGroupAuthUserConfig(GetGWApiGroupAuthUserConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getGWApiGroupAuthUserConfigWithOptions(request, runtime);
    }

    public GetGWAppResponse getGWAppWithOptions(GetGWAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetGWApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetGWAppResponse());
    }

    public GetGWAppResponse getGWApp(GetGWAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getGWAppWithOptions(request, runtime);
    }

    public GetHasAdminConfigResponse getHasAdminConfigWithOptions(GetHasAdminConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasAdminConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasAdminConfigResponse());
    }

    public GetHasAdminConfigResponse getHasAdminConfig(GetHasAdminConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasAdminConfigWithOptions(request, runtime);
    }

    public GetHasApprovalNwprocesstaskdetailResponse getHasApprovalNwprocesstaskdetailWithOptions(GetHasApprovalNwprocesstaskdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasApprovalNwprocesstaskdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasApprovalNwprocesstaskdetailResponse());
    }

    public GetHasApprovalNwprocesstaskdetailResponse getHasApprovalNwprocesstaskdetail(GetHasApprovalNwprocesstaskdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasApprovalNwprocesstaskdetailWithOptions(request, runtime);
    }

    public GetHasAuthIsbackendResponse getHasAuthIsbackendWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetHasAuthIsbackend", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasAuthIsbackendResponse());
    }

    public GetHasAuthIsbackendResponse getHasAuthIsbackend() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasAuthIsbackendWithOptions(runtime);
    }

    public GetHasAuthUrlResponse getHasAuthUrlWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetHasAuthUrl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasAuthUrlResponse());
    }

    public GetHasAuthUrlResponse getHasAuthUrl() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasAuthUrlWithOptions(runtime);
    }

    public GetHasConfigSidemenuResponse getHasConfigSidemenuWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetHasConfigSidemenu", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasConfigSidemenuResponse());
    }

    public GetHasConfigSidemenuResponse getHasConfigSidemenu() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasConfigSidemenuWithOptions(runtime);
    }

    public GetHasConfigsSwitchesResponse getHasConfigsSwitchesWithOptions(GetHasConfigsSwitchesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasConfigsSwitches", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasConfigsSwitchesResponse());
    }

    public GetHasConfigsSwitchesResponse getHasConfigsSwitches(GetHasConfigsSwitchesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasConfigsSwitchesWithOptions(request, runtime);
    }

    public GetHasConfigSyncstatusResponse getHasConfigSyncstatusWithOptions(GetHasConfigSyncstatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasConfigSyncstatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasConfigSyncstatusResponse());
    }

    public GetHasConfigSyncstatusResponse getHasConfigSyncstatus(GetHasConfigSyncstatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasConfigSyncstatusWithOptions(request, runtime);
    }

    public GetHasDiagnosisAtomicofruledetailResponse getHasDiagnosisAtomicofruledetailWithOptions(GetHasDiagnosisAtomicofruledetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisAtomicofruledetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisAtomicofruledetailResponse());
    }

    public GetHasDiagnosisAtomicofruledetailResponse getHasDiagnosisAtomicofruledetail(GetHasDiagnosisAtomicofruledetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisAtomicofruledetailWithOptions(request, runtime);
    }

    public GetHasDiagnosisExecutiondetailResponse getHasDiagnosisExecutiondetailWithOptions(GetHasDiagnosisExecutiondetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisExecutiondetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisExecutiondetailResponse());
    }

    public GetHasDiagnosisExecutiondetailResponse getHasDiagnosisExecutiondetail(GetHasDiagnosisExecutiondetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisExecutiondetailWithOptions(request, runtime);
    }

    public GetHasDiagnosisFailedtaskinfoResponse getHasDiagnosisFailedtaskinfoWithOptions(GetHasDiagnosisFailedtaskinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisFailedtaskinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisFailedtaskinfoResponse());
    }

    public GetHasDiagnosisFailedtaskinfoResponse getHasDiagnosisFailedtaskinfo(GetHasDiagnosisFailedtaskinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisFailedtaskinfoWithOptions(request, runtime);
    }

    public GetHasDiagnosisGraphResponse getHasDiagnosisGraphWithOptions(GetHasDiagnosisGraphRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisGraph", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisGraphResponse());
    }

    public GetHasDiagnosisGraphResponse getHasDiagnosisGraph(GetHasDiagnosisGraphRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisGraphWithOptions(request, runtime);
    }

    public GetHasDiagnosisJavaexeclogResponse getHasDiagnosisJavaexeclogWithOptions(GetHasDiagnosisJavaexeclogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisJavaexeclog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisJavaexeclogResponse());
    }

    public GetHasDiagnosisJavaexeclogResponse getHasDiagnosisJavaexeclog(GetHasDiagnosisJavaexeclogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisJavaexeclogWithOptions(request, runtime);
    }

    public GetHasDiagnosisJavataskdetailResponse getHasDiagnosisJavataskdetailWithOptions(GetHasDiagnosisJavataskdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisJavataskdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisJavataskdetailResponse());
    }

    public GetHasDiagnosisJavataskdetailResponse getHasDiagnosisJavataskdetail(GetHasDiagnosisJavataskdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisJavataskdetailWithOptions(request, runtime);
    }

    public GetHasDiagnosisMonitortaskdetailResponse getHasDiagnosisMonitortaskdetailWithOptions(GetHasDiagnosisMonitortaskdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisMonitortaskdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisMonitortaskdetailResponse());
    }

    public GetHasDiagnosisMonitortaskdetailResponse getHasDiagnosisMonitortaskdetail(GetHasDiagnosisMonitortaskdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisMonitortaskdetailWithOptions(request, runtime);
    }

    public GetHasDiagnosisNodeResponse getHasDiagnosisNodeWithOptions(GetHasDiagnosisNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisNodeResponse());
    }

    public GetHasDiagnosisNodeResponse getHasDiagnosisNode(GetHasDiagnosisNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisNodeWithOptions(request, runtime);
    }

    public GetHasDiagnosisOpstaskdetailResponse getHasDiagnosisOpstaskdetailWithOptions(GetHasDiagnosisOpstaskdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisOpstaskdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisOpstaskdetailResponse());
    }

    public GetHasDiagnosisOpstaskdetailResponse getHasDiagnosisOpstaskdetail(GetHasDiagnosisOpstaskdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisOpstaskdetailWithOptions(request, runtime);
    }

    public GetHasDiagnosisPodtaskdetailResponse getHasDiagnosisPodtaskdetailWithOptions(GetHasDiagnosisPodtaskdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisPodtaskdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisPodtaskdetailResponse());
    }

    public GetHasDiagnosisPodtaskdetailResponse getHasDiagnosisPodtaskdetail(GetHasDiagnosisPodtaskdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisPodtaskdetailWithOptions(request, runtime);
    }

    public GetHasDiagnosisPythonexeclogResponse getHasDiagnosisPythonexeclogWithOptions(GetHasDiagnosisPythonexeclogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisPythonexeclog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisPythonexeclogResponse());
    }

    public GetHasDiagnosisPythonexeclogResponse getHasDiagnosisPythonexeclog(GetHasDiagnosisPythonexeclogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisPythonexeclogWithOptions(request, runtime);
    }

    public GetHasDiagnosisPythontaskdetailResponse getHasDiagnosisPythontaskdetailWithOptions(GetHasDiagnosisPythontaskdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisPythontaskdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisPythontaskdetailResponse());
    }

    public GetHasDiagnosisPythontaskdetailResponse getHasDiagnosisPythontaskdetail(GetHasDiagnosisPythontaskdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisPythontaskdetailWithOptions(request, runtime);
    }

    public GetHasDiagnosisRuleofnodedetailResponse getHasDiagnosisRuleofnodedetailWithOptions(GetHasDiagnosisRuleofnodedetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisRuleofnodedetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisRuleofnodedetailResponse());
    }

    public GetHasDiagnosisRuleofnodedetailResponse getHasDiagnosisRuleofnodedetail(GetHasDiagnosisRuleofnodedetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisRuleofnodedetailWithOptions(request, runtime);
    }

    public GetHasDiagnosisShellexeclogResponse getHasDiagnosisShellexeclogWithOptions(GetHasDiagnosisShellexeclogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisShellexeclog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisShellexeclogResponse());
    }

    public GetHasDiagnosisShellexeclogResponse getHasDiagnosisShellexeclog(GetHasDiagnosisShellexeclogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisShellexeclogWithOptions(request, runtime);
    }

    public GetHasDiagnosisShelltaskdetailResponse getHasDiagnosisShelltaskdetailWithOptions(GetHasDiagnosisShelltaskdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisShelltaskdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisShelltaskdetailResponse());
    }

    public GetHasDiagnosisShelltaskdetailResponse getHasDiagnosisShelltaskdetail(GetHasDiagnosisShelltaskdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisShelltaskdetailWithOptions(request, runtime);
    }

    public GetHasDiagnosisTasksnapshotResponse getHasDiagnosisTasksnapshotWithOptions(GetHasDiagnosisTasksnapshotRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasDiagnosisTasksnapshot", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasDiagnosisTasksnapshotResponse());
    }

    public GetHasDiagnosisTasksnapshotResponse getHasDiagnosisTasksnapshot(GetHasDiagnosisTasksnapshotRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasDiagnosisTasksnapshotWithOptions(request, runtime);
    }

    public GetHasInspectArgdetailofmissionruleResponse getHasInspectArgdetailofmissionruleWithOptions(GetHasInspectArgdetailofmissionruleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectArgdetailofmissionrule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectArgdetailofmissionruleResponse());
    }

    public GetHasInspectArgdetailofmissionruleResponse getHasInspectArgdetailofmissionrule(GetHasInspectArgdetailofmissionruleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectArgdetailofmissionruleWithOptions(request, runtime);
    }

    public GetHasInspectDayreportdetailResponse getHasInspectDayreportdetailWithOptions(GetHasInspectDayreportdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectDayreportdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectDayreportdetailResponse());
    }

    public GetHasInspectDayreportdetailResponse getHasInspectDayreportdetail(GetHasInspectDayreportdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectDayreportdetailWithOptions(request, runtime);
    }

    public GetHasInspectExecutiondetailResponse getHasInspectExecutiondetailWithOptions(GetHasInspectExecutiondetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectExecutiondetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectExecutiondetailResponse());
    }

    public GetHasInspectExecutiondetailResponse getHasInspectExecutiondetail(GetHasInspectExecutiondetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectExecutiondetailWithOptions(request, runtime);
    }

    public GetHasInspectImageplugindetailResponse getHasInspectImageplugindetailWithOptions(GetHasInspectImageplugindetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectImageplugindetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectImageplugindetailResponse());
    }

    public GetHasInspectImageplugindetailResponse getHasInspectImageplugindetail(GetHasInspectImageplugindetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectImageplugindetailWithOptions(request, runtime);
    }

    public GetHasInspectJarlistResponse getHasInspectJarlistWithOptions(GetHasInspectJarlistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectJarlist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectJarlistResponse());
    }

    public GetHasInspectJarlistResponse getHasInspectJarlist(GetHasInspectJarlistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectJarlistWithOptions(request, runtime);
    }

    public GetHasInspectJavaexeclogResponse getHasInspectJavaexeclogWithOptions(GetHasInspectJavaexeclogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectJavaexeclog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectJavaexeclogResponse());
    }

    public GetHasInspectJavaexeclogResponse getHasInspectJavaexeclog(GetHasInspectJavaexeclogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectJavaexeclogWithOptions(request, runtime);
    }

    public GetHasInspectJavaplugindetailResponse getHasInspectJavaplugindetailWithOptions(GetHasInspectJavaplugindetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectJavaplugindetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectJavaplugindetailResponse());
    }

    public GetHasInspectJavaplugindetailResponse getHasInspectJavaplugindetail(GetHasInspectJavaplugindetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectJavaplugindetailWithOptions(request, runtime);
    }

    public GetHasInspectJavataskResponse getHasInspectJavataskWithOptions(GetHasInspectJavataskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectJavatask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectJavataskResponse());
    }

    public GetHasInspectJavataskResponse getHasInspectJavatask(GetHasInspectJavataskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectJavataskWithOptions(request, runtime);
    }

    public GetHasInspectMhsplugindetailResponse getHasInspectMhsplugindetailWithOptions(GetHasInspectMhsplugindetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectMhsplugindetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectMhsplugindetailResponse());
    }

    public GetHasInspectMhsplugindetailResponse getHasInspectMhsplugindetail(GetHasInspectMhsplugindetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectMhsplugindetailWithOptions(request, runtime);
    }

    public GetHasInspectMissionResponse getHasInspectMissionWithOptions(GetHasInspectMissionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectMission", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectMissionResponse());
    }

    public GetHasInspectMissionResponse getHasInspectMission(GetHasInspectMissionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectMissionWithOptions(request, runtime);
    }

    public GetHasInspectPodexeclogResponse getHasInspectPodexeclogWithOptions(GetHasInspectPodexeclogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectPodexeclog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectPodexeclogResponse());
    }

    public GetHasInspectPodexeclogResponse getHasInspectPodexeclog(GetHasInspectPodexeclogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectPodexeclogWithOptions(request, runtime);
    }

    public GetHasInspectPodplugindetailResponse getHasInspectPodplugindetailWithOptions(GetHasInspectPodplugindetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectPodplugindetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectPodplugindetailResponse());
    }

    public GetHasInspectPodplugindetailResponse getHasInspectPodplugindetail(GetHasInspectPodplugindetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectPodplugindetailWithOptions(request, runtime);
    }

    public GetHasInspectPodtaskResponse getHasInspectPodtaskWithOptions(GetHasInspectPodtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectPodtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectPodtaskResponse());
    }

    public GetHasInspectPodtaskResponse getHasInspectPodtask(GetHasInspectPodtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectPodtaskWithOptions(request, runtime);
    }

    public GetHasInspectProbplugindetailResponse getHasInspectProbplugindetailWithOptions(GetHasInspectProbplugindetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectProbplugindetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectProbplugindetailResponse());
    }

    public GetHasInspectProbplugindetailResponse getHasInspectProbplugindetail(GetHasInspectProbplugindetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectProbplugindetailWithOptions(request, runtime);
    }

    public GetHasInspectPythonexeclogResponse getHasInspectPythonexeclogWithOptions(GetHasInspectPythonexeclogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectPythonexeclog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectPythonexeclogResponse());
    }

    public GetHasInspectPythonexeclogResponse getHasInspectPythonexeclog(GetHasInspectPythonexeclogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectPythonexeclogWithOptions(request, runtime);
    }

    public GetHasInspectPythonplugindetailResponse getHasInspectPythonplugindetailWithOptions(GetHasInspectPythonplugindetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectPythonplugindetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectPythonplugindetailResponse());
    }

    public GetHasInspectPythonplugindetailResponse getHasInspectPythonplugindetail(GetHasInspectPythonplugindetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectPythonplugindetailWithOptions(request, runtime);
    }

    public GetHasInspectPythonpluginfullcodeResponse getHasInspectPythonpluginfullcodeWithOptions(GetHasInspectPythonpluginfullcodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectPythonpluginfullcode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectPythonpluginfullcodeResponse());
    }

    public GetHasInspectPythonpluginfullcodeResponse getHasInspectPythonpluginfullcode(GetHasInspectPythonpluginfullcodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectPythonpluginfullcodeWithOptions(request, runtime);
    }

    public GetHasInspectPythontaskResponse getHasInspectPythontaskWithOptions(GetHasInspectPythontaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectPythontask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectPythontaskResponse());
    }

    public GetHasInspectPythontaskResponse getHasInspectPythontask(GetHasInspectPythontaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectPythontaskWithOptions(request, runtime);
    }

    public GetHasInspectRuleResponse getHasInspectRuleWithOptions(GetHasInspectRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectRuleResponse());
    }

    public GetHasInspectRuleResponse getHasInspectRule(GetHasInspectRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectRuleWithOptions(request, runtime);
    }

    public GetHasInspectRulesetdetailResponse getHasInspectRulesetdetailWithOptions(GetHasInspectRulesetdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectRulesetdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectRulesetdetailResponse());
    }

    public GetHasInspectRulesetdetailResponse getHasInspectRulesetdetail(GetHasInspectRulesetdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectRulesetdetailWithOptions(request, runtime);
    }

    public GetHasInspectShellexeclogResponse getHasInspectShellexeclogWithOptions(GetHasInspectShellexeclogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectShellexeclog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectShellexeclogResponse());
    }

    public GetHasInspectShellexeclogResponse getHasInspectShellexeclog(GetHasInspectShellexeclogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectShellexeclogWithOptions(request, runtime);
    }

    public GetHasInspectShellplugindetailResponse getHasInspectShellplugindetailWithOptions(GetHasInspectShellplugindetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectShellplugindetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectShellplugindetailResponse());
    }

    public GetHasInspectShellplugindetailResponse getHasInspectShellplugindetail(GetHasInspectShellplugindetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectShellplugindetailWithOptions(request, runtime);
    }

    public GetHasInspectShellpluginfullcodeResponse getHasInspectShellpluginfullcodeWithOptions(GetHasInspectShellpluginfullcodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectShellpluginfullcode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectShellpluginfullcodeResponse());
    }

    public GetHasInspectShellpluginfullcodeResponse getHasInspectShellpluginfullcode(GetHasInspectShellpluginfullcodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectShellpluginfullcodeWithOptions(request, runtime);
    }

    public GetHasInspectShelltaskResponse getHasInspectShelltaskWithOptions(GetHasInspectShelltaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectShelltask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectShelltaskResponse());
    }

    public GetHasInspectShelltaskResponse getHasInspectShelltask(GetHasInspectShelltaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectShelltaskWithOptions(request, runtime);
    }

    public GetHasInspectSinglereportResponse getHasInspectSinglereportWithOptions(GetHasInspectSinglereportRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasInspectSinglereport", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasInspectSinglereportResponse());
    }

    public GetHasInspectSinglereportResponse getHasInspectSinglereport(GetHasInspectSinglereportRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasInspectSinglereportWithOptions(request, runtime);
    }

    public GetHasRiskInspectdetailResponse getHasRiskInspectdetailWithOptions(GetHasRiskInspectdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasRiskInspectdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasRiskInspectdetailResponse());
    }

    public GetHasRiskInspectdetailResponse getHasRiskInspectdetail(GetHasRiskInspectdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasRiskInspectdetailWithOptions(request, runtime);
    }

    public GetHasRiskSceneResponse getHasRiskSceneWithOptions(GetHasRiskSceneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHasRiskScene", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasRiskSceneResponse());
    }

    public GetHasRiskSceneResponse getHasRiskScene(GetHasRiskSceneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasRiskSceneWithOptions(request, runtime);
    }

    public GetHasUserinfoResponse getHasUserinfoWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetHasUserinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHasUserinfoResponse());
    }

    public GetHasUserinfoResponse getHasUserinfo() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHasUserinfoWithOptions(runtime);
    }

    public GetHelmChartUploadUrlResponse getHelmChartUploadUrlWithOptions(GetHelmChartUploadUrlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetHelmChartUploadUrl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetHelmChartUploadUrlResponse());
    }

    public GetHelmChartUploadUrlResponse getHelmChartUploadUrl(GetHelmChartUploadUrlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getHelmChartUploadUrlWithOptions(request, runtime);
    }

    public GetIAMCurrentAccessorResponse getIAMCurrentAccessorWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetIAMCurrentAccessor", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetIAMCurrentAccessorResponse());
    }

    public GetIAMCurrentAccessorResponse getIAMCurrentAccessor() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getIAMCurrentAccessorWithOptions(runtime);
    }

    public GetLDCCellResponse getLDCCellWithOptions(GetLDCCellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLDCCell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLDCCellResponse());
    }

    public GetLDCCellResponse getLDCCell(GetLDCCellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLDCCellWithOptions(request, runtime);
    }

    public GetLDCCellgroupResponse getLDCCellgroupWithOptions(GetLDCCellgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLDCCellgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLDCCellgroupResponse());
    }

    public GetLDCCellgroupResponse getLDCCellgroup(GetLDCCellgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLDCCellgroupWithOptions(request, runtime);
    }

    public GetLDCContainerServiceRevisionResponse getLDCContainerServiceRevisionWithOptions(GetLDCContainerServiceRevisionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLDCContainerServiceRevision", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLDCContainerServiceRevisionResponse());
    }

    public GetLDCContainerServiceRevisionResponse getLDCContainerServiceRevision(GetLDCContainerServiceRevisionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLDCContainerServiceRevisionWithOptions(request, runtime);
    }

    public GetLDCFederationConfigmapResponse getLDCFederationConfigmapWithOptions(GetLDCFederationConfigmapRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLDCFederationConfigmap", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLDCFederationConfigmapResponse());
    }

    public GetLDCFederationConfigmapResponse getLDCFederationConfigmap(GetLDCFederationConfigmapRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLDCFederationConfigmapWithOptions(request, runtime);
    }

    public GetLDCFederationNamespaceResponse getLDCFederationNamespaceWithOptions(GetLDCFederationNamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLDCFederationNamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLDCFederationNamespaceResponse());
    }

    public GetLDCFederationNamespaceResponse getLDCFederationNamespace(GetLDCFederationNamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLDCFederationNamespaceWithOptions(request, runtime);
    }

    public GetLDCFederationSecretResponse getLDCFederationSecretWithOptions(GetLDCFederationSecretRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLDCFederationSecret", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLDCFederationSecretResponse());
    }

    public GetLDCFederationSecretResponse getLDCFederationSecret(GetLDCFederationSecretRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLDCFederationSecretWithOptions(request, runtime);
    }

    public GetLDCFederationSpannerClusterResponse getLDCFederationSpannerClusterWithOptions(GetLDCFederationSpannerClusterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLDCFederationSpannerCluster", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLDCFederationSpannerClusterResponse());
    }

    public GetLDCFederationSpannerClusterResponse getLDCFederationSpannerCluster(GetLDCFederationSpannerClusterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLDCFederationSpannerClusterWithOptions(request, runtime);
    }

    public GetLDCUnifiedAccessInstanceResponse getLDCUnifiedAccessInstanceWithOptions(GetLDCUnifiedAccessInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLDCUnifiedAccessInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLDCUnifiedAccessInstanceResponse());
    }

    public GetLDCUnifiedAccessInstanceResponse getLDCUnifiedAccessInstance(GetLDCUnifiedAccessInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLDCUnifiedAccessInstanceWithOptions(request, runtime);
    }

    public GetLDCWorkspacegroupTopologyResponse getLDCWorkspacegroupTopologyWithOptions(GetLDCWorkspacegroupTopologyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLDCWorkspacegroupTopology", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLDCWorkspacegroupTopologyResponse());
    }

    public GetLDCWorkspacegroupTopologyResponse getLDCWorkspacegroupTopology(GetLDCWorkspacegroupTopologyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLDCWorkspacegroupTopologyWithOptions(request, runtime);
    }

    public GetLinkeantcodeAntcodeGetsingleprotectedbranchorwildcardprotectedbranchResponse getLinkeantcodeAntcodeGetsingleprotectedbranchorwildcardprotectedbranchWithOptions(GetLinkeantcodeAntcodeGetsingleprotectedbranchorwildcardprotectedbranchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeantcodeAntcodeGetsingleprotectedbranchorwildcardprotectedbranch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeantcodeAntcodeGetsingleprotectedbranchorwildcardprotectedbranchResponse());
    }

    public GetLinkeantcodeAntcodeGetsingleprotectedbranchorwildcardprotectedbranchResponse getLinkeantcodeAntcodeGetsingleprotectedbranchorwildcardprotectedbranch(GetLinkeantcodeAntcodeGetsingleprotectedbranchorwildcardprotectedbranchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeantcodeAntcodeGetsingleprotectedbranchorwildcardprotectedbranchWithOptions(request, runtime);
    }

    public GetLinkeantcodeAntcodeRedochecksuitesResponse getLinkeantcodeAntcodeRedochecksuitesWithOptions(GetLinkeantcodeAntcodeRedochecksuitesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeantcodeAntcodeRedochecksuites", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeantcodeAntcodeRedochecksuitesResponse());
    }

    public GetLinkeantcodeAntcodeRedochecksuitesResponse getLinkeantcodeAntcodeRedochecksuites(GetLinkeantcodeAntcodeRedochecksuitesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeantcodeAntcodeRedochecksuitesWithOptions(request, runtime);
    }

    public GetLinkeBahamutAclinkelibhostResponse getLinkeBahamutAclinkelibhostWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAclinkelibhost", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAclinkelibhostResponse());
    }

    public GetLinkeBahamutAclinkelibhostResponse getLinkeBahamutAclinkelibhost() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAclinkelibhostWithOptions(runtime);
    }

    public GetLinkeBahamutAdminpipelineallunfinishedunitsResponse getLinkeBahamutAdminpipelineallunfinishedunitsWithOptions(GetLinkeBahamutAdminpipelineallunfinishedunitsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAdminpipelineallunfinishedunits", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAdminpipelineallunfinishedunitsResponse());
    }

    public GetLinkeBahamutAdminpipelineallunfinishedunitsResponse getLinkeBahamutAdminpipelineallunfinishedunits(GetLinkeBahamutAdminpipelineallunfinishedunitsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAdminpipelineallunfinishedunitsWithOptions(request, runtime);
    }

    public GetLinkeBahamutAdminproductsResponse getLinkeBahamutAdminproductsWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAdminproducts", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAdminproductsResponse());
    }

    public GetLinkeBahamutAdminproductsResponse getLinkeBahamutAdminproducts() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAdminproductsWithOptions(runtime);
    }

    public GetLinkeBahamutAdmintenantidconfigResponse getLinkeBahamutAdmintenantidconfigWithOptions(GetLinkeBahamutAdmintenantidconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAdmintenantidconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAdmintenantidconfigResponse());
    }

    public GetLinkeBahamutAdmintenantidconfigResponse getLinkeBahamutAdmintenantidconfig(GetLinkeBahamutAdmintenantidconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAdmintenantidconfigWithOptions(request, runtime);
    }

    public GetLinkeBahamutAllappgroupsResponse getLinkeBahamutAllappgroupsWithOptions(GetLinkeBahamutAllappgroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAllappgroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAllappgroupsResponse());
    }

    public GetLinkeBahamutAllappgroupsResponse getLinkeBahamutAllappgroups(GetLinkeBahamutAllappgroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAllappgroupsWithOptions(request, runtime);
    }

    public GetLinkeBahamutAllarchdomainsResponse getLinkeBahamutAllarchdomainsWithOptions(GetLinkeBahamutAllarchdomainsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAllarchdomains", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAllarchdomainsResponse());
    }

    public GetLinkeBahamutAllarchdomainsResponse getLinkeBahamutAllarchdomains(GetLinkeBahamutAllarchdomainsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAllarchdomainsWithOptions(request, runtime);
    }

    public GetLinkeBahamutAllattachablereleaseResponse getLinkeBahamutAllattachablereleaseWithOptions(GetLinkeBahamutAllattachablereleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAllattachablerelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAllattachablereleaseResponse());
    }

    public GetLinkeBahamutAllattachablereleaseResponse getLinkeBahamutAllattachablerelease(GetLinkeBahamutAllattachablereleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAllattachablereleaseWithOptions(request, runtime);
    }

    public GetLinkeBahamutAllbuResponse getLinkeBahamutAllbuWithOptions(GetLinkeBahamutAllbuRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAllbu", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAllbuResponse());
    }

    public GetLinkeBahamutAllbuResponse getLinkeBahamutAllbu(GetLinkeBahamutAllbuRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAllbuWithOptions(request, runtime);
    }

    public GetLinkeBahamutAllpubownerResponse getLinkeBahamutAllpubownerWithOptions(GetLinkeBahamutAllpubownerRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAllpubowner", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAllpubownerResponse());
    }

    public GetLinkeBahamutAllpubownerResponse getLinkeBahamutAllpubowner(GetLinkeBahamutAllpubownerRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAllpubownerWithOptions(request, runtime);
    }

    public GetLinkeBahamutAlluserResponse getLinkeBahamutAlluserWithOptions(GetLinkeBahamutAlluserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAlluser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAlluserResponse());
    }

    public GetLinkeBahamutAlluserResponse getLinkeBahamutAlluser(GetLinkeBahamutAlluserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAlluserWithOptions(request, runtime);
    }

    public GetLinkeBahamutAntflowassethostResponse getLinkeBahamutAntflowassethostWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAntflowassethost", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAntflowassethostResponse());
    }

    public GetLinkeBahamutAntflowassethostResponse getLinkeBahamutAntflowassethost() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAntflowassethostWithOptions(runtime);
    }

    public GetLinkeBahamutAntflowtaskResponse getLinkeBahamutAntflowtaskWithOptions(GetLinkeBahamutAntflowtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAntflowtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAntflowtaskResponse());
    }

    public GetLinkeBahamutAntflowtaskResponse getLinkeBahamutAntflowtask(GetLinkeBahamutAntflowtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAntflowtaskWithOptions(request, runtime);
    }

    public GetLinkeBahamutAoneinternalaonehostResponse getLinkeBahamutAoneinternalaonehostWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAoneinternalaonehost", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAoneinternalaonehostResponse());
    }

    public GetLinkeBahamutAoneinternalaonehostResponse getLinkeBahamutAoneinternalaonehost() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAoneinternalaonehostWithOptions(runtime);
    }

    public GetLinkeBahamutAoneinternaldailyreleasesResponse getLinkeBahamutAoneinternaldailyreleasesWithOptions(GetLinkeBahamutAoneinternaldailyreleasesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAoneinternaldailyreleases", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAoneinternaldailyreleasesResponse());
    }

    public GetLinkeBahamutAoneinternaldailyreleasesResponse getLinkeBahamutAoneinternaldailyreleases(GetLinkeBahamutAoneinternaldailyreleasesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAoneinternaldailyreleasesWithOptions(request, runtime);
    }

    public GetLinkeBahamutAoneinternaldefectsResponse getLinkeBahamutAoneinternaldefectsWithOptions(GetLinkeBahamutAoneinternaldefectsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAoneinternaldefects", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAoneinternaldefectsResponse());
    }

    public GetLinkeBahamutAoneinternaldefectsResponse getLinkeBahamutAoneinternaldefects(GetLinkeBahamutAoneinternaldefectsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAoneinternaldefectsWithOptions(request, runtime);
    }

    public GetLinkeBahamutAoneinternaldetailResponse getLinkeBahamutAoneinternaldetailWithOptions(GetLinkeBahamutAoneinternaldetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAoneinternaldetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAoneinternaldetailResponse());
    }

    public GetLinkeBahamutAoneinternaldetailResponse getLinkeBahamutAoneinternaldetail(GetLinkeBahamutAoneinternaldetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAoneinternaldetailWithOptions(request, runtime);
    }

    public GetLinkeBahamutAoneinternalprojectResponse getLinkeBahamutAoneinternalprojectWithOptions(GetLinkeBahamutAoneinternalprojectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAoneinternalproject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAoneinternalprojectResponse());
    }

    public GetLinkeBahamutAoneinternalprojectResponse getLinkeBahamutAoneinternalproject(GetLinkeBahamutAoneinternalprojectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAoneinternalprojectWithOptions(request, runtime);
    }

    public GetLinkeBahamutAoneinternalprojectidsprintsResponse getLinkeBahamutAoneinternalprojectidsprintsWithOptions(GetLinkeBahamutAoneinternalprojectidsprintsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAoneinternalprojectidsprints", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAoneinternalprojectidsprintsResponse());
    }

    public GetLinkeBahamutAoneinternalprojectidsprintsResponse getLinkeBahamutAoneinternalprojectidsprints(GetLinkeBahamutAoneinternalprojectidsprintsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAoneinternalprojectidsprintsWithOptions(request, runtime);
    }

    public GetLinkeBahamutAoneinternalprojectsResponse getLinkeBahamutAoneinternalprojectsWithOptions(GetLinkeBahamutAoneinternalprojectsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAoneinternalprojects", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAoneinternalprojectsResponse());
    }

    public GetLinkeBahamutAoneinternalprojectsResponse getLinkeBahamutAoneinternalprojects(GetLinkeBahamutAoneinternalprojectsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAoneinternalprojectsWithOptions(request, runtime);
    }

    public GetLinkeBahamutAoneinternaluncloseddefectnumbeResponse getLinkeBahamutAoneinternaluncloseddefectnumbeWithOptions(GetLinkeBahamutAoneinternaluncloseddefectnumbeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAoneinternaluncloseddefectnumbe", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAoneinternaluncloseddefectnumbeResponse());
    }

    public GetLinkeBahamutAoneinternaluncloseddefectnumbeResponse getLinkeBahamutAoneinternaluncloseddefectnumbe(GetLinkeBahamutAoneinternaluncloseddefectnumbeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAoneinternaluncloseddefectnumbeWithOptions(request, runtime);
    }

    public GetLinkeBahamutAoneinternaluncloseddefectsResponse getLinkeBahamutAoneinternaluncloseddefectsWithOptions(GetLinkeBahamutAoneinternaluncloseddefectsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAoneinternaluncloseddefects", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAoneinternaluncloseddefectsResponse());
    }

    public GetLinkeBahamutAoneinternaluncloseddefectsResponse getLinkeBahamutAoneinternaluncloseddefects(GetLinkeBahamutAoneinternaluncloseddefectsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAoneinternaluncloseddefectsWithOptions(request, runtime);
    }

    public GetLinkeBahamutAoneinternalworkitemResponse getLinkeBahamutAoneinternalworkitemWithOptions(GetLinkeBahamutAoneinternalworkitemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAoneinternalworkitem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAoneinternalworkitemResponse());
    }

    public GetLinkeBahamutAoneinternalworkitemResponse getLinkeBahamutAoneinternalworkitem(GetLinkeBahamutAoneinternalworkitemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAoneinternalworkitemWithOptions(request, runtime);
    }

    public GetLinkeBahamutAoneiterationResponse getLinkeBahamutAoneiterationWithOptions(GetLinkeBahamutAoneiterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAoneiteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAoneiterationResponse());
    }

    public GetLinkeBahamutAoneiterationResponse getLinkeBahamutAoneiteration(GetLinkeBahamutAoneiterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAoneiterationWithOptions(request, runtime);
    }

    public GetLinkeBahamutAonetenantpathiterationsResponse getLinkeBahamutAonetenantpathiterationsWithOptions(GetLinkeBahamutAonetenantpathiterationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAonetenantpathiterations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAonetenantpathiterationsResponse());
    }

    public GetLinkeBahamutAonetenantpathiterationsResponse getLinkeBahamutAonetenantpathiterations(GetLinkeBahamutAonetenantpathiterationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAonetenantpathiterationsWithOptions(request, runtime);
    }

    public GetLinkeBahamutAppcodeserviceurlResponse getLinkeBahamutAppcodeserviceurlWithOptions(GetLinkeBahamutAppcodeserviceurlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAppcodeserviceurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAppcodeserviceurlResponse());
    }

    public GetLinkeBahamutAppcodeserviceurlResponse getLinkeBahamutAppcodeserviceurl(GetLinkeBahamutAppcodeserviceurlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAppcodeserviceurlWithOptions(request, runtime);
    }

    public GetLinkeBahamutAppcustomciconfigurlResponse getLinkeBahamutAppcustomciconfigurlWithOptions(GetLinkeBahamutAppcustomciconfigurlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAppcustomciconfigurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAppcustomciconfigurlResponse());
    }

    public GetLinkeBahamutAppcustomciconfigurlResponse getLinkeBahamutAppcustomciconfigurl(GetLinkeBahamutAppcustomciconfigurlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAppcustomciconfigurlWithOptions(request, runtime);
    }

    public GetLinkeBahamutAppgetappreleasedetailinfoResponse getLinkeBahamutAppgetappreleasedetailinfoWithOptions(GetLinkeBahamutAppgetappreleasedetailinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAppgetappreleasedetailinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAppgetappreleasedetailinfoResponse());
    }

    public GetLinkeBahamutAppgetappreleasedetailinfoResponse getLinkeBahamutAppgetappreleasedetailinfo(GetLinkeBahamutAppgetappreleasedetailinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAppgetappreleasedetailinfoWithOptions(request, runtime);
    }

    public GetLinkeBahamutAppgetrepoResponse getLinkeBahamutAppgetrepoWithOptions(GetLinkeBahamutAppgetrepoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAppgetrepo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAppgetrepoResponse());
    }

    public GetLinkeBahamutAppgetrepoResponse getLinkeBahamutAppgetrepo(GetLinkeBahamutAppgetrepoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAppgetrepoWithOptions(request, runtime);
    }

    public GetLinkeBahamutAppgrayadmininfoResponse getLinkeBahamutAppgrayadmininfoWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAppgrayadmininfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAppgrayadmininfoResponse());
    }

    public GetLinkeBahamutAppgrayadmininfoResponse getLinkeBahamutAppgrayadmininfo() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAppgrayadmininfoWithOptions(runtime);
    }

    public GetLinkeBahamutAppimportbaseinfoResponse getLinkeBahamutAppimportbaseinfoWithOptions(GetLinkeBahamutAppimportbaseinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAppimportbaseinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAppimportbaseinfoResponse());
    }

    public GetLinkeBahamutAppimportbaseinfoResponse getLinkeBahamutAppimportbaseinfo(GetLinkeBahamutAppimportbaseinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAppimportbaseinfoWithOptions(request, runtime);
    }

    public GetLinkeBahamutAppinfolistResponse getLinkeBahamutAppinfolistWithOptions(GetLinkeBahamutAppinfolistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAppinfolist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAppinfolistResponse());
    }

    public GetLinkeBahamutAppinfolistResponse getLinkeBahamutAppinfolist(GetLinkeBahamutAppinfolistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAppinfolistWithOptions(request, runtime);
    }

    public GetLinkeBahamutAppmembersResponse getLinkeBahamutAppmembersWithOptions(GetLinkeBahamutAppmembersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAppmembers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAppmembersResponse());
    }

    public GetLinkeBahamutAppmembersResponse getLinkeBahamutAppmembers(GetLinkeBahamutAppmembersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAppmembersWithOptions(request, runtime);
    }

    public GetLinkeBahamutApprovaltasksResponse getLinkeBahamutApprovaltasksWithOptions(GetLinkeBahamutApprovaltasksRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutApprovaltasks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutApprovaltasksResponse());
    }

    public GetLinkeBahamutApprovaltasksResponse getLinkeBahamutApprovaltasks(GetLinkeBahamutApprovaltasksRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutApprovaltasksWithOptions(request, runtime);
    }

    public GetLinkeBahamutApprovaltaskscountResponse getLinkeBahamutApprovaltaskscountWithOptions(GetLinkeBahamutApprovaltaskscountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutApprovaltaskscount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutApprovaltaskscountResponse());
    }

    public GetLinkeBahamutApprovaltaskscountResponse getLinkeBahamutApprovaltaskscount(GetLinkeBahamutApprovaltaskscountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutApprovaltaskscountWithOptions(request, runtime);
    }

    public GetLinkeBahamutApprovaltasktypesResponse getLinkeBahamutApprovaltasktypesWithOptions(GetLinkeBahamutApprovaltasktypesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutApprovaltasktypes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutApprovaltasktypesResponse());
    }

    public GetLinkeBahamutApprovaltasktypesResponse getLinkeBahamutApprovaltasktypes(GetLinkeBahamutApprovaltasktypesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutApprovaltasktypesWithOptions(request, runtime);
    }

    public GetLinkeBahamutAppstackstenantidResponse getLinkeBahamutAppstackstenantidWithOptions(GetLinkeBahamutAppstackstenantidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAppstackstenantid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAppstackstenantidResponse());
    }

    public GetLinkeBahamutAppstackstenantidResponse getLinkeBahamutAppstackstenantid(GetLinkeBahamutAppstackstenantidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAppstackstenantidWithOptions(request, runtime);
    }

    public GetLinkeBahamutApptenantpathappnamecustompipelineResponse getLinkeBahamutApptenantpathappnamecustompipelineWithOptions(GetLinkeBahamutApptenantpathappnamecustompipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutApptenantpathappnamecustompipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutApptenantpathappnamecustompipelineResponse());
    }

    public GetLinkeBahamutApptenantpathappnamecustompipelineResponse getLinkeBahamutApptenantpathappnamecustompipeline(GetLinkeBahamutApptenantpathappnamecustompipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutApptenantpathappnamecustompipelineWithOptions(request, runtime);
    }

    public GetLinkeBahamutArchdomainResponse getLinkeBahamutArchdomainWithOptions(GetLinkeBahamutArchdomainRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutArchdomain", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutArchdomainResponse());
    }

    public GetLinkeBahamutArchdomainResponse getLinkeBahamutArchdomain(GetLinkeBahamutArchdomainRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutArchdomainWithOptions(request, runtime);
    }

    public GetLinkeBahamutArchdomainappcountResponse getLinkeBahamutArchdomainappcountWithOptions(GetLinkeBahamutArchdomainappcountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutArchdomainappcount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutArchdomainappcountResponse());
    }

    public GetLinkeBahamutArchdomainappcountResponse getLinkeBahamutArchdomainappcount(GetLinkeBahamutArchdomainappcountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutArchdomainappcountWithOptions(request, runtime);
    }

    public GetLinkeBahamutArchdomainappsResponse getLinkeBahamutArchdomainappsWithOptions(GetLinkeBahamutArchdomainappsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutArchdomainapps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutArchdomainappsResponse());
    }

    public GetLinkeBahamutArchdomainappsResponse getLinkeBahamutArchdomainapps(GetLinkeBahamutArchdomainappsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutArchdomainappsWithOptions(request, runtime);
    }

    public GetLinkeBahamutArchdomaininterationsResponse getLinkeBahamutArchdomaininterationsWithOptions(GetLinkeBahamutArchdomaininterationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutArchdomaininterations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutArchdomaininterationsResponse());
    }

    public GetLinkeBahamutArchdomaininterationsResponse getLinkeBahamutArchdomaininterations(GetLinkeBahamutArchdomaininterationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutArchdomaininterationsWithOptions(request, runtime);
    }

    public GetLinkeBahamutArchdomainiterationcountResponse getLinkeBahamutArchdomainiterationcountWithOptions(GetLinkeBahamutArchdomainiterationcountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutArchdomainiterationcount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutArchdomainiterationcountResponse());
    }

    public GetLinkeBahamutArchdomainiterationcountResponse getLinkeBahamutArchdomainiterationcount(GetLinkeBahamutArchdomainiterationcountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutArchdomainiterationcountWithOptions(request, runtime);
    }

    public GetLinkeBahamutArchdomainsResponse getLinkeBahamutArchdomainsWithOptions(GetLinkeBahamutArchdomainsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutArchdomains", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutArchdomainsResponse());
    }

    public GetLinkeBahamutArchdomainsResponse getLinkeBahamutArchdomains(GetLinkeBahamutArchdomainsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutArchdomainsWithOptions(request, runtime);
    }

    public GetLinkeBahamutArchdomainscountResponse getLinkeBahamutArchdomainscountWithOptions(GetLinkeBahamutArchdomainscountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutArchdomainscount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutArchdomainscountResponse());
    }

    public GetLinkeBahamutArchdomainscountResponse getLinkeBahamutArchdomainscount(GetLinkeBahamutArchdomainscountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutArchdomainscountWithOptions(request, runtime);
    }

    public GetLinkeBahamutAuthurlResponse getLinkeBahamutAuthurlWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutAuthurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutAuthurlResponse());
    }

    public GetLinkeBahamutAuthurlResponse getLinkeBahamutAuthurl() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutAuthurlWithOptions(runtime);
    }

    public GetLinkeBahamutCeasingaoneblocknetresultResponse getLinkeBahamutCeasingaoneblocknetresultWithOptions(GetLinkeBahamutCeasingaoneblocknetresultRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutCeasingaoneblocknetresult", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutCeasingaoneblocknetresultResponse());
    }

    public GetLinkeBahamutCeasingaoneblocknetresultResponse getLinkeBahamutCeasingaoneblocknetresult(GetLinkeBahamutCeasingaoneblocknetresultRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutCeasingaoneblocknetresultWithOptions(request, runtime);
    }

    public GetLinkeBahamutCloudcacheappResponse getLinkeBahamutCloudcacheappWithOptions(GetLinkeBahamutCloudcacheappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutCloudcacheapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutCloudcacheappResponse());
    }

    public GetLinkeBahamutCloudcacheappResponse getLinkeBahamutCloudcacheapp(GetLinkeBahamutCloudcacheappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutCloudcacheappWithOptions(request, runtime);
    }

    public GetLinkeBahamutCommonconfiggetbynameResponse getLinkeBahamutCommonconfiggetbynameWithOptions(GetLinkeBahamutCommonconfiggetbynameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutCommonconfiggetbyname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutCommonconfiggetbynameResponse());
    }

    public GetLinkeBahamutCommonconfiggetbynameResponse getLinkeBahamutCommonconfiggetbyname(GetLinkeBahamutCommonconfiggetbynameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutCommonconfiggetbynameWithOptions(request, runtime);
    }

    public GetLinkeBahamutCommonconfiggetbytypeResponse getLinkeBahamutCommonconfiggetbytypeWithOptions(GetLinkeBahamutCommonconfiggetbytypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutCommonconfiggetbytype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutCommonconfiggetbytypeResponse());
    }

    public GetLinkeBahamutCommonconfiggetbytypeResponse getLinkeBahamutCommonconfiggetbytype(GetLinkeBahamutCommonconfiggetbytypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutCommonconfiggetbytypeWithOptions(request, runtime);
    }

    public GetLinkeBahamutCommonuseResponse getLinkeBahamutCommonuseWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutCommonuse", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutCommonuseResponse());
    }

    public GetLinkeBahamutCommonuseResponse getLinkeBahamutCommonuse() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutCommonuseWithOptions(runtime);
    }

    public GetLinkeBahamutCommonusesResponse getLinkeBahamutCommonusesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutCommonuses", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutCommonusesResponse());
    }

    public GetLinkeBahamutCommonusesResponse getLinkeBahamutCommonuses() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutCommonusesWithOptions(runtime);
    }

    public GetLinkeBahamutComponentexecutionsResponse getLinkeBahamutComponentexecutionsWithOptions(GetLinkeBahamutComponentexecutionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutComponentexecutions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutComponentexecutionsResponse());
    }

    public GetLinkeBahamutComponentexecutionsResponse getLinkeBahamutComponentexecutions(GetLinkeBahamutComponentexecutionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutComponentexecutionsWithOptions(request, runtime);
    }

    public GetLinkeBahamutConfigResponse getLinkeBahamutConfigWithOptions(GetLinkeBahamutConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutConfigResponse());
    }

    public GetLinkeBahamutConfigResponse getLinkeBahamutConfig(GetLinkeBahamutConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutConfigWithOptions(request, runtime);
    }

    public GetLinkeBahamutConfigdeployenvResponse getLinkeBahamutConfigdeployenvWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutConfigdeployenv", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutConfigdeployenvResponse());
    }

    public GetLinkeBahamutConfigdeployenvResponse getLinkeBahamutConfigdeployenv() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutConfigdeployenvWithOptions(runtime);
    }

    public GetLinkeBahamutConfiggitcredentialResponse getLinkeBahamutConfiggitcredentialWithOptions(GetLinkeBahamutConfiggitcredentialRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutConfiggitcredential", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutConfiggitcredentialResponse());
    }

    public GetLinkeBahamutConfiggitcredentialResponse getLinkeBahamutConfiggitcredential(GetLinkeBahamutConfiggitcredentialRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutConfiggitcredentialWithOptions(request, runtime);
    }

    public GetLinkeBahamutConfiglinkchostResponse getLinkeBahamutConfiglinkchostWithOptions(GetLinkeBahamutConfiglinkchostRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutConfiglinkchost", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutConfiglinkchostResponse());
    }

    public GetLinkeBahamutConfiglinkchostResponse getLinkeBahamutConfiglinkchost(GetLinkeBahamutConfiglinkchostRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutConfiglinkchostWithOptions(request, runtime);
    }

    public GetLinkeBahamutCurrentuserResponse getLinkeBahamutCurrentuserWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutCurrentuser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutCurrentuserResponse());
    }

    public GetLinkeBahamutCurrentuserResponse getLinkeBahamutCurrentuser() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutCurrentuserWithOptions(runtime);
    }

    public GetLinkeBahamutCurrentuserswitchResponse getLinkeBahamutCurrentuserswitchWithOptions(GetLinkeBahamutCurrentuserswitchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutCurrentuserswitch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutCurrentuserswitchResponse());
    }

    public GetLinkeBahamutCurrentuserswitchResponse getLinkeBahamutCurrentuserswitch(GetLinkeBahamutCurrentuserswitchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutCurrentuserswitchWithOptions(request, runtime);
    }

    public GetLinkeBahamutCurrentuserswitchbooleanResponse getLinkeBahamutCurrentuserswitchbooleanWithOptions(GetLinkeBahamutCurrentuserswitchbooleanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutCurrentuserswitchboolean", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutCurrentuserswitchbooleanResponse());
    }

    public GetLinkeBahamutCurrentuserswitchbooleanResponse getLinkeBahamutCurrentuserswitchboolean(GetLinkeBahamutCurrentuserswitchbooleanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutCurrentuserswitchbooleanWithOptions(request, runtime);
    }

    public GetLinkeBahamutCurrentuserswitchontrialResponse getLinkeBahamutCurrentuserswitchontrialWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutCurrentuserswitchontrial", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutCurrentuserswitchontrialResponse());
    }

    public GetLinkeBahamutCurrentuserswitchontrialResponse getLinkeBahamutCurrentuserswitchontrial() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutCurrentuserswitchontrialWithOptions(runtime);
    }

    public GetLinkeBahamutDeprecateddeprecatedgetallattachableResponse getLinkeBahamutDeprecateddeprecatedgetallattachableWithOptions(GetLinkeBahamutDeprecateddeprecatedgetallattachableRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutDeprecateddeprecatedgetallattachable", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutDeprecateddeprecatedgetallattachableResponse());
    }

    public GetLinkeBahamutDeprecateddeprecatedgetallattachableResponse getLinkeBahamutDeprecateddeprecatedgetallattachable(GetLinkeBahamutDeprecateddeprecatedgetallattachableRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutDeprecateddeprecatedgetallattachableWithOptions(request, runtime);
    }

    public GetLinkeBahamutEnvconfigResponse getLinkeBahamutEnvconfigWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutEnvconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutEnvconfigResponse());
    }

    public GetLinkeBahamutEnvconfigResponse getLinkeBahamutEnvconfig() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutEnvconfigWithOptions(runtime);
    }

    public GetLinkeBahamutExternalreleaseappResponse getLinkeBahamutExternalreleaseappWithOptions(GetLinkeBahamutExternalreleaseappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutExternalreleaseapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutExternalreleaseappResponse());
    }

    public GetLinkeBahamutExternalreleaseappResponse getLinkeBahamutExternalreleaseapp(GetLinkeBahamutExternalreleaseappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutExternalreleaseappWithOptions(request, runtime);
    }

    public GetLinkeBahamutFlagcabinetgetflagResponse getLinkeBahamutFlagcabinetgetflagWithOptions(GetLinkeBahamutFlagcabinetgetflagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutFlagcabinetgetflag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutFlagcabinetgetflagResponse());
    }

    public GetLinkeBahamutFlagcabinetgetflagResponse getLinkeBahamutFlagcabinetgetflag(GetLinkeBahamutFlagcabinetgetflagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutFlagcabinetgetflagWithOptions(request, runtime);
    }

    public GetLinkeBahamutFlowtaskhostResponse getLinkeBahamutFlowtaskhostWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutFlowtaskhost", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutFlowtaskhostResponse());
    }

    public GetLinkeBahamutFlowtaskhostResponse getLinkeBahamutFlowtaskhost() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutFlowtaskhostWithOptions(runtime);
    }

    public GetLinkeBahamutGetcloudworkspaceResponse getLinkeBahamutGetcloudworkspaceWithOptions(GetLinkeBahamutGetcloudworkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutGetcloudworkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutGetcloudworkspaceResponse());
    }

    public GetLinkeBahamutGetcloudworkspaceResponse getLinkeBahamutGetcloudworkspace(GetLinkeBahamutGetcloudworkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutGetcloudworkspaceWithOptions(request, runtime);
    }

    public GetLinkeBahamutGetexternalqualityResponse getLinkeBahamutGetexternalqualityWithOptions(GetLinkeBahamutGetexternalqualityRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutGetexternalquality", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutGetexternalqualityResponse());
    }

    public GetLinkeBahamutGetexternalqualityResponse getLinkeBahamutGetexternalquality(GetLinkeBahamutGetexternalqualityRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutGetexternalqualityWithOptions(request, runtime);
    }

    public GetLinkeBahamutGetexternalqualitygetexternalqualityResponse getLinkeBahamutGetexternalqualitygetexternalqualityWithOptions(GetLinkeBahamutGetexternalqualitygetexternalqualityRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutGetexternalqualitygetexternalquality", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutGetexternalqualitygetexternalqualityResponse());
    }

    public GetLinkeBahamutGetexternalqualitygetexternalqualityResponse getLinkeBahamutGetexternalqualitygetexternalquality(GetLinkeBahamutGetexternalqualitygetexternalqualityRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutGetexternalqualitygetexternalqualityWithOptions(request, runtime);
    }

    public GetLinkeBahamutGetiterationmrpipelinegroupsResponse getLinkeBahamutGetiterationmrpipelinegroupsWithOptions(GetLinkeBahamutGetiterationmrpipelinegroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutGetiterationmrpipelinegroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutGetiterationmrpipelinegroupsResponse());
    }

    public GetLinkeBahamutGetiterationmrpipelinegroupsResponse getLinkeBahamutGetiterationmrpipelinegroups(GetLinkeBahamutGetiterationmrpipelinegroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutGetiterationmrpipelinegroupsWithOptions(request, runtime);
    }

    public GetLinkeBahamutGetiterationserviceapplypipelinegroupsResponse getLinkeBahamutGetiterationserviceapplypipelinegroupsWithOptions(GetLinkeBahamutGetiterationserviceapplypipelinegroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutGetiterationserviceapplypipelinegroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutGetiterationserviceapplypipelinegroupsResponse());
    }

    public GetLinkeBahamutGetiterationserviceapplypipelinegroupsResponse getLinkeBahamutGetiterationserviceapplypipelinegroups(GetLinkeBahamutGetiterationserviceapplypipelinegroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutGetiterationserviceapplypipelinegroupsWithOptions(request, runtime);
    }

    public GetLinkeBahamutGetmyreleaseResponse getLinkeBahamutGetmyreleaseWithOptions(GetLinkeBahamutGetmyreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutGetmyrelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutGetmyreleaseResponse());
    }

    public GetLinkeBahamutGetmyreleaseResponse getLinkeBahamutGetmyrelease(GetLinkeBahamutGetmyreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutGetmyreleaseWithOptions(request, runtime);
    }

    public GetLinkeBahamutGetpipelinestatusbystageResponse getLinkeBahamutGetpipelinestatusbystageWithOptions(GetLinkeBahamutGetpipelinestatusbystageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutGetpipelinestatusbystage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutGetpipelinestatusbystageResponse());
    }

    public GetLinkeBahamutGetpipelinestatusbystageResponse getLinkeBahamutGetpipelinestatusbystage(GetLinkeBahamutGetpipelinestatusbystageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutGetpipelinestatusbystageWithOptions(request, runtime);
    }

    public GetLinkeBahamutGroupsgetpipelinegroupsanddelealwithlastpipelineResponse getLinkeBahamutGroupsgetpipelinegroupsanddelealwithlastpipelineWithOptions(GetLinkeBahamutGroupsgetpipelinegroupsanddelealwithlastpipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutGroupsgetpipelinegroupsanddelealwithlastpipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutGroupsgetpipelinegroupsanddelealwithlastpipelineResponse());
    }

    public GetLinkeBahamutGroupsgetpipelinegroupsanddelealwithlastpipelineResponse getLinkeBahamutGroupsgetpipelinegroupsanddelealwithlastpipeline(GetLinkeBahamutGroupsgetpipelinegroupsanddelealwithlastpipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutGroupsgetpipelinegroupsanddelealwithlastpipelineWithOptions(request, runtime);
    }

    public GetLinkeBahamutInternaltasksResponse getLinkeBahamutInternaltasksWithOptions(GetLinkeBahamutInternaltasksRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutInternaltasks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutInternaltasksResponse());
    }

    public GetLinkeBahamutInternaltasksResponse getLinkeBahamutInternaltasks(GetLinkeBahamutInternaltasksRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutInternaltasksWithOptions(request, runtime);
    }

    public GetLinkeBahamutInternaltaskscountResponse getLinkeBahamutInternaltaskscountWithOptions(GetLinkeBahamutInternaltaskscountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutInternaltaskscount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutInternaltaskscountResponse());
    }

    public GetLinkeBahamutInternaltaskscountResponse getLinkeBahamutInternaltaskscount(GetLinkeBahamutInternaltaskscountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutInternaltaskscountWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationgetbyreleaseResponse getLinkeBahamutIterationgetbyreleaseWithOptions(GetLinkeBahamutIterationgetbyreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationgetbyrelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationgetbyreleaseResponse());
    }

    public GetLinkeBahamutIterationgetbyreleaseResponse getLinkeBahamutIterationgetbyrelease(GetLinkeBahamutIterationgetbyreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationgetbyreleaseWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationgetiterationgrouppipelinesoftimelineResponse getLinkeBahamutIterationgetiterationgrouppipelinesoftimelineWithOptions(GetLinkeBahamutIterationgetiterationgrouppipelinesoftimelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationgetiterationgrouppipelinesoftimeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationgetiterationgrouppipelinesoftimelineResponse());
    }

    public GetLinkeBahamutIterationgetiterationgrouppipelinesoftimelineResponse getLinkeBahamutIterationgetiterationgrouppipelinesoftimeline(GetLinkeBahamutIterationgetiterationgrouppipelinesoftimelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationgetiterationgrouppipelinesoftimelineWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationgetiterationpipelinegroupsResponse getLinkeBahamutIterationgetiterationpipelinegroupsWithOptions(GetLinkeBahamutIterationgetiterationpipelinegroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationgetiterationpipelinegroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationgetiterationpipelinegroupsResponse());
    }

    public GetLinkeBahamutIterationgetiterationpipelinegroupsResponse getLinkeBahamutIterationgetiterationpipelinegroups(GetLinkeBahamutIterationgetiterationpipelinegroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationgetiterationpipelinegroupsWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationgetiterationpipelinegroupsoftimelineResponse getLinkeBahamutIterationgetiterationpipelinegroupsoftimelineWithOptions(GetLinkeBahamutIterationgetiterationpipelinegroupsoftimelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationgetiterationpipelinegroupsoftimeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationgetiterationpipelinegroupsoftimelineResponse());
    }

    public GetLinkeBahamutIterationgetiterationpipelinegroupsoftimelineResponse getLinkeBahamutIterationgetiterationpipelinegroupsoftimeline(GetLinkeBahamutIterationgetiterationpipelinegroupsoftimelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationgetiterationpipelinegroupsoftimelineWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationgetiterationsResponse getLinkeBahamutIterationgetiterationsWithOptions(GetLinkeBahamutIterationgetiterationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationgetiterations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationgetiterationsResponse());
    }

    public GetLinkeBahamutIterationgetiterationsResponse getLinkeBahamutIterationgetiterations(GetLinkeBahamutIterationgetiterationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationgetiterationsWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationgetiterationworkitemsResponse getLinkeBahamutIterationgetiterationworkitemsWithOptions(GetLinkeBahamutIterationgetiterationworkitemsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationgetiterationworkitems", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationgetiterationworkitemsResponse());
    }

    public GetLinkeBahamutIterationgetiterationworkitemsResponse getLinkeBahamutIterationgetiterationworkitems(GetLinkeBahamutIterationgetiterationworkitemsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationgetiterationworkitemsWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationgetlterationtabnumResponse getLinkeBahamutIterationgetlterationtabnumWithOptions(GetLinkeBahamutIterationgetlterationtabnumRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationgetlterationtabnum", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationgetlterationtabnumResponse());
    }

    public GetLinkeBahamutIterationgetlterationtabnumResponse getLinkeBahamutIterationgetlterationtabnum(GetLinkeBahamutIterationgetlterationtabnumRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationgetlterationtabnumWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationgetnewpipelineofgroupoftimelineResponse getLinkeBahamutIterationgetnewpipelineofgroupoftimelineWithOptions(GetLinkeBahamutIterationgetnewpipelineofgroupoftimelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationgetnewpipelineofgroupoftimeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationgetnewpipelineofgroupoftimelineResponse());
    }

    public GetLinkeBahamutIterationgetnewpipelineofgroupoftimelineResponse getLinkeBahamutIterationgetnewpipelineofgroupoftimeline(GetLinkeBahamutIterationgetnewpipelineofgroupoftimelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationgetnewpipelineofgroupoftimelineWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationgetrelatelatestiterationResponse getLinkeBahamutIterationgetrelatelatestiterationWithOptions(GetLinkeBahamutIterationgetrelatelatestiterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationgetrelatelatestiteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationgetrelatelatestiterationResponse());
    }

    public GetLinkeBahamutIterationgetrelatelatestiterationResponse getLinkeBahamutIterationgetrelatelatestiteration(GetLinkeBahamutIterationgetrelatelatestiterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationgetrelatelatestiterationWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationgetunitsbyexternalldResponse getLinkeBahamutIterationgetunitsbyexternalldWithOptions(GetLinkeBahamutIterationgetunitsbyexternalldRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationgetunitsbyexternalld", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationgetunitsbyexternalldResponse());
    }

    public GetLinkeBahamutIterationgetunitsbyexternalldResponse getLinkeBahamutIterationgetunitsbyexternalld(GetLinkeBahamutIterationgetunitsbyexternalldRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationgetunitsbyexternalldWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationsequenceResponse getLinkeBahamutIterationsequenceWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationsequence", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationsequenceResponse());
    }

    public GetLinkeBahamutIterationsequenceResponse getLinkeBahamutIterationsequence() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationsequenceWithOptions(runtime);
    }

    public GetLinkeBahamutIterationsgetlterationResponse getLinkeBahamutIterationsgetlterationWithOptions(GetLinkeBahamutIterationsgetlterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationsgetlteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationsgetlterationResponse());
    }

    public GetLinkeBahamutIterationsgetlterationResponse getLinkeBahamutIterationsgetlteration(GetLinkeBahamutIterationsgetlterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationsgetlterationWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationsgetlterationsResponse getLinkeBahamutIterationsgetlterationsWithOptions(GetLinkeBahamutIterationsgetlterationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationsgetlterations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationsgetlterationsResponse());
    }

    public GetLinkeBahamutIterationsgetlterationsResponse getLinkeBahamutIterationsgetlterations(GetLinkeBahamutIterationsgetlterationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationsgetlterationsWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationsgetlterationsbyappgroupResponse getLinkeBahamutIterationsgetlterationsbyappgroupWithOptions(GetLinkeBahamutIterationsgetlterationsbyappgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationsgetlterationsbyappgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationsgetlterationsbyappgroupResponse());
    }

    public GetLinkeBahamutIterationsgetlterationsbyappgroupResponse getLinkeBahamutIterationsgetlterationsbyappgroup(GetLinkeBahamutIterationsgetlterationsbyappgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationsgetlterationsbyappgroupWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationsgetunitsResponse getLinkeBahamutIterationsgetunitsWithOptions(GetLinkeBahamutIterationsgetunitsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationsgetunits", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationsgetunitsResponse());
    }

    public GetLinkeBahamutIterationsgetunitsResponse getLinkeBahamutIterationsgetunits(GetLinkeBahamutIterationsgetunitsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationsgetunitsWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationsgetunitscountResponse getLinkeBahamutIterationsgetunitscountWithOptions(GetLinkeBahamutIterationsgetunitscountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationsgetunitscount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationsgetunitscountResponse());
    }

    public GetLinkeBahamutIterationsgetunitscountResponse getLinkeBahamutIterationsgetunitscount(GetLinkeBahamutIterationsgetunitscountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationsgetunitscountWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationtemplateiterationtemplateResponse getLinkeBahamutIterationtemplateiterationtemplateWithOptions(GetLinkeBahamutIterationtemplateiterationtemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationtemplateiterationtemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationtemplateiterationtemplateResponse());
    }

    public GetLinkeBahamutIterationtemplateiterationtemplateResponse getLinkeBahamutIterationtemplateiterationtemplate(GetLinkeBahamutIterationtemplateiterationtemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationtemplateiterationtemplateWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationtemplatesgetlterationtemplatesResponse getLinkeBahamutIterationtemplatesgetlterationtemplatesWithOptions(GetLinkeBahamutIterationtemplatesgetlterationtemplatesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationtemplatesgetlterationtemplates", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationtemplatesgetlterationtemplatesResponse());
    }

    public GetLinkeBahamutIterationtemplatesgetlterationtemplatesResponse getLinkeBahamutIterationtemplatesgetlterationtemplates(GetLinkeBahamutIterationtemplatesgetlterationtemplatesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationtemplatesgetlterationtemplatesWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationunitResponse getLinkeBahamutIterationunitWithOptions(GetLinkeBahamutIterationunitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationunit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationunitResponse());
    }

    public GetLinkeBahamutIterationunitResponse getLinkeBahamutIterationunit(GetLinkeBahamutIterationunitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationunitWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationunithistroryResponse getLinkeBahamutIterationunithistroryWithOptions(GetLinkeBahamutIterationunithistroryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationunithistrory", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationunithistroryResponse());
    }

    public GetLinkeBahamutIterationunithistroryResponse getLinkeBahamutIterationunithistrory(GetLinkeBahamutIterationunithistroryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationunithistroryWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationunitjarhistrorysummaryResponse getLinkeBahamutIterationunitjarhistrorysummaryWithOptions(GetLinkeBahamutIterationunitjarhistrorysummaryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationunitjarhistrorysummary", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationunitjarhistrorysummaryResponse());
    }

    public GetLinkeBahamutIterationunitjarhistrorysummaryResponse getLinkeBahamutIterationunitjarhistrorysummary(GetLinkeBahamutIterationunitjarhistrorysummaryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationunitjarhistrorysummaryWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationunitscountResponse getLinkeBahamutIterationunitscountWithOptions(GetLinkeBahamutIterationunitscountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationunitscount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationunitscountResponse());
    }

    public GetLinkeBahamutIterationunitscountResponse getLinkeBahamutIterationunitscount(GetLinkeBahamutIterationunitscountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationunitscountWithOptions(request, runtime);
    }

    public GetLinkeBahamutIterationworkitemsResponse getLinkeBahamutIterationworkitemsWithOptions(GetLinkeBahamutIterationworkitemsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutIterationworkitems", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutIterationworkitemsResponse());
    }

    public GetLinkeBahamutIterationworkitemsResponse getLinkeBahamutIterationworkitems(GetLinkeBahamutIterationworkitemsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutIterationworkitemsWithOptions(request, runtime);
    }

    public GetLinkeBahamutLogsgetlogsbyuserResponse getLinkeBahamutLogsgetlogsbyuserWithOptions(GetLinkeBahamutLogsgetlogsbyuserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutLogsgetlogsbyuser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutLogsgetlogsbyuserResponse());
    }

    public GetLinkeBahamutLogsgetlogsbyuserResponse getLinkeBahamutLogsgetlogsbyuser(GetLinkeBahamutLogsgetlogsbyuserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutLogsgetlogsbyuserWithOptions(request, runtime);
    }

    public GetLinkeBahamutMiscgetgraylterationResponse getLinkeBahamutMiscgetgraylterationWithOptions(GetLinkeBahamutMiscgetgraylterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutMiscgetgraylteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutMiscgetgraylterationResponse());
    }

    public GetLinkeBahamutMiscgetgraylterationResponse getLinkeBahamutMiscgetgraylteration(GetLinkeBahamutMiscgetgraylterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutMiscgetgraylterationWithOptions(request, runtime);
    }

    public GetLinkeBahamutMiscgetgraylterationsResponse getLinkeBahamutMiscgetgraylterationsWithOptions(GetLinkeBahamutMiscgetgraylterationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutMiscgetgraylterations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutMiscgetgraylterationsResponse());
    }

    public GetLinkeBahamutMiscgetgraylterationsResponse getLinkeBahamutMiscgetgraylterations(GetLinkeBahamutMiscgetgraylterationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutMiscgetgraylterationsWithOptions(request, runtime);
    }

    public GetLinkeBahamutMiscgetreleaseResponse getLinkeBahamutMiscgetreleaseWithOptions(GetLinkeBahamutMiscgetreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutMiscgetrelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutMiscgetreleaseResponse());
    }

    public GetLinkeBahamutMiscgetreleaseResponse getLinkeBahamutMiscgetrelease(GetLinkeBahamutMiscgetreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutMiscgetreleaseWithOptions(request, runtime);
    }

    public GetLinkeBahamutMiscgetreleasedunitResponse getLinkeBahamutMiscgetreleasedunitWithOptions(GetLinkeBahamutMiscgetreleasedunitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutMiscgetreleasedunit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutMiscgetreleasedunitResponse());
    }

    public GetLinkeBahamutMiscgetreleasedunitResponse getLinkeBahamutMiscgetreleasedunit(GetLinkeBahamutMiscgetreleasedunitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutMiscgetreleasedunitWithOptions(request, runtime);
    }

    public GetLinkeBahamutMrgroupgetpipelineexecutionsbygroupandmridResponse getLinkeBahamutMrgroupgetpipelineexecutionsbygroupandmridWithOptions(GetLinkeBahamutMrgroupgetpipelineexecutionsbygroupandmridRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutMrgroupgetpipelineexecutionsbygroupandmrid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutMrgroupgetpipelineexecutionsbygroupandmridResponse());
    }

    public GetLinkeBahamutMrgroupgetpipelineexecutionsbygroupandmridResponse getLinkeBahamutMrgroupgetpipelineexecutionsbygroupandmrid(GetLinkeBahamutMrgroupgetpipelineexecutionsbygroupandmridRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutMrgroupgetpipelineexecutionsbygroupandmridWithOptions(request, runtime);
    }

    public GetLinkeBahamutMrlistmrsResponse getLinkeBahamutMrlistmrsWithOptions(GetLinkeBahamutMrlistmrsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutMrlistmrs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutMrlistmrsResponse());
    }

    public GetLinkeBahamutMrlistmrsResponse getLinkeBahamutMrlistmrs(GetLinkeBahamutMrlistmrsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutMrlistmrsWithOptions(request, runtime);
    }

    public GetLinkeBahamutMvnjarpipelineunfinishedResponse getLinkeBahamutMvnjarpipelineunfinishedWithOptions(GetLinkeBahamutMvnjarpipelineunfinishedRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutMvnjarpipelineunfinished", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutMvnjarpipelineunfinishedResponse());
    }

    public GetLinkeBahamutMvnjarpipelineunfinishedResponse getLinkeBahamutMvnjarpipelineunfinished(GetLinkeBahamutMvnjarpipelineunfinishedRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutMvnjarpipelineunfinishedWithOptions(request, runtime);
    }

    public GetLinkeBahamutNotificationResponse getLinkeBahamutNotificationWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutNotification", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutNotificationResponse());
    }

    public GetLinkeBahamutNotificationResponse getLinkeBahamutNotification() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutNotificationWithOptions(runtime);
    }

    public GetLinkeBahamutOpengenlterationldResponse getLinkeBahamutOpengenlterationldWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutOpengenlterationld", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutOpengenlterationldResponse());
    }

    public GetLinkeBahamutOpengenlterationldResponse getLinkeBahamutOpengenlterationld() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutOpengenlterationldWithOptions(runtime);
    }

    public GetLinkeBahamutOpengetconfigbynameResponse getLinkeBahamutOpengetconfigbynameWithOptions(GetLinkeBahamutOpengetconfigbynameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutOpengetconfigbyname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutOpengetconfigbynameResponse());
    }

    public GetLinkeBahamutOpengetconfigbynameResponse getLinkeBahamutOpengetconfigbyname(GetLinkeBahamutOpengetconfigbynameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutOpengetconfigbynameWithOptions(request, runtime);
    }

    public GetLinkeBahamutOpengetlterationbytimeResponse getLinkeBahamutOpengetlterationbytimeWithOptions(GetLinkeBahamutOpengetlterationbytimeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutOpengetlterationbytime", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutOpengetlterationbytimeResponse());
    }

    public GetLinkeBahamutOpengetlterationbytimeResponse getLinkeBahamutOpengetlterationbytime(GetLinkeBahamutOpengetlterationbytimeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutOpengetlterationbytimeWithOptions(request, runtime);
    }

    public GetLinkeBahamutOpengetlterationunitResponse getLinkeBahamutOpengetlterationunitWithOptions(GetLinkeBahamutOpengetlterationunitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutOpengetlterationunit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutOpengetlterationunitResponse());
    }

    public GetLinkeBahamutOpengetlterationunitResponse getLinkeBahamutOpengetlterationunit(GetLinkeBahamutOpengetlterationunitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutOpengetlterationunitWithOptions(request, runtime);
    }

    public GetLinkeBahamutOpengetrelatelterationResponse getLinkeBahamutOpengetrelatelterationWithOptions(GetLinkeBahamutOpengetrelatelterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutOpengetrelatelteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutOpengetrelatelterationResponse());
    }

    public GetLinkeBahamutOpengetrelatelterationResponse getLinkeBahamutOpengetrelatelteration(GetLinkeBahamutOpengetrelatelterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutOpengetrelatelterationWithOptions(request, runtime);
    }

    public GetLinkeBahamutOpengetrelatereleaseResponse getLinkeBahamutOpengetrelatereleaseWithOptions(GetLinkeBahamutOpengetrelatereleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutOpengetrelaterelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutOpengetrelatereleaseResponse());
    }

    public GetLinkeBahamutOpengetrelatereleaseResponse getLinkeBahamutOpengetrelaterelease(GetLinkeBahamutOpengetrelatereleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutOpengetrelatereleaseWithOptions(request, runtime);
    }

    public GetLinkeBahamutOpengetrelatereleaseappsResponse getLinkeBahamutOpengetrelatereleaseappsWithOptions(GetLinkeBahamutOpengetrelatereleaseappsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutOpengetrelatereleaseapps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutOpengetrelatereleaseappsResponse());
    }

    public GetLinkeBahamutOpengetrelatereleaseappsResponse getLinkeBahamutOpengetrelatereleaseapps(GetLinkeBahamutOpengetrelatereleaseappsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutOpengetrelatereleaseappsWithOptions(request, runtime);
    }

    public GetLinkeBahamutOpengetreleasebyldResponse getLinkeBahamutOpengetreleasebyldWithOptions(GetLinkeBahamutOpengetreleasebyldRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutOpengetreleasebyld", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutOpengetreleasebyldResponse());
    }

    public GetLinkeBahamutOpengetreleasebyldResponse getLinkeBahamutOpengetreleasebyld(GetLinkeBahamutOpengetreleasebyldRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutOpengetreleasebyldWithOptions(request, runtime);
    }

    public GetLinkeBahamutOpengetreleasebytimeResponse getLinkeBahamutOpengetreleasebytimeWithOptions(GetLinkeBahamutOpengetreleasebytimeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutOpengetreleasebytime", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutOpengetreleasebytimeResponse());
    }

    public GetLinkeBahamutOpengetreleasebytimeResponse getLinkeBahamutOpengetreleasebytime(GetLinkeBahamutOpengetreleasebytimeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutOpengetreleasebytimeWithOptions(request, runtime);
    }

    public GetLinkeBahamutOpengetsamerepoapplnlterationResponse getLinkeBahamutOpengetsamerepoapplnlterationWithOptions(GetLinkeBahamutOpengetsamerepoapplnlterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutOpengetsamerepoapplnlteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutOpengetsamerepoapplnlterationResponse());
    }

    public GetLinkeBahamutOpengetsamerepoapplnlterationResponse getLinkeBahamutOpengetsamerepoapplnlteration(GetLinkeBahamutOpengetsamerepoapplnlterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutOpengetsamerepoapplnlterationWithOptions(request, runtime);
    }

    public GetLinkeBahamutOpengettenantsResponse getLinkeBahamutOpengettenantsWithOptions(GetLinkeBahamutOpengettenantsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutOpengettenants", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutOpengettenantsResponse());
    }

    public GetLinkeBahamutOpengettenantsResponse getLinkeBahamutOpengettenants(GetLinkeBahamutOpengettenantsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutOpengettenantsWithOptions(request, runtime);
    }

    public GetLinkeBahamutPaasgetapplyserverurlResponse getLinkeBahamutPaasgetapplyserverurlWithOptions(GetLinkeBahamutPaasgetapplyserverurlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPaasgetapplyserverurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPaasgetapplyserverurlResponse());
    }

    public GetLinkeBahamutPaasgetapplyserverurlResponse getLinkeBahamutPaasgetapplyserverurl(GetLinkeBahamutPaasgetapplyserverurlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPaasgetapplyserverurlWithOptions(request, runtime);
    }

    public GetLinkeBahamutPaasgetappsResponse getLinkeBahamutPaasgetappsWithOptions(GetLinkeBahamutPaasgetappsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPaasgetapps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPaasgetappsResponse());
    }

    public GetLinkeBahamutPaasgetappsResponse getLinkeBahamutPaasgetapps(GetLinkeBahamutPaasgetappsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPaasgetappsWithOptions(request, runtime);
    }

    public GetLinkeBahamutPaasgetiterationunitResponse getLinkeBahamutPaasgetiterationunitWithOptions(GetLinkeBahamutPaasgetiterationunitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPaasgetiterationunit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPaasgetiterationunitResponse());
    }

    public GetLinkeBahamutPaasgetiterationunitResponse getLinkeBahamutPaasgetiterationunit(GetLinkeBahamutPaasgetiterationunitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPaasgetiterationunitWithOptions(request, runtime);
    }

    public GetLinkeBahamutPaasgetreleasedappResponse getLinkeBahamutPaasgetreleasedappWithOptions(GetLinkeBahamutPaasgetreleasedappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPaasgetreleasedapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPaasgetreleasedappResponse());
    }

    public GetLinkeBahamutPaasgetreleasedappResponse getLinkeBahamutPaasgetreleasedapp(GetLinkeBahamutPaasgetreleasedappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPaasgetreleasedappWithOptions(request, runtime);
    }

    public GetLinkeBahamutPipelinegetcomponentresultResponse getLinkeBahamutPipelinegetcomponentresultWithOptions(GetLinkeBahamutPipelinegetcomponentresultRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPipelinegetcomponentresult", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPipelinegetcomponentresultResponse());
    }

    public GetLinkeBahamutPipelinegetcomponentresultResponse getLinkeBahamutPipelinegetcomponentresult(GetLinkeBahamutPipelinegetcomponentresultRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPipelinegetcomponentresultWithOptions(request, runtime);
    }

    public GetLinkeBahamutPipelinegetcomponentresultvResponse getLinkeBahamutPipelinegetcomponentresultvWithOptions(GetLinkeBahamutPipelinegetcomponentresultvRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPipelinegetcomponentresultv", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPipelinegetcomponentresultvResponse());
    }

    public GetLinkeBahamutPipelinegetcomponentresultvResponse getLinkeBahamutPipelinegetcomponentresultv(GetLinkeBahamutPipelinegetcomponentresultvRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPipelinegetcomponentresultvWithOptions(request, runtime);
    }

    public GetLinkeBahamutPipelinegetexecutionResponse getLinkeBahamutPipelinegetexecutionWithOptions(GetLinkeBahamutPipelinegetexecutionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPipelinegetexecution", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPipelinegetexecutionResponse());
    }

    public GetLinkeBahamutPipelinegetexecutionResponse getLinkeBahamutPipelinegetexecution(GetLinkeBahamutPipelinegetexecutionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPipelinegetexecutionWithOptions(request, runtime);
    }

    public GetLinkeBahamutPipelinegetexecutionsbygroupResponse getLinkeBahamutPipelinegetexecutionsbygroupWithOptions(GetLinkeBahamutPipelinegetexecutionsbygroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPipelinegetexecutionsbygroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPipelinegetexecutionsbygroupResponse());
    }

    public GetLinkeBahamutPipelinegetexecutionsbygroupResponse getLinkeBahamutPipelinegetexecutionsbygroup(GetLinkeBahamutPipelinegetexecutionsbygroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPipelinegetexecutionsbygroupWithOptions(request, runtime);
    }

    public GetLinkeBahamutPipelinegetjarlogurlResponse getLinkeBahamutPipelinegetjarlogurlWithOptions(GetLinkeBahamutPipelinegetjarlogurlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPipelinegetjarlogurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPipelinegetjarlogurlResponse());
    }

    public GetLinkeBahamutPipelinegetjarlogurlResponse getLinkeBahamutPipelinegetjarlogurl(GetLinkeBahamutPipelinegetjarlogurlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPipelinegetjarlogurlWithOptions(request, runtime);
    }

    public GetLinkeBahamutPipelinegetlibhostResponse getLinkeBahamutPipelinegetlibhostWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPipelinegetlibhost", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPipelinegetlibhostResponse());
    }

    public GetLinkeBahamutPipelinegetlibhostResponse getLinkeBahamutPipelinegetlibhost() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPipelinegetlibhostWithOptions(runtime);
    }

    public GetLinkeBahamutPipelinesgetpipelineexecutionsbygroupResponse getLinkeBahamutPipelinesgetpipelineexecutionsbygroupWithOptions(GetLinkeBahamutPipelinesgetpipelineexecutionsbygroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPipelinesgetpipelineexecutionsbygroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPipelinesgetpipelineexecutionsbygroupResponse());
    }

    public GetLinkeBahamutPipelinesgetpipelineexecutionsbygroupResponse getLinkeBahamutPipelinesgetpipelineexecutionsbygroup(GetLinkeBahamutPipelinesgetpipelineexecutionsbygroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPipelinesgetpipelineexecutionsbygroupWithOptions(request, runtime);
    }

    public GetLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupResponse getLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupWithOptions(GetLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupResponse());
    }

    public GetLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupResponse getLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroup(GetLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupWithOptions(request, runtime);
    }

    public GetLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupandidResponse getLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupandidWithOptions(GetLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupandidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupandid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupandidResponse());
    }

    public GetLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupandidResponse getLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupandid(GetLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupandidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPipelinesgetreleasejarpipelineexecutionsbygroupandidWithOptions(request, runtime);
    }

    public GetLinkeBahamutPipelinesgettoppipelinesofuserResponse getLinkeBahamutPipelinesgettoppipelinesofuserWithOptions(GetLinkeBahamutPipelinesgettoppipelinesofuserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPipelinesgettoppipelinesofuser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPipelinesgettoppipelinesofuserResponse());
    }

    public GetLinkeBahamutPipelinesgettoppipelinesofuserResponse getLinkeBahamutPipelinesgettoppipelinesofuser(GetLinkeBahamutPipelinesgettoppipelinesofuserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPipelinesgettoppipelinesofuserWithOptions(request, runtime);
    }

    public GetLinkeBahamutPomgetpomentitiesResponse getLinkeBahamutPomgetpomentitiesWithOptions(GetLinkeBahamutPomgetpomentitiesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPomgetpomentities", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPomgetpomentitiesResponse());
    }

    public GetLinkeBahamutPomgetpomentitiesResponse getLinkeBahamutPomgetpomentities(GetLinkeBahamutPomgetpomentitiesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPomgetpomentitiesWithOptions(request, runtime);
    }

    public GetLinkeBahamutPreviewgetpreviewownersResponse getLinkeBahamutPreviewgetpreviewownersWithOptions(GetLinkeBahamutPreviewgetpreviewownersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPreviewgetpreviewowners", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPreviewgetpreviewownersResponse());
    }

    public GetLinkeBahamutPreviewgetpreviewownersResponse getLinkeBahamutPreviewgetpreviewowners(GetLinkeBahamutPreviewgetpreviewownersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPreviewgetpreviewownersWithOptions(request, runtime);
    }

    public GetLinkeBahamutPubownerempidResponse getLinkeBahamutPubownerempidWithOptions(GetLinkeBahamutPubownerempidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutPubownerempid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutPubownerempidResponse());
    }

    public GetLinkeBahamutPubownerempidResponse getLinkeBahamutPubownerempid(GetLinkeBahamutPubownerempidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutPubownerempidWithOptions(request, runtime);
    }

    public GetLinkeBahamutQualitygetcoverageResponse getLinkeBahamutQualitygetcoverageWithOptions(GetLinkeBahamutQualitygetcoverageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutQualitygetcoverage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutQualitygetcoverageResponse());
    }

    public GetLinkeBahamutQualitygetcoverageResponse getLinkeBahamutQualitygetcoverage(GetLinkeBahamutQualitygetcoverageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutQualitygetcoverageWithOptions(request, runtime);
    }

    public GetLinkeBahamutQualitygetexternaldataResponse getLinkeBahamutQualitygetexternaldataWithOptions(GetLinkeBahamutQualitygetexternaldataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutQualitygetexternaldata", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutQualitygetexternaldataResponse());
    }

    public GetLinkeBahamutQualitygetexternaldataResponse getLinkeBahamutQualitygetexternaldata(GetLinkeBahamutQualitygetexternaldataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutQualitygetexternaldataWithOptions(request, runtime);
    }

    public GetLinkeBahamutQualitygetqualitylogResponse getLinkeBahamutQualitygetqualitylogWithOptions(GetLinkeBahamutQualitygetqualitylogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutQualitygetqualitylog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutQualitygetqualitylogResponse());
    }

    public GetLinkeBahamutQualitygetqualitylogResponse getLinkeBahamutQualitygetqualitylog(GetLinkeBahamutQualitygetqualitylogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutQualitygetqualitylogWithOptions(request, runtime);
    }

    public GetLinkeBahamutReleaseappsResponse getLinkeBahamutReleaseappsWithOptions(GetLinkeBahamutReleaseappsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutReleaseapps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutReleaseappsResponse());
    }

    public GetLinkeBahamutReleaseappsResponse getLinkeBahamutReleaseapps(GetLinkeBahamutReleaseappsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutReleaseappsWithOptions(request, runtime);
    }

    public GetLinkeBahamutReleasebyappgroupResponse getLinkeBahamutReleasebyappgroupWithOptions(GetLinkeBahamutReleasebyappgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutReleasebyappgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutReleasebyappgroupResponse());
    }

    public GetLinkeBahamutReleasebyappgroupResponse getLinkeBahamutReleasebyappgroup(GetLinkeBahamutReleasebyappgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutReleasebyappgroupWithOptions(request, runtime);
    }

    public GetLinkeBahamutReleasebyexternalidResponse getLinkeBahamutReleasebyexternalidWithOptions(GetLinkeBahamutReleasebyexternalidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutReleasebyexternalid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutReleasebyexternalidResponse());
    }

    public GetLinkeBahamutReleasebyexternalidResponse getLinkeBahamutReleasebyexternalid(GetLinkeBahamutReleasebyexternalidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutReleasebyexternalidWithOptions(request, runtime);
    }

    public GetLinkeBahamutReleasegetlinkResponse getLinkeBahamutReleasegetlinkWithOptions(GetLinkeBahamutReleasegetlinkRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutReleasegetlink", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutReleasegetlinkResponse());
    }

    public GetLinkeBahamutReleasegetlinkResponse getLinkeBahamutReleasegetlink(GetLinkeBahamutReleasegetlinkRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutReleasegetlinkWithOptions(request, runtime);
    }

    public GetLinkeBahamutReleaselinkResponse getLinkeBahamutReleaselinkWithOptions(GetLinkeBahamutReleaselinkRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutReleaselink", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutReleaselinkResponse());
    }

    public GetLinkeBahamutReleaselinkResponse getLinkeBahamutReleaselink(GetLinkeBahamutReleaselinkRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutReleaselinkWithOptions(request, runtime);
    }

    public GetLinkeBahamutReleaseswithfastResponse getLinkeBahamutReleaseswithfastWithOptions(GetLinkeBahamutReleaseswithfastRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutReleaseswithfast", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutReleaseswithfastResponse());
    }

    public GetLinkeBahamutReleaseswithfastResponse getLinkeBahamutReleaseswithfast(GetLinkeBahamutReleaseswithfastRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutReleaseswithfastWithOptions(request, runtime);
    }

    public GetLinkeBahamutSamecodereporecommendResponse getLinkeBahamutSamecodereporecommendWithOptions(GetLinkeBahamutSamecodereporecommendRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutSamecodereporecommend", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutSamecodereporecommendResponse());
    }

    public GetLinkeBahamutSamecodereporecommendResponse getLinkeBahamutSamecodereporecommend(GetLinkeBahamutSamecodereporecommendRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutSamecodereporecommendWithOptions(request, runtime);
    }

    public GetLinkeBahamutSearchcountResponse getLinkeBahamutSearchcountWithOptions(GetLinkeBahamutSearchcountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutSearchcount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutSearchcountResponse());
    }

    public GetLinkeBahamutSearchcountResponse getLinkeBahamutSearchcount(GetLinkeBahamutSearchcountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutSearchcountWithOptions(request, runtime);
    }

    public GetLinkeBahamutServernotificationResponse getLinkeBahamutServernotificationWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutServernotification", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutServernotificationResponse());
    }

    public GetLinkeBahamutServernotificationResponse getLinkeBahamutServernotification() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutServernotificationWithOptions(runtime);
    }

    public GetLinkeBahamutSnapshotResponse getLinkeBahamutSnapshotWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutSnapshot", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutSnapshotResponse());
    }

    public GetLinkeBahamutSnapshotResponse getLinkeBahamutSnapshot() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutSnapshotWithOptions(runtime);
    }

    public GetLinkeBahamutStagebranchinfoResponse getLinkeBahamutStagebranchinfoWithOptions(GetLinkeBahamutStagebranchinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutStagebranchinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutStagebranchinfoResponse());
    }

    public GetLinkeBahamutStagebranchinfoResponse getLinkeBahamutStagebranchinfo(GetLinkeBahamutStagebranchinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutStagebranchinfoWithOptions(request, runtime);
    }

    public GetLinkeBahamutStagequalityResponse getLinkeBahamutStagequalityWithOptions(GetLinkeBahamutStagequalityRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutStagequality", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutStagequalityResponse());
    }

    public GetLinkeBahamutStagequalityResponse getLinkeBahamutStagequality(GetLinkeBahamutStagequalityRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutStagequalityWithOptions(request, runtime);
    }

    public GetLinkeBahamutStcinfoResponse getLinkeBahamutStcinfoWithOptions(GetLinkeBahamutStcinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutStcinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutStcinfoResponse());
    }

    public GetLinkeBahamutStcinfoResponse getLinkeBahamutStcinfo(GetLinkeBahamutStcinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutStcinfoWithOptions(request, runtime);
    }

    public GetLinkeBahamutStcresultResponse getLinkeBahamutStcresultWithOptions(GetLinkeBahamutStcresultRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutStcresult", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutStcresultResponse());
    }

    public GetLinkeBahamutStcresultResponse getLinkeBahamutStcresult(GetLinkeBahamutStcresultRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutStcresultWithOptions(request, runtime);
    }

    public GetLinkeBahamutStoresgetallappsResponse getLinkeBahamutStoresgetallappsWithOptions(GetLinkeBahamutStoresgetallappsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutStoresgetallapps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutStoresgetallappsResponse());
    }

    public GetLinkeBahamutStoresgetallappsResponse getLinkeBahamutStoresgetallapps(GetLinkeBahamutStoresgetallappsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutStoresgetallappsWithOptions(request, runtime);
    }

    public GetLinkeBahamutSwitchconfigisstcrevisableResponse getLinkeBahamutSwitchconfigisstcrevisableWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutSwitchconfigisstcrevisable", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutSwitchconfigisstcrevisableResponse());
    }

    public GetLinkeBahamutSwitchconfigisstcrevisableResponse getLinkeBahamutSwitchconfigisstcrevisable() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutSwitchconfigisstcrevisableWithOptions(runtime);
    }

    public GetLinkeBahamutTaskResponse getLinkeBahamutTaskWithOptions(GetLinkeBahamutTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutTaskResponse());
    }

    public GetLinkeBahamutTaskResponse getLinkeBahamutTask(GetLinkeBahamutTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutTaskWithOptions(request, runtime);
    }

    public GetLinkeBahamutTaskapprovalbyinstanceResponse getLinkeBahamutTaskapprovalbyinstanceWithOptions(GetLinkeBahamutTaskapprovalbyinstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutTaskapprovalbyinstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutTaskapprovalbyinstanceResponse());
    }

    public GetLinkeBahamutTaskapprovalbyinstanceResponse getLinkeBahamutTaskapprovalbyinstance(GetLinkeBahamutTaskapprovalbyinstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutTaskapprovalbyinstanceWithOptions(request, runtime);
    }

    public GetLinkeBahamutTaskbykeywordResponse getLinkeBahamutTaskbykeywordWithOptions(GetLinkeBahamutTaskbykeywordRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutTaskbykeyword", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutTaskbykeywordResponse());
    }

    public GetLinkeBahamutTaskbykeywordResponse getLinkeBahamutTaskbykeyword(GetLinkeBahamutTaskbykeywordRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutTaskbykeywordWithOptions(request, runtime);
    }

    public GetLinkeBahamutTasklistbyuserResponse getLinkeBahamutTasklistbyuserWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutTasklistbyuser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutTasklistbyuserResponse());
    }

    public GetLinkeBahamutTasklistbyuserResponse getLinkeBahamutTasklistbyuser() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutTasklistbyuserWithOptions(runtime);
    }

    public GetLinkeBahamutTasklistbyusertwoResponse getLinkeBahamutTasklistbyusertwoWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutTasklistbyusertwo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutTasklistbyusertwoResponse());
    }

    public GetLinkeBahamutTasklistbyusertwoResponse getLinkeBahamutTasklistbyusertwo() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutTasklistbyusertwoWithOptions(runtime);
    }

    public GetLinkeBahamutTasksgettaskbykeywordResponse getLinkeBahamutTasksgettaskbykeywordWithOptions(GetLinkeBahamutTasksgettaskbykeywordRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutTasksgettaskbykeyword", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutTasksgettaskbykeywordResponse());
    }

    public GetLinkeBahamutTasksgettaskbykeywordResponse getLinkeBahamutTasksgettaskbykeyword(GetLinkeBahamutTasksgettaskbykeywordRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutTasksgettaskbykeywordWithOptions(request, runtime);
    }

    public GetLinkeBahamutTempnextstageprecheckwarningResponse getLinkeBahamutTempnextstageprecheckwarningWithOptions(GetLinkeBahamutTempnextstageprecheckwarningRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutTempnextstageprecheckwarning", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutTempnextstageprecheckwarningResponse());
    }

    public GetLinkeBahamutTempnextstageprecheckwarningResponse getLinkeBahamutTempnextstageprecheckwarning(GetLinkeBahamutTempnextstageprecheckwarningRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutTempnextstageprecheckwarningWithOptions(request, runtime);
    }

    public GetLinkeBahamutTenantdownloadurlResponse getLinkeBahamutTenantdownloadurlWithOptions(GetLinkeBahamutTenantdownloadurlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutTenantdownloadurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutTenantdownloadurlResponse());
    }

    public GetLinkeBahamutTenantdownloadurlResponse getLinkeBahamutTenantdownloadurl(GetLinkeBahamutTenantdownloadurlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutTenantdownloadurlWithOptions(request, runtime);
    }

    public GetLinkeBahamutTenantuploadinfoResponse getLinkeBahamutTenantuploadinfoWithOptions(GetLinkeBahamutTenantuploadinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutTenantuploadinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutTenantuploadinfoResponse());
    }

    public GetLinkeBahamutTenantuploadinfoResponse getLinkeBahamutTenantuploadinfo(GetLinkeBahamutTenantuploadinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutTenantuploadinfoWithOptions(request, runtime);
    }

    public GetLinkeBahamutTenantuseoauthResponse getLinkeBahamutTenantuseoauthWithOptions(GetLinkeBahamutTenantuseoauthRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutTenantuseoauth", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutTenantuseoauthResponse());
    }

    public GetLinkeBahamutTenantuseoauthResponse getLinkeBahamutTenantuseoauth(GetLinkeBahamutTenantuseoauthRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutTenantuseoauthWithOptions(request, runtime);
    }

    public GetLinkeBahamutTracecollectResponse getLinkeBahamutTracecollectWithOptions(GetLinkeBahamutTracecollectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutTracecollect", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutTracecollectResponse());
    }

    public GetLinkeBahamutTracecollectResponse getLinkeBahamutTracecollect(GetLinkeBahamutTracecollectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutTracecollectWithOptions(request, runtime);
    }

    public GetLinkeBahamutUnitbranchResponse getLinkeBahamutUnitbranchWithOptions(GetLinkeBahamutUnitbranchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutUnitbranch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutUnitbranchResponse());
    }

    public GetLinkeBahamutUnitbranchResponse getLinkeBahamutUnitbranch(GetLinkeBahamutUnitbranchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutUnitbranchWithOptions(request, runtime);
    }

    public GetLinkeBahamutUnitbranchinfoResponse getLinkeBahamutUnitbranchinfoWithOptions(GetLinkeBahamutUnitbranchinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutUnitbranchinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutUnitbranchinfoResponse());
    }

    public GetLinkeBahamutUnitbranchinfoResponse getLinkeBahamutUnitbranchinfo(GetLinkeBahamutUnitbranchinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutUnitbranchinfoWithOptions(request, runtime);
    }

    public GetLinkeBahamutUnitdefaultenvidResponse getLinkeBahamutUnitdefaultenvidWithOptions(GetLinkeBahamutUnitdefaultenvidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutUnitdefaultenvid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutUnitdefaultenvidResponse());
    }

    public GetLinkeBahamutUnitdefaultenvidResponse getLinkeBahamutUnitdefaultenvid(GetLinkeBahamutUnitdefaultenvidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutUnitdefaultenvidWithOptions(request, runtime);
    }

    public GetLinkeBahamutUnitenvidsResponse getLinkeBahamutUnitenvidsWithOptions(GetLinkeBahamutUnitenvidsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutUnitenvids", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutUnitenvidsResponse());
    }

    public GetLinkeBahamutUnitenvidsResponse getLinkeBahamutUnitenvids(GetLinkeBahamutUnitenvidsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutUnitenvidsWithOptions(request, runtime);
    }

    public GetLinkeBahamutUserResponse getLinkeBahamutUserWithOptions(GetLinkeBahamutUserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutUser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutUserResponse());
    }

    public GetLinkeBahamutUserResponse getLinkeBahamutUser(GetLinkeBahamutUserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutUserWithOptions(request, runtime);
    }

    public GetLinkeBahamutUsergetbyaccountResponse getLinkeBahamutUsergetbyaccountWithOptions(GetLinkeBahamutUsergetbyaccountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutUsergetbyaccount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutUsergetbyaccountResponse());
    }

    public GetLinkeBahamutUsergetbyaccountResponse getLinkeBahamutUsergetbyaccount(GetLinkeBahamutUsergetbyaccountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutUsergetbyaccountWithOptions(request, runtime);
    }

    public GetLinkeBahamutUsergetbyaccountlistResponse getLinkeBahamutUsergetbyaccountlistWithOptions(GetLinkeBahamutUsergetbyaccountlistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutUsergetbyaccountlist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutUsergetbyaccountlistResponse());
    }

    public GetLinkeBahamutUsergetbyaccountlistResponse getLinkeBahamutUsergetbyaccountlist(GetLinkeBahamutUsergetbyaccountlistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutUsergetbyaccountlistWithOptions(request, runtime);
    }

    public GetLinkeBahamutUsergetbyempidResponse getLinkeBahamutUsergetbyempidWithOptions(GetLinkeBahamutUsergetbyempidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutUsergetbyempid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutUsergetbyempidResponse());
    }

    public GetLinkeBahamutUsergetbyempidResponse getLinkeBahamutUsergetbyempid(GetLinkeBahamutUsergetbyempidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutUsergetbyempidWithOptions(request, runtime);
    }

    public GetLinkeBahamutUsergetbyempldsResponse getLinkeBahamutUsergetbyempldsWithOptions(GetLinkeBahamutUsergetbyempldsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutUsergetbyemplds", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutUsergetbyempldsResponse());
    }

    public GetLinkeBahamutUsergetbyempldsResponse getLinkeBahamutUsergetbyemplds(GetLinkeBahamutUsergetbyempldsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutUsergetbyempldsWithOptions(request, runtime);
    }

    public GetLinkeBahamutUsergetbynickResponse getLinkeBahamutUsergetbynickWithOptions(GetLinkeBahamutUsergetbynickRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutUsergetbynick", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutUsergetbynickResponse());
    }

    public GetLinkeBahamutUsergetbynickResponse getLinkeBahamutUsergetbynick(GetLinkeBahamutUsergetbynickRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutUsergetbynickWithOptions(request, runtime);
    }

    public GetLinkeBahamutUsermenucommonResponse getLinkeBahamutUsermenucommonWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutUsermenucommon", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutUsermenucommonResponse());
    }

    public GetLinkeBahamutUsermenucommonResponse getLinkeBahamutUsermenucommon() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutUsermenucommonWithOptions(runtime);
    }

    public GetLinkeBahamutUserproductResponse getLinkeBahamutUserproductWithOptions(GetLinkeBahamutUserproductRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutUserproduct", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutUserproductResponse());
    }

    public GetLinkeBahamutUserproductResponse getLinkeBahamutUserproduct(GetLinkeBahamutUserproductRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutUserproductWithOptions(request, runtime);
    }

    public GetLinkeBahamutUsertokenResponse getLinkeBahamutUsertokenWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutUsertoken", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutUsertokenResponse());
    }

    public GetLinkeBahamutUsertokenResponse getLinkeBahamutUsertoken() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutUsertokenWithOptions(runtime);
    }

    public GetLinkeBahamutVcsauthorizedprojectResponse getLinkeBahamutVcsauthorizedprojectWithOptions(GetLinkeBahamutVcsauthorizedprojectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsauthorizedproject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsauthorizedprojectResponse());
    }

    public GetLinkeBahamutVcsauthorizedprojectResponse getLinkeBahamutVcsauthorizedproject(GetLinkeBahamutVcsauthorizedprojectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsauthorizedprojectWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsbranchResponse getLinkeBahamutVcsbranchWithOptions(GetLinkeBahamutVcsbranchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsbranch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsbranchResponse());
    }

    public GetLinkeBahamutVcsbranchResponse getLinkeBahamutVcsbranch(GetLinkeBahamutVcsbranchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsbranchWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsbrancheResponse getLinkeBahamutVcsbrancheWithOptions(GetLinkeBahamutVcsbrancheRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsbranche", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsbrancheResponse());
    }

    public GetLinkeBahamutVcsbrancheResponse getLinkeBahamutVcsbranche(GetLinkeBahamutVcsbrancheRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsbrancheWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcscanremovesourcebranchResponse getLinkeBahamutVcscanremovesourcebranchWithOptions(GetLinkeBahamutVcscanremovesourcebranchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcscanremovesourcebranch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcscanremovesourcebranchResponse());
    }

    public GetLinkeBahamutVcscanremovesourcebranchResponse getLinkeBahamutVcscanremovesourcebranch(GetLinkeBahamutVcscanremovesourcebranchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcscanremovesourcebranchWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcscommitchangeResponse getLinkeBahamutVcscommitchangeWithOptions(GetLinkeBahamutVcscommitchangeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcscommitchange", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcscommitchangeResponse());
    }

    public GetLinkeBahamutVcscommitchangeResponse getLinkeBahamutVcscommitchange(GetLinkeBahamutVcscommitchangeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcscommitchangeWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcscommitcommentResponse getLinkeBahamutVcscommitcommentWithOptions(GetLinkeBahamutVcscommitcommentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcscommitcomment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcscommitcommentResponse());
    }

    public GetLinkeBahamutVcscommitcommentResponse getLinkeBahamutVcscommitcomment(GetLinkeBahamutVcscommitcommentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcscommitcommentWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsdiffbetweenbrancheResponse getLinkeBahamutVcsdiffbetweenbrancheWithOptions(GetLinkeBahamutVcsdiffbetweenbrancheRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsdiffbetweenbranche", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsdiffbetweenbrancheResponse());
    }

    public GetLinkeBahamutVcsdiffbetweenbrancheResponse getLinkeBahamutVcsdiffbetweenbranche(GetLinkeBahamutVcsdiffbetweenbrancheRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsdiffbetweenbrancheWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsfileResponse getLinkeBahamutVcsfileWithOptions(GetLinkeBahamutVcsfileRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsfile", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsfileResponse());
    }

    public GetLinkeBahamutVcsfileResponse getLinkeBahamutVcsfile(GetLinkeBahamutVcsfileRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsfileWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsgroupResponse getLinkeBahamutVcsgroupWithOptions(GetLinkeBahamutVcsgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsgroupResponse());
    }

    public GetLinkeBahamutVcsgroupResponse getLinkeBahamutVcsgroup(GetLinkeBahamutVcsgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsgroupWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsgroupsownedResponse getLinkeBahamutVcsgroupsownedWithOptions(GetLinkeBahamutVcsgroupsownedRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsgroupsowned", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsgroupsownedResponse());
    }

    public GetLinkeBahamutVcsgroupsownedResponse getLinkeBahamutVcsgroupsowned(GetLinkeBahamutVcsgroupsownedRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsgroupsownedWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsissueResponse getLinkeBahamutVcsissueWithOptions(GetLinkeBahamutVcsissueRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsissue", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsissueResponse());
    }

    public GetLinkeBahamutVcsissueResponse getLinkeBahamutVcsissue(GetLinkeBahamutVcsissueRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsissueWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsmemberResponse getLinkeBahamutVcsmemberWithOptions(GetLinkeBahamutVcsmemberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsmember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsmemberResponse());
    }

    public GetLinkeBahamutVcsmemberResponse getLinkeBahamutVcsmember(GetLinkeBahamutVcsmemberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsmemberWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsmergerequestResponse getLinkeBahamutVcsmergerequestWithOptions(GetLinkeBahamutVcsmergerequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsmergerequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsmergerequestResponse());
    }

    public GetLinkeBahamutVcsmergerequestResponse getLinkeBahamutVcsmergerequest(GetLinkeBahamutVcsmergerequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsmergerequestWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsmergerequestdbResponse getLinkeBahamutVcsmergerequestdbWithOptions(GetLinkeBahamutVcsmergerequestdbRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsmergerequestdb", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsmergerequestdbResponse());
    }

    public GetLinkeBahamutVcsmergerequestdbResponse getLinkeBahamutVcsmergerequestdb(GetLinkeBahamutVcsmergerequestdbRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsmergerequestdbWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsmergerequestmrcommitResponse getLinkeBahamutVcsmergerequestmrcommitWithOptions(GetLinkeBahamutVcsmergerequestmrcommitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsmergerequestmrcommit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsmergerequestmrcommitResponse());
    }

    public GetLinkeBahamutVcsmergerequestmrcommitResponse getLinkeBahamutVcsmergerequestmrcommit(GetLinkeBahamutVcsmergerequestmrcommitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsmergerequestmrcommitWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsmrcommentResponse getLinkeBahamutVcsmrcommentWithOptions(GetLinkeBahamutVcsmrcommentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsmrcomment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsmrcommentResponse());
    }

    public GetLinkeBahamutVcsmrcommentResponse getLinkeBahamutVcsmrcomment(GetLinkeBahamutVcsmrcommentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsmrcommentWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsmrworkitemsResponse getLinkeBahamutVcsmrworkitemsWithOptions(GetLinkeBahamutVcsmrworkitemsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsmrworkitems", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsmrworkitemsResponse());
    }

    public GetLinkeBahamutVcsmrworkitemsResponse getLinkeBahamutVcsmrworkitems(GetLinkeBahamutVcsmrworkitemsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsmrworkitemsWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcsprojectissueResponse getLinkeBahamutVcsprojectissueWithOptions(GetLinkeBahamutVcsprojectissueRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcsprojectissue", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcsprojectissueResponse());
    }

    public GetLinkeBahamutVcsprojectissueResponse getLinkeBahamutVcsprojectissue(GetLinkeBahamutVcsprojectissueRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcsprojectissueWithOptions(request, runtime);
    }

    public GetLinkeBahamutVcstagResponse getLinkeBahamutVcstagWithOptions(GetLinkeBahamutVcstagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutVcstag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutVcstagResponse());
    }

    public GetLinkeBahamutVcstagResponse getLinkeBahamutVcstag(GetLinkeBahamutVcstagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutVcstagWithOptions(request, runtime);
    }

    public GetLinkeBahamutWebapigetallappsResponse getLinkeBahamutWebapigetallappsWithOptions(GetLinkeBahamutWebapigetallappsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutWebapigetallapps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutWebapigetallappsResponse());
    }

    public GetLinkeBahamutWebapigetallappsResponse getLinkeBahamutWebapigetallapps(GetLinkeBahamutWebapigetallappsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutWebapigetallappsWithOptions(request, runtime);
    }

    public GetLinkeBahamutWebapigetcomponentresultResponse getLinkeBahamutWebapigetcomponentresultWithOptions(GetLinkeBahamutWebapigetcomponentresultRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutWebapigetcomponentresult", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutWebapigetcomponentresultResponse());
    }

    public GetLinkeBahamutWebapigetcomponentresultResponse getLinkeBahamutWebapigetcomponentresult(GetLinkeBahamutWebapigetcomponentresultRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutWebapigetcomponentresultWithOptions(request, runtime);
    }

    public GetLinkeBahamutWebapigetdataResponse getLinkeBahamutWebapigetdataWithOptions(GetLinkeBahamutWebapigetdataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutWebapigetdata", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutWebapigetdataResponse());
    }

    public GetLinkeBahamutWebapigetdataResponse getLinkeBahamutWebapigetdata(GetLinkeBahamutWebapigetdataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutWebapigetdataWithOptions(request, runtime);
    }

    public GetLinkeBahamutWebapigetemergencyunitsbyappResponse getLinkeBahamutWebapigetemergencyunitsbyappWithOptions(GetLinkeBahamutWebapigetemergencyunitsbyappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutWebapigetemergencyunitsbyapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutWebapigetemergencyunitsbyappResponse());
    }

    public GetLinkeBahamutWebapigetemergencyunitsbyappResponse getLinkeBahamutWebapigetemergencyunitsbyapp(GetLinkeBahamutWebapigetemergencyunitsbyappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutWebapigetemergencyunitsbyappWithOptions(request, runtime);
    }

    public GetLinkeBahamutWebapigetlnterationsResponse getLinkeBahamutWebapigetlnterationsWithOptions(GetLinkeBahamutWebapigetlnterationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutWebapigetlnterations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutWebapigetlnterationsResponse());
    }

    public GetLinkeBahamutWebapigetlnterationsResponse getLinkeBahamutWebapigetlnterations(GetLinkeBahamutWebapigetlnterationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutWebapigetlnterationsWithOptions(request, runtime);
    }

    public GetLinkeBahamutWebapigetlogsResponse getLinkeBahamutWebapigetlogsWithOptions(GetLinkeBahamutWebapigetlogsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutWebapigetlogs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutWebapigetlogsResponse());
    }

    public GetLinkeBahamutWebapigetlogsResponse getLinkeBahamutWebapigetlogs(GetLinkeBahamutWebapigetlogsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutWebapigetlogsWithOptions(request, runtime);
    }

    public GetLinkeBahamutWebapigetlterationunitsResponse getLinkeBahamutWebapigetlterationunitsWithOptions(GetLinkeBahamutWebapigetlterationunitsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutWebapigetlterationunits", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutWebapigetlterationunitsResponse());
    }

    public GetLinkeBahamutWebapigetlterationunitsResponse getLinkeBahamutWebapigetlterationunits(GetLinkeBahamutWebapigetlterationunitsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutWebapigetlterationunitsWithOptions(request, runtime);
    }

    public GetLinkeBahamutWebapigetlterationunitsbyreleaseResponse getLinkeBahamutWebapigetlterationunitsbyreleaseWithOptions(GetLinkeBahamutWebapigetlterationunitsbyreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutWebapigetlterationunitsbyrelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutWebapigetlterationunitsbyreleaseResponse());
    }

    public GetLinkeBahamutWebapigetlterationunitsbyreleaseResponse getLinkeBahamutWebapigetlterationunitsbyrelease(GetLinkeBahamutWebapigetlterationunitsbyreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutWebapigetlterationunitsbyreleaseWithOptions(request, runtime);
    }

    public GetLinkeBahamutWebapigetmembersResponse getLinkeBahamutWebapigetmembersWithOptions(GetLinkeBahamutWebapigetmembersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutWebapigetmembers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutWebapigetmembersResponse());
    }

    public GetLinkeBahamutWebapigetmembersResponse getLinkeBahamutWebapigetmembers(GetLinkeBahamutWebapigetmembersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutWebapigetmembersWithOptions(request, runtime);
    }

    public GetLinkeBahamutWebapigeturlsignResponse getLinkeBahamutWebapigeturlsignWithOptions(GetLinkeBahamutWebapigeturlsignRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutWebapigeturlsign", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutWebapigeturlsignResponse());
    }

    public GetLinkeBahamutWebapigeturlsignResponse getLinkeBahamutWebapigeturlsign(GetLinkeBahamutWebapigeturlsignRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutWebapigeturlsignWithOptions(request, runtime);
    }

    public GetLinkeBahamutWebapitcdataResponse getLinkeBahamutWebapitcdataWithOptions(GetLinkeBahamutWebapitcdataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutWebapitcdata", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutWebapitcdataResponse());
    }

    public GetLinkeBahamutWebapitcdataResponse getLinkeBahamutWebapitcdata(GetLinkeBahamutWebapitcdataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutWebapitcdataWithOptions(request, runtime);
    }

    public GetLinkeBahamutZoneResponse getLinkeBahamutZoneWithOptions(GetLinkeBahamutZoneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeBahamutZone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeBahamutZoneResponse());
    }

    public GetLinkeBahamutZoneResponse getLinkeBahamutZone(GetLinkeBahamutZoneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeBahamutZoneWithOptions(request, runtime);
    }

    public GetLinkefabricFabricReleasegraynotifyResponse getLinkefabricFabricReleasegraynotifyWithOptions(GetLinkefabricFabricReleasegraynotifyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkefabricFabricReleasegraynotify", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkefabricFabricReleasegraynotifyResponse());
    }

    public GetLinkefabricFabricReleasegraynotifyResponse getLinkefabricFabricReleasegraynotify(GetLinkefabricFabricReleasegraynotifyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkefabricFabricReleasegraynotifyWithOptions(request, runtime);
    }

    public GetLinkefabricFabricReleaseprodnotifyResponse getLinkefabricFabricReleaseprodnotifyWithOptions(GetLinkefabricFabricReleaseprodnotifyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkefabricFabricReleaseprodnotify", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkefabricFabricReleaseprodnotifyResponse());
    }

    public GetLinkefabricFabricReleaseprodnotifyResponse getLinkefabricFabricReleaseprodnotify(GetLinkefabricFabricReleaseprodnotifyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkefabricFabricReleaseprodnotifyWithOptions(request, runtime);
    }

    public GetLinkeLinkaUserResponse getLinkeLinkaUserWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinkaUser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinkaUserResponse());
    }

    public GetLinkeLinkaUserResponse getLinkeLinkaUser() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinkaUserWithOptions(runtime);
    }

    public GetLinkelinkflowLinkflowAppResponse getLinkelinkflowLinkflowAppWithOptions(GetLinkelinkflowLinkflowAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowAppResponse());
    }

    public GetLinkelinkflowLinkflowAppResponse getLinkelinkflowLinkflowApp(GetLinkelinkflowLinkflowAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowAppWithOptions(request, runtime);
    }

    public GetLinkelinkflowLinkflowAppnamelistResponse getLinkelinkflowLinkflowAppnamelistWithOptions(GetLinkelinkflowLinkflowAppnamelistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowAppnamelist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowAppnamelistResponse());
    }

    public GetLinkelinkflowLinkflowAppnamelistResponse getLinkelinkflowLinkflowAppnamelist(GetLinkelinkflowLinkflowAppnamelistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowAppnamelistWithOptions(request, runtime);
    }

    public GetLinkelinkflowLinkflowAttachmentsuploadinfoResponse getLinkelinkflowLinkflowAttachmentsuploadinfoWithOptions(GetLinkelinkflowLinkflowAttachmentsuploadinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowAttachmentsuploadinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowAttachmentsuploadinfoResponse());
    }

    public GetLinkelinkflowLinkflowAttachmentsuploadinfoResponse getLinkelinkflowLinkflowAttachmentsuploadinfo(GetLinkelinkflowLinkflowAttachmentsuploadinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowAttachmentsuploadinfoWithOptions(request, runtime);
    }

    public GetLinkelinkflowLinkflowGetcurrentuserResponse getLinkelinkflowLinkflowGetcurrentuserWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowGetcurrentuser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowGetcurrentuserResponse());
    }

    public GetLinkelinkflowLinkflowGetcurrentuserResponse getLinkelinkflowLinkflowGetcurrentuser() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowGetcurrentuserWithOptions(runtime);
    }

    public GetLinkelinkflowLinkflowProcessResponse getLinkelinkflowLinkflowProcessWithOptions(GetLinkelinkflowLinkflowProcessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowProcess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowProcessResponse());
    }

    public GetLinkelinkflowLinkflowProcessResponse getLinkelinkflowLinkflowProcess(GetLinkelinkflowLinkflowProcessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowProcessWithOptions(request, runtime);
    }

    public GetLinkelinkflowLinkflowProcessenvResponse getLinkelinkflowLinkflowProcessenvWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowProcessenv", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowProcessenvResponse());
    }

    public GetLinkelinkflowLinkflowProcessenvResponse getLinkelinkflowLinkflowProcessenv() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowProcessenvWithOptions(runtime);
    }

    public GetLinkelinkflowLinkflowProcessmodelResponse getLinkelinkflowLinkflowProcessmodelWithOptions(GetLinkelinkflowLinkflowProcessmodelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowProcessmodel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowProcessmodelResponse());
    }

    public GetLinkelinkflowLinkflowProcessmodelResponse getLinkelinkflowLinkflowProcessmodel(GetLinkelinkflowLinkflowProcessmodelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowProcessmodelWithOptions(request, runtime);
    }

    public GetLinkelinkflowLinkflowProcessoperationlogResponse getLinkelinkflowLinkflowProcessoperationlogWithOptions(GetLinkelinkflowLinkflowProcessoperationlogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowProcessoperationlog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowProcessoperationlogResponse());
    }

    public GetLinkelinkflowLinkflowProcessoperationlogResponse getLinkelinkflowLinkflowProcessoperationlog(GetLinkelinkflowLinkflowProcessoperationlogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowProcessoperationlogWithOptions(request, runtime);
    }

    public GetLinkelinkflowLinkflowProcessvariablesResponse getLinkelinkflowLinkflowProcessvariablesWithOptions(GetLinkelinkflowLinkflowProcessvariablesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowProcessvariables", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowProcessvariablesResponse());
    }

    public GetLinkelinkflowLinkflowProcessvariablesResponse getLinkelinkflowLinkflowProcessvariables(GetLinkelinkflowLinkflowProcessvariablesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowProcessvariablesWithOptions(request, runtime);
    }

    public GetLinkelinkflowLinkflowStartformmodelResponse getLinkelinkflowLinkflowStartformmodelWithOptions(GetLinkelinkflowLinkflowStartformmodelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowStartformmodel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowStartformmodelResponse());
    }

    public GetLinkelinkflowLinkflowStartformmodelResponse getLinkelinkflowLinkflowStartformmodel(GetLinkelinkflowLinkflowStartformmodelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowStartformmodelWithOptions(request, runtime);
    }

    public GetLinkelinkflowLinkflowTaskResponse getLinkelinkflowLinkflowTaskWithOptions(GetLinkelinkflowLinkflowTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowTaskResponse());
    }

    public GetLinkelinkflowLinkflowTaskResponse getLinkelinkflowLinkflowTask(GetLinkelinkflowLinkflowTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowTaskWithOptions(request, runtime);
    }

    public GetLinkelinkflowLinkflowTaskformmodelResponse getLinkelinkflowLinkflowTaskformmodelWithOptions(GetLinkelinkflowLinkflowTaskformmodelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowTaskformmodel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowTaskformmodelResponse());
    }

    public GetLinkelinkflowLinkflowTaskformmodelResponse getLinkelinkflowLinkflowTaskformmodel(GetLinkelinkflowLinkflowTaskformmodelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowTaskformmodelWithOptions(request, runtime);
    }

    public GetLinkelinkflowLinkflowTenantsResponse getLinkelinkflowLinkflowTenantsWithOptions(GetLinkelinkflowLinkflowTenantsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowTenants", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowTenantsResponse());
    }

    public GetLinkelinkflowLinkflowTenantsResponse getLinkelinkflowLinkflowTenants(GetLinkelinkflowLinkflowTenantsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowTenantsWithOptions(request, runtime);
    }

    public GetLinkelinkflowLinkflowVariabledictionarylistResponse getLinkelinkflowLinkflowVariabledictionarylistWithOptions(GetLinkelinkflowLinkflowVariabledictionarylistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowVariabledictionarylist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowVariabledictionarylistResponse());
    }

    public GetLinkelinkflowLinkflowVariabledictionarylistResponse getLinkelinkflowLinkflowVariabledictionarylist(GetLinkelinkflowLinkflowVariabledictionarylistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowVariabledictionarylistWithOptions(request, runtime);
    }

    public GetLinkelinkflowLinkflowVariablesResponse getLinkelinkflowLinkflowVariablesWithOptions(GetLinkelinkflowLinkflowVariablesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkelinkflowLinkflowVariables", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkelinkflowLinkflowVariablesResponse());
    }

    public GetLinkelinkflowLinkflowVariablesResponse getLinkelinkflowLinkflowVariables(GetLinkelinkflowLinkflowVariablesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkelinkflowLinkflowVariablesWithOptions(request, runtime);
    }

    public GetLinkeLinklogAccountResponse getLinkeLinklogAccountWithOptions(GetLinkeLinklogAccountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogAccount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogAccountResponse());
    }

    public GetLinkeLinklogAccountResponse getLinkeLinklogAccount(GetLinkeLinklogAccountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogAccountWithOptions(request, runtime);
    }

    public GetLinkeLinklogHitspercentageResponse getLinkeLinklogHitspercentageWithOptions(GetLinkeLinklogHitspercentageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogHitspercentage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogHitspercentageResponse());
    }

    public GetLinkeLinklogHitspercentageResponse getLinkeLinklogHitspercentage(GetLinkeLinklogHitspercentageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogHitspercentageWithOptions(request, runtime);
    }

    public GetLinkeLinklogHitspercentagesResponse getLinkeLinklogHitspercentagesWithOptions(GetLinkeLinklogHitspercentagesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogHitspercentages", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogHitspercentagesResponse());
    }

    public GetLinkeLinklogHitspercentagesResponse getLinkeLinklogHitspercentages(GetLinkeLinklogHitspercentagesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogHitspercentagesWithOptions(request, runtime);
    }

    public GetLinkeLinklogKnowledgeResponse getLinkeLinklogKnowledgeWithOptions(GetLinkeLinklogKnowledgeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogKnowledge", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogKnowledgeResponse());
    }

    public GetLinkeLinklogKnowledgeResponse getLinkeLinklogKnowledge(GetLinkeLinklogKnowledgeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogKnowledgeWithOptions(request, runtime);
    }

    public GetLinkeLinklogKnowledgefeedbacklistResponse getLinkeLinklogKnowledgefeedbacklistWithOptions(GetLinkeLinklogKnowledgefeedbacklistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogKnowledgefeedbacklist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogKnowledgefeedbacklistResponse());
    }

    public GetLinkeLinklogKnowledgefeedbacklistResponse getLinkeLinklogKnowledgefeedbacklist(GetLinkeLinklogKnowledgefeedbacklistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogKnowledgefeedbacklistWithOptions(request, runtime);
    }

    public GetLinkeLinklogKnowledgeprioritylistResponse getLinkeLinklogKnowledgeprioritylistWithOptions(GetLinkeLinklogKnowledgeprioritylistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogKnowledgeprioritylist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogKnowledgeprioritylistResponse());
    }

    public GetLinkeLinklogKnowledgeprioritylistResponse getLinkeLinklogKnowledgeprioritylist(GetLinkeLinklogKnowledgeprioritylistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogKnowledgeprioritylistWithOptions(request, runtime);
    }

    public GetLinkeLinklogLogcontentwithrangeResponse getLinkeLinklogLogcontentwithrangeWithOptions(GetLinkeLinklogLogcontentwithrangeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogLogcontentwithrange", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogLogcontentwithrangeResponse());
    }

    public GetLinkeLinklogLogcontentwithrangeResponse getLinkeLinklogLogcontentwithrange(GetLinkeLinklogLogcontentwithrangeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogLogcontentwithrangeWithOptions(request, runtime);
    }

    public GetLinkeLinklogLogsbizinfoResponse getLinkeLinklogLogsbizinfoWithOptions(GetLinkeLinklogLogsbizinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogLogsbizinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogLogsbizinfoResponse());
    }

    public GetLinkeLinklogLogsbizinfoResponse getLinkeLinklogLogsbizinfo(GetLinkeLinklogLogsbizinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogLogsbizinfoWithOptions(request, runtime);
    }

    public GetLinkeLinklogLogsresultResponse getLinkeLinklogLogsresultWithOptions(GetLinkeLinklogLogsresultRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogLogsresult", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogLogsresultResponse());
    }

    public GetLinkeLinklogLogsresultResponse getLinkeLinklogLogsresult(GetLinkeLinklogLogsresultRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogLogsresultWithOptions(request, runtime);
    }

    public GetLinkeLinklogSignResponse getLinkeLinklogSignWithOptions(GetLinkeLinklogSignRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogSign", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogSignResponse());
    }

    public GetLinkeLinklogSignResponse getLinkeLinklogSign(GetLinkeLinklogSignRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogSignWithOptions(request, runtime);
    }

    public GetLinkeLinklogStoreResponse getLinkeLinklogStoreWithOptions(GetLinkeLinklogStoreRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogStore", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogStoreResponse());
    }

    public GetLinkeLinklogStoreResponse getLinkeLinklogStore(GetLinkeLinklogStoreRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogStoreWithOptions(request, runtime);
    }

    public GetLinkeLinklogStoreslogstextResponse getLinkeLinklogStoreslogstextWithOptions(GetLinkeLinklogStoreslogstextRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogStoreslogstext", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogStoreslogstextResponse());
    }

    public GetLinkeLinklogStoreslogstextResponse getLinkeLinklogStoreslogstext(GetLinkeLinklogStoreslogstextRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogStoreslogstextWithOptions(request, runtime);
    }

    public GetLinkeLinklogStoretokensResponse getLinkeLinklogStoretokensWithOptions(GetLinkeLinklogStoretokensRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogStoretokens", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogStoretokensResponse());
    }

    public GetLinkeLinklogStoretokensResponse getLinkeLinklogStoretokens(GetLinkeLinklogStoretokensRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogStoretokensWithOptions(request, runtime);
    }

    public GetLinkeLinklogUserinfoResponse getLinkeLinklogUserinfoWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinklogUserinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinklogUserinfoResponse());
    }

    public GetLinkeLinklogUserinfoResponse getLinkeLinklogUserinfo() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinklogUserinfoWithOptions(runtime);
    }

    public GetLinkeLinktBelongtoprojectsbasedonrelevantprojectResponse getLinkeLinktBelongtoprojectsbasedonrelevantprojectWithOptions(GetLinkeLinktBelongtoprojectsbasedonrelevantprojectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinktBelongtoprojectsbasedonrelevantproject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinktBelongtoprojectsbasedonrelevantprojectResponse());
    }

    public GetLinkeLinktBelongtoprojectsbasedonrelevantprojectResponse getLinkeLinktBelongtoprojectsbasedonrelevantproject(GetLinkeLinktBelongtoprojectsbasedonrelevantprojectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinktBelongtoprojectsbasedonrelevantprojectWithOptions(request, runtime);
    }

    public GetLinkeLinktCurrentuserResponse getLinkeLinktCurrentuserWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinktCurrentuser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinktCurrentuserResponse());
    }

    public GetLinkeLinktCurrentuserResponse getLinkeLinktCurrentuser() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinktCurrentuserWithOptions(runtime);
    }

    public GetLinkeLinktProjectcreatedstatusesResponse getLinkeLinktProjectcreatedstatusesWithOptions(GetLinkeLinktProjectcreatedstatusesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinktProjectcreatedstatuses", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinktProjectcreatedstatusesResponse());
    }

    public GetLinkeLinktProjectcreatedstatusesResponse getLinkeLinktProjectcreatedstatuses(GetLinkeLinktProjectcreatedstatusesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinktProjectcreatedstatusesWithOptions(request, runtime);
    }

    public GetLinkeLinktRelatableworkitemsResponse getLinkeLinktRelatableworkitemsWithOptions(GetLinkeLinktRelatableworkitemsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinktRelatableworkitems", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinktRelatableworkitemsResponse());
    }

    public GetLinkeLinktRelatableworkitemsResponse getLinkeLinktRelatableworkitems(GetLinkeLinktRelatableworkitemsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinktRelatableworkitemsWithOptions(request, runtime);
    }

    public GetLinkeLinktReqchangesResponse getLinkeLinktReqchangesWithOptions(GetLinkeLinktReqchangesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinktReqchanges", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinktReqchangesResponse());
    }

    public GetLinkeLinktReqchangesResponse getLinkeLinktReqchanges(GetLinkeLinktReqchangesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinktReqchangesWithOptions(request, runtime);
    }

    public GetLinkeLinktRiskResponse getLinkeLinktRiskWithOptions(GetLinkeLinktRiskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinktRisk", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinktRiskResponse());
    }

    public GetLinkeLinktRiskResponse getLinkeLinktRisk(GetLinkeLinktRiskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinktRiskWithOptions(request, runtime);
    }

    public GetLinkeLinktSelectableworkflowstatusResponse getLinkeLinktSelectableworkflowstatusWithOptions(GetLinkeLinktSelectableworkflowstatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinktSelectableworkflowstatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinktSelectableworkflowstatusResponse());
    }

    public GetLinkeLinktSelectableworkflowstatusResponse getLinkeLinktSelectableworkflowstatus(GetLinkeLinktSelectableworkflowstatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinktSelectableworkflowstatusWithOptions(request, runtime);
    }

    public GetLinkeLinktTemplateResponse getLinkeLinktTemplateWithOptions(GetLinkeLinktTemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinktTemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinktTemplateResponse());
    }

    public GetLinkeLinktTemplateResponse getLinkeLinktTemplate(GetLinkeLinktTemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinktTemplateWithOptions(request, runtime);
    }

    public GetLinkeLinktTemplatestatusesResponse getLinkeLinktTemplatestatusesWithOptions(GetLinkeLinktTemplatestatusesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinktTemplatestatuses", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinktTemplatestatusesResponse());
    }

    public GetLinkeLinktTemplatestatusesResponse getLinkeLinktTemplatestatuses(GetLinkeLinktTemplatestatusesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinktTemplatestatusesWithOptions(request, runtime);
    }

    public GetLinkeLinktUploadinfoResponse getLinkeLinktUploadinfoWithOptions(GetLinkeLinktUploadinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinktUploadinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinktUploadinfoResponse());
    }

    public GetLinkeLinktUploadinfoResponse getLinkeLinktUploadinfo(GetLinkeLinktUploadinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinktUploadinfoWithOptions(request, runtime);
    }

    public GetLinkeLinktWorkflowResponse getLinkeLinktWorkflowWithOptions(GetLinkeLinktWorkflowRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinktWorkflow", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinktWorkflowResponse());
    }

    public GetLinkeLinktWorkflowResponse getLinkeLinktWorkflow(GetLinkeLinktWorkflowRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinktWorkflowWithOptions(request, runtime);
    }

    public GetLinkeLinktWorkitemreviewsResponse getLinkeLinktWorkitemreviewsWithOptions(GetLinkeLinktWorkitemreviewsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetLinkeLinktWorkitemreviews", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetLinkeLinktWorkitemreviewsResponse());
    }

    public GetLinkeLinktWorkitemreviewsResponse getLinkeLinktWorkitemreviews(GetLinkeLinktWorkitemreviewsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getLinkeLinktWorkitemreviewsWithOptions(request, runtime);
    }

    public GetMeshMiddlewareInstanceResponse getMeshMiddlewareInstanceWithOptions(GetMeshMiddlewareInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMeshMiddlewareInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMeshMiddlewareInstanceResponse());
    }

    public GetMeshMiddlewareInstanceResponse getMeshMiddlewareInstance(GetMeshMiddlewareInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMeshMiddlewareInstanceWithOptions(request, runtime);
    }

    public GetMiddlewareDmsInstanceResponse getMiddlewareDmsInstanceWithOptions(GetMiddlewareDmsInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMiddlewareDmsInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMiddlewareDmsInstanceResponse());
    }

    public GetMiddlewareDmsInstanceResponse getMiddlewareDmsInstance(GetMiddlewareDmsInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMiddlewareDmsInstanceWithOptions(request, runtime);
    }

    public GetMiddlewareEndpointResponse getMiddlewareEndpointWithOptions(GetMiddlewareEndpointRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMiddlewareEndpoint", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMiddlewareEndpointResponse());
    }

    public GetMiddlewareEndpointResponse getMiddlewareEndpoint(GetMiddlewareEndpointRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMiddlewareEndpointWithOptions(request, runtime);
    }

    public GetMiddlewareInstanceResponse getMiddlewareInstanceWithOptions(GetMiddlewareInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMiddlewareInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMiddlewareInstanceResponse());
    }

    public GetMiddlewareInstanceResponse getMiddlewareInstance(GetMiddlewareInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMiddlewareInstanceWithOptions(request, runtime);
    }

    public GetMqSofamqConsumerJStackResponse getMqSofamqConsumerJStackWithOptions(GetMqSofamqConsumerJStackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMqSofamqConsumerJStack", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMqSofamqConsumerJStackResponse());
    }

    public GetMqSofamqConsumerJStackResponse getMqSofamqConsumerJStack(GetMqSofamqConsumerJStackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMqSofamqConsumerJStackWithOptions(request, runtime);
    }

    public GetMqSofamqConsumerStatusResponse getMqSofamqConsumerStatusWithOptions(GetMqSofamqConsumerStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMqSofamqConsumerStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMqSofamqConsumerStatusResponse());
    }

    public GetMqSofamqConsumerStatusResponse getMqSofamqConsumerStatus(GetMqSofamqConsumerStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMqSofamqConsumerStatusWithOptions(request, runtime);
    }

    public GetMqSofamqDLQMessageByIdResponse getMqSofamqDLQMessageByIdWithOptions(GetMqSofamqDLQMessageByIdRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMqSofamqDLQMessageById", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMqSofamqDLQMessageByIdResponse());
    }

    public GetMqSofamqDLQMessageByIdResponse getMqSofamqDLQMessageById(GetMqSofamqDLQMessageByIdRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMqSofamqDLQMessageByIdWithOptions(request, runtime);
    }

    public GetMqSofamqLdcByNamespaceResponse getMqSofamqLdcByNamespaceWithOptions(GetMqSofamqLdcByNamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMqSofamqLdcByNamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMqSofamqLdcByNamespaceResponse());
    }

    public GetMqSofamqLdcByNamespaceResponse getMqSofamqLdcByNamespace(GetMqSofamqLdcByNamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMqSofamqLdcByNamespaceWithOptions(request, runtime);
    }

    public GetMqSofamqMessageByIdResponse getMqSofamqMessageByIdWithOptions(GetMqSofamqMessageByIdRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMqSofamqMessageById", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMqSofamqMessageByIdResponse());
    }

    public GetMqSofamqMessageByIdResponse getMqSofamqMessageById(GetMqSofamqMessageByIdRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMqSofamqMessageByIdWithOptions(request, runtime);
    }

    public GetMqSofamqTraceByMsgIdResponse getMqSofamqTraceByMsgIdWithOptions(GetMqSofamqTraceByMsgIdRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMqSofamqTraceByMsgId", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMqSofamqTraceByMsgIdResponse());
    }

    public GetMqSofamqTraceByMsgIdResponse getMqSofamqTraceByMsgId(GetMqSofamqTraceByMsgIdRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMqSofamqTraceByMsgIdWithOptions(request, runtime);
    }

    public GetMqSofamqTraceResultResponse getMqSofamqTraceResultWithOptions(GetMqSofamqTraceResultRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMqSofamqTraceResult", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMqSofamqTraceResultResponse());
    }

    public GetMqSofamqTraceResultResponse getMqSofamqTraceResult(GetMqSofamqTraceResultRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMqSofamqTraceResultWithOptions(request, runtime);
    }

    public GetMsConfigAttributesResponse getMsConfigAttributesWithOptions(GetMsConfigAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMsConfigAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMsConfigAttributesResponse());
    }

    public GetMsConfigAttributesResponse getMsConfigAttributes(GetMsConfigAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMsConfigAttributesWithOptions(request, runtime);
    }

    public GetMsConfigResourcesResponse getMsConfigResourcesWithOptions(GetMsConfigResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMsConfigResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMsConfigResourcesResponse());
    }

    public GetMsConfigResourcesResponse getMsConfigResources(GetMsConfigResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMsConfigResourcesWithOptions(request, runtime);
    }

    public GetMSDdcsAttributesResponse getMSDdcsAttributesWithOptions(GetMSDdcsAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMSDdcsAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMSDdcsAttributesResponse());
    }

    public GetMSDdcsAttributesResponse getMSDdcsAttributes(GetMSDdcsAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMSDdcsAttributesWithOptions(request, runtime);
    }

    public GetMSDdsJobResponse getMSDdsJobWithOptions(GetMSDdsJobRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMSDdsJob", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMSDdsJobResponse());
    }

    public GetMSDdsJobResponse getMSDdsJob(GetMSDdsJobRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMSDdsJobWithOptions(request, runtime);
    }

    public GetMsDrmAttributesResponse getMsDrmAttributesWithOptions(GetMsDrmAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMsDrmAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMsDrmAttributesResponse());
    }

    public GetMsDrmAttributesResponse getMsDrmAttributes(GetMsDrmAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMsDrmAttributesWithOptions(request, runtime);
    }

    public GetMsDrmUploadUrlResponse getMsDrmUploadUrlWithOptions(GetMsDrmUploadUrlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMsDrmUploadUrl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMsDrmUploadUrlResponse());
    }

    public GetMsDrmUploadUrlResponse getMsDrmUploadUrl(GetMsDrmUploadUrlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMsDrmUploadUrlWithOptions(request, runtime);
    }

    public GetMsGuardianAppsResponse getMsGuardianAppsWithOptions(GetMsGuardianAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMsGuardianApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMsGuardianAppsResponse());
    }

    public GetMsGuardianAppsResponse getMsGuardianApps(GetMsGuardianAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMsGuardianAppsWithOptions(request, runtime);
    }

    public GetMsGuardianConfigResponse getMsGuardianConfigWithOptions(GetMsGuardianConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMsGuardianConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMsGuardianConfigResponse());
    }

    public GetMsGuardianConfigResponse getMsGuardianConfig(GetMsGuardianConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMsGuardianConfigWithOptions(request, runtime);
    }

    public GetMsGuardianRulesResponse getMsGuardianRulesWithOptions(GetMsGuardianRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMsGuardianRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMsGuardianRulesResponse());
    }

    public GetMsGuardianRulesResponse getMsGuardianRules(GetMsGuardianRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMsGuardianRulesWithOptions(request, runtime);
    }

    public GetMsMiddlewareInstanceResponse getMsMiddlewareInstanceWithOptions(GetMsMiddlewareInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMsMiddlewareInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMsMiddlewareInstanceResponse());
    }

    public GetMsMiddlewareInstanceResponse getMsMiddlewareInstance(GetMsMiddlewareInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMsMiddlewareInstanceWithOptions(request, runtime);
    }

    public GetMsSgCircuitBreakerRuleResponse getMsSgCircuitBreakerRuleWithOptions(GetMsSgCircuitBreakerRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMsSgCircuitBreakerRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMsSgCircuitBreakerRuleResponse());
    }

    public GetMsSgCircuitBreakerRuleResponse getMsSgCircuitBreakerRule(GetMsSgCircuitBreakerRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMsSgCircuitBreakerRuleWithOptions(request, runtime);
    }

    public GetMsSgEnvConfigResponse getMsSgEnvConfigWithOptions(GetMsSgEnvConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMsSgEnvConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMsSgEnvConfigResponse());
    }

    public GetMsSgEnvConfigResponse getMsSgEnvConfig(GetMsSgEnvConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMsSgEnvConfigWithOptions(request, runtime);
    }

    public GetMsSgRelationSwitchResponse getMsSgRelationSwitchWithOptions(GetMsSgRelationSwitchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMsSgRelationSwitch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMsSgRelationSwitchResponse());
    }

    public GetMsSgRelationSwitchResponse getMsSgRelationSwitch(GetMsSgRelationSwitchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMsSgRelationSwitchWithOptions(request, runtime);
    }

    public GetMsSgRouterRulesResponse getMsSgRouterRulesWithOptions(GetMsSgRouterRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetMsSgRouterRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetMsSgRouterRulesResponse());
    }

    public GetMsSgRouterRulesResponse getMsSgRouterRules(GetMsSgRouterRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getMsSgRouterRulesWithOptions(request, runtime);
    }

    public GetODPMiddlewareInstanceResponse getODPMiddlewareInstanceWithOptions(GetODPMiddlewareInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetODPMiddlewareInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetODPMiddlewareInstanceResponse());
    }

    public GetODPMiddlewareInstanceResponse getODPMiddlewareInstance(GetODPMiddlewareInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getODPMiddlewareInstanceWithOptions(request, runtime);
    }

    public GetRmsRdsResourcesResponse getRmsRdsResourcesWithOptions(GetRmsRdsResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetRmsRdsResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetRmsRdsResourcesResponse());
    }

    public GetRmsRdsResourcesResponse getRmsRdsResources(GetRmsRdsResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getRmsRdsResourcesWithOptions(request, runtime);
    }

    public GetTSMiddlewareInstanceResponse getTSMiddlewareInstanceWithOptions(GetTSMiddlewareInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetTSMiddlewareInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetTSMiddlewareInstanceResponse());
    }

    public GetTSMiddlewareInstanceResponse getTSMiddlewareInstance(GetTSMiddlewareInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getTSMiddlewareInstanceWithOptions(request, runtime);
    }

    public GetWorkspaceResponse getWorkspaceWithOptions(GetWorkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GetWorkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GetWorkspaceResponse());
    }

    public GetWorkspaceResponse getWorkspace(GetWorkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.getWorkspaceWithOptions(request, runtime);
    }

    public GrayPushMsConfigDataResponse grayPushMsConfigDataWithOptions(GrayPushMsConfigDataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("GrayPushMsConfigData", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new GrayPushMsConfigDataResponse());
    }

    public GrayPushMsConfigDataResponse grayPushMsConfigData(GrayPushMsConfigDataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.grayPushMsConfigDataWithOptions(request, runtime);
    }

    public ImportAKSClusterNodeResponse importAKSClusterNodeWithOptions(ImportAKSClusterNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportAKSClusterNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportAKSClusterNodeResponse());
    }

    public ImportAKSClusterNodeResponse importAKSClusterNode(ImportAKSClusterNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importAKSClusterNodeWithOptions(request, runtime);
    }

    public ImportCasLoadbalanceResponse importCasLoadbalanceWithOptions(ImportCasLoadbalanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportCasLoadbalance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportCasLoadbalanceResponse());
    }

    public ImportCasLoadbalanceResponse importCasLoadbalance(ImportCasLoadbalanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importCasLoadbalanceWithOptions(request, runtime);
    }

    public ImportClriskTemplateResponse importClriskTemplateWithOptions(ImportClriskTemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportClriskTemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportClriskTemplateResponse());
    }

    public ImportClriskTemplateResponse importClriskTemplate(ImportClriskTemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importClriskTemplateWithOptions(request, runtime);
    }

    public ImportDmsBindingResponse importDmsBindingWithOptions(ImportDmsBindingRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportDmsBinding", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportDmsBindingResponse());
    }

    public ImportDmsBindingResponse importDmsBinding(ImportDmsBindingRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importDmsBindingWithOptions(request, runtime);
    }

    public ImportDmsMsgTypeResponse importDmsMsgTypeWithOptions(ImportDmsMsgTypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportDmsMsgType", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportDmsMsgTypeResponse());
    }

    public ImportDmsMsgTypeResponse importDmsMsgType(ImportDmsMsgTypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importDmsMsgTypeWithOptions(request, runtime);
    }

    public ImportDSTSlsTokenResponse importDSTSlsTokenWithOptions(ImportDSTSlsTokenRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportDSTSlsToken", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportDSTSlsTokenResponse());
    }

    public ImportDSTSlsTokenResponse importDSTSlsToken(ImportDSTSlsTokenRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importDSTSlsTokenWithOptions(request, runtime);
    }

    public ImportDTXAppConfigResponse importDTXAppConfigWithOptions(ImportDTXAppConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportDTXAppConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportDTXAppConfigResponse());
    }

    public ImportDTXAppConfigResponse importDTXAppConfig(ImportDTXAppConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importDTXAppConfigWithOptions(request, runtime);
    }

    public ImportHasDiagnosisResponse importHasDiagnosisWithOptions(ImportHasDiagnosisRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportHasDiagnosis", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportHasDiagnosisResponse());
    }

    public ImportHasDiagnosisResponse importHasDiagnosis(ImportHasDiagnosisRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importHasDiagnosisWithOptions(request, runtime);
    }

    public ImportHasInspectEnvResponse importHasInspectEnvWithOptions(ImportHasInspectEnvRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportHasInspectEnv", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportHasInspectEnvResponse());
    }

    public ImportHasInspectEnvResponse importHasInspectEnv(ImportHasInspectEnvRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importHasInspectEnvWithOptions(request, runtime);
    }

    public ImportHasInspectPluginResponse importHasInspectPluginWithOptions(ImportHasInspectPluginRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportHasInspectPlugin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportHasInspectPluginResponse());
    }

    public ImportHasInspectPluginResponse importHasInspectPlugin(ImportHasInspectPluginRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importHasInspectPluginWithOptions(request, runtime);
    }

    public ImportHasInspectRuleResponse importHasInspectRuleWithOptions(ImportHasInspectRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportHasInspectRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportHasInspectRuleResponse());
    }

    public ImportHasInspectRuleResponse importHasInspectRule(ImportHasInspectRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importHasInspectRuleWithOptions(request, runtime);
    }

    public ImportLinkeBahamutIterationimportmembersResponse importLinkeBahamutIterationimportmembersWithOptions(ImportLinkeBahamutIterationimportmembersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportLinkeBahamutIterationimportmembers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportLinkeBahamutIterationimportmembersResponse());
    }

    public ImportLinkeBahamutIterationimportmembersResponse importLinkeBahamutIterationimportmembers(ImportLinkeBahamutIterationimportmembersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importLinkeBahamutIterationimportmembersWithOptions(request, runtime);
    }

    public ImportLinkedeploycoreDeploycoreAppserviceResponse importLinkedeploycoreDeploycoreAppserviceWithOptions(ImportLinkedeploycoreDeploycoreAppserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportLinkedeploycoreDeploycoreAppservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportLinkedeploycoreDeploycoreAppserviceResponse());
    }

    public ImportLinkedeploycoreDeploycoreAppserviceResponse importLinkedeploycoreDeploycoreAppservice(ImportLinkedeploycoreDeploycoreAppserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importLinkedeploycoreDeploycoreAppserviceWithOptions(request, runtime);
    }

    public ImportLinkefabricFabricCibranchconfigsResponse importLinkefabricFabricCibranchconfigsWithOptions(ImportLinkefabricFabricCibranchconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportLinkefabricFabricCibranchconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportLinkefabricFabricCibranchconfigsResponse());
    }

    public ImportLinkefabricFabricCibranchconfigsResponse importLinkefabricFabricCibranchconfigs(ImportLinkefabricFabricCibranchconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importLinkefabricFabricCibranchconfigsWithOptions(request, runtime);
    }

    public ImportMsDrmResourcesResponse importMsDrmResourcesWithOptions(ImportMsDrmResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportMsDrmResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportMsDrmResourcesResponse());
    }

    public ImportMsDrmResourcesResponse importMsDrmResources(ImportMsDrmResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importMsDrmResourcesWithOptions(request, runtime);
    }

    public ImportMsGuardianRulesResponse importMsGuardianRulesWithOptions(ImportMsGuardianRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportMsGuardianRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportMsGuardianRulesResponse());
    }

    public ImportMsGuardianRulesResponse importMsGuardianRules(ImportMsGuardianRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importMsGuardianRulesWithOptions(request, runtime);
    }

    public ImportMsSgAuthRuleGroupsResponse importMsSgAuthRuleGroupsWithOptions(ImportMsSgAuthRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportMsSgAuthRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportMsSgAuthRuleGroupsResponse());
    }

    public ImportMsSgAuthRuleGroupsResponse importMsSgAuthRuleGroups(ImportMsSgAuthRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importMsSgAuthRuleGroupsWithOptions(request, runtime);
    }

    public ImportMsSgResourceResponse importMsSgResourceWithOptions(ImportMsSgResourceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportMsSgResource", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportMsSgResourceResponse());
    }

    public ImportMsSgResourceResponse importMsSgResource(ImportMsSgResourceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importMsSgResourceWithOptions(request, runtime);
    }

    public ImportODPBizDbnodesResponse importODPBizDbnodesWithOptions(ImportODPBizDbnodesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportODPBizDbnodes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportODPBizDbnodesResponse());
    }

    public ImportODPBizDbnodesResponse importODPBizDbnodes(ImportODPBizDbnodesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importODPBizDbnodesWithOptions(request, runtime);
    }

    public ImportODPSchemasResponse importODPSchemasWithOptions(ImportODPSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportODPSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportODPSchemasResponse());
    }

    public ImportODPSchemasResponse importODPSchemas(ImportODPSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importODPSchemasWithOptions(request, runtime);
    }

    public ImportTSJobsResponse importTSJobsWithOptions(ImportTSJobsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportTSJobs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportTSJobsResponse());
    }

    public ImportTSJobsResponse importTSJobs(ImportTSJobsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importTSJobsWithOptions(request, runtime);
    }

    public ImportTSJobsOssResponse importTSJobsOssWithOptions(ImportTSJobsOssRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ImportTSJobsOss", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ImportTSJobsOssResponse());
    }

    public ImportTSJobsOssResponse importTSJobsOss(ImportTSJobsOssRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.importTSJobsOssWithOptions(request, runtime);
    }

    public InitAKSClusterKubeconfigResponse initAKSClusterKubeconfigWithOptions(InitAKSClusterKubeconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InitAKSClusterKubeconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InitAKSClusterKubeconfigResponse());
    }

    public InitAKSClusterKubeconfigResponse initAKSClusterKubeconfig(InitAKSClusterKubeconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.initAKSClusterKubeconfigWithOptions(request, runtime);
    }

    public InitDWSTaskResponse initDWSTaskWithOptions(InitDWSTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InitDWSTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InitDWSTaskResponse());
    }

    public InitDWSTaskResponse initDWSTask(InitDWSTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.initDWSTaskWithOptions(request, runtime);
    }

    public InitLinkeBahamutAdmininitunitactivestageinfoResponse initLinkeBahamutAdmininitunitactivestageinfoWithOptions(InitLinkeBahamutAdmininitunitactivestageinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InitLinkeBahamutAdmininitunitactivestageinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InitLinkeBahamutAdmininitunitactivestageinfoResponse());
    }

    public InitLinkeBahamutAdmininitunitactivestageinfoResponse initLinkeBahamutAdmininitunitactivestageinfo(InitLinkeBahamutAdmininitunitactivestageinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.initLinkeBahamutAdmininitunitactivestageinfoWithOptions(request, runtime);
    }

    public InitLinkeBahamutAdmintemplateinitstcResponse initLinkeBahamutAdmintemplateinitstcWithOptions(InitLinkeBahamutAdmintemplateinitstcRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InitLinkeBahamutAdmintemplateinitstc", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InitLinkeBahamutAdmintemplateinitstcResponse());
    }

    public InitLinkeBahamutAdmintemplateinitstcResponse initLinkeBahamutAdmintemplateinitstc(InitLinkeBahamutAdmintemplateinitstcRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.initLinkeBahamutAdmintemplateinitstcWithOptions(request, runtime);
    }

    public InitLinkeBahamutAppsipaytemplateResponse initLinkeBahamutAppsipaytemplateWithOptions(InitLinkeBahamutAppsipaytemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InitLinkeBahamutAppsipaytemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InitLinkeBahamutAppsipaytemplateResponse());
    }

    public InitLinkeBahamutAppsipaytemplateResponse initLinkeBahamutAppsipaytemplate(InitLinkeBahamutAppsipaytemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.initLinkeBahamutAppsipaytemplateWithOptions(request, runtime);
    }

    public InitLinkeBahamutCommonconfigResponse initLinkeBahamutCommonconfigWithOptions(InitLinkeBahamutCommonconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InitLinkeBahamutCommonconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InitLinkeBahamutCommonconfigResponse());
    }

    public InitLinkeBahamutCommonconfigResponse initLinkeBahamutCommonconfig(InitLinkeBahamutCommonconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.initLinkeBahamutCommonconfigWithOptions(request, runtime);
    }

    public InitLinkeBahamutCurrentuserswitchResponse initLinkeBahamutCurrentuserswitchWithOptions(InitLinkeBahamutCurrentuserswitchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InitLinkeBahamutCurrentuserswitch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InitLinkeBahamutCurrentuserswitchResponse());
    }

    public InitLinkeBahamutCurrentuserswitchResponse initLinkeBahamutCurrentuserswitch(InitLinkeBahamutCurrentuserswitchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.initLinkeBahamutCurrentuserswitchWithOptions(request, runtime);
    }

    public InitLinkeBahamutIpaytemplateResponse initLinkeBahamutIpaytemplateWithOptions(InitLinkeBahamutIpaytemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InitLinkeBahamutIpaytemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InitLinkeBahamutIpaytemplateResponse());
    }

    public InitLinkeBahamutIpaytemplateResponse initLinkeBahamutIpaytemplate(InitLinkeBahamutIpaytemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.initLinkeBahamutIpaytemplateWithOptions(request, runtime);
    }

    public InitLinkeBahamutLpayemplatewhensubdeptpersonisnotemptyResponse initLinkeBahamutLpayemplatewhensubdeptpersonisnotemptyWithOptions(InitLinkeBahamutLpayemplatewhensubdeptpersonisnotemptyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InitLinkeBahamutLpayemplatewhensubdeptpersonisnotempty", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InitLinkeBahamutLpayemplatewhensubdeptpersonisnotemptyResponse());
    }

    public InitLinkeBahamutLpayemplatewhensubdeptpersonisnotemptyResponse initLinkeBahamutLpayemplatewhensubdeptpersonisnotempty(InitLinkeBahamutLpayemplatewhensubdeptpersonisnotemptyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.initLinkeBahamutLpayemplatewhensubdeptpersonisnotemptyWithOptions(request, runtime);
    }

    public InitLinkeBahamutOpeninitprsettingsResponse initLinkeBahamutOpeninitprsettingsWithOptions(InitLinkeBahamutOpeninitprsettingsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InitLinkeBahamutOpeninitprsettings", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InitLinkeBahamutOpeninitprsettingsResponse());
    }

    public InitLinkeBahamutOpeninitprsettingsResponse initLinkeBahamutOpeninitprsettings(InitLinkeBahamutOpeninitprsettingsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.initLinkeBahamutOpeninitprsettingsWithOptions(request, runtime);
    }

    public InitLinkeBahamutTenantinitResponse initLinkeBahamutTenantinitWithOptions(InitLinkeBahamutTenantinitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InitLinkeBahamutTenantinit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InitLinkeBahamutTenantinitResponse());
    }

    public InitLinkeBahamutTenantinitResponse initLinkeBahamutTenantinit(InitLinkeBahamutTenantinitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.initLinkeBahamutTenantinitWithOptions(request, runtime);
    }

    public InitLinkeBahamutTenantstorageconfigResponse initLinkeBahamutTenantstorageconfigWithOptions(InitLinkeBahamutTenantstorageconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InitLinkeBahamutTenantstorageconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InitLinkeBahamutTenantstorageconfigResponse());
    }

    public InitLinkeBahamutTenantstorageconfigResponse initLinkeBahamutTenantstorageconfig(InitLinkeBahamutTenantstorageconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.initLinkeBahamutTenantstorageconfigWithOptions(request, runtime);
    }

    public InitLinkeBahamutWorkspaceResponse initLinkeBahamutWorkspaceWithOptions(InitLinkeBahamutWorkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InitLinkeBahamutWorkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InitLinkeBahamutWorkspaceResponse());
    }

    public InitLinkeBahamutWorkspaceResponse initLinkeBahamutWorkspace(InitLinkeBahamutWorkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.initLinkeBahamutWorkspaceWithOptions(request, runtime);
    }

    public InstallAKSHelmChartReleaseResponse installAKSHelmChartReleaseWithOptions(InstallAKSHelmChartReleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("InstallAKSHelmChartRelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new InstallAKSHelmChartReleaseResponse());
    }

    public InstallAKSHelmChartReleaseResponse installAKSHelmChartRelease(InstallAKSHelmChartReleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.installAKSHelmChartReleaseWithOptions(request, runtime);
    }

    public JoinTSJobGroupsResponse joinTSJobGroupsWithOptions(JoinTSJobGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("JoinTSJobGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new JoinTSJobGroupsResponse());
    }

    public JoinTSJobGroupsResponse joinTSJobGroups(JoinTSJobGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.joinTSJobGroupsWithOptions(request, runtime);
    }

    public JudgeLinkeBahamutAdminResponse judgeLinkeBahamutAdminWithOptions(JudgeLinkeBahamutAdminRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("JudgeLinkeBahamutAdmin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new JudgeLinkeBahamutAdminResponse());
    }

    public JudgeLinkeBahamutAdminResponse judgeLinkeBahamutAdmin(JudgeLinkeBahamutAdminRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.judgeLinkeBahamutAdminWithOptions(request, runtime);
    }

    public JudgeLinkeBahamutDiffbetweenbranchesResponse judgeLinkeBahamutDiffbetweenbranchesWithOptions(JudgeLinkeBahamutDiffbetweenbranchesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("JudgeLinkeBahamutDiffbetweenbranches", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new JudgeLinkeBahamutDiffbetweenbranchesResponse());
    }

    public JudgeLinkeBahamutDiffbetweenbranchesResponse judgeLinkeBahamutDiffbetweenbranches(JudgeLinkeBahamutDiffbetweenbranchesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.judgeLinkeBahamutDiffbetweenbranchesWithOptions(request, runtime);
    }

    public ListAKSAcrNamespaceResponse listAKSAcrNamespaceWithOptions(ListAKSAcrNamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListAKSAcrNamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListAKSAcrNamespaceResponse());
    }

    public ListAKSAcrNamespaceResponse listAKSAcrNamespace(ListAKSAcrNamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listAKSAcrNamespaceWithOptions(request, runtime);
    }

    public ListAKSAcrNamespaceRepoResponse listAKSAcrNamespaceRepoWithOptions(ListAKSAcrNamespaceRepoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListAKSAcrNamespaceRepo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListAKSAcrNamespaceRepoResponse());
    }

    public ListAKSAcrNamespaceRepoResponse listAKSAcrNamespaceRepo(ListAKSAcrNamespaceRepoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listAKSAcrNamespaceRepoWithOptions(request, runtime);
    }

    public ListAKSAcrRepoResponse listAKSAcrRepoWithOptions(ListAKSAcrRepoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListAKSAcrRepo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListAKSAcrRepoResponse());
    }

    public ListAKSAcrRepoResponse listAKSAcrRepo(ListAKSAcrRepoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listAKSAcrRepoWithOptions(request, runtime);
    }

    public ListAKSAcrRepoTagResponse listAKSAcrRepoTagWithOptions(ListAKSAcrRepoTagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListAKSAcrRepoTag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListAKSAcrRepoTagResponse());
    }

    public ListAKSAcrRepoTagResponse listAKSAcrRepoTag(ListAKSAcrRepoTagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listAKSAcrRepoTagWithOptions(request, runtime);
    }

    public ListAKSClustersResponse listAKSClustersWithOptions(ListAKSClustersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListAKSClusters", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListAKSClustersResponse());
    }

    public ListAKSClustersResponse listAKSClusters(ListAKSClustersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listAKSClustersWithOptions(request, runtime);
    }

    public ListAKSClusterSecuritygroupResponse listAKSClusterSecuritygroupWithOptions(ListAKSClusterSecuritygroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListAKSClusterSecuritygroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListAKSClusterSecuritygroupResponse());
    }

    public ListAKSClusterSecuritygroupResponse listAKSClusterSecuritygroup(ListAKSClusterSecuritygroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listAKSClusterSecuritygroupWithOptions(request, runtime);
    }

    public ListAKSHelmChartReleaseResponse listAKSHelmChartReleaseWithOptions(ListAKSHelmChartReleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListAKSHelmChartRelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListAKSHelmChartReleaseResponse());
    }

    public ListAKSHelmChartReleaseResponse listAKSHelmChartRelease(ListAKSHelmChartReleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listAKSHelmChartReleaseWithOptions(request, runtime);
    }

    public ListAKSHelmChartReleaseVersionResponse listAKSHelmChartReleaseVersionWithOptions(ListAKSHelmChartReleaseVersionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListAKSHelmChartReleaseVersion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListAKSHelmChartReleaseVersionResponse());
    }

    public ListAKSHelmChartReleaseVersionResponse listAKSHelmChartReleaseVersion(ListAKSHelmChartReleaseVersionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listAKSHelmChartReleaseVersionWithOptions(request, runtime);
    }

    public ListAKSKubernetesResourcesResponse listAKSKubernetesResourcesWithOptions(ListAKSKubernetesResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListAKSKubernetesResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListAKSKubernetesResourcesResponse());
    }

    public ListAKSKubernetesResourcesResponse listAKSKubernetesResources(ListAKSKubernetesResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listAKSKubernetesResourcesWithOptions(request, runtime);
    }

    public ListAKSNativeclusterResponse listAKSNativeclusterWithOptions(ListAKSNativeclusterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListAKSNativecluster", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListAKSNativeclusterResponse());
    }

    public ListAKSNativeclusterResponse listAKSNativecluster(ListAKSNativeclusterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listAKSNativeclusterWithOptions(request, runtime);
    }

    public ListAllMsSgCircuitBreakerRulesResponse listAllMsSgCircuitBreakerRulesWithOptions(ListAllMsSgCircuitBreakerRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListAllMsSgCircuitBreakerRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListAllMsSgCircuitBreakerRulesResponse());
    }

    public ListAllMsSgCircuitBreakerRulesResponse listAllMsSgCircuitBreakerRules(ListAllMsSgCircuitBreakerRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listAllMsSgCircuitBreakerRulesWithOptions(request, runtime);
    }

    public ListCASSlsConfigResponse listCASSlsConfigWithOptions(ListCASSlsConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListCASSlsConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListCASSlsConfigResponse());
    }

    public ListCASSlsConfigResponse listCASSlsConfig(ListCASSlsConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listCASSlsConfigWithOptions(request, runtime);
    }

    public ListCASSlsLogstoreResponse listCASSlsLogstoreWithOptions(ListCASSlsLogstoreRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListCASSlsLogstore", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListCASSlsLogstoreResponse());
    }

    public ListCASSlsLogstoreResponse listCASSlsLogstore(ListCASSlsLogstoreRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listCASSlsLogstoreWithOptions(request, runtime);
    }

    public ListCASSlsProjectResponse listCASSlsProjectWithOptions(ListCASSlsProjectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListCASSlsProject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListCASSlsProjectResponse());
    }

    public ListCASSlsProjectResponse listCASSlsProject(ListCASSlsProjectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listCASSlsProjectWithOptions(request, runtime);
    }

    public ListClriskDataNodesResponse listClriskDataNodesWithOptions(ListClriskDataNodesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskDataNodes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskDataNodesResponse());
    }

    public ListClriskDataNodesResponse listClriskDataNodes(ListClriskDataNodesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskDataNodesWithOptions(request, runtime);
    }

    public ListClriskIssueResponse listClriskIssueWithOptions(ListClriskIssueRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskIssue", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskIssueResponse());
    }

    public ListClriskIssueResponse listClriskIssue(ListClriskIssueRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskIssueWithOptions(request, runtime);
    }

    public ListClriskIssueDatasResponse listClriskIssueDatasWithOptions(ListClriskIssueDatasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskIssueDatas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskIssueDatasResponse());
    }

    public ListClriskIssueDatasResponse listClriskIssueDatas(ListClriskIssueDatasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskIssueDatasWithOptions(request, runtime);
    }

    public ListClriskIssuesResponse listClriskIssuesWithOptions(ListClriskIssuesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskIssues", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskIssuesResponse());
    }

    public ListClriskIssuesResponse listClriskIssues(ListClriskIssuesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskIssuesWithOptions(request, runtime);
    }

    public ListClriskIssueTaskResponse listClriskIssueTaskWithOptions(ListClriskIssueTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskIssueTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskIssueTaskResponse());
    }

    public ListClriskIssueTaskResponse listClriskIssueTask(ListClriskIssueTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskIssueTaskWithOptions(request, runtime);
    }

    public ListClriskModelResponse listClriskModelWithOptions(ListClriskModelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskModel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskModelResponse());
    }

    public ListClriskModelResponse listClriskModel(ListClriskModelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskModelWithOptions(request, runtime);
    }

    public ListClriskModelsResponse listClriskModelsWithOptions(ListClriskModelsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskModels", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskModelsResponse());
    }

    public ListClriskModelsResponse listClriskModels(ListClriskModelsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskModelsWithOptions(request, runtime);
    }

    public ListClriskOdpsTableResponse listClriskOdpsTableWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListClriskOdpsTable", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskOdpsTableResponse());
    }

    public ListClriskOdpsTableResponse listClriskOdpsTable() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskOdpsTableWithOptions(runtime);
    }

    public ListClriskOdpsTablesResponse listClriskOdpsTablesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListClriskOdpsTables", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskOdpsTablesResponse());
    }

    public ListClriskOdpsTablesResponse listClriskOdpsTables() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskOdpsTablesWithOptions(runtime);
    }

    public ListClriskProductScenesResponse listClriskProductScenesWithOptions(ListClriskProductScenesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskProductScenes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskProductScenesResponse());
    }

    public ListClriskProductScenesResponse listClriskProductScenes(ListClriskProductScenesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskProductScenesWithOptions(request, runtime);
    }

    public ListClriskRuleCyclesResponse listClriskRuleCyclesWithOptions(ListClriskRuleCyclesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskRuleCycles", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskRuleCyclesResponse());
    }

    public ListClriskRuleCyclesResponse listClriskRuleCycles(ListClriskRuleCyclesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskRuleCyclesWithOptions(request, runtime);
    }

    public ListClriskRuleRecordsResponse listClriskRuleRecordsWithOptions(ListClriskRuleRecordsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskRuleRecords", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskRuleRecordsResponse());
    }

    public ListClriskRuleRecordsResponse listClriskRuleRecords(ListClriskRuleRecordsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskRuleRecordsWithOptions(request, runtime);
    }

    public ListClriskRulesResponse listClriskRulesWithOptions(ListClriskRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskRulesResponse());
    }

    public ListClriskRulesResponse listClriskRules(ListClriskRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskRulesWithOptions(request, runtime);
    }

    public ListClriskRuleTasksResponse listClriskRuleTasksWithOptions(ListClriskRuleTasksRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskRuleTasks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskRuleTasksResponse());
    }

    public ListClriskRuleTasksResponse listClriskRuleTasks(ListClriskRuleTasksRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskRuleTasksWithOptions(request, runtime);
    }

    public ListClriskSceneNamesResponse listClriskSceneNamesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListClriskSceneNames", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskSceneNamesResponse());
    }

    public ListClriskSceneNamesResponse listClriskSceneNames() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskSceneNamesWithOptions(runtime);
    }

    public ListClriskTemplateResponse listClriskTemplateWithOptions(ListClriskTemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskTemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskTemplateResponse());
    }

    public ListClriskTemplateResponse listClriskTemplate(ListClriskTemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskTemplateWithOptions(request, runtime);
    }

    public ListClriskTemplateCycleResponse listClriskTemplateCycleWithOptions(ListClriskTemplateCycleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskTemplateCycle", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskTemplateCycleResponse());
    }

    public ListClriskTemplateCycleResponse listClriskTemplateCycle(ListClriskTemplateCycleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskTemplateCycleWithOptions(request, runtime);
    }

    public ListClriskTemplateRuleResponse listClriskTemplateRuleWithOptions(ListClriskTemplateRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskTemplateRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskTemplateRuleResponse());
    }

    public ListClriskTemplateRuleResponse listClriskTemplateRule(ListClriskTemplateRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskTemplateRuleWithOptions(request, runtime);
    }

    public ListClriskUsersResponse listClriskUsersWithOptions(ListClriskUsersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListClriskUsers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListClriskUsersResponse());
    }

    public ListClriskUsersResponse listClriskUsers(ListClriskUsersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listClriskUsersWithOptions(request, runtime);
    }

    public ListDmsBindingResponse listDmsBindingWithOptions(ListDmsBindingRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDmsBinding", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDmsBindingResponse());
    }

    public ListDmsBindingResponse listDmsBinding(ListDmsBindingRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDmsBindingWithOptions(request, runtime);
    }

    public ListDmsMsgTypeResponse listDmsMsgTypeWithOptions(ListDmsMsgTypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDmsMsgType", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDmsMsgTypeResponse());
    }

    public ListDmsMsgTypeResponse listDmsMsgType(ListDmsMsgTypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDmsMsgTypeWithOptions(request, runtime);
    }

    public ListDmsWhitelistResponse listDmsWhitelistWithOptions(ListDmsWhitelistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDmsWhitelist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDmsWhitelistResponse());
    }

    public ListDmsWhitelistResponse listDmsWhitelist(ListDmsWhitelistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDmsWhitelistWithOptions(request, runtime);
    }

    public ListDSTAppsResponse listDSTAppsWithOptions(ListDSTAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDSTApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDSTAppsResponse());
    }

    public ListDSTAppsResponse listDSTApps(ListDSTAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDSTAppsWithOptions(request, runtime);
    }

    public ListDSTBizLogConfigsResponse listDSTBizLogConfigsWithOptions(ListDSTBizLogConfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDSTBizLogConfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDSTBizLogConfigsResponse());
    }

    public ListDSTBizLogConfigsResponse listDSTBizLogConfigs(ListDSTBizLogConfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDSTBizLogConfigsWithOptions(request, runtime);
    }

    public ListDSTBizLogsResponse listDSTBizLogsWithOptions(ListDSTBizLogsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDSTBizLogs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDSTBizLogsResponse());
    }

    public ListDSTBizLogsResponse listDSTBizLogs(ListDSTBizLogsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDSTBizLogsWithOptions(request, runtime);
    }

    public ListDSTDependenciesResponse listDSTDependenciesWithOptions(ListDSTDependenciesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDSTDependencies", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDSTDependenciesResponse());
    }

    public ListDSTDependenciesResponse listDSTDependencies(ListDSTDependenciesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDSTDependenciesWithOptions(request, runtime);
    }

    public ListDSTSpansResponse listDSTSpansWithOptions(ListDSTSpansRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDSTSpans", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDSTSpansResponse());
    }

    public ListDSTSpansResponse listDSTSpans(ListDSTSpansRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDSTSpansWithOptions(request, runtime);
    }

    public ListDSTTopNMetricsResponse listDSTTopNMetricsWithOptions(ListDSTTopNMetricsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDSTTopNMetrics", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDSTTopNMetricsResponse());
    }

    public ListDSTTopNMetricsResponse listDSTTopNMetrics(ListDSTTopNMetricsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDSTTopNMetricsWithOptions(request, runtime);
    }

    public ListDSTTraceHistoriesResponse listDSTTraceHistoriesWithOptions(ListDSTTraceHistoriesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDSTTraceHistories", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDSTTraceHistoriesResponse());
    }

    public ListDSTTraceHistoriesResponse listDSTTraceHistories(ListDSTTraceHistoriesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDSTTraceHistoriesWithOptions(request, runtime);
    }

    public ListDSTTracesResponse listDSTTracesWithOptions(ListDSTTracesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDSTTraces", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDSTTracesResponse());
    }

    public ListDSTTracesResponse listDSTTraces(ListDSTTracesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDSTTracesWithOptions(request, runtime);
    }

    public ListDTXAppNamesResponse listDTXAppNamesWithOptions(ListDTXAppNamesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDTXAppNames", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDTXAppNamesResponse());
    }

    public ListDTXAppNamesResponse listDTXAppNames(ListDTXAppNamesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDTXAppNamesWithOptions(request, runtime);
    }

    public ListDTXAppsResponse listDTXAppsWithOptions(ListDTXAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDTXApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDTXAppsResponse());
    }

    public ListDTXAppsResponse listDTXApps(ListDTXAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDTXAppsWithOptions(request, runtime);
    }

    public ListDTXAppsRecoverydsnameResponse listDTXAppsRecoverydsnameWithOptions(ListDTXAppsRecoverydsnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDTXAppsRecoverydsname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDTXAppsRecoverydsnameResponse());
    }

    public ListDTXAppsRecoverydsnameResponse listDTXAppsRecoverydsname(ListDTXAppsRecoverydsnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDTXAppsRecoverydsnameWithOptions(request, runtime);
    }

    public ListDTXBizTypesResponse listDTXBizTypesWithOptions(ListDTXBizTypesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDTXBizTypes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDTXBizTypesResponse());
    }

    public ListDTXBizTypesResponse listDTXBizTypes(ListDTXBizTypesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDTXBizTypesWithOptions(request, runtime);
    }

    public ListDTXNewAppsResponse listDTXNewAppsWithOptions(ListDTXNewAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDTXNewApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDTXNewAppsResponse());
    }

    public ListDTXNewAppsResponse listDTXNewApps(ListDTXNewAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDTXNewAppsWithOptions(request, runtime);
    }

    public ListDTXWhitelistZonesResponse listDTXWhitelistZonesWithOptions(ListDTXWhitelistZonesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListDTXWhitelistZones", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListDTXWhitelistZonesResponse());
    }

    public ListDTXWhitelistZonesResponse listDTXWhitelistZones(ListDTXWhitelistZonesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listDTXWhitelistZonesWithOptions(request, runtime);
    }

    public ListGWApiResponse listGWApiWithOptions(ListGWApiRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListGWApi", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListGWApiResponse());
    }

    public ListGWApiResponse listGWApi(ListGWApiRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listGWApiWithOptions(request, runtime);
    }

    public ListGWApiGroupResponse listGWApiGroupWithOptions(ListGWApiGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListGWApiGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListGWApiGroupResponse());
    }

    public ListGWApiGroupResponse listGWApiGroup(ListGWApiGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listGWApiGroupWithOptions(request, runtime);
    }

    public ListGWApiGroupApiResponse listGWApiGroupApiWithOptions(ListGWApiGroupApiRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListGWApiGroupApi", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListGWApiGroupApiResponse());
    }

    public ListGWApiGroupApiResponse listGWApiGroupApi(ListGWApiGroupApiRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listGWApiGroupApiWithOptions(request, runtime);
    }

    public ListGWApiGroupAuthUserResponse listGWApiGroupAuthUserWithOptions(ListGWApiGroupAuthUserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListGWApiGroupAuthUser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListGWApiGroupAuthUserResponse());
    }

    public ListGWApiGroupAuthUserResponse listGWApiGroupAuthUser(ListGWApiGroupAuthUserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listGWApiGroupAuthUserWithOptions(request, runtime);
    }

    public ListGWAppResponse listGWAppWithOptions(ListGWAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListGWApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListGWAppResponse());
    }

    public ListGWAppResponse listGWApp(ListGWAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listGWAppWithOptions(request, runtime);
    }

    public ListGWAppApiResponse listGWAppApiWithOptions(ListGWAppApiRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListGWAppApi", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListGWAppApiResponse());
    }

    public ListGWAppApiResponse listGWAppApi(ListGWAppApiRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listGWAppApiWithOptions(request, runtime);
    }

    public ListGWOperatorResponse listGWOperatorWithOptions(ListGWOperatorRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListGWOperator", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListGWOperatorResponse());
    }

    public ListGWOperatorResponse listGWOperator(ListGWOperatorRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listGWOperatorWithOptions(request, runtime);
    }

    public ListHasApprovalStrategyResponse listHasApprovalStrategyWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListHasApprovalStrategy", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasApprovalStrategyResponse());
    }

    public ListHasApprovalStrategyResponse listHasApprovalStrategy() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasApprovalStrategyWithOptions(runtime);
    }

    public ListHasBaselineAppinstancegroupnamespaceResponse listHasBaselineAppinstancegroupnamespaceWithOptions(ListHasBaselineAppinstancegroupnamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListHasBaselineAppinstancegroupnamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasBaselineAppinstancegroupnamespaceResponse());
    }

    public ListHasBaselineAppinstancegroupnamespaceResponse listHasBaselineAppinstancegroupnamespace(ListHasBaselineAppinstancegroupnamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasBaselineAppinstancegroupnamespaceWithOptions(request, runtime);
    }

    public ListHasDiagnosisEmergencyoftaskResponse listHasDiagnosisEmergencyoftaskWithOptions(ListHasDiagnosisEmergencyoftaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListHasDiagnosisEmergencyoftask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasDiagnosisEmergencyoftaskResponse());
    }

    public ListHasDiagnosisEmergencyoftaskResponse listHasDiagnosisEmergencyoftask(ListHasDiagnosisEmergencyoftaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasDiagnosisEmergencyoftaskWithOptions(request, runtime);
    }

    public ListHasInspectAkecellResponse listHasInspectAkecellWithOptions(ListHasInspectAkecellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectAkecell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectAkecellResponse());
    }

    public ListHasInspectAkecellResponse listHasInspectAkecell(ListHasInspectAkecellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectAkecellWithOptions(request, runtime);
    }

    public ListHasInspectAketenantResponse listHasInspectAketenantWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectAketenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectAketenantResponse());
    }

    public ListHasInspectAketenantResponse listHasInspectAketenant() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectAketenantWithOptions(runtime);
    }

    public ListHasInspectAkeworkspaceResponse listHasInspectAkeworkspaceWithOptions(ListHasInspectAkeworkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectAkeworkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectAkeworkspaceResponse());
    }

    public ListHasInspectAkeworkspaceResponse listHasInspectAkeworkspace(ListHasInspectAkeworkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectAkeworkspaceWithOptions(request, runtime);
    }

    public ListHasInspectAkeworkspacegroupResponse listHasInspectAkeworkspacegroupWithOptions(ListHasInspectAkeworkspacegroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectAkeworkspacegroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectAkeworkspacegroupResponse());
    }

    public ListHasInspectAkeworkspacegroupResponse listHasInspectAkeworkspacegroup(ListHasInspectAkeworkspacegroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectAkeworkspacegroupWithOptions(request, runtime);
    }

    public ListHasInspectMaintainteamResponse listHasInspectMaintainteamWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectMaintainteam", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectMaintainteamResponse());
    }

    public ListHasInspectMaintainteamResponse listHasInspectMaintainteam() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectMaintainteamWithOptions(runtime);
    }

    public ListHasInspectRulestatusactionResponse listHasInspectRulestatusactionWithOptions(ListHasInspectRulestatusactionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectRulestatusaction", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectRulestatusactionResponse());
    }

    public ListHasInspectRulestatusactionResponse listHasInspectRulestatusaction(ListHasInspectRulestatusactionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectRulestatusactionWithOptions(request, runtime);
    }

    public ListHasInspectRuletargetResponse listHasInspectRuletargetWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectRuletarget", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectRuletargetResponse());
    }

    public ListHasInspectRuletargetResponse listHasInspectRuletarget() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectRuletargetWithOptions(runtime);
    }

    public ListHasInspectSingledayreportResponse listHasInspectSingledayreportWithOptions(ListHasInspectSingledayreportRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectSingledayreport", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectSingledayreportResponse());
    }

    public ListHasInspectSingledayreportResponse listHasInspectSingledayreport(ListHasInspectSingledayreportRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectSingledayreportWithOptions(request, runtime);
    }

    public ListHasInspectTaskaggregateverdictResponse listHasInspectTaskaggregateverdictWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectTaskaggregateverdict", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectTaskaggregateverdictResponse());
    }

    public ListHasInspectTaskaggregateverdictResponse listHasInspectTaskaggregateverdict() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectTaskaggregateverdictWithOptions(runtime);
    }

    public ListHasInspectTaskrunningstatusResponse listHasInspectTaskrunningstatusWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectTaskrunningstatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectTaskrunningstatusResponse());
    }

    public ListHasInspectTaskrunningstatusResponse listHasInspectTaskrunningstatus() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectTaskrunningstatusWithOptions(runtime);
    }

    public ListHasInspectTaskstatusResponse listHasInspectTaskstatusWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectTaskstatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectTaskstatusResponse());
    }

    public ListHasInspectTaskstatusResponse listHasInspectTaskstatus() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectTaskstatusWithOptions(runtime);
    }

    public ListHasInspectTasktriggertypeResponse listHasInspectTasktriggertypeWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectTasktriggertype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectTasktriggertypeResponse());
    }

    public ListHasInspectTasktriggertypeResponse listHasInspectTasktriggertype() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectTasktriggertypeWithOptions(runtime);
    }

    public ListHasInspectTaskverdictResponse listHasInspectTaskverdictWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectTaskverdict", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectTaskverdictResponse());
    }

    public ListHasInspectTaskverdictResponse listHasInspectTaskverdict() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectTaskverdictWithOptions(runtime);
    }

    public ListHasInspectUserappcellResponse listHasInspectUserappcellWithOptions(ListHasInspectUserappcellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectUserappcell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectUserappcellResponse());
    }

    public ListHasInspectUserappcellResponse listHasInspectUserappcell(ListHasInspectUserappcellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectUserappcellWithOptions(request, runtime);
    }

    public ListHasInspectUserappnamespaceResponse listHasInspectUserappnamespaceWithOptions(ListHasInspectUserappnamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectUserappnamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectUserappnamespaceResponse());
    }

    public ListHasInspectUserappnamespaceResponse listHasInspectUserappnamespace(ListHasInspectUserappnamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectUserappnamespaceWithOptions(request, runtime);
    }

    public ListHasInspectUserapppodResponse listHasInspectUserapppodWithOptions(ListHasInspectUserapppodRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectUserapppod", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectUserapppodResponse());
    }

    public ListHasInspectUserapppodResponse listHasInspectUserapppod(ListHasInspectUserapppodRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectUserapppodWithOptions(request, runtime);
    }

    public ListHasInspectUserappserviceResponse listHasInspectUserappserviceWithOptions(ListHasInspectUserappserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectUserappservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectUserappserviceResponse());
    }

    public ListHasInspectUserappserviceResponse listHasInspectUserappservice(ListHasInspectUserappserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectUserappserviceWithOptions(request, runtime);
    }

    public ListHasInspectUserapptenantResponse listHasInspectUserapptenantWithOptions(ListHasInspectUserapptenantRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectUserapptenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectUserapptenantResponse());
    }

    public ListHasInspectUserapptenantResponse listHasInspectUserapptenant(ListHasInspectUserapptenantRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectUserapptenantWithOptions(request, runtime);
    }

    public ListHasInspectUserappworkspacegroupResponse listHasInspectUserappworkspacegroupWithOptions(ListHasInspectUserappworkspacegroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListHasInspectUserappworkspacegroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasInspectUserappworkspacegroupResponse());
    }

    public ListHasInspectUserappworkspacegroupResponse listHasInspectUserappworkspacegroup(ListHasInspectUserappworkspacegroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasInspectUserappworkspacegroupWithOptions(request, runtime);
    }

    public ListHasRiskCarriertypeResponse listHasRiskCarriertypeWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListHasRiskCarriertype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListHasRiskCarriertypeResponse());
    }

    public ListHasRiskCarriertypeResponse listHasRiskCarriertype() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listHasRiskCarriertypeWithOptions(runtime);
    }

    public ListLDCCellResponse listLDCCellWithOptions(ListLDCCellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLDCCell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCCellResponse());
    }

    public ListLDCCellResponse listLDCCell(ListLDCCellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCCellWithOptions(request, runtime);
    }

    public ListLDCCellgroupResponse listLDCCellgroupWithOptions(ListLDCCellgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLDCCellgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCCellgroupResponse());
    }

    public ListLDCCellgroupResponse listLDCCellgroup(ListLDCCellgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCCellgroupWithOptions(request, runtime);
    }

    public ListLDCClusterInfoResponse listLDCClusterInfoWithOptions(ListLDCClusterInfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLDCClusterInfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCClusterInfoResponse());
    }

    public ListLDCClusterInfoResponse listLDCClusterInfo(ListLDCClusterInfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCClusterInfoWithOptions(request, runtime);
    }

    public ListLDCContainerServiceIngressResponse listLDCContainerServiceIngressWithOptions(ListLDCContainerServiceIngressRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLDCContainerServiceIngress", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCContainerServiceIngressResponse());
    }

    public ListLDCContainerServiceIngressResponse listLDCContainerServiceIngress(ListLDCContainerServiceIngressRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCContainerServiceIngressWithOptions(request, runtime);
    }

    public ListLDCContainerservicePodResponse listLDCContainerservicePodWithOptions(ListLDCContainerservicePodRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLDCContainerservicePod", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCContainerservicePodResponse());
    }

    public ListLDCContainerservicePodResponse listLDCContainerservicePod(ListLDCContainerservicePodRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCContainerservicePodWithOptions(request, runtime);
    }

    public ListLDCContainerServiceServiceResponse listLDCContainerServiceServiceWithOptions(ListLDCContainerServiceServiceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLDCContainerServiceService", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCContainerServiceServiceResponse());
    }

    public ListLDCContainerServiceServiceResponse listLDCContainerServiceService(ListLDCContainerServiceServiceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCContainerServiceServiceWithOptions(request, runtime);
    }

    public ListLDCEventsResponse listLDCEventsWithOptions(ListLDCEventsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLDCEvents", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCEventsResponse());
    }

    public ListLDCEventsResponse listLDCEvents(ListLDCEventsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCEventsWithOptions(request, runtime);
    }

    public ListLDCFederationConfigmapResponse listLDCFederationConfigmapWithOptions(ListLDCFederationConfigmapRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLDCFederationConfigmap", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCFederationConfigmapResponse());
    }

    public ListLDCFederationConfigmapResponse listLDCFederationConfigmap(ListLDCFederationConfigmapRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCFederationConfigmapWithOptions(request, runtime);
    }

    public ListLDCFederationNamespaceResponse listLDCFederationNamespaceWithOptions(ListLDCFederationNamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLDCFederationNamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCFederationNamespaceResponse());
    }

    public ListLDCFederationNamespaceResponse listLDCFederationNamespace(ListLDCFederationNamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCFederationNamespaceWithOptions(request, runtime);
    }

    public ListLDCFederationSpannerClusterResponse listLDCFederationSpannerClusterWithOptions(ListLDCFederationSpannerClusterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLDCFederationSpannerCluster", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCFederationSpannerClusterResponse());
    }

    public ListLDCFederationSpannerClusterResponse listLDCFederationSpannerCluster(ListLDCFederationSpannerClusterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCFederationSpannerClusterWithOptions(request, runtime);
    }

    public ListLDCRegionResponse listLDCRegionWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListLDCRegion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCRegionResponse());
    }

    public ListLDCRegionResponse listLDCRegion() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCRegionWithOptions(runtime);
    }

    public ListLDCSystemSwitchResponse listLDCSystemSwitchWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListLDCSystemSwitch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCSystemSwitchResponse());
    }

    public ListLDCSystemSwitchResponse listLDCSystemSwitch() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCSystemSwitchWithOptions(runtime);
    }

    public ListLDCSystemUrlResponse listLDCSystemUrlWithOptions(ListLDCSystemUrlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLDCSystemUrl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCSystemUrlResponse());
    }

    public ListLDCSystemUrlResponse listLDCSystemUrl(ListLDCSystemUrlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCSystemUrlWithOptions(request, runtime);
    }

    public ListLDCZoneResponse listLDCZoneWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListLDCZone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLDCZoneResponse());
    }

    public ListLDCZoneResponse listLDCZone() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLDCZoneWithOptions(runtime);
    }

    public ListLinkeantcodeAntcodeLsifdefinitionResponse listLinkeantcodeAntcodeLsifdefinitionWithOptions(ListLinkeantcodeAntcodeLsifdefinitionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeantcodeAntcodeLsifdefinition", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeantcodeAntcodeLsifdefinitionResponse());
    }

    public ListLinkeantcodeAntcodeLsifdefinitionResponse listLinkeantcodeAntcodeLsifdefinition(ListLinkeantcodeAntcodeLsifdefinitionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeantcodeAntcodeLsifdefinitionWithOptions(request, runtime);
    }

    public ListLinkeantcodeAntcodeNewrepositoryfilesResponse listLinkeantcodeAntcodeNewrepositoryfilesWithOptions(ListLinkeantcodeAntcodeNewrepositoryfilesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeantcodeAntcodeNewrepositoryfiles", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeantcodeAntcodeNewrepositoryfilesResponse());
    }

    public ListLinkeantcodeAntcodeNewrepositoryfilesResponse listLinkeantcodeAntcodeNewrepositoryfiles(ListLinkeantcodeAntcodeNewrepositoryfilesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeantcodeAntcodeNewrepositoryfilesWithOptions(request, runtime);
    }

    public ListLinkeantcodeAntcodeRepositoryfilesResponse listLinkeantcodeAntcodeRepositoryfilesWithOptions(ListLinkeantcodeAntcodeRepositoryfilesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeantcodeAntcodeRepositoryfiles", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeantcodeAntcodeRepositoryfilesResponse());
    }

    public ListLinkeantcodeAntcodeRepositoryfilesResponse listLinkeantcodeAntcodeRepositoryfiles(ListLinkeantcodeAntcodeRepositoryfilesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeantcodeAntcodeRepositoryfilesWithOptions(request, runtime);
    }

    public ListLinkeantcodeAntcodeUsergitauthResponse listLinkeantcodeAntcodeUsergitauthWithOptions(ListLinkeantcodeAntcodeUsergitauthRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeantcodeAntcodeUsergitauth", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeantcodeAntcodeUsergitauthResponse());
    }

    public ListLinkeantcodeAntcodeUsergitauthResponse listLinkeantcodeAntcodeUsergitauth(ListLinkeantcodeAntcodeUsergitauthRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeantcodeAntcodeUsergitauthWithOptions(request, runtime);
    }

    public ListLinkeBahamutAdminpipelineResponse listLinkeBahamutAdminpipelineWithOptions(ListLinkeBahamutAdminpipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutAdminpipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutAdminpipelineResponse());
    }

    public ListLinkeBahamutAdminpipelineResponse listLinkeBahamutAdminpipeline(ListLinkeBahamutAdminpipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutAdminpipelineWithOptions(request, runtime);
    }

    public ListLinkeBahamutAdminsecretdicResponse listLinkeBahamutAdminsecretdicWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutAdminsecretdic", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutAdminsecretdicResponse());
    }

    public ListLinkeBahamutAdminsecretdicResponse listLinkeBahamutAdminsecretdic() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutAdminsecretdicWithOptions(runtime);
    }

    public ListLinkeBahamutAdminworkspaceResponse listLinkeBahamutAdminworkspaceWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutAdminworkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutAdminworkspaceResponse());
    }

    public ListLinkeBahamutAdminworkspaceResponse listLinkeBahamutAdminworkspace() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutAdminworkspaceWithOptions(runtime);
    }

    public ListLinkeBahamutAllarchdomainsfromlinkmResponse listLinkeBahamutAllarchdomainsfromlinkmWithOptions(ListLinkeBahamutAllarchdomainsfromlinkmRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutAllarchdomainsfromlinkm", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutAllarchdomainsfromlinkmResponse());
    }

    public ListLinkeBahamutAllarchdomainsfromlinkmResponse listLinkeBahamutAllarchdomainsfromlinkm(ListLinkeBahamutAllarchdomainsfromlinkmRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutAllarchdomainsfromlinkmWithOptions(request, runtime);
    }

    public ListLinkeBahamutAoneinternalworkitemResponse listLinkeBahamutAoneinternalworkitemWithOptions(ListLinkeBahamutAoneinternalworkitemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutAoneinternalworkitem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutAoneinternalworkitemResponse());
    }

    public ListLinkeBahamutAoneinternalworkitemResponse listLinkeBahamutAoneinternalworkitem(ListLinkeBahamutAoneinternalworkitemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutAoneinternalworkitemWithOptions(request, runtime);
    }

    public ListLinkeBahamutAppbranchsResponse listLinkeBahamutAppbranchsWithOptions(ListLinkeBahamutAppbranchsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutAppbranchs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutAppbranchsResponse());
    }

    public ListLinkeBahamutAppbranchsResponse listLinkeBahamutAppbranchs(ListLinkeBahamutAppbranchsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutAppbranchsWithOptions(request, runtime);
    }

    public ListLinkeBahamutAppcustomciconfigResponse listLinkeBahamutAppcustomciconfigWithOptions(ListLinkeBahamutAppcustomciconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutAppcustomciconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutAppcustomciconfigResponse());
    }

    public ListLinkeBahamutAppcustomciconfigResponse listLinkeBahamutAppcustomciconfig(ListLinkeBahamutAppcustomciconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutAppcustomciconfigWithOptions(request, runtime);
    }

    public ListLinkeBahamutAppdatalistmetatenantidResponse listLinkeBahamutAppdatalistmetatenantidWithOptions(ListLinkeBahamutAppdatalistmetatenantidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutAppdatalistmetatenantid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutAppdatalistmetatenantidResponse());
    }

    public ListLinkeBahamutAppdatalistmetatenantidResponse listLinkeBahamutAppdatalistmetatenantid(ListLinkeBahamutAppdatalistmetatenantidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutAppdatalistmetatenantidWithOptions(request, runtime);
    }

    public ListLinkeBahamutApplevelsResponse listLinkeBahamutApplevelsWithOptions(ListLinkeBahamutApplevelsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutApplevels", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutApplevelsResponse());
    }

    public ListLinkeBahamutApplevelsResponse listLinkeBahamutApplevels(ListLinkeBahamutApplevelsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutApplevelsWithOptions(request, runtime);
    }

    public ListLinkeBahamutAppstacksResponse listLinkeBahamutAppstacksWithOptions(ListLinkeBahamutAppstacksRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutAppstacks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutAppstacksResponse());
    }

    public ListLinkeBahamutAppstacksResponse listLinkeBahamutAppstacks(ListLinkeBahamutAppstacksRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutAppstacksWithOptions(request, runtime);
    }

    public ListLinkeBahamutApptodotaskResponse listLinkeBahamutApptodotaskWithOptions(ListLinkeBahamutApptodotaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutApptodotask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutApptodotaskResponse());
    }

    public ListLinkeBahamutApptodotaskResponse listLinkeBahamutApptodotask(ListLinkeBahamutApptodotaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutApptodotaskWithOptions(request, runtime);
    }

    public ListLinkeBahamutBuildconfigregistryResponse listLinkeBahamutBuildconfigregistryWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutBuildconfigregistry", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutBuildconfigregistryResponse());
    }

    public ListLinkeBahamutBuildconfigregistryResponse listLinkeBahamutBuildconfigregistry() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutBuildconfigregistryWithOptions(runtime);
    }

    public ListLinkeBahamutGuardsResponse listLinkeBahamutGuardsWithOptions(ListLinkeBahamutGuardsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutGuards", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutGuardsResponse());
    }

    public ListLinkeBahamutGuardsResponse listLinkeBahamutGuards(ListLinkeBahamutGuardsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutGuardsWithOptions(request, runtime);
    }

    public ListLinkeBahamutMyreleasesResponse listLinkeBahamutMyreleasesWithOptions(ListLinkeBahamutMyreleasesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutMyreleases", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutMyreleasesResponse());
    }

    public ListLinkeBahamutMyreleasesResponse listLinkeBahamutMyreleases(ListLinkeBahamutMyreleasesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutMyreleasesWithOptions(request, runtime);
    }

    public ListLinkeBahamutTaskResponse listLinkeBahamutTaskWithOptions(ListLinkeBahamutTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutTaskResponse());
    }

    public ListLinkeBahamutTaskResponse listLinkeBahamutTask(ListLinkeBahamutTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutTaskWithOptions(request, runtime);
    }

    public ListLinkeBahamutVcsmembersResponse listLinkeBahamutVcsmembersWithOptions(ListLinkeBahamutVcsmembersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutVcsmembers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutVcsmembersResponse());
    }

    public ListLinkeBahamutVcsmembersResponse listLinkeBahamutVcsmembers(ListLinkeBahamutVcsmembersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutVcsmembersWithOptions(request, runtime);
    }

    public ListLinkeBahamutWorkspacesResponse listLinkeBahamutWorkspacesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListLinkeBahamutWorkspaces", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeBahamutWorkspacesResponse());
    }

    public ListLinkeBahamutWorkspacesResponse listLinkeBahamutWorkspaces() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeBahamutWorkspacesWithOptions(runtime);
    }

    public ListLinkelinkflowLinkflowAttachmentsResponse listLinkelinkflowLinkflowAttachmentsWithOptions(ListLinkelinkflowLinkflowAttachmentsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkelinkflowLinkflowAttachments", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkelinkflowLinkflowAttachmentsResponse());
    }

    public ListLinkelinkflowLinkflowAttachmentsResponse listLinkelinkflowLinkflowAttachments(ListLinkelinkflowLinkflowAttachmentsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkelinkflowLinkflowAttachmentsWithOptions(request, runtime);
    }

    public ListLinkelinkflowLinkflowProcessdefinitionResponse listLinkelinkflowLinkflowProcessdefinitionWithOptions(ListLinkelinkflowLinkflowProcessdefinitionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkelinkflowLinkflowProcessdefinition", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkelinkflowLinkflowProcessdefinitionResponse());
    }

    public ListLinkelinkflowLinkflowProcessdefinitionResponse listLinkelinkflowLinkflowProcessdefinition(ListLinkelinkflowLinkflowProcessdefinitionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkelinkflowLinkflowProcessdefinitionWithOptions(request, runtime);
    }

    public ListLinkeLinklogKnowledgeResponse listLinkeLinklogKnowledgeWithOptions(ListLinkeLinklogKnowledgeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinklogKnowledge", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinklogKnowledgeResponse());
    }

    public ListLinkeLinklogKnowledgeResponse listLinkeLinklogKnowledge(ListLinkeLinklogKnowledgeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinklogKnowledgeWithOptions(request, runtime);
    }

    public ListLinkeLinklogStorelistnopageResponse listLinkeLinklogStorelistnopageWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinklogStorelistnopage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinklogStorelistnopageResponse());
    }

    public ListLinkeLinklogStorelistnopageResponse listLinkeLinklogStorelistnopage() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinklogStorelistnopageWithOptions(runtime);
    }

    public ListLinkeLinklogStoresResponse listLinkeLinklogStoresWithOptions(ListLinkeLinklogStoresRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinklogStores", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinklogStoresResponse());
    }

    public ListLinkeLinklogStoresResponse listLinkeLinklogStores(ListLinkeLinklogStoresRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinklogStoresWithOptions(request, runtime);
    }

    public ListLinkeLinktCustomfieldsResponse listLinkeLinktCustomfieldsWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktCustomfields", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktCustomfieldsResponse());
    }

    public ListLinkeLinktCustomfieldsResponse listLinkeLinktCustomfields() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktCustomfieldsWithOptions(runtime);
    }

    public ListLinkeLinktDynamiccustomfieldoptionsResponse listLinkeLinktDynamiccustomfieldoptionsWithOptions(ListLinkeLinktDynamiccustomfieldoptionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktDynamiccustomfieldoptions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktDynamiccustomfieldoptionsResponse());
    }

    public ListLinkeLinktDynamiccustomfieldoptionsResponse listLinkeLinktDynamiccustomfieldoptions(ListLinkeLinktDynamiccustomfieldoptionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktDynamiccustomfieldoptionsWithOptions(request, runtime);
    }

    public ListLinkeLinktGlobaltemplatedetailResponse listLinkeLinktGlobaltemplatedetailWithOptions(ListLinkeLinktGlobaltemplatedetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktGlobaltemplatedetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktGlobaltemplatedetailResponse());
    }

    public ListLinkeLinktGlobaltemplatedetailResponse listLinkeLinktGlobaltemplatedetail(ListLinkeLinktGlobaltemplatedetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktGlobaltemplatedetailWithOptions(request, runtime);
    }

    public ListLinkeLinktIterationmeetingResponse listLinkeLinktIterationmeetingWithOptions(ListLinkeLinktIterationmeetingRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktIterationmeeting", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktIterationmeetingResponse());
    }

    public ListLinkeLinktIterationmeetingResponse listLinkeLinktIterationmeeting(ListLinkeLinktIterationmeetingRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktIterationmeetingWithOptions(request, runtime);
    }

    public ListLinkeLinktOperationlogsResponse listLinkeLinktOperationlogsWithOptions(ListLinkeLinktOperationlogsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktOperationlogs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktOperationlogsResponse());
    }

    public ListLinkeLinktOperationlogsResponse listLinkeLinktOperationlogs(ListLinkeLinktOperationlogsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktOperationlogsWithOptions(request, runtime);
    }

    public ListLinkeLinktProjectcustomfieldsResponse listLinkeLinktProjectcustomfieldsWithOptions(ListLinkeLinktProjectcustomfieldsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktProjectcustomfields", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktProjectcustomfieldsResponse());
    }

    public ListLinkeLinktProjectcustomfieldsResponse listLinkeLinktProjectcustomfields(ListLinkeLinktProjectcustomfieldsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktProjectcustomfieldsWithOptions(request, runtime);
    }

    public ListLinkeLinktProjectmodulesResponse listLinkeLinktProjectmodulesWithOptions(ListLinkeLinktProjectmodulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktProjectmodules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktProjectmodulesResponse());
    }

    public ListLinkeLinktProjectmodulesResponse listLinkeLinktProjectmodules(ListLinkeLinktProjectmodulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktProjectmodulesWithOptions(request, runtime);
    }

    public ListLinkeLinktProjectongoingiterationsResponse listLinkeLinktProjectongoingiterationsWithOptions(ListLinkeLinktProjectongoingiterationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktProjectongoingiterations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktProjectongoingiterationsResponse());
    }

    public ListLinkeLinktProjectongoingiterationsResponse listLinkeLinktProjectongoingiterations(ListLinkeLinktProjectongoingiterationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktProjectongoingiterationsWithOptions(request, runtime);
    }

    public ListLinkeLinktProjecttemplatesResponse listLinkeLinktProjecttemplatesWithOptions(ListLinkeLinktProjecttemplatesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktProjecttemplates", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktProjecttemplatesResponse());
    }

    public ListLinkeLinktProjecttemplatesResponse listLinkeLinktProjecttemplates(ListLinkeLinktProjecttemplatesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktProjecttemplatesWithOptions(request, runtime);
    }

    public ListLinkeLinktProjectusedcustomfieldsResponse listLinkeLinktProjectusedcustomfieldsWithOptions(ListLinkeLinktProjectusedcustomfieldsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktProjectusedcustomfields", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktProjectusedcustomfieldsResponse());
    }

    public ListLinkeLinktProjectusedcustomfieldsResponse listLinkeLinktProjectusedcustomfields(ListLinkeLinktProjectusedcustomfieldsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktProjectusedcustomfieldsWithOptions(request, runtime);
    }

    public ListLinkeLinktRelatedlinkeiterationsResponse listLinkeLinktRelatedlinkeiterationsWithOptions(ListLinkeLinktRelatedlinkeiterationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktRelatedlinkeiterations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktRelatedlinkeiterationsResponse());
    }

    public ListLinkeLinktRelatedlinkeiterationsResponse listLinkeLinktRelatedlinkeiterations(ListLinkeLinktRelatedlinkeiterationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktRelatedlinkeiterationsWithOptions(request, runtime);
    }

    public ListLinkeLinktTemplatecustomfieldsResponse listLinkeLinktTemplatecustomfieldsWithOptions(ListLinkeLinktTemplatecustomfieldsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktTemplatecustomfields", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktTemplatecustomfieldsResponse());
    }

    public ListLinkeLinktTemplatecustomfieldsResponse listLinkeLinktTemplatecustomfields(ListLinkeLinktTemplatecustomfieldsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktTemplatecustomfieldsWithOptions(request, runtime);
    }

    public ListLinkeLinktTemplateselectablecustomfieldsResponse listLinkeLinktTemplateselectablecustomfieldsWithOptions(ListLinkeLinktTemplateselectablecustomfieldsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktTemplateselectablecustomfields", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktTemplateselectablecustomfieldsResponse());
    }

    public ListLinkeLinktTemplateselectablecustomfieldsResponse listLinkeLinktTemplateselectablecustomfields(ListLinkeLinktTemplateselectablecustomfieldsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktTemplateselectablecustomfieldsWithOptions(request, runtime);
    }

    public ListLinkeLinktUnmatchedstatusbetweentemplateResponse listLinkeLinktUnmatchedstatusbetweentemplateWithOptions(ListLinkeLinktUnmatchedstatusbetweentemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListLinkeLinktUnmatchedstatusbetweentemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListLinkeLinktUnmatchedstatusbetweentemplateResponse());
    }

    public ListLinkeLinktUnmatchedstatusbetweentemplateResponse listLinkeLinktUnmatchedstatusbetweentemplate(ListLinkeLinktUnmatchedstatusbetweentemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listLinkeLinktUnmatchedstatusbetweentemplateWithOptions(request, runtime);
    }

    public ListMqSofamqCellResponse listMqSofamqCellWithOptions(ListMqSofamqCellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMqSofamqCell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMqSofamqCellResponse());
    }

    public ListMqSofamqCellResponse listMqSofamqCell(ListMqSofamqCellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMqSofamqCellWithOptions(request, runtime);
    }

    public ListMqSofamqClusterResponse listMqSofamqClusterWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListMqSofamqCluster", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMqSofamqClusterResponse());
    }

    public ListMqSofamqClusterResponse listMqSofamqCluster() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMqSofamqClusterWithOptions(runtime);
    }

    public ListMqSofamqDatacenterResponse listMqSofamqDatacenterWithOptions(ListMqSofamqDatacenterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMqSofamqDatacenter", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMqSofamqDatacenterResponse());
    }

    public ListMqSofamqDatacenterResponse listMqSofamqDatacenter(ListMqSofamqDatacenterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMqSofamqDatacenterWithOptions(request, runtime);
    }

    public ListMqSofamqGroupResponse listMqSofamqGroupWithOptions(ListMqSofamqGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMqSofamqGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMqSofamqGroupResponse());
    }

    public ListMqSofamqGroupResponse listMqSofamqGroup(ListMqSofamqGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMqSofamqGroupWithOptions(request, runtime);
    }

    public ListMqSofamqNamespaceResponse listMqSofamqNamespaceWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListMqSofamqNamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMqSofamqNamespaceResponse());
    }

    public ListMqSofamqNamespaceResponse listMqSofamqNamespace() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMqSofamqNamespaceWithOptions(runtime);
    }

    public ListMqSofamqNodeResponse listMqSofamqNodeWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListMqSofamqNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMqSofamqNodeResponse());
    }

    public ListMqSofamqNodeResponse listMqSofamqNode() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMqSofamqNodeWithOptions(runtime);
    }

    public ListMqSofamqRoomResponse listMqSofamqRoomWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("ListMqSofamqRoom", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMqSofamqRoomResponse());
    }

    public ListMqSofamqRoomResponse listMqSofamqRoom() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMqSofamqRoomWithOptions(runtime);
    }

    public ListMqSofamqRouterResponse listMqSofamqRouterWithOptions(ListMqSofamqRouterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMqSofamqRouter", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMqSofamqRouterResponse());
    }

    public ListMqSofamqRouterResponse listMqSofamqRouter(ListMqSofamqRouterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMqSofamqRouterWithOptions(request, runtime);
    }

    public ListMqSofamqRouterconfigResponse listMqSofamqRouterconfigWithOptions(ListMqSofamqRouterconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMqSofamqRouterconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMqSofamqRouterconfigResponse());
    }

    public ListMqSofamqRouterconfigResponse listMqSofamqRouterconfig(ListMqSofamqRouterconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMqSofamqRouterconfigWithOptions(request, runtime);
    }

    public ListMqSofamqTopicResponse listMqSofamqTopicWithOptions(ListMqSofamqTopicRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMqSofamqTopic", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMqSofamqTopicResponse());
    }

    public ListMqSofamqTopicResponse listMqSofamqTopic(ListMqSofamqTopicRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMqSofamqTopicWithOptions(request, runtime);
    }

    public ListMqSofamqTraceResponse listMqSofamqTraceWithOptions(ListMqSofamqTraceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMqSofamqTrace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMqSofamqTraceResponse());
    }

    public ListMqSofamqTraceResponse listMqSofamqTrace(ListMqSofamqTraceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMqSofamqTraceWithOptions(request, runtime);
    }

    public ListMqSofamqWarnResponse listMqSofamqWarnWithOptions(ListMqSofamqWarnRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMqSofamqWarn", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMqSofamqWarnResponse());
    }

    public ListMqSofamqWarnResponse listMqSofamqWarn(ListMqSofamqWarnRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMqSofamqWarnWithOptions(request, runtime);
    }

    public ListMqSofamqWarnHistoryResponse listMqSofamqWarnHistoryWithOptions(ListMqSofamqWarnHistoryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMqSofamqWarnHistory", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMqSofamqWarnHistoryResponse());
    }

    public ListMqSofamqWarnHistoryResponse listMqSofamqWarnHistory(ListMqSofamqWarnHistoryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMqSofamqWarnHistoryWithOptions(request, runtime);
    }

    public ListMsDrmDataCellsResponse listMsDrmDataCellsWithOptions(ListMsDrmDataCellsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsDrmDataCells", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsDrmDataCellsResponse());
    }

    public ListMsDrmDataCellsResponse listMsDrmDataCells(ListMsDrmDataCellsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsDrmDataCellsWithOptions(request, runtime);
    }

    public ListMsDrmLogsResponse listMsDrmLogsWithOptions(ListMsDrmLogsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsDrmLogs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsDrmLogsResponse());
    }

    public ListMsDrmLogsResponse listMsDrmLogs(ListMsDrmLogsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsDrmLogsWithOptions(request, runtime);
    }

    public ListMSDssIdcResponse listMSDssIdcWithOptions(ListMSDssIdcRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMSDssIdc", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMSDssIdcResponse());
    }

    public ListMSDssIdcResponse listMSDssIdc(ListMSDssIdcRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMSDssIdcWithOptions(request, runtime);
    }

    public ListMsGuardianHistoryRuleConfigsResponse listMsGuardianHistoryRuleConfigsWithOptions(ListMsGuardianHistoryRuleConfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsGuardianHistoryRuleConfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsGuardianHistoryRuleConfigsResponse());
    }

    public ListMsGuardianHistoryRuleConfigsResponse listMsGuardianHistoryRuleConfigs(ListMsGuardianHistoryRuleConfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsGuardianHistoryRuleConfigsWithOptions(request, runtime);
    }

    public ListMsSgAppsResponse listMsSgAppsWithOptions(ListMsSgAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgAppsResponse());
    }

    public ListMsSgAppsResponse listMsSgApps(ListMsSgAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgAppsWithOptions(request, runtime);
    }

    public ListMsSgAuditLogsResponse listMsSgAuditLogsWithOptions(ListMsSgAuditLogsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgAuditLogs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgAuditLogsResponse());
    }

    public ListMsSgAuditLogsResponse listMsSgAuditLogs(ListMsSgAuditLogsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgAuditLogsWithOptions(request, runtime);
    }

    public ListMsSgAuthRuleActiveAppNamesResponse listMsSgAuthRuleActiveAppNamesWithOptions(ListMsSgAuthRuleActiveAppNamesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgAuthRuleActiveAppNames", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgAuthRuleActiveAppNamesResponse());
    }

    public ListMsSgAuthRuleActiveAppNamesResponse listMsSgAuthRuleActiveAppNames(ListMsSgAuthRuleActiveAppNamesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgAuthRuleActiveAppNamesWithOptions(request, runtime);
    }

    public ListMsSgAuthRuleActiveDataIdsResponse listMsSgAuthRuleActiveDataIdsWithOptions(ListMsSgAuthRuleActiveDataIdsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgAuthRuleActiveDataIds", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgAuthRuleActiveDataIdsResponse());
    }

    public ListMsSgAuthRuleActiveDataIdsResponse listMsSgAuthRuleActiveDataIds(ListMsSgAuthRuleActiveDataIdsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgAuthRuleActiveDataIdsWithOptions(request, runtime);
    }

    public ListMsSgAuthRuleAppNamesResponse listMsSgAuthRuleAppNamesWithOptions(ListMsSgAuthRuleAppNamesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgAuthRuleAppNames", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgAuthRuleAppNamesResponse());
    }

    public ListMsSgAuthRuleAppNamesResponse listMsSgAuthRuleAppNames(ListMsSgAuthRuleAppNamesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgAuthRuleAppNamesWithOptions(request, runtime);
    }

    public ListMsSgAuthRuleDataIdsResponse listMsSgAuthRuleDataIdsWithOptions(ListMsSgAuthRuleDataIdsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgAuthRuleDataIds", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgAuthRuleDataIdsResponse());
    }

    public ListMsSgAuthRuleDataIdsResponse listMsSgAuthRuleDataIds(ListMsSgAuthRuleDataIdsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgAuthRuleDataIdsWithOptions(request, runtime);
    }

    public ListMsSgAuthRuleGroupAppsResponse listMsSgAuthRuleGroupAppsWithOptions(ListMsSgAuthRuleGroupAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgAuthRuleGroupApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgAuthRuleGroupAppsResponse());
    }

    public ListMsSgAuthRuleGroupAppsResponse listMsSgAuthRuleGroupApps(ListMsSgAuthRuleGroupAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgAuthRuleGroupAppsWithOptions(request, runtime);
    }

    public ListMsSgAuthRuleGroupsResponse listMsSgAuthRuleGroupsWithOptions(ListMsSgAuthRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgAuthRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgAuthRuleGroupsResponse());
    }

    public ListMsSgAuthRuleGroupsResponse listMsSgAuthRuleGroups(ListMsSgAuthRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgAuthRuleGroupsWithOptions(request, runtime);
    }

    public ListMsSgAuthRuleGroupServicesResponse listMsSgAuthRuleGroupServicesWithOptions(ListMsSgAuthRuleGroupServicesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgAuthRuleGroupServices", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgAuthRuleGroupServicesResponse());
    }

    public ListMsSgAuthRuleGroupServicesResponse listMsSgAuthRuleGroupServices(ListMsSgAuthRuleGroupServicesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgAuthRuleGroupServicesWithOptions(request, runtime);
    }

    public ListMsSgFaultInjectAllAppsResponse listMsSgFaultInjectAllAppsWithOptions(ListMsSgFaultInjectAllAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgFaultInjectAllApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgFaultInjectAllAppsResponse());
    }

    public ListMsSgFaultInjectAllAppsResponse listMsSgFaultInjectAllApps(ListMsSgFaultInjectAllAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgFaultInjectAllAppsWithOptions(request, runtime);
    }

    public ListMsSgFaultInjectAllServicesResponse listMsSgFaultInjectAllServicesWithOptions(ListMsSgFaultInjectAllServicesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgFaultInjectAllServices", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgFaultInjectAllServicesResponse());
    }

    public ListMsSgFaultInjectAllServicesResponse listMsSgFaultInjectAllServices(ListMsSgFaultInjectAllServicesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgFaultInjectAllServicesWithOptions(request, runtime);
    }

    public ListMsSgFaultInjectAppsResponse listMsSgFaultInjectAppsWithOptions(ListMsSgFaultInjectAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgFaultInjectApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgFaultInjectAppsResponse());
    }

    public ListMsSgFaultInjectAppsResponse listMsSgFaultInjectApps(ListMsSgFaultInjectAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgFaultInjectAppsWithOptions(request, runtime);
    }

    public ListMsSgFaultInjectRulesResponse listMsSgFaultInjectRulesWithOptions(ListMsSgFaultInjectRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgFaultInjectRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgFaultInjectRulesResponse());
    }

    public ListMsSgFaultInjectRulesResponse listMsSgFaultInjectRules(ListMsSgFaultInjectRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgFaultInjectRulesWithOptions(request, runtime);
    }

    public ListMsSgFaultToleranceAppsResponse listMsSgFaultToleranceAppsWithOptions(ListMsSgFaultToleranceAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgFaultToleranceApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgFaultToleranceAppsResponse());
    }

    public ListMsSgFaultToleranceAppsResponse listMsSgFaultToleranceApps(ListMsSgFaultToleranceAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgFaultToleranceAppsWithOptions(request, runtime);
    }

    public ListMsSgFaultToleranceRulesResponse listMsSgFaultToleranceRulesWithOptions(ListMsSgFaultToleranceRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgFaultToleranceRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgFaultToleranceRulesResponse());
    }

    public ListMsSgFaultToleranceRulesResponse listMsSgFaultToleranceRules(ListMsSgFaultToleranceRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgFaultToleranceRulesWithOptions(request, runtime);
    }

    public ListMsSgRouterRuleAllAppsResponse listMsSgRouterRuleAllAppsWithOptions(ListMsSgRouterRuleAllAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgRouterRuleAllApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgRouterRuleAllAppsResponse());
    }

    public ListMsSgRouterRuleAllAppsResponse listMsSgRouterRuleAllApps(ListMsSgRouterRuleAllAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgRouterRuleAllAppsWithOptions(request, runtime);
    }

    public ListMsSgRouterRuleAllServicesResponse listMsSgRouterRuleAllServicesWithOptions(ListMsSgRouterRuleAllServicesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgRouterRuleAllServices", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgRouterRuleAllServicesResponse());
    }

    public ListMsSgRouterRuleAllServicesResponse listMsSgRouterRuleAllServices(ListMsSgRouterRuleAllServicesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgRouterRuleAllServicesWithOptions(request, runtime);
    }

    public ListMsSgRouterRuleGroupAppsResponse listMsSgRouterRuleGroupAppsWithOptions(ListMsSgRouterRuleGroupAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgRouterRuleGroupApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgRouterRuleGroupAppsResponse());
    }

    public ListMsSgRouterRuleGroupAppsResponse listMsSgRouterRuleGroupApps(ListMsSgRouterRuleGroupAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgRouterRuleGroupAppsWithOptions(request, runtime);
    }

    public ListMsSgRouterRuleGroupsResponse listMsSgRouterRuleGroupsWithOptions(ListMsSgRouterRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgRouterRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgRouterRuleGroupsResponse());
    }

    public ListMsSgRouterRuleGroupsResponse listMsSgRouterRuleGroups(ListMsSgRouterRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgRouterRuleGroupsWithOptions(request, runtime);
    }

    public ListMsSgRouterRuleVersionsResponse listMsSgRouterRuleVersionsWithOptions(ListMsSgRouterRuleVersionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgRouterRuleVersions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgRouterRuleVersionsResponse());
    }

    public ListMsSgRouterRuleVersionsResponse listMsSgRouterRuleVersions(ListMsSgRouterRuleVersionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgRouterRuleVersionsWithOptions(request, runtime);
    }

    public ListMsSgServiceAppsResponse listMsSgServiceAppsWithOptions(ListMsSgServiceAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgServiceApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgServiceAppsResponse());
    }

    public ListMsSgServiceAppsResponse listMsSgServiceApps(ListMsSgServiceAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgServiceAppsWithOptions(request, runtime);
    }

    public ListMsSgServicePubsResponse listMsSgServicePubsWithOptions(ListMsSgServicePubsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgServicePubs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgServicePubsResponse());
    }

    public ListMsSgServicePubsResponse listMsSgServicePubs(ListMsSgServicePubsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgServicePubsWithOptions(request, runtime);
    }

    public ListMsSgServiceRateLimitRulesResponse listMsSgServiceRateLimitRulesWithOptions(ListMsSgServiceRateLimitRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgServiceRateLimitRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgServiceRateLimitRulesResponse());
    }

    public ListMsSgServiceRateLimitRulesResponse listMsSgServiceRateLimitRules(ListMsSgServiceRateLimitRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgServiceRateLimitRulesWithOptions(request, runtime);
    }

    public ListMsSgServiceSubsResponse listMsSgServiceSubsWithOptions(ListMsSgServiceSubsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgServiceSubs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgServiceSubsResponse());
    }

    public ListMsSgServiceSubsResponse listMsSgServiceSubs(ListMsSgServiceSubsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgServiceSubsWithOptions(request, runtime);
    }

    public ListMsSgUndisplayComponentsResponse listMsSgUndisplayComponentsWithOptions(ListMsSgUndisplayComponentsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListMsSgUndisplayComponents", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListMsSgUndisplayComponentsResponse());
    }

    public ListMsSgUndisplayComponentsResponse listMsSgUndisplayComponents(ListMsSgUndisplayComponentsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listMsSgUndisplayComponentsWithOptions(request, runtime);
    }

    public ListRmsCloudmeshAppservicesResponse listRmsCloudmeshAppservicesWithOptions(ListRmsCloudmeshAppservicesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListRmsCloudmeshAppservices", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListRmsCloudmeshAppservicesResponse());
    }

    public ListRmsCloudmeshAppservicesResponse listRmsCloudmeshAppservices(ListRmsCloudmeshAppservicesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listRmsCloudmeshAppservicesWithOptions(request, runtime);
    }

    public ListSofaMsSgAuthRuleGroupsResponse listSofaMsSgAuthRuleGroupsWithOptions(ListSofaMsSgAuthRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ListSofaMsSgAuthRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ListSofaMsSgAuthRuleGroupsResponse());
    }

    public ListSofaMsSgAuthRuleGroupsResponse listSofaMsSgAuthRuleGroups(ListSofaMsSgAuthRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.listSofaMsSgAuthRuleGroupsWithOptions(request, runtime);
    }

    public LockTSActivityInstanceResponse lockTSActivityInstanceWithOptions(LockTSActivityInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("LockTSActivityInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new LockTSActivityInstanceResponse());
    }

    public LockTSActivityInstanceResponse lockTSActivityInstance(LockTSActivityInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.lockTSActivityInstanceWithOptions(request, runtime);
    }

    public ModifyAppServiceBuildpackRelationResponse modifyAppServiceBuildpackRelationWithOptions(ModifyAppServiceBuildpackRelationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ModifyAppServiceBuildpackRelation", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ModifyAppServiceBuildpackRelationResponse());
    }

    public ModifyAppServiceBuildpackRelationResponse modifyAppServiceBuildpackRelation(ModifyAppServiceBuildpackRelationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.modifyAppServiceBuildpackRelationWithOptions(request, runtime);
    }

    public ModifyAppServiceEnvParamsResponse modifyAppServiceEnvParamsWithOptions(ModifyAppServiceEnvParamsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ModifyAppServiceEnvParams", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ModifyAppServiceEnvParamsResponse());
    }

    public ModifyAppServiceEnvParamsResponse modifyAppServiceEnvParams(ModifyAppServiceEnvParamsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.modifyAppServiceEnvParamsWithOptions(request, runtime);
    }

    public ModifyBuildpackResponse modifyBuildpackWithOptions(ModifyBuildpackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ModifyBuildpack", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ModifyBuildpackResponse());
    }

    public ModifyBuildpackResponse modifyBuildpack(ModifyBuildpackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.modifyBuildpackWithOptions(request, runtime);
    }

    public ModifyBuildpackPackagesStatusResponse modifyBuildpackPackagesStatusWithOptions(ModifyBuildpackPackagesStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ModifyBuildpackPackagesStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ModifyBuildpackPackagesStatusResponse());
    }

    public ModifyBuildpackPackagesStatusResponse modifyBuildpackPackagesStatus(ModifyBuildpackPackagesStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.modifyBuildpackPackagesStatusWithOptions(request, runtime);
    }

    public ModifyClriskDataNodeResponse modifyClriskDataNodeWithOptions(ModifyClriskDataNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ModifyClriskDataNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ModifyClriskDataNodeResponse());
    }

    public ModifyClriskDataNodeResponse modifyClriskDataNode(ModifyClriskDataNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.modifyClriskDataNodeWithOptions(request, runtime);
    }

    public MountGWApiGroupAuthUserResponse mountGWApiGroupAuthUserWithOptions(MountGWApiGroupAuthUserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("MountGWApiGroupAuthUser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new MountGWApiGroupAuthUserResponse());
    }

    public MountGWApiGroupAuthUserResponse mountGWApiGroupAuthUser(MountGWApiGroupAuthUserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.mountGWApiGroupAuthUserWithOptions(request, runtime);
    }

    public MountLinkedeploycoreDeploycoreAppserviceapplyResponse mountLinkedeploycoreDeploycoreAppserviceapplyWithOptions(MountLinkedeploycoreDeploycoreAppserviceapplyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("MountLinkedeploycoreDeploycoreAppserviceapply", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new MountLinkedeploycoreDeploycoreAppserviceapplyResponse());
    }

    public MountLinkedeploycoreDeploycoreAppserviceapplyResponse mountLinkedeploycoreDeploycoreAppserviceapply(MountLinkedeploycoreDeploycoreAppserviceapplyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.mountLinkedeploycoreDeploycoreAppserviceapplyWithOptions(request, runtime);
    }

    public MountLinkedeploycoreDeploycoreAppservicebatchapplyResponse mountLinkedeploycoreDeploycoreAppservicebatchapplyWithOptions(MountLinkedeploycoreDeploycoreAppservicebatchapplyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("MountLinkedeploycoreDeploycoreAppservicebatchapply", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new MountLinkedeploycoreDeploycoreAppservicebatchapplyResponse());
    }

    public MountLinkedeploycoreDeploycoreAppservicebatchapplyResponse mountLinkedeploycoreDeploycoreAppservicebatchapply(MountLinkedeploycoreDeploycoreAppservicebatchapplyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.mountLinkedeploycoreDeploycoreAppservicebatchapplyWithOptions(request, runtime);
    }

    public OfflineClriskModelResponse offlineClriskModelWithOptions(OfflineClriskModelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("OfflineClriskModel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new OfflineClriskModelResponse());
    }

    public OfflineClriskModelResponse offlineClriskModel(OfflineClriskModelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.offlineClriskModelWithOptions(request, runtime);
    }

    public OfflineMsSgServicePublishersResponse offlineMsSgServicePublishersWithOptions(OfflineMsSgServicePublishersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("OfflineMsSgServicePublishers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new OfflineMsSgServicePublishersResponse());
    }

    public OfflineMsSgServicePublishersResponse offlineMsSgServicePublishers(OfflineMsSgServicePublishersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.offlineMsSgServicePublishersWithOptions(request, runtime);
    }

    public OfflineODPSchemasResponse offlineODPSchemasWithOptions(OfflineODPSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("OfflineODPSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new OfflineODPSchemasResponse());
    }

    public OfflineODPSchemasResponse offlineODPSchemas(OfflineODPSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.offlineODPSchemasWithOptions(request, runtime);
    }

    public OfflineTSJobResponse offlineTSJobWithOptions(OfflineTSJobRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("OfflineTSJob", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new OfflineTSJobResponse());
    }

    public OfflineTSJobResponse offlineTSJob(OfflineTSJobRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.offlineTSJobWithOptions(request, runtime);
    }

    public OfflineTSTopologyVersionResponse offlineTSTopologyVersionWithOptions(OfflineTSTopologyVersionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("OfflineTSTopologyVersion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new OfflineTSTopologyVersionResponse());
    }

    public OfflineTSTopologyVersionResponse offlineTSTopologyVersion(OfflineTSTopologyVersionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.offlineTSTopologyVersionWithOptions(request, runtime);
    }

    public OnlineBuildpackResponse onlineBuildpackWithOptions(OnlineBuildpackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("OnlineBuildpack", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new OnlineBuildpackResponse());
    }

    public OnlineBuildpackResponse onlineBuildpack(OnlineBuildpackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.onlineBuildpackWithOptions(request, runtime);
    }

    public OnlineClriskModelResponse onlineClriskModelWithOptions(OnlineClriskModelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("OnlineClriskModel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new OnlineClriskModelResponse());
    }

    public OnlineClriskModelResponse onlineClriskModel(OnlineClriskModelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.onlineClriskModelWithOptions(request, runtime);
    }

    public OnlineODPSchemasResponse onlineODPSchemasWithOptions(OnlineODPSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("OnlineODPSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new OnlineODPSchemasResponse());
    }

    public OnlineODPSchemasResponse onlineODPSchemas(OnlineODPSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.onlineODPSchemasWithOptions(request, runtime);
    }

    public OnlineTSTopologyVersionResponse onlineTSTopologyVersionWithOptions(OnlineTSTopologyVersionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("OnlineTSTopologyVersion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new OnlineTSTopologyVersionResponse());
    }

    public OnlineTSTopologyVersionResponse onlineTSTopologyVersion(OnlineTSTopologyVersionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.onlineTSTopologyVersionWithOptions(request, runtime);
    }

    public OpenAKSClusterMeshResponse openAKSClusterMeshWithOptions(OpenAKSClusterMeshRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("OpenAKSClusterMesh", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new OpenAKSClusterMeshResponse());
    }

    public OpenAKSClusterMeshResponse openAKSClusterMesh(OpenAKSClusterMeshRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.openAKSClusterMeshWithOptions(request, runtime);
    }

    public OpenODPInstancesPublicAccessResponse openODPInstancesPublicAccessWithOptions(OpenODPInstancesPublicAccessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("OpenODPInstancesPublicAccess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new OpenODPInstancesPublicAccessResponse());
    }

    public OpenODPInstancesPublicAccessResponse openODPInstancesPublicAccess(OpenODPInstancesPublicAccessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.openODPInstancesPublicAccessWithOptions(request, runtime);
    }

    public OpenODPSqlAuditResponse openODPSqlAuditWithOptions(OpenODPSqlAuditRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("OpenODPSqlAudit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new OpenODPSqlAuditResponse());
    }

    public OpenODPSqlAuditResponse openODPSqlAudit(OpenODPSqlAuditRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.openODPSqlAuditWithOptions(request, runtime);
    }

    public PushDTXWhitelistResponse pushDTXWhitelistWithOptions(PushDTXWhitelistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("PushDTXWhitelist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new PushDTXWhitelistResponse());
    }

    public PushDTXWhitelistResponse pushDTXWhitelist(PushDTXWhitelistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.pushDTXWhitelistWithOptions(request, runtime);
    }

    public PushLDCFlowRuleResponse pushLDCFlowRuleWithOptions(PushLDCFlowRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("PushLDCFlowRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new PushLDCFlowRuleResponse());
    }

    public PushLDCFlowRuleResponse pushLDCFlowRule(PushLDCFlowRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.pushLDCFlowRuleWithOptions(request, runtime);
    }

    public PushLinkeBahamutSubmitreleaeinmultienvResponse pushLinkeBahamutSubmitreleaeinmultienvWithOptions(PushLinkeBahamutSubmitreleaeinmultienvRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("PushLinkeBahamutSubmitreleaeinmultienv", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new PushLinkeBahamutSubmitreleaeinmultienvResponse());
    }

    public PushLinkeBahamutSubmitreleaeinmultienvResponse pushLinkeBahamutSubmitreleaeinmultienv(PushLinkeBahamutSubmitreleaeinmultienvRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.pushLinkeBahamutSubmitreleaeinmultienvWithOptions(request, runtime);
    }

    public PushLinkeBahamutSubmitreleasebyenvResponse pushLinkeBahamutSubmitreleasebyenvWithOptions(PushLinkeBahamutSubmitreleasebyenvRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("PushLinkeBahamutSubmitreleasebyenv", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new PushLinkeBahamutSubmitreleasebyenvResponse());
    }

    public PushLinkeBahamutSubmitreleasebyenvResponse pushLinkeBahamutSubmitreleasebyenv(PushLinkeBahamutSubmitreleasebyenvRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.pushLinkeBahamutSubmitreleasebyenvWithOptions(request, runtime);
    }

    public PushLinkeBahamutWebapireleasesubmitreleasebyenvResponse pushLinkeBahamutWebapireleasesubmitreleasebyenvWithOptions(PushLinkeBahamutWebapireleasesubmitreleasebyenvRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("PushLinkeBahamutWebapireleasesubmitreleasebyenv", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new PushLinkeBahamutWebapireleasesubmitreleasebyenvResponse());
    }

    public PushLinkeBahamutWebapireleasesubmitreleasebyenvResponse pushLinkeBahamutWebapireleasesubmitreleasebyenv(PushLinkeBahamutWebapireleasesubmitreleasebyenvRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.pushLinkeBahamutWebapireleasesubmitreleasebyenvWithOptions(request, runtime);
    }

    public PushMqSofamqMessageResponse pushMqSofamqMessageWithOptions(PushMqSofamqMessageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("PushMqSofamqMessage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new PushMqSofamqMessageResponse());
    }

    public PushMqSofamqMessageResponse pushMqSofamqMessage(PushMqSofamqMessageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.pushMqSofamqMessageWithOptions(request, runtime);
    }

    public PushMsConfigDataResponse pushMsConfigDataWithOptions(PushMsConfigDataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("PushMsConfigData", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new PushMsConfigDataResponse());
    }

    public PushMsConfigDataResponse pushMsConfigData(PushMsConfigDataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.pushMsConfigDataWithOptions(request, runtime);
    }

    public PushSofamqCompleteCommodityResponse pushSofamqCompleteCommodityWithOptions(PushSofamqCompleteCommodityRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("PushSofamqCompleteCommodity", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new PushSofamqCompleteCommodityResponse());
    }

    public PushSofamqCompleteCommodityResponse pushSofamqCompleteCommodity(PushSofamqCompleteCommodityRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.pushSofamqCompleteCommodityWithOptions(request, runtime);
    }

    public PushSofamqOpenCallbackResponse pushSofamqOpenCallbackWithOptions(PushSofamqOpenCallbackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("PushSofamqOpenCallback", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new PushSofamqOpenCallbackResponse());
    }

    public PushSofamqOpenCallbackResponse pushSofamqOpenCallback(PushSofamqOpenCallbackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.pushSofamqOpenCallbackWithOptions(request, runtime);
    }

    public PushSofamqOrderVerifyResponse pushSofamqOrderVerifyWithOptions(PushSofamqOrderVerifyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("PushSofamqOrderVerify", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new PushSofamqOrderVerifyResponse());
    }

    public PushSofamqOrderVerifyResponse pushSofamqOrderVerify(PushSofamqOrderVerifyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.pushSofamqOrderVerifyWithOptions(request, runtime);
    }

    public PushSofamqPayCallbackResponse pushSofamqPayCallbackWithOptions(PushSofamqPayCallbackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("PushSofamqPayCallback", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new PushSofamqPayCallbackResponse());
    }

    public PushSofamqPayCallbackResponse pushSofamqPayCallback(PushSofamqPayCallbackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.pushSofamqPayCallbackWithOptions(request, runtime);
    }

    public PushTSSpiLifeCycleCallbackResponse pushTSSpiLifeCycleCallbackWithOptions(PushTSSpiLifeCycleCallbackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("PushTSSpiLifeCycleCallback", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new PushTSSpiLifeCycleCallbackResponse());
    }

    public PushTSSpiLifeCycleCallbackResponse pushTSSpiLifeCycleCallback(PushTSSpiLifeCycleCallbackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.pushTSSpiLifeCycleCallbackWithOptions(request, runtime);
    }

    public QueryAKSBuildPackTechStacksResponse queryAKSBuildPackTechStacksWithOptions(QueryAKSBuildPackTechStacksRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryAKSBuildPackTechStacks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryAKSBuildPackTechStacksResponse());
    }

    public QueryAKSBuildPackTechStacksResponse queryAKSBuildPackTechStacks(QueryAKSBuildPackTechStacksRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryAKSBuildPackTechStacksWithOptions(request, runtime);
    }

    public QueryAKSBuildPackTechStackVersionsResponse queryAKSBuildPackTechStackVersionsWithOptions(QueryAKSBuildPackTechStackVersionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryAKSBuildPackTechStackVersions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryAKSBuildPackTechStackVersionsResponse());
    }

    public QueryAKSBuildPackTechStackVersionsResponse queryAKSBuildPackTechStackVersions(QueryAKSBuildPackTechStackVersionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryAKSBuildPackTechStackVersionsWithOptions(request, runtime);
    }

    public QueryAKSClusterNamespaceResponse queryAKSClusterNamespaceWithOptions(QueryAKSClusterNamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryAKSClusterNamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryAKSClusterNamespaceResponse());
    }

    public QueryAKSClusterNamespaceResponse queryAKSClusterNamespace(QueryAKSClusterNamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryAKSClusterNamespaceWithOptions(request, runtime);
    }

    public QueryAllDrmAppsResponse queryAllDrmAppsWithOptions(QueryAllDrmAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryAllDrmApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryAllDrmAppsResponse());
    }

    public QueryAllDrmAppsResponse queryAllDrmApps(QueryAllDrmAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryAllDrmAppsWithOptions(request, runtime);
    }

    public QueryAllDrmCellsResponse queryAllDrmCellsWithOptions(QueryAllDrmCellsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryAllDrmCells", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryAllDrmCellsResponse());
    }

    public QueryAllDrmCellsResponse queryAllDrmCells(QueryAllDrmCellsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryAllDrmCellsWithOptions(request, runtime);
    }

    public QueryAllMsDrmLdcCellsResponse queryAllMsDrmLdcCellsWithOptions(QueryAllMsDrmLdcCellsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryAllMsDrmLdcCells", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryAllMsDrmLdcCellsResponse());
    }

    public QueryAllMsDrmLdcCellsResponse queryAllMsDrmLdcCells(QueryAllMsDrmLdcCellsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryAllMsDrmLdcCellsWithOptions(request, runtime);
    }

    public QueryCASAppserviceResponse queryCASAppserviceWithOptions(QueryCASAppserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCASAppservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCASAppserviceResponse());
    }

    public QueryCASAppserviceResponse queryCASAppservice(QueryCASAppserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCASAppserviceWithOptions(request, runtime);
    }

    public QueryCasDatabaseResponse queryCasDatabaseWithOptions(QueryCasDatabaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasDatabase", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasDatabaseResponse());
    }

    public QueryCasDatabaseResponse queryCasDatabase(QueryCasDatabaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasDatabaseWithOptions(request, runtime);
    }

    public QueryCasDatabaseAccountResponse queryCasDatabaseAccountWithOptions(QueryCasDatabaseAccountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasDatabaseAccount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasDatabaseAccountResponse());
    }

    public QueryCasDatabaseAccountResponse queryCasDatabaseAccount(QueryCasDatabaseAccountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasDatabaseAccountWithOptions(request, runtime);
    }

    public QueryCasDatabaseImportResponse queryCasDatabaseImportWithOptions(QueryCasDatabaseImportRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasDatabaseImport", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasDatabaseImportResponse());
    }

    public QueryCasDatabaseImportResponse queryCasDatabaseImport(QueryCasDatabaseImportRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasDatabaseImportWithOptions(request, runtime);
    }

    public QueryCasDatabaseQuotaResponse queryCasDatabaseQuotaWithOptions(QueryCasDatabaseQuotaRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasDatabaseQuota", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasDatabaseQuotaResponse());
    }

    public QueryCasDatabaseQuotaResponse queryCasDatabaseQuota(QueryCasDatabaseQuotaRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasDatabaseQuotaWithOptions(request, runtime);
    }

    public QueryCasDatabaseSchemaResponse queryCasDatabaseSchemaWithOptions(QueryCasDatabaseSchemaRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasDatabaseSchema", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasDatabaseSchemaResponse());
    }

    public QueryCasDatabaseSchemaResponse queryCasDatabaseSchema(QueryCasDatabaseSchemaRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasDatabaseSchemaWithOptions(request, runtime);
    }

    public QueryCasDatabaseSpecResponse queryCasDatabaseSpecWithOptions(QueryCasDatabaseSpecRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasDatabaseSpec", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasDatabaseSpecResponse());
    }

    public QueryCasDatabaseSpecResponse queryCasDatabaseSpec(QueryCasDatabaseSpecRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasDatabaseSpecWithOptions(request, runtime);
    }

    public QueryCasLoadbalanceResponse queryCasLoadbalanceWithOptions(QueryCasLoadbalanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasLoadbalance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasLoadbalanceResponse());
    }

    public QueryCasLoadbalanceResponse queryCasLoadbalance(QueryCasLoadbalanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasLoadbalanceWithOptions(request, runtime);
    }

    public QueryCasLoadbalanceImportResponse queryCasLoadbalanceImportWithOptions(QueryCasLoadbalanceImportRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasLoadbalanceImport", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasLoadbalanceImportResponse());
    }

    public QueryCasLoadbalanceImportResponse queryCasLoadbalanceImport(QueryCasLoadbalanceImportRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasLoadbalanceImportWithOptions(request, runtime);
    }

    public QueryCasLoadbalanceListenerResponse queryCasLoadbalanceListenerWithOptions(QueryCasLoadbalanceListenerRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasLoadbalanceListener", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasLoadbalanceListenerResponse());
    }

    public QueryCasLoadbalanceListenerResponse queryCasLoadbalanceListener(QueryCasLoadbalanceListenerRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasLoadbalanceListenerWithOptions(request, runtime);
    }

    public QueryCasLoadbalanceMountResponse queryCasLoadbalanceMountWithOptions(QueryCasLoadbalanceMountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasLoadbalanceMount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasLoadbalanceMountResponse());
    }

    public QueryCasLoadbalanceMountResponse queryCasLoadbalanceMount(QueryCasLoadbalanceMountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasLoadbalanceMountWithOptions(request, runtime);
    }

    public QueryCasLoadbalanceSecurityipResponse queryCasLoadbalanceSecurityipWithOptions(QueryCasLoadbalanceSecurityipRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasLoadbalanceSecurityip", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasLoadbalanceSecurityipResponse());
    }

    public QueryCasLoadbalanceSecurityipResponse queryCasLoadbalanceSecurityip(QueryCasLoadbalanceSecurityipRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasLoadbalanceSecurityipWithOptions(request, runtime);
    }

    public QueryCasRequestResponse queryCasRequestWithOptions(QueryCasRequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasRequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasRequestResponse());
    }

    public QueryCasRequestResponse queryCasRequest(QueryCasRequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasRequestWithOptions(request, runtime);
    }

    public QueryCasRequestFinaltaskResponse queryCasRequestFinaltaskWithOptions(QueryCasRequestFinaltaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasRequestFinaltask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasRequestFinaltaskResponse());
    }

    public QueryCasRequestFinaltaskResponse queryCasRequestFinaltask(QueryCasRequestFinaltaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasRequestFinaltaskWithOptions(request, runtime);
    }

    public QueryCasRequestTaskResponse queryCasRequestTaskWithOptions(QueryCasRequestTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasRequestTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasRequestTaskResponse());
    }

    public QueryCasRequestTaskResponse queryCasRequestTask(QueryCasRequestTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasRequestTaskWithOptions(request, runtime);
    }

    public QueryCASSlsLogResponse queryCASSlsLogWithOptions(QueryCASSlsLogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCASSlsLog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCASSlsLogResponse());
    }

    public QueryCASSlsLogResponse queryCASSlsLog(QueryCASSlsLogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCASSlsLogWithOptions(request, runtime);
    }

    public QueryCasTaskLogResponse queryCasTaskLogWithOptions(QueryCasTaskLogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCasTaskLog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCasTaskLogResponse());
    }

    public QueryCasTaskLogResponse queryCasTaskLog(QueryCasTaskLogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCasTaskLogWithOptions(request, runtime);
    }

    public QueryCASUserResponse queryCASUserWithOptions(QueryCASUserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryCASUser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryCASUserResponse());
    }

    public QueryCASUserResponse queryCASUser(QueryCASUserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryCASUserWithOptions(request, runtime);
    }

    public QueryDEPSWorkspacegroupResponse queryDEPSWorkspacegroupWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryDEPSWorkspacegroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDEPSWorkspacegroupResponse());
    }

    public QueryDEPSWorkspacegroupResponse queryDEPSWorkspacegroup() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDEPSWorkspacegroupWithOptions(runtime);
    }

    public QueryDmsMsgResponse queryDmsMsgWithOptions(QueryDmsMsgRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryDmsMsg", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDmsMsgResponse());
    }

    public QueryDmsMsgResponse queryDmsMsg(QueryDmsMsgRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDmsMsgWithOptions(request, runtime);
    }

    public QueryDmsUploadurlResponse queryDmsUploadurlWithOptions(QueryDmsUploadurlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryDmsUploadurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDmsUploadurlResponse());
    }

    public QueryDmsUploadurlResponse queryDmsUploadurl(QueryDmsUploadurlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDmsUploadurlWithOptions(request, runtime);
    }

    public QueryDTXActionParamResponse queryDTXActionParamWithOptions(QueryDTXActionParamRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryDTXActionParam", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDTXActionParamResponse());
    }

    public QueryDTXActionParamResponse queryDTXActionParam(QueryDTXActionParamRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDTXActionParamWithOptions(request, runtime);
    }

    public QueryDtxAppDetailResponse queryDtxAppDetailWithOptions(QueryDtxAppDetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryDtxAppDetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDtxAppDetailResponse());
    }

    public QueryDtxAppDetailResponse queryDtxAppDetail(QueryDtxAppDetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDtxAppDetailWithOptions(request, runtime);
    }

    public QueryDTXAppsDetailResponse queryDTXAppsDetailWithOptions(QueryDTXAppsDetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryDTXAppsDetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDTXAppsDetailResponse());
    }

    public QueryDTXAppsDetailResponse queryDTXAppsDetail(QueryDTXAppsDetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDTXAppsDetailWithOptions(request, runtime);
    }

    public QueryDTXBizTypeResponse queryDTXBizTypeWithOptions(QueryDTXBizTypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryDTXBizType", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDTXBizTypeResponse());
    }

    public QueryDTXBizTypeResponse queryDTXBizType(QueryDTXBizTypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDTXBizTypeWithOptions(request, runtime);
    }

    public QueryDTXBiztypeRelationResponse queryDTXBiztypeRelationWithOptions(QueryDTXBiztypeRelationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryDTXBiztypeRelation", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDTXBiztypeRelationResponse());
    }

    public QueryDTXBiztypeRelationResponse queryDTXBiztypeRelation(QueryDTXBiztypeRelationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDTXBiztypeRelationWithOptions(request, runtime);
    }

    public QueryDTXTransactionsResponse queryDTXTransactionsWithOptions(QueryDTXTransactionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryDTXTransactions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDTXTransactionsResponse());
    }

    public QueryDTXTransactionsResponse queryDTXTransactions(QueryDTXTransactionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDTXTransactionsWithOptions(request, runtime);
    }

    public QueryDWSClusterGroupResponse queryDWSClusterGroupWithOptions(QueryDWSClusterGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryDWSClusterGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDWSClusterGroupResponse());
    }

    public QueryDWSClusterGroupResponse queryDWSClusterGroup(QueryDWSClusterGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDWSClusterGroupWithOptions(request, runtime);
    }

    public QueryDWSMetadataTablesResponse queryDWSMetadataTablesWithOptions(QueryDWSMetadataTablesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryDWSMetadataTables", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDWSMetadataTablesResponse());
    }

    public QueryDWSMetadataTablesResponse queryDWSMetadataTables(QueryDWSMetadataTablesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDWSMetadataTablesWithOptions(request, runtime);
    }

    public QueryDWSOrderStepsResponse queryDWSOrderStepsWithOptions(QueryDWSOrderStepsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryDWSOrderSteps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDWSOrderStepsResponse());
    }

    public QueryDWSOrderStepsResponse queryDWSOrderSteps(QueryDWSOrderStepsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDWSOrderStepsWithOptions(request, runtime);
    }

    public QueryDWSTaskResponse queryDWSTaskWithOptions(QueryDWSTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryDWSTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDWSTaskResponse());
    }

    public QueryDWSTaskResponse queryDWSTask(QueryDWSTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDWSTaskWithOptions(request, runtime);
    }

    public QueryDWSTaskDelayResponse queryDWSTaskDelayWithOptions(QueryDWSTaskDelayRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryDWSTaskDelay", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryDWSTaskDelayResponse());
    }

    public QueryDWSTaskDelayResponse queryDWSTaskDelay(QueryDWSTaskDelayRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryDWSTaskDelayWithOptions(request, runtime);
    }

    public QueryHasAdminConfigResponse queryHasAdminConfigWithOptions(QueryHasAdminConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasAdminConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasAdminConfigResponse());
    }

    public QueryHasAdminConfigResponse queryHasAdminConfig(QueryHasAdminConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasAdminConfigWithOptions(request, runtime);
    }

    public QueryHasAdminSshResponse queryHasAdminSshWithOptions(QueryHasAdminSshRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasAdminSsh", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasAdminSshResponse());
    }

    public QueryHasAdminSshResponse queryHasAdminSsh(QueryHasAdminSshRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasAdminSshWithOptions(request, runtime);
    }

    public QueryHasApprovalMyfinishedResponse queryHasApprovalMyfinishedWithOptions(QueryHasApprovalMyfinishedRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasApprovalMyfinished", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasApprovalMyfinishedResponse());
    }

    public QueryHasApprovalMyfinishedResponse queryHasApprovalMyfinished(QueryHasApprovalMyfinishedRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasApprovalMyfinishedWithOptions(request, runtime);
    }

    public QueryHasApprovalMypendingResponse queryHasApprovalMypendingWithOptions(QueryHasApprovalMypendingRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasApprovalMypending", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasApprovalMypendingResponse());
    }

    public QueryHasApprovalMypendingResponse queryHasApprovalMypending(QueryHasApprovalMypendingRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasApprovalMypendingWithOptions(request, runtime);
    }

    public QueryHasApprovalMysubmitResponse queryHasApprovalMysubmitWithOptions(QueryHasApprovalMysubmitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasApprovalMysubmit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasApprovalMysubmitResponse());
    }

    public QueryHasApprovalMysubmitResponse queryHasApprovalMysubmit(QueryHasApprovalMysubmitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasApprovalMysubmitWithOptions(request, runtime);
    }

    public QueryHasApprovalStatusResponse queryHasApprovalStatusWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasApprovalStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasApprovalStatusResponse());
    }

    public QueryHasApprovalStatusResponse queryHasApprovalStatus() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasApprovalStatusWithOptions(runtime);
    }

    public QueryHasBaselineAppinstanceResponse queryHasBaselineAppinstanceWithOptions(QueryHasBaselineAppinstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasBaselineAppinstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasBaselineAppinstanceResponse());
    }

    public QueryHasBaselineAppinstanceResponse queryHasBaselineAppinstance(QueryHasBaselineAppinstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasBaselineAppinstanceWithOptions(request, runtime);
    }

    public QueryHasBaselineAppinstanceallResponse queryHasBaselineAppinstanceallWithOptions(QueryHasBaselineAppinstanceallRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasBaselineAppinstanceall", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasBaselineAppinstanceallResponse());
    }

    public QueryHasBaselineAppinstanceallResponse queryHasBaselineAppinstanceall(QueryHasBaselineAppinstanceallRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasBaselineAppinstanceallWithOptions(request, runtime);
    }

    public QueryHasBaselineAppinstancegroupResponse queryHasBaselineAppinstancegroupWithOptions(QueryHasBaselineAppinstancegroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasBaselineAppinstancegroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasBaselineAppinstancegroupResponse());
    }

    public QueryHasBaselineAppinstancegroupResponse queryHasBaselineAppinstancegroup(QueryHasBaselineAppinstancegroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasBaselineAppinstancegroupWithOptions(request, runtime);
    }

    public QueryHasBaselineAppinstancegroupallResponse queryHasBaselineAppinstancegroupallWithOptions(QueryHasBaselineAppinstancegroupallRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasBaselineAppinstancegroupall", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasBaselineAppinstancegroupallResponse());
    }

    public QueryHasBaselineAppinstancegroupallResponse queryHasBaselineAppinstancegroupall(QueryHasBaselineAppinstancegroupallRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasBaselineAppinstancegroupallWithOptions(request, runtime);
    }

    public QueryHasBaselineApprovaluserResponse queryHasBaselineApprovaluserWithOptions(QueryHasBaselineApprovaluserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasBaselineApprovaluser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasBaselineApprovaluserResponse());
    }

    public QueryHasBaselineApprovaluserResponse queryHasBaselineApprovaluser(QueryHasBaselineApprovaluserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasBaselineApprovaluserWithOptions(request, runtime);
    }

    public QueryHasBaselineContainerinstanceResponse queryHasBaselineContainerinstanceWithOptions(QueryHasBaselineContainerinstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasBaselineContainerinstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasBaselineContainerinstanceResponse());
    }

    public QueryHasBaselineContainerinstanceResponse queryHasBaselineContainerinstance(QueryHasBaselineContainerinstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasBaselineContainerinstanceWithOptions(request, runtime);
    }

    public QueryHasBaselineKbasorganizationResponse queryHasBaselineKbasorganizationWithOptions(QueryHasBaselineKbasorganizationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasBaselineKbasorganization", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasBaselineKbasorganizationResponse());
    }

    public QueryHasBaselineKbasorganizationResponse queryHasBaselineKbasorganization(QueryHasBaselineKbasorganizationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasBaselineKbasorganizationWithOptions(request, runtime);
    }

    public QueryHasBaselineNwapprovalprocessResponse queryHasBaselineNwapprovalprocessWithOptions(QueryHasBaselineNwapprovalprocessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasBaselineNwapprovalprocess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasBaselineNwapprovalprocessResponse());
    }

    public QueryHasBaselineNwapprovalprocessResponse queryHasBaselineNwapprovalprocess(QueryHasBaselineNwapprovalprocessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasBaselineNwapprovalprocessWithOptions(request, runtime);
    }

    public QueryHasBaselineProdinstanceResponse queryHasBaselineProdinstanceWithOptions(QueryHasBaselineProdinstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasBaselineProdinstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasBaselineProdinstanceResponse());
    }

    public QueryHasBaselineProdinstanceResponse queryHasBaselineProdinstance(QueryHasBaselineProdinstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasBaselineProdinstanceWithOptions(request, runtime);
    }

    public QueryHasBaselineUserappgroupResponse queryHasBaselineUserappgroupWithOptions(QueryHasBaselineUserappgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasBaselineUserappgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasBaselineUserappgroupResponse());
    }

    public QueryHasBaselineUserappgroupResponse queryHasBaselineUserappgroup(QueryHasBaselineUserappgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasBaselineUserappgroupWithOptions(request, runtime);
    }

    public QueryHasCellPageResponse queryHasCellPageWithOptions(QueryHasCellPageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasCellPage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCellPageResponse());
    }

    public QueryHasCellPageResponse queryHasCellPage(QueryHasCellPageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCellPageWithOptions(request, runtime);
    }

    public QueryHasCloudarchCellResponse queryHasCloudarchCellWithOptions(QueryHasCloudarchCellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchCell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchCellResponse());
    }

    public QueryHasCloudarchCellResponse queryHasCloudarchCell(QueryHasCloudarchCellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchCellWithOptions(request, runtime);
    }

    public QueryHasCloudarchCelldetailResponse queryHasCloudarchCelldetailWithOptions(QueryHasCloudarchCelldetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchCelldetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchCelldetailResponse());
    }

    public QueryHasCloudarchCelldetailResponse queryHasCloudarchCelldetail(QueryHasCloudarchCelldetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchCelldetailWithOptions(request, runtime);
    }

    public QueryHasCloudarchCellgroupResponse queryHasCloudarchCellgroupWithOptions(QueryHasCloudarchCellgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchCellgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchCellgroupResponse());
    }

    public QueryHasCloudarchCellgroupResponse queryHasCloudarchCellgroup(QueryHasCloudarchCellgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchCellgroupWithOptions(request, runtime);
    }

    public QueryHasCloudarchCellgrouptypeResponse queryHasCloudarchCellgrouptypeWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchCellgrouptype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchCellgrouptypeResponse());
    }

    public QueryHasCloudarchCellgrouptypeResponse queryHasCloudarchCellgrouptype() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchCellgrouptypeWithOptions(runtime);
    }

    public QueryHasCloudarchEnvtypeResponse queryHasCloudarchEnvtypeWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchEnvtype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchEnvtypeResponse());
    }

    public QueryHasCloudarchEnvtypeResponse queryHasCloudarchEnvtype() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchEnvtypeWithOptions(runtime);
    }

    public QueryHasCloudarchIaasakemetadataResponse queryHasCloudarchIaasakemetadataWithOptions(QueryHasCloudarchIaasakemetadataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchIaasakemetadata", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchIaasakemetadataResponse());
    }

    public QueryHasCloudarchIaasakemetadataResponse queryHasCloudarchIaasakemetadata(QueryHasCloudarchIaasakemetadataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchIaasakemetadataWithOptions(request, runtime);
    }

    public QueryHasCloudarchIaasmetadataResponse queryHasCloudarchIaasmetadataWithOptions(QueryHasCloudarchIaasmetadataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchIaasmetadata", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchIaasmetadataResponse());
    }

    public QueryHasCloudarchIaasmetadataResponse queryHasCloudarchIaasmetadata(QueryHasCloudarchIaasmetadataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchIaasmetadataWithOptions(request, runtime);
    }

    public QueryHasCloudarchIaasmetadataproviderResponse queryHasCloudarchIaasmetadataproviderWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchIaasmetadataprovider", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchIaasmetadataproviderResponse());
    }

    public QueryHasCloudarchIaasmetadataproviderResponse queryHasCloudarchIaasmetadataprovider() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchIaasmetadataproviderWithOptions(runtime);
    }

    public QueryHasCloudarchIaasresourcetypeResponse queryHasCloudarchIaasresourcetypeWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchIaasresourcetype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchIaasresourcetypeResponse());
    }

    public QueryHasCloudarchIaasresourcetypeResponse queryHasCloudarchIaasresourcetype() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchIaasresourcetypeWithOptions(runtime);
    }

    public QueryHasCloudarchLocalallcellResponse queryHasCloudarchLocalallcellWithOptions(QueryHasCloudarchLocalallcellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchLocalallcell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchLocalallcellResponse());
    }

    public QueryHasCloudarchLocalallcellResponse queryHasCloudarchLocalallcell(QueryHasCloudarchLocalallcellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchLocalallcellWithOptions(request, runtime);
    }

    public QueryHasCloudarchRegionResponse queryHasCloudarchRegionWithOptions(QueryHasCloudarchRegionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchRegion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchRegionResponse());
    }

    public QueryHasCloudarchRegionResponse queryHasCloudarchRegion(QueryHasCloudarchRegionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchRegionWithOptions(request, runtime);
    }

    public QueryHasCloudarchTenantResponse queryHasCloudarchTenantWithOptions(QueryHasCloudarchTenantRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchTenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchTenantResponse());
    }

    public QueryHasCloudarchTenantResponse queryHasCloudarchTenant(QueryHasCloudarchTenantRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchTenantWithOptions(request, runtime);
    }

    public QueryHasCloudarchWorkspaceResponse queryHasCloudarchWorkspaceWithOptions(QueryHasCloudarchWorkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchWorkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchWorkspaceResponse());
    }

    public QueryHasCloudarchWorkspaceResponse queryHasCloudarchWorkspace(QueryHasCloudarchWorkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchWorkspaceWithOptions(request, runtime);
    }

    public QueryHasCloudarchWorkspacegroupResponse queryHasCloudarchWorkspacegroupWithOptions(QueryHasCloudarchWorkspacegroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchWorkspacegroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchWorkspacegroupResponse());
    }

    public QueryHasCloudarchWorkspacegroupResponse queryHasCloudarchWorkspacegroup(QueryHasCloudarchWorkspacegroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchWorkspacegroupWithOptions(request, runtime);
    }

    public QueryHasCloudarchZoneResponse queryHasCloudarchZoneWithOptions(QueryHasCloudarchZoneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasCloudarchZone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasCloudarchZoneResponse());
    }

    public QueryHasCloudarchZoneResponse queryHasCloudarchZone(QueryHasCloudarchZoneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasCloudarchZoneWithOptions(request, runtime);
    }

    public QueryHasConfigSwitchResponse queryHasConfigSwitchWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasConfigSwitch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasConfigSwitchResponse());
    }

    public QueryHasConfigSwitchResponse queryHasConfigSwitch() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasConfigSwitchWithOptions(runtime);
    }

    public QueryHasConfigSyncstatusfortenantResponse queryHasConfigSyncstatusfortenantWithOptions(QueryHasConfigSyncstatusfortenantRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasConfigSyncstatusfortenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasConfigSyncstatusfortenantResponse());
    }

    public QueryHasConfigSyncstatusfortenantResponse queryHasConfigSyncstatusfortenant(QueryHasConfigSyncstatusfortenantRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasConfigSyncstatusfortenantWithOptions(request, runtime);
    }

    public QueryHasDiagnosisAtomicofnodeResponse queryHasDiagnosisAtomicofnodeWithOptions(QueryHasDiagnosisAtomicofnodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisAtomicofnode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisAtomicofnodeResponse());
    }

    public QueryHasDiagnosisAtomicofnodeResponse queryHasDiagnosisAtomicofnode(QueryHasDiagnosisAtomicofnodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisAtomicofnodeWithOptions(request, runtime);
    }

    public QueryHasDiagnosisImagetaskResponse queryHasDiagnosisImagetaskWithOptions(QueryHasDiagnosisImagetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisImagetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisImagetaskResponse());
    }

    public QueryHasDiagnosisImagetaskResponse queryHasDiagnosisImagetask(QueryHasDiagnosisImagetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisImagetaskWithOptions(request, runtime);
    }

    public QueryHasDiagnosisImagetaskdetailResponse queryHasDiagnosisImagetaskdetailWithOptions(QueryHasDiagnosisImagetaskdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisImagetaskdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisImagetaskdetailResponse());
    }

    public QueryHasDiagnosisImagetaskdetailResponse queryHasDiagnosisImagetaskdetail(QueryHasDiagnosisImagetaskdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisImagetaskdetailWithOptions(request, runtime);
    }

    public QueryHasDiagnosisJavataskResponse queryHasDiagnosisJavataskWithOptions(QueryHasDiagnosisJavataskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisJavatask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisJavataskResponse());
    }

    public QueryHasDiagnosisJavataskResponse queryHasDiagnosisJavatask(QueryHasDiagnosisJavataskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisJavataskWithOptions(request, runtime);
    }

    public QueryHasDiagnosisMhstaskResponse queryHasDiagnosisMhstaskWithOptions(QueryHasDiagnosisMhstaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisMhstask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisMhstaskResponse());
    }

    public QueryHasDiagnosisMhstaskResponse queryHasDiagnosisMhstask(QueryHasDiagnosisMhstaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisMhstaskWithOptions(request, runtime);
    }

    public QueryHasDiagnosisMhstaskdetailResponse queryHasDiagnosisMhstaskdetailWithOptions(QueryHasDiagnosisMhstaskdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisMhstaskdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisMhstaskdetailResponse());
    }

    public QueryHasDiagnosisMhstaskdetailResponse queryHasDiagnosisMhstaskdetail(QueryHasDiagnosisMhstaskdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisMhstaskdetailWithOptions(request, runtime);
    }

    public QueryHasDiagnosisMonitortaskResponse queryHasDiagnosisMonitortaskWithOptions(QueryHasDiagnosisMonitortaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisMonitortask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisMonitortaskResponse());
    }

    public QueryHasDiagnosisMonitortaskResponse queryHasDiagnosisMonitortask(QueryHasDiagnosisMonitortaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisMonitortaskWithOptions(request, runtime);
    }

    public QueryHasDiagnosisNodeResponse queryHasDiagnosisNodeWithOptions(QueryHasDiagnosisNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisNodeResponse());
    }

    public QueryHasDiagnosisNodeResponse queryHasDiagnosisNode(QueryHasDiagnosisNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisNodeWithOptions(request, runtime);
    }

    public QueryHasDiagnosisNodereferenceResponse queryHasDiagnosisNodereferenceWithOptions(QueryHasDiagnosisNodereferenceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisNodereference", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisNodereferenceResponse());
    }

    public QueryHasDiagnosisNodereferenceResponse queryHasDiagnosisNodereference(QueryHasDiagnosisNodereferenceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisNodereferenceWithOptions(request, runtime);
    }

    public QueryHasDiagnosisNodetypeResponse queryHasDiagnosisNodetypeWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisNodetype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisNodetypeResponse());
    }

    public QueryHasDiagnosisNodetypeResponse queryHasDiagnosisNodetype() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisNodetypeWithOptions(runtime);
    }

    public QueryHasDiagnosisOpstaskResponse queryHasDiagnosisOpstaskWithOptions(QueryHasDiagnosisOpstaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisOpstask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisOpstaskResponse());
    }

    public QueryHasDiagnosisOpstaskResponse queryHasDiagnosisOpstask(QueryHasDiagnosisOpstaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisOpstaskWithOptions(request, runtime);
    }

    public QueryHasDiagnosisPlanResponse queryHasDiagnosisPlanWithOptions(QueryHasDiagnosisPlanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisPlan", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisPlanResponse());
    }

    public QueryHasDiagnosisPlanResponse queryHasDiagnosisPlan(QueryHasDiagnosisPlanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisPlanWithOptions(request, runtime);
    }

    public QueryHasDiagnosisPlantriggerResponse queryHasDiagnosisPlantriggerWithOptions(QueryHasDiagnosisPlantriggerRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisPlantrigger", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisPlantriggerResponse());
    }

    public QueryHasDiagnosisPlantriggerResponse queryHasDiagnosisPlantrigger(QueryHasDiagnosisPlantriggerRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisPlantriggerWithOptions(request, runtime);
    }

    public QueryHasDiagnosisPodtaskResponse queryHasDiagnosisPodtaskWithOptions(QueryHasDiagnosisPodtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisPodtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisPodtaskResponse());
    }

    public QueryHasDiagnosisPodtaskResponse queryHasDiagnosisPodtask(QueryHasDiagnosisPodtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisPodtaskWithOptions(request, runtime);
    }

    public QueryHasDiagnosisProbtaskResponse queryHasDiagnosisProbtaskWithOptions(QueryHasDiagnosisProbtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisProbtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisProbtaskResponse());
    }

    public QueryHasDiagnosisProbtaskResponse queryHasDiagnosisProbtask(QueryHasDiagnosisProbtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisProbtaskWithOptions(request, runtime);
    }

    public QueryHasDiagnosisProbtaskdetailResponse queryHasDiagnosisProbtaskdetailWithOptions(QueryHasDiagnosisProbtaskdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisProbtaskdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisProbtaskdetailResponse());
    }

    public QueryHasDiagnosisProbtaskdetailResponse queryHasDiagnosisProbtaskdetail(QueryHasDiagnosisProbtaskdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisProbtaskdetailWithOptions(request, runtime);
    }

    public QueryHasDiagnosisPythontaskResponse queryHasDiagnosisPythontaskWithOptions(QueryHasDiagnosisPythontaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisPythontask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisPythontaskResponse());
    }

    public QueryHasDiagnosisPythontaskResponse queryHasDiagnosisPythontask(QueryHasDiagnosisPythontaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisPythontaskWithOptions(request, runtime);
    }

    public QueryHasDiagnosisRuleResponse queryHasDiagnosisRuleWithOptions(QueryHasDiagnosisRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisRuleResponse());
    }

    public QueryHasDiagnosisRuleResponse queryHasDiagnosisRule(QueryHasDiagnosisRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisRuleWithOptions(request, runtime);
    }

    public QueryHasDiagnosisRuleofnodeResponse queryHasDiagnosisRuleofnodeWithOptions(QueryHasDiagnosisRuleofnodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisRuleofnode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisRuleofnodeResponse());
    }

    public QueryHasDiagnosisRuleofnodeResponse queryHasDiagnosisRuleofnode(QueryHasDiagnosisRuleofnodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisRuleofnodeWithOptions(request, runtime);
    }

    public QueryHasDiagnosisRulereferenceResponse queryHasDiagnosisRulereferenceWithOptions(QueryHasDiagnosisRulereferenceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisRulereference", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisRulereferenceResponse());
    }

    public QueryHasDiagnosisRulereferenceResponse queryHasDiagnosisRulereference(QueryHasDiagnosisRulereferenceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisRulereferenceWithOptions(request, runtime);
    }

    public QueryHasDiagnosisRuletypeResponse queryHasDiagnosisRuletypeWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisRuletype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisRuletypeResponse());
    }

    public QueryHasDiagnosisRuletypeResponse queryHasDiagnosisRuletype() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisRuletypeWithOptions(runtime);
    }

    public QueryHasDiagnosisShelltaskResponse queryHasDiagnosisShelltaskWithOptions(QueryHasDiagnosisShelltaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisShelltask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisShelltaskResponse());
    }

    public QueryHasDiagnosisShelltaskResponse queryHasDiagnosisShelltask(QueryHasDiagnosisShelltaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisShelltaskWithOptions(request, runtime);
    }

    public QueryHasDiagnosisTaskResponse queryHasDiagnosisTaskWithOptions(QueryHasDiagnosisTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDiagnosisTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDiagnosisTaskResponse());
    }

    public QueryHasDiagnosisTaskResponse queryHasDiagnosisTask(QueryHasDiagnosisTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDiagnosisTaskWithOptions(request, runtime);
    }

    public QueryHasDingtalkRobotResponse queryHasDingtalkRobotWithOptions(QueryHasDingtalkRobotRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDingtalkRobot", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDingtalkRobotResponse());
    }

    public QueryHasDingtalkRobotResponse queryHasDingtalkRobot(QueryHasDingtalkRobotRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDingtalkRobotWithOptions(request, runtime);
    }

    public QueryHasDingtalkRobotauthtypesResponse queryHasDingtalkRobotauthtypesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasDingtalkRobotauthtypes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDingtalkRobotauthtypesResponse());
    }

    public QueryHasDingtalkRobotauthtypesResponse queryHasDingtalkRobotauthtypes() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDingtalkRobotauthtypesWithOptions(runtime);
    }

    public QueryHasDingtalkRobotrelationResponse queryHasDingtalkRobotrelationWithOptions(QueryHasDingtalkRobotrelationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasDingtalkRobotrelation", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDingtalkRobotrelationResponse());
    }

    public QueryHasDingtalkRobotrelationResponse queryHasDingtalkRobotrelation(QueryHasDingtalkRobotrelationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDingtalkRobotrelationWithOptions(request, runtime);
    }

    public QueryHasDingtalkRobotrelationtypesResponse queryHasDingtalkRobotrelationtypesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasDingtalkRobotrelationtypes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDingtalkRobotrelationtypesResponse());
    }

    public QueryHasDingtalkRobotrelationtypesResponse queryHasDingtalkRobotrelationtypes() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDingtalkRobotrelationtypesWithOptions(runtime);
    }

    public QueryHasDingtalkRobotsendlevelsResponse queryHasDingtalkRobotsendlevelsWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasDingtalkRobotsendlevels", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasDingtalkRobotsendlevelsResponse());
    }

    public QueryHasDingtalkRobotsendlevelsResponse queryHasDingtalkRobotsendlevels() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasDingtalkRobotsendlevelsWithOptions(runtime);
    }

    public QueryHasEmergencyOrderResponse queryHasEmergencyOrderWithOptions(QueryHasEmergencyOrderRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasEmergencyOrder", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasEmergencyOrderResponse());
    }

    public QueryHasEmergencyOrderResponse queryHasEmergencyOrder(QueryHasEmergencyOrderRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasEmergencyOrderWithOptions(request, runtime);
    }

    public QueryHasEmergencyPlanstatusesResponse queryHasEmergencyPlanstatusesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasEmergencyPlanstatuses", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasEmergencyPlanstatusesResponse());
    }

    public QueryHasEmergencyPlanstatusesResponse queryHasEmergencyPlanstatuses() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasEmergencyPlanstatusesWithOptions(runtime);
    }

    public QueryHasEmergencyPlantargettypesResponse queryHasEmergencyPlantargettypesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasEmergencyPlantargettypes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasEmergencyPlantargettypesResponse());
    }

    public QueryHasEmergencyPlantargettypesResponse queryHasEmergencyPlantargettypes() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasEmergencyPlantargettypesWithOptions(runtime);
    }

    public QueryHasEmergencyPlantypesResponse queryHasEmergencyPlantypesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasEmergencyPlantypes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasEmergencyPlantypesResponse());
    }

    public QueryHasEmergencyPlantypesResponse queryHasEmergencyPlantypes() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasEmergencyPlantypesWithOptions(runtime);
    }

    public QueryHasInspectAkenodeipResponse queryHasInspectAkenodeipWithOptions(QueryHasInspectAkenodeipRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectAkenodeip", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectAkenodeipResponse());
    }

    public QueryHasInspectAkenodeipResponse queryHasInspectAkenodeip(QueryHasInspectAkenodeipRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectAkenodeipWithOptions(request, runtime);
    }

    public QueryHasInspectCustomeripResponse queryHasInspectCustomeripWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectCustomerip", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectCustomeripResponse());
    }

    public QueryHasInspectCustomeripResponse queryHasInspectCustomerip() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectCustomeripWithOptions(runtime);
    }

    public QueryHasInspectDailyreportResponse queryHasInspectDailyreportWithOptions(QueryHasInspectDailyreportRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectDailyreport", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectDailyreportResponse());
    }

    public QueryHasInspectDailyreportResponse queryHasInspectDailyreport(QueryHasInspectDailyreportRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectDailyreportWithOptions(request, runtime);
    }

    public QueryHasInspectImagetaskResponse queryHasInspectImagetaskWithOptions(QueryHasInspectImagetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectImagetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectImagetaskResponse());
    }

    public QueryHasInspectImagetaskResponse queryHasInspectImagetask(QueryHasInspectImagetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectImagetaskWithOptions(request, runtime);
    }

    public QueryHasInspectImagetaskdetailResponse queryHasInspectImagetaskdetailWithOptions(QueryHasInspectImagetaskdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectImagetaskdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectImagetaskdetailResponse());
    }

    public QueryHasInspectImagetaskdetailResponse queryHasInspectImagetaskdetail(QueryHasInspectImagetaskdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectImagetaskdetailWithOptions(request, runtime);
    }

    public QueryHasInspectJavataskResponse queryHasInspectJavataskWithOptions(QueryHasInspectJavataskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectJavatask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectJavataskResponse());
    }

    public QueryHasInspectJavataskResponse queryHasInspectJavatask(QueryHasInspectJavataskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectJavataskWithOptions(request, runtime);
    }

    public QueryHasInspectKernelprodcodeResponse queryHasInspectKernelprodcodeWithOptions(QueryHasInspectKernelprodcodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectKernelprodcode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectKernelprodcodeResponse());
    }

    public QueryHasInspectKernelprodcodeResponse queryHasInspectKernelprodcode(QueryHasInspectKernelprodcodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectKernelprodcodeWithOptions(request, runtime);
    }

    public QueryHasInspectMhsproducttypeResponse queryHasInspectMhsproducttypeWithOptions(QueryHasInspectMhsproducttypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectMhsproducttype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectMhsproducttypeResponse());
    }

    public QueryHasInspectMhsproducttypeResponse queryHasInspectMhsproducttype(QueryHasInspectMhsproducttypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectMhsproducttypeWithOptions(request, runtime);
    }

    public QueryHasInspectMhstaskResponse queryHasInspectMhstaskWithOptions(QueryHasInspectMhstaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectMhstask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectMhstaskResponse());
    }

    public QueryHasInspectMhstaskResponse queryHasInspectMhstask(QueryHasInspectMhstaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectMhstaskWithOptions(request, runtime);
    }

    public QueryHasInspectMhstaskdetailResponse queryHasInspectMhstaskdetailWithOptions(QueryHasInspectMhstaskdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectMhstaskdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectMhstaskdetailResponse());
    }

    public QueryHasInspectMhstaskdetailResponse queryHasInspectMhstaskdetail(QueryHasInspectMhstaskdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectMhstaskdetailWithOptions(request, runtime);
    }

    public QueryHasInspectMissionResponse queryHasInspectMissionWithOptions(QueryHasInspectMissionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectMission", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectMissionResponse());
    }

    public QueryHasInspectMissionResponse queryHasInspectMission(QueryHasInspectMissionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectMissionWithOptions(request, runtime);
    }

    public QueryHasInspectMissiontaskResponse queryHasInspectMissiontaskWithOptions(QueryHasInspectMissiontaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectMissiontask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectMissiontaskResponse());
    }

    public QueryHasInspectMissiontaskResponse queryHasInspectMissiontask(QueryHasInspectMissiontaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectMissiontaskWithOptions(request, runtime);
    }

    public QueryHasInspectOneruleofdaydetailResponse queryHasInspectOneruleofdaydetailWithOptions(QueryHasInspectOneruleofdaydetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectOneruleofdaydetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectOneruleofdaydetailResponse());
    }

    public QueryHasInspectOneruleofdaydetailResponse queryHasInspectOneruleofdaydetail(QueryHasInspectOneruleofdaydetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectOneruleofdaydetailWithOptions(request, runtime);
    }

    public QueryHasInspectParamResponse queryHasInspectParamWithOptions(QueryHasInspectParamRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectParam", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectParamResponse());
    }

    public QueryHasInspectParamResponse queryHasInspectParam(QueryHasInspectParamRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectParamWithOptions(request, runtime);
    }

    public QueryHasInspectPluginResponse queryHasInspectPluginWithOptions(QueryHasInspectPluginRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectPlugin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectPluginResponse());
    }

    public QueryHasInspectPluginResponse queryHasInspectPlugin(QueryHasInspectPluginRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectPluginWithOptions(request, runtime);
    }

    public QueryHasInspectPluginstatusactionsResponse queryHasInspectPluginstatusactionsWithOptions(QueryHasInspectPluginstatusactionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectPluginstatusactions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectPluginstatusactionsResponse());
    }

    public QueryHasInspectPluginstatusactionsResponse queryHasInspectPluginstatusactions(QueryHasInspectPluginstatusactionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectPluginstatusactionsWithOptions(request, runtime);
    }

    public QueryHasInspectPlugintypesResponse queryHasInspectPlugintypesWithOptions(QueryHasInspectPlugintypesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectPlugintypes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectPlugintypesResponse());
    }

    public QueryHasInspectPlugintypesResponse queryHasInspectPlugintypes(QueryHasInspectPlugintypesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectPlugintypesWithOptions(request, runtime);
    }

    public QueryHasInspectPodtaskResponse queryHasInspectPodtaskWithOptions(QueryHasInspectPodtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectPodtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectPodtaskResponse());
    }

    public QueryHasInspectPodtaskResponse queryHasInspectPodtask(QueryHasInspectPodtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectPodtaskWithOptions(request, runtime);
    }

    public QueryHasInspectProbpageResponse queryHasInspectProbpageWithOptions(QueryHasInspectProbpageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectProbpage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectProbpageResponse());
    }

    public QueryHasInspectProbpageResponse queryHasInspectProbpage(QueryHasInspectProbpageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectProbpageWithOptions(request, runtime);
    }

    public QueryHasInspectProbpagedetailResponse queryHasInspectProbpagedetailWithOptions(QueryHasInspectProbpagedetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectProbpagedetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectProbpagedetailResponse());
    }

    public QueryHasInspectProbpagedetailResponse queryHasInspectProbpagedetail(QueryHasInspectProbpagedetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectProbpagedetailWithOptions(request, runtime);
    }

    public QueryHasInspectProbtaskResponse queryHasInspectProbtaskWithOptions(QueryHasInspectProbtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectProbtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectProbtaskResponse());
    }

    public QueryHasInspectProbtaskResponse queryHasInspectProbtask(QueryHasInspectProbtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectProbtaskWithOptions(request, runtime);
    }

    public QueryHasInspectProbtaskdetailResponse queryHasInspectProbtaskdetailWithOptions(QueryHasInspectProbtaskdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectProbtaskdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectProbtaskdetailResponse());
    }

    public QueryHasInspectProbtaskdetailResponse queryHasInspectProbtaskdetail(QueryHasInspectProbtaskdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectProbtaskdetailWithOptions(request, runtime);
    }

    public QueryHasInspectPythontaskResponse queryHasInspectPythontaskWithOptions(QueryHasInspectPythontaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectPythontask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectPythontaskResponse());
    }

    public QueryHasInspectPythontaskResponse queryHasInspectPythontask(QueryHasInspectPythontaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectPythontaskWithOptions(request, runtime);
    }

    public QueryHasInspectRuleofmissionResponse queryHasInspectRuleofmissionWithOptions(QueryHasInspectRuleofmissionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectRuleofmission", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectRuleofmissionResponse());
    }

    public QueryHasInspectRuleofmissionResponse queryHasInspectRuleofmission(QueryHasInspectRuleofmissionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectRuleofmissionWithOptions(request, runtime);
    }

    public QueryHasInspectScheduleofmissionResponse queryHasInspectScheduleofmissionWithOptions(QueryHasInspectScheduleofmissionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectScheduleofmission", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectScheduleofmissionResponse());
    }

    public QueryHasInspectScheduleofmissionResponse queryHasInspectScheduleofmission(QueryHasInspectScheduleofmissionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectScheduleofmissionWithOptions(request, runtime);
    }

    public QueryHasInspectShelltaskResponse queryHasInspectShelltaskWithOptions(QueryHasInspectShelltaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectShelltask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectShelltaskResponse());
    }

    public QueryHasInspectShelltaskResponse queryHasInspectShelltask(QueryHasInspectShelltaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectShelltaskWithOptions(request, runtime);
    }

    public QueryHasInspectTagsResponse queryHasInspectTagsWithOptions(QueryHasInspectTagsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectTags", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectTagsResponse());
    }

    public QueryHasInspectTagsResponse queryHasInspectTags(QueryHasInspectTagsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectTagsWithOptions(request, runtime);
    }

    public QueryHasInspectTaskResponse queryHasInspectTaskWithOptions(QueryHasInspectTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectTaskResponse());
    }

    public QueryHasInspectTaskResponse queryHasInspectTask(QueryHasInspectTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectTaskWithOptions(request, runtime);
    }

    public QueryHasInspectUserappnameResponse queryHasInspectUserappnameWithOptions(QueryHasInspectUserappnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectUserappname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectUserappnameResponse());
    }

    public QueryHasInspectUserappnameResponse queryHasInspectUserappname(QueryHasInspectUserappnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectUserappnameWithOptions(request, runtime);
    }

    public QueryHasInspectUserappworkspaceResponse queryHasInspectUserappworkspaceWithOptions(QueryHasInspectUserappworkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectUserappworkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectUserappworkspaceResponse());
    }

    public QueryHasInspectUserappworkspaceResponse queryHasInspectUserappworkspace(QueryHasInspectUserappworkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectUserappworkspaceWithOptions(request, runtime);
    }

    public QueryHasInspectWebruleResponse queryHasInspectWebruleWithOptions(QueryHasInspectWebruleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasInspectWebrule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasInspectWebruleResponse());
    }

    public QueryHasInspectWebruleResponse queryHasInspectWebrule(QueryHasInspectWebruleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasInspectWebruleWithOptions(request, runtime);
    }

    public QueryHasKernelProdappnamesResponse queryHasKernelProdappnamesWithOptions(QueryHasKernelProdappnamesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasKernelProdappnames", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasKernelProdappnamesResponse());
    }

    public QueryHasKernelProdappnamesResponse queryHasKernelProdappnames(QueryHasKernelProdappnamesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasKernelProdappnamesWithOptions(request, runtime);
    }

    public QueryHasLocaloverviewEverydayriskResponse queryHasLocaloverviewEverydayriskWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasLocaloverviewEverydayrisk", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasLocaloverviewEverydayriskResponse());
    }

    public QueryHasLocaloverviewEverydayriskResponse queryHasLocaloverviewEverydayrisk() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasLocaloverviewEverydayriskWithOptions(runtime);
    }

    public QueryHasLocaloverviewTodayinspectmissioncountResponse queryHasLocaloverviewTodayinspectmissioncountWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasLocaloverviewTodayinspectmissioncount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasLocaloverviewTodayinspectmissioncountResponse());
    }

    public QueryHasLocaloverviewTodayinspectmissioncountResponse queryHasLocaloverviewTodayinspectmissioncount() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasLocaloverviewTodayinspectmissioncountWithOptions(runtime);
    }

    public QueryHasLocaloverviewTodayinspectmissionplanResponse queryHasLocaloverviewTodayinspectmissionplanWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasLocaloverviewTodayinspectmissionplan", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasLocaloverviewTodayinspectmissionplanResponse());
    }

    public QueryHasLocaloverviewTodayinspectmissionplanResponse queryHasLocaloverviewTodayinspectmissionplan() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasLocaloverviewTodayinspectmissionplanWithOptions(runtime);
    }

    public QueryHasLocaloverviewTodayriskcountResponse queryHasLocaloverviewTodayriskcountWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasLocaloverviewTodayriskcount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasLocaloverviewTodayriskcountResponse());
    }

    public QueryHasLocaloverviewTodayriskcountResponse queryHasLocaloverviewTodayriskcount() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasLocaloverviewTodayriskcountWithOptions(runtime);
    }

    public QueryHasLocaloverviewTodayrisklistResponse queryHasLocaloverviewTodayrisklistWithOptions(QueryHasLocaloverviewTodayrisklistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasLocaloverviewTodayrisklist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasLocaloverviewTodayrisklistResponse());
    }

    public QueryHasLocaloverviewTodayrisklistResponse queryHasLocaloverviewTodayrisklist(QueryHasLocaloverviewTodayrisklistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasLocaloverviewTodayrisklistWithOptions(request, runtime);
    }

    public QueryHasLocaloverviewTotalcountResponse queryHasLocaloverviewTotalcountWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasLocaloverviewTotalcount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasLocaloverviewTotalcountResponse());
    }

    public QueryHasLocaloverviewTotalcountResponse queryHasLocaloverviewTotalcount() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasLocaloverviewTotalcountWithOptions(runtime);
    }

    public QueryHasMonitorRmsworkspaceResponse queryHasMonitorRmsworkspaceWithOptions(QueryHasMonitorRmsworkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasMonitorRmsworkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasMonitorRmsworkspaceResponse());
    }

    public QueryHasMonitorRmsworkspaceResponse queryHasMonitorRmsworkspace(QueryHasMonitorRmsworkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasMonitorRmsworkspaceWithOptions(request, runtime);
    }

    public QueryHasNwapprovalprocessApprovaltypesResponse queryHasNwapprovalprocessApprovaltypesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasNwapprovalprocessApprovaltypes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasNwapprovalprocessApprovaltypesResponse());
    }

    public QueryHasNwapprovalprocessApprovaltypesResponse queryHasNwapprovalprocessApprovaltypes() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasNwapprovalprocessApprovaltypesWithOptions(runtime);
    }

    public QueryHasNwapprovalprocessIsdefaultexistResponse queryHasNwapprovalprocessIsdefaultexistWithOptions(QueryHasNwapprovalprocessIsdefaultexistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasNwapprovalprocessIsdefaultexist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasNwapprovalprocessIsdefaultexistResponse());
    }

    public QueryHasNwapprovalprocessIsdefaultexistResponse queryHasNwapprovalprocessIsdefaultexist(QueryHasNwapprovalprocessIsdefaultexistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasNwapprovalprocessIsdefaultexistWithOptions(request, runtime);
    }

    public QueryHasRiskAggregationResponse queryHasRiskAggregationWithOptions(QueryHasRiskAggregationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasRiskAggregation", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRiskAggregationResponse());
    }

    public QueryHasRiskAggregationResponse queryHasRiskAggregation(QueryHasRiskAggregationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRiskAggregationWithOptions(request, runtime);
    }

    public QueryHasRiskAggregationdetailResponse queryHasRiskAggregationdetailWithOptions(QueryHasRiskAggregationdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasRiskAggregationdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRiskAggregationdetailResponse());
    }

    public QueryHasRiskAggregationdetailResponse queryHasRiskAggregationdetail(QueryHasRiskAggregationdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRiskAggregationdetailWithOptions(request, runtime);
    }

    public QueryHasRiskAggregationdiagplansResponse queryHasRiskAggregationdiagplansWithOptions(QueryHasRiskAggregationdiagplansRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasRiskAggregationdiagplans", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRiskAggregationdiagplansResponse());
    }

    public QueryHasRiskAggregationdiagplansResponse queryHasRiskAggregationdiagplans(QueryHasRiskAggregationdiagplansRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRiskAggregationdiagplansWithOptions(request, runtime);
    }

    public QueryHasRiskAggregationinspectdetailResponse queryHasRiskAggregationinspectdetailWithOptions(QueryHasRiskAggregationinspectdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasRiskAggregationinspectdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRiskAggregationinspectdetailResponse());
    }

    public QueryHasRiskAggregationinspectdetailResponse queryHasRiskAggregationinspectdetail(QueryHasRiskAggregationinspectdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRiskAggregationinspectdetailWithOptions(request, runtime);
    }

    public QueryHasRiskItemResponse queryHasRiskItemWithOptions(QueryHasRiskItemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasRiskItem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRiskItemResponse());
    }

    public QueryHasRiskItemResponse queryHasRiskItem(QueryHasRiskItemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRiskItemWithOptions(request, runtime);
    }

    public QueryHasRiskItemdetailResponse queryHasRiskItemdetailWithOptions(QueryHasRiskItemdetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasRiskItemdetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRiskItemdetailResponse());
    }

    public QueryHasRiskItemdetailResponse queryHasRiskItemdetail(QueryHasRiskItemdetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRiskItemdetailWithOptions(request, runtime);
    }

    public QueryHasRiskLevelsResponse queryHasRiskLevelsWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasRiskLevels", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRiskLevelsResponse());
    }

    public QueryHasRiskLevelsResponse queryHasRiskLevels() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRiskLevelsWithOptions(runtime);
    }

    public QueryHasRiskOrderstatusesResponse queryHasRiskOrderstatusesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasRiskOrderstatuses", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRiskOrderstatusesResponse());
    }

    public QueryHasRiskOrderstatusesResponse queryHasRiskOrderstatuses() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRiskOrderstatusesWithOptions(runtime);
    }

    public QueryHasRiskPreplanforaggregationitemResponse queryHasRiskPreplanforaggregationitemWithOptions(QueryHasRiskPreplanforaggregationitemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasRiskPreplanforaggregationitem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRiskPreplanforaggregationitemResponse());
    }

    public QueryHasRiskPreplanforaggregationitemResponse queryHasRiskPreplanforaggregationitem(QueryHasRiskPreplanforaggregationitemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRiskPreplanforaggregationitemWithOptions(request, runtime);
    }

    public QueryHasRisksceneResponse queryHasRisksceneWithOptions(QueryHasRisksceneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasRiskscene", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRisksceneResponse());
    }

    public QueryHasRisksceneResponse queryHasRiskscene(QueryHasRisksceneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRisksceneWithOptions(request, runtime);
    }

    public QueryHasRiskSourcesResponse queryHasRiskSourcesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasRiskSources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRiskSourcesResponse());
    }

    public QueryHasRiskSourcesResponse queryHasRiskSources() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRiskSourcesWithOptions(runtime);
    }

    public QueryHasRiskStatusesResponse queryHasRiskStatusesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasRiskStatuses", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRiskStatusesResponse());
    }

    public QueryHasRiskStatusesResponse queryHasRiskStatuses() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRiskStatusesWithOptions(runtime);
    }

    public QueryHasRiskTargettypesResponse queryHasRiskTargettypesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasRiskTargettypes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRiskTargettypesResponse());
    }

    public QueryHasRiskTargettypesResponse queryHasRiskTargettypes() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRiskTargettypesWithOptions(runtime);
    }

    public QueryHasRisktreatmentorderResponse queryHasRisktreatmentorderWithOptions(QueryHasRisktreatmentorderRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasRisktreatmentorder", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasRisktreatmentorderResponse());
    }

    public QueryHasRisktreatmentorderResponse queryHasRisktreatmentorder(QueryHasRisktreatmentorderRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasRisktreatmentorderWithOptions(request, runtime);
    }

    public QueryHasTenantlistResponse queryHasTenantlistWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryHasTenantlist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasTenantlistResponse());
    }

    public QueryHasTenantlistResponse queryHasTenantlist() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasTenantlistWithOptions(runtime);
    }

    public QueryHasUserappgroupRelationResponse queryHasUserappgroupRelationWithOptions(QueryHasUserappgroupRelationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryHasUserappgroupRelation", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryHasUserappgroupRelationResponse());
    }

    public QueryHasUserappgroupRelationResponse queryHasUserappgroupRelation(QueryHasUserappgroupRelationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryHasUserappgroupRelationWithOptions(request, runtime);
    }

    public QueryLDCCellResponse queryLDCCellWithOptions(QueryLDCCellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCCell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCCellResponse());
    }

    public QueryLDCCellResponse queryLDCCell(QueryLDCCellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCCellWithOptions(request, runtime);
    }

    public QueryLDCContainerServiceResponse queryLDCContainerServiceWithOptions(QueryLDCContainerServiceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCContainerService", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCContainerServiceResponse());
    }

    public QueryLDCContainerServiceResponse queryLDCContainerService(QueryLDCContainerServiceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCContainerServiceWithOptions(request, runtime);
    }

    public QueryLDCContainerServiceRevisionResponse queryLDCContainerServiceRevisionWithOptions(QueryLDCContainerServiceRevisionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCContainerServiceRevision", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCContainerServiceRevisionResponse());
    }

    public QueryLDCContainerServiceRevisionResponse queryLDCContainerServiceRevision(QueryLDCContainerServiceRevisionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCContainerServiceRevisionWithOptions(request, runtime);
    }

    public QueryLDCFederationSpannerClusterResponse queryLDCFederationSpannerClusterWithOptions(QueryLDCFederationSpannerClusterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCFederationSpannerCluster", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCFederationSpannerClusterResponse());
    }

    public QueryLDCFederationSpannerClusterResponse queryLDCFederationSpannerCluster(QueryLDCFederationSpannerClusterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCFederationSpannerClusterWithOptions(request, runtime);
    }

    public QueryLDCFlowRecordResponse queryLDCFlowRecordWithOptions(QueryLDCFlowRecordRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCFlowRecord", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCFlowRecordResponse());
    }

    public QueryLDCFlowRecordResponse queryLDCFlowRecord(QueryLDCFlowRecordRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCFlowRecordWithOptions(request, runtime);
    }

    public QueryLDCFlowRuleResponse queryLDCFlowRuleWithOptions(QueryLDCFlowRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCFlowRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCFlowRuleResponse());
    }

    public QueryLDCFlowRuleResponse queryLDCFlowRule(QueryLDCFlowRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCFlowRuleWithOptions(request, runtime);
    }

    public QueryLDCFlowSiteResponse queryLDCFlowSiteWithOptions(QueryLDCFlowSiteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCFlowSite", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCFlowSiteResponse());
    }

    public QueryLDCFlowSiteResponse queryLDCFlowSite(QueryLDCFlowSiteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCFlowSiteWithOptions(request, runtime);
    }

    public QueryLDCFlowUidInfoResponse queryLDCFlowUidInfoWithOptions(QueryLDCFlowUidInfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCFlowUidInfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCFlowUidInfoResponse());
    }

    public QueryLDCFlowUidInfoResponse queryLDCFlowUidInfo(QueryLDCFlowUidInfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCFlowUidInfoWithOptions(request, runtime);
    }

    public QueryLDCOpsplanResponse queryLDCOpsplanWithOptions(QueryLDCOpsplanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCOpsplan", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCOpsplanResponse());
    }

    public QueryLDCOpsplanResponse queryLDCOpsplan(QueryLDCOpsplanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCOpsplanWithOptions(request, runtime);
    }

    public QueryLDCOpsplanAppprogressResponse queryLDCOpsplanAppprogressWithOptions(QueryLDCOpsplanAppprogressRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCOpsplanAppprogress", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCOpsplanAppprogressResponse());
    }

    public QueryLDCOpsplanAppprogressResponse queryLDCOpsplanAppprogress(QueryLDCOpsplanAppprogressRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCOpsplanAppprogressWithOptions(request, runtime);
    }

    public QueryLDCOpsplanDetailResponse queryLDCOpsplanDetailWithOptions(QueryLDCOpsplanDetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCOpsplanDetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCOpsplanDetailResponse());
    }

    public QueryLDCOpsplanDetailResponse queryLDCOpsplanDetail(QueryLDCOpsplanDetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCOpsplanDetailWithOptions(request, runtime);
    }

    public QueryLDCOpsplanProgressResponse queryLDCOpsplanProgressWithOptions(QueryLDCOpsplanProgressRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCOpsplanProgress", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCOpsplanProgressResponse());
    }

    public QueryLDCOpsplanProgressResponse queryLDCOpsplanProgress(QueryLDCOpsplanProgressRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCOpsplanProgressWithOptions(request, runtime);
    }

    public QueryLDCOpsplanStatesummaryResponse queryLDCOpsplanStatesummaryWithOptions(QueryLDCOpsplanStatesummaryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCOpsplanStatesummary", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCOpsplanStatesummaryResponse());
    }

    public QueryLDCOpsplanStatesummaryResponse queryLDCOpsplanStatesummary(QueryLDCOpsplanStatesummaryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCOpsplanStatesummaryWithOptions(request, runtime);
    }

    public QueryLDCUnifiedAccessInstanceResponse queryLDCUnifiedAccessInstanceWithOptions(QueryLDCUnifiedAccessInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLDCUnifiedAccessInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLDCUnifiedAccessInstanceResponse());
    }

    public QueryLDCUnifiedAccessInstanceResponse queryLDCUnifiedAccessInstance(QueryLDCUnifiedAccessInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLDCUnifiedAccessInstanceWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeAcceptprojectreviewtaskResponse queryLinkeantcodeAntcodeAcceptprojectreviewtaskWithOptions(QueryLinkeantcodeAntcodeAcceptprojectreviewtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeAcceptprojectreviewtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeAcceptprojectreviewtaskResponse());
    }

    public QueryLinkeantcodeAntcodeAcceptprojectreviewtaskResponse queryLinkeantcodeAntcodeAcceptprojectreviewtask(QueryLinkeantcodeAntcodeAcceptprojectreviewtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeAcceptprojectreviewtaskWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeAcipipelinewebhooktoantcodeResponse queryLinkeantcodeAntcodeAcipipelinewebhooktoantcodeWithOptions(QueryLinkeantcodeAntcodeAcipipelinewebhooktoantcodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeAcipipelinewebhooktoantcode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeAcipipelinewebhooktoantcodeResponse());
    }

    public QueryLinkeantcodeAntcodeAcipipelinewebhooktoantcodeResponse queryLinkeantcodeAntcodeAcipipelinewebhooktoantcode(QueryLinkeantcodeAntcodeAcipipelinewebhooktoantcodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeAcipipelinewebhooktoantcodeWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeAciprojectsidpipelinesexeccancelexecidResponse queryLinkeantcodeAntcodeAciprojectsidpipelinesexeccancelexecidWithOptions(QueryLinkeantcodeAntcodeAciprojectsidpipelinesexeccancelexecidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeAciprojectsidpipelinesexeccancelexecid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeAciprojectsidpipelinesexeccancelexecidResponse());
    }

    public QueryLinkeantcodeAntcodeAciprojectsidpipelinesexeccancelexecidResponse queryLinkeantcodeAntcodeAciprojectsidpipelinesexeccancelexecid(QueryLinkeantcodeAntcodeAciprojectsidpipelinesexeccancelexecidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeAciprojectsidpipelinesexeccancelexecidWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeAciprojectsidpipelinesexecrerunfailedexecidResponse queryLinkeantcodeAntcodeAciprojectsidpipelinesexecrerunfailedexecidWithOptions(QueryLinkeantcodeAntcodeAciprojectsidpipelinesexecrerunfailedexecidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeAciprojectsidpipelinesexecrerunfailedexecid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeAciprojectsidpipelinesexecrerunfailedexecidResponse());
    }

    public QueryLinkeantcodeAntcodeAciprojectsidpipelinesexecrerunfailedexecidResponse queryLinkeantcodeAntcodeAciprojectsidpipelinesexecrerunfailedexecid(QueryLinkeantcodeAntcodeAciprojectsidpipelinesexecrerunfailedexecidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeAciprojectsidpipelinesexecrerunfailedexecidWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeAddhookResponse queryLinkeantcodeAntcodeAddhookWithOptions(QueryLinkeantcodeAntcodeAddhookRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeAddhook", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeAddhookResponse());
    }

    public QueryLinkeantcodeAntcodeAddhookResponse queryLinkeantcodeAntcodeAddhook(QueryLinkeantcodeAntcodeAddhookRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeAddhookWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeApiunprotectrepositorybranchesResponse queryLinkeantcodeAntcodeApiunprotectrepositorybranchesWithOptions(QueryLinkeantcodeAntcodeApiunprotectrepositorybranchesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeApiunprotectrepositorybranches", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeApiunprotectrepositorybranchesResponse());
    }

    public QueryLinkeantcodeAntcodeApiunprotectrepositorybranchesResponse queryLinkeantcodeAntcodeApiunprotectrepositorybranches(QueryLinkeantcodeAntcodeApiunprotectrepositorybranchesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeApiunprotectrepositorybranchesWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeApiupdatenamespacememberResponse queryLinkeantcodeAntcodeApiupdatenamespacememberWithOptions(QueryLinkeantcodeAntcodeApiupdatenamespacememberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeApiupdatenamespacemember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeApiupdatenamespacememberResponse());
    }

    public QueryLinkeantcodeAntcodeApiupdatenamespacememberResponse queryLinkeantcodeAntcodeApiupdatenamespacemember(QueryLinkeantcodeAntcodeApiupdatenamespacememberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeApiupdatenamespacememberWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeApiwebhookResponse queryLinkeantcodeAntcodeApiwebhookWithOptions(QueryLinkeantcodeAntcodeApiwebhookRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeApiwebhook", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeApiwebhookResponse());
    }

    public QueryLinkeantcodeAntcodeApiwebhookResponse queryLinkeantcodeAntcodeApiwebhook(QueryLinkeantcodeAntcodeApiwebhookRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeApiwebhookWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeBatchuploadartifactsResponse queryLinkeantcodeAntcodeBatchuploadartifactsWithOptions(QueryLinkeantcodeAntcodeBatchuploadartifactsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeBatchuploadartifacts", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeBatchuploadartifactsResponse());
    }

    public QueryLinkeantcodeAntcodeBatchuploadartifactsResponse queryLinkeantcodeAntcodeBatchuploadartifacts(QueryLinkeantcodeAntcodeBatchuploadartifactsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeBatchuploadartifactsWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeCommitreviewResponse queryLinkeantcodeAntcodeCommitreviewWithOptions(QueryLinkeantcodeAntcodeCommitreviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeCommitreview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeCommitreviewResponse());
    }

    public QueryLinkeantcodeAntcodeCommitreviewResponse queryLinkeantcodeAntcodeCommitreview(QueryLinkeantcodeAntcodeCommitreviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeCommitreviewWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeCreateanewprojectResponse queryLinkeantcodeAntcodeCreateanewprojectWithOptions(QueryLinkeantcodeAntcodeCreateanewprojectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeCreateanewproject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeCreateanewprojectResponse());
    }

    public QueryLinkeantcodeAntcodeCreateanewprojectResponse queryLinkeantcodeAntcodeCreateanewproject(QueryLinkeantcodeAntcodeCreateanewprojectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeCreateanewprojectWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeDeleteprojectbranchbybranchnameResponse queryLinkeantcodeAntcodeDeleteprojectbranchbybranchnameWithOptions(QueryLinkeantcodeAntcodeDeleteprojectbranchbybranchnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeDeleteprojectbranchbybranchname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeDeleteprojectbranchbybranchnameResponse());
    }

    public QueryLinkeantcodeAntcodeDeleteprojectbranchbybranchnameResponse queryLinkeantcodeAntcodeDeleteprojectbranchbybranchname(QueryLinkeantcodeAntcodeDeleteprojectbranchbybranchnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeDeleteprojectbranchbybranchnameWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeDeletesalabelgivenbyitsnameResponse queryLinkeantcodeAntcodeDeletesalabelgivenbyitsnameWithOptions(QueryLinkeantcodeAntcodeDeletesalabelgivenbyitsnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeDeletesalabelgivenbyitsname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeDeletesalabelgivenbyitsnameResponse());
    }

    public QueryLinkeantcodeAntcodeDeletesalabelgivenbyitsnameResponse queryLinkeantcodeAntcodeDeletesalabelgivenbyitsname(QueryLinkeantcodeAntcodeDeletesalabelgivenbyitsnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeDeletesalabelgivenbyitsnameWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeExternswebhookResponse queryLinkeantcodeAntcodeExternswebhookWithOptions(QueryLinkeantcodeAntcodeExternswebhookRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeExternswebhook", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeExternswebhookResponse());
    }

    public QueryLinkeantcodeAntcodeExternswebhookResponse queryLinkeantcodeAntcodeExternswebhook(QueryLinkeantcodeAntcodeExternswebhookRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeExternswebhookWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeGetprojectbranchbybranchnameResponse queryLinkeantcodeAntcodeGetprojectbranchbybranchnameWithOptions(QueryLinkeantcodeAntcodeGetprojectbranchbybranchnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeGetprojectbranchbybranchname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeGetprojectbranchbybranchnameResponse());
    }

    public QueryLinkeantcodeAntcodeGetprojectbranchbybranchnameResponse queryLinkeantcodeAntcodeGetprojectbranchbybranchname(QueryLinkeantcodeAntcodeGetprojectbranchbybranchnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeGetprojectbranchbybranchnameWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeLockprojectvariableResponse queryLinkeantcodeAntcodeLockprojectvariableWithOptions(QueryLinkeantcodeAntcodeLockprojectvariableRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeLockprojectvariable", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeLockprojectvariableResponse());
    }

    public QueryLinkeantcodeAntcodeLockprojectvariableResponse queryLinkeantcodeAntcodeLockprojectvariable(QueryLinkeantcodeAntcodeLockprojectvariableRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeLockprojectvariableWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeLsifexistsResponse queryLinkeantcodeAntcodeLsifexistsWithOptions(QueryLinkeantcodeAntcodeLsifexistsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeLsifexists", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeLsifexistsResponse());
    }

    public QueryLinkeantcodeAntcodeLsifexistsResponse queryLinkeantcodeAntcodeLsifexists(QueryLinkeantcodeAntcodeLsifexistsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeLsifexistsWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeManualbranchpipelineexecResponse queryLinkeantcodeAntcodeManualbranchpipelineexecWithOptions(QueryLinkeantcodeAntcodeManualbranchpipelineexecRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeManualbranchpipelineexec", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeManualbranchpipelineexecResponse());
    }

    public QueryLinkeantcodeAntcodeManualbranchpipelineexecResponse queryLinkeantcodeAntcodeManualbranchpipelineexec(QueryLinkeantcodeAntcodeManualbranchpipelineexecRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeManualbranchpipelineexecWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeMergeprojectpullrequestResponse queryLinkeantcodeAntcodeMergeprojectpullrequestWithOptions(QueryLinkeantcodeAntcodeMergeprojectpullrequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeMergeprojectpullrequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeMergeprojectpullrequestResponse());
    }

    public QueryLinkeantcodeAntcodeMergeprojectpullrequestResponse queryLinkeantcodeAntcodeMergeprojectpullrequest(QueryLinkeantcodeAntcodeMergeprojectpullrequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeMergeprojectpullrequestWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodePermissionsasynccycleuserpermissionsResponse queryLinkeantcodeAntcodePermissionsasynccycleuserpermissionsWithOptions(QueryLinkeantcodeAntcodePermissionsasynccycleuserpermissionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodePermissionsasynccycleuserpermissions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodePermissionsasynccycleuserpermissionsResponse());
    }

    public QueryLinkeantcodeAntcodePermissionsasynccycleuserpermissionsResponse queryLinkeantcodeAntcodePermissionsasynccycleuserpermissions(QueryLinkeantcodeAntcodePermissionsasynccycleuserpermissionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodePermissionsasynccycleuserpermissionsWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeProjectsidResponse queryLinkeantcodeAntcodeProjectsidWithOptions(QueryLinkeantcodeAntcodeProjectsidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeProjectsid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeProjectsidResponse());
    }

    public QueryLinkeantcodeAntcodeProjectsidResponse queryLinkeantcodeAntcodeProjectsid(QueryLinkeantcodeAntcodeProjectsidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeProjectsidWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeProjectsidgcResponse queryLinkeantcodeAntcodeProjectsidgcWithOptions(QueryLinkeantcodeAntcodeProjectsidgcRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeProjectsidgc", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeProjectsidgcResponse());
    }

    public QueryLinkeantcodeAntcodeProjectsidgcResponse queryLinkeantcodeAntcodeProjectsidgc(QueryLinkeantcodeAntcodeProjectsidgcRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeProjectsidgcWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidsubscribeResponse queryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidsubscribeWithOptions(QueryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidsubscribeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidsubscribe", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidsubscribeResponse());
    }

    public QueryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidsubscribeResponse queryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidsubscribe(QueryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidsubscribeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidsubscribeWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidunsubscribeResponse queryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidunsubscribeWithOptions(QueryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidunsubscribeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidunsubscribe", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidunsubscribeResponse());
    }

    public QueryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidunsubscribeResponse queryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidunsubscribe(QueryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidunsubscribeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeProjectsidpullrequestspullrequestidunsubscribeWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeProjectsidrepositorylsifdefinitionsResponse queryLinkeantcodeAntcodeProjectsidrepositorylsifdefinitionsWithOptions(QueryLinkeantcodeAntcodeProjectsidrepositorylsifdefinitionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeProjectsidrepositorylsifdefinitions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeProjectsidrepositorylsifdefinitionsResponse());
    }

    public QueryLinkeantcodeAntcodeProjectsidrepositorylsifdefinitionsResponse queryLinkeantcodeAntcodeProjectsidrepositorylsifdefinitions(QueryLinkeantcodeAntcodeProjectsidrepositorylsifdefinitionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeProjectsidrepositorylsifdefinitionsWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeProjectsidrepositorylsifhoverResponse queryLinkeantcodeAntcodeProjectsidrepositorylsifhoverWithOptions(QueryLinkeantcodeAntcodeProjectsidrepositorylsifhoverRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeProjectsidrepositorylsifhover", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeProjectsidrepositorylsifhoverResponse());
    }

    public QueryLinkeantcodeAntcodeProjectsidrepositorylsifhoverResponse queryLinkeantcodeAntcodeProjectsidrepositorylsifhover(QueryLinkeantcodeAntcodeProjectsidrepositorylsifhoverRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeProjectsidrepositorylsifhoverWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeProjectsidrepositorylsifreferencesResponse queryLinkeantcodeAntcodeProjectsidrepositorylsifreferencesWithOptions(QueryLinkeantcodeAntcodeProjectsidrepositorylsifreferencesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeProjectsidrepositorylsifreferences", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeProjectsidrepositorylsifreferencesResponse());
    }

    public QueryLinkeantcodeAntcodeProjectsidrepositorylsifreferencesResponse queryLinkeantcodeAntcodeProjectsidrepositorylsifreferences(QueryLinkeantcodeAntcodeProjectsidrepositorylsifreferencesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeProjectsidrepositorylsifreferencesWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeProjectsidstarResponse queryLinkeantcodeAntcodeProjectsidstarWithOptions(QueryLinkeantcodeAntcodeProjectsidstarRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeProjectsidstar", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeProjectsidstarResponse());
    }

    public QueryLinkeantcodeAntcodeProjectsidstarResponse queryLinkeantcodeAntcodeProjectsidstar(QueryLinkeantcodeAntcodeProjectsidstarRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeProjectsidstarWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeProjectsidunstarResponse queryLinkeantcodeAntcodeProjectsidunstarWithOptions(QueryLinkeantcodeAntcodeProjectsidunstarRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeProjectsidunstar", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeProjectsidunstarResponse());
    }

    public QueryLinkeantcodeAntcodeProjectsidunstarResponse queryLinkeantcodeAntcodeProjectsidunstar(QueryLinkeantcodeAntcodeProjectsidunstarRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeProjectsidunstarWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeProjectsupdateprojectpullrequestconfigResponse queryLinkeantcodeAntcodeProjectsupdateprojectpullrequestconfigWithOptions(QueryLinkeantcodeAntcodeProjectsupdateprojectpullrequestconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeProjectsupdateprojectpullrequestconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeProjectsupdateprojectpullrequestconfigResponse());
    }

    public QueryLinkeantcodeAntcodeProjectsupdateprojectpullrequestconfigResponse queryLinkeantcodeAntcodeProjectsupdateprojectpullrequestconfig(QueryLinkeantcodeAntcodeProjectsupdateprojectpullrequestconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeProjectsupdateprojectpullrequestconfigWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeProtecprojectbranchbybranchnameResponse queryLinkeantcodeAntcodeProtecprojectbranchbybranchnameWithOptions(QueryLinkeantcodeAntcodeProtecprojectbranchbybranchnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeProtecprojectbranchbybranchname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeProtecprojectbranchbybranchnameResponse());
    }

    public QueryLinkeantcodeAntcodeProtecprojectbranchbybranchnameResponse queryLinkeantcodeAntcodeProtecprojectbranchbybranchname(QueryLinkeantcodeAntcodeProtecprojectbranchbybranchnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeProtecprojectbranchbybranchnameWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeProtectprojectbranchbybranchnameResponse queryLinkeantcodeAntcodeProtectprojectbranchbybranchnameWithOptions(QueryLinkeantcodeAntcodeProtectprojectbranchbybranchnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeProtectprojectbranchbybranchname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeProtectprojectbranchbybranchnameResponse());
    }

    public QueryLinkeantcodeAntcodeProtectprojectbranchbybranchnameResponse queryLinkeantcodeAntcodeProtectprojectbranchbybranchname(QueryLinkeantcodeAntcodeProtectprojectbranchbybranchnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeProtectprojectbranchbybranchnameWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeProtectrepositorybranchesResponse queryLinkeantcodeAntcodeProtectrepositorybranchesWithOptions(QueryLinkeantcodeAntcodeProtectrepositorybranchesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeProtectrepositorybranches", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeProtectrepositorybranchesResponse());
    }

    public QueryLinkeantcodeAntcodeProtectrepositorybranchesResponse queryLinkeantcodeAntcodeProtectrepositorybranches(QueryLinkeantcodeAntcodeProtectrepositorybranchesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeProtectrepositorybranchesWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeRebaseprojectpullrequestResponse queryLinkeantcodeAntcodeRebaseprojectpullrequestWithOptions(QueryLinkeantcodeAntcodeRebaseprojectpullrequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeRebaseprojectpullrequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeRebaseprojectpullrequestResponse());
    }

    public QueryLinkeantcodeAntcodeRebaseprojectpullrequestResponse queryLinkeantcodeAntcodeRebaseprojectpullrequest(QueryLinkeantcodeAntcodeRebaseprojectpullrequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeRebaseprojectpullrequestWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeRerunfailedpipelinebyexecResponse queryLinkeantcodeAntcodeRerunfailedpipelinebyexecWithOptions(QueryLinkeantcodeAntcodeRerunfailedpipelinebyexecRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeRerunfailedpipelinebyexec", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeRerunfailedpipelinebyexecResponse());
    }

    public QueryLinkeantcodeAntcodeRerunfailedpipelinebyexecResponse queryLinkeantcodeAntcodeRerunfailedpipelinebyexec(QueryLinkeantcodeAntcodeRerunfailedpipelinebyexecRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeRerunfailedpipelinebyexecWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeSearchblobsResponse queryLinkeantcodeAntcodeSearchblobsWithOptions(QueryLinkeantcodeAntcodeSearchblobsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeSearchblobs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeSearchblobsResponse());
    }

    public QueryLinkeantcodeAntcodeSearchblobsResponse queryLinkeantcodeAntcodeSearchblobs(QueryLinkeantcodeAntcodeSearchblobsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeSearchblobsWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeTesthookResponse queryLinkeantcodeAntcodeTesthookWithOptions(QueryLinkeantcodeAntcodeTesthookRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeTesthook", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeTesthookResponse());
    }

    public QueryLinkeantcodeAntcodeTesthookResponse queryLinkeantcodeAntcodeTesthook(QueryLinkeantcodeAntcodeTesthookRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeTesthookWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeUnlockprojectvariableResponse queryLinkeantcodeAntcodeUnlockprojectvariableWithOptions(QueryLinkeantcodeAntcodeUnlockprojectvariableRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeUnlockprojectvariable", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeUnlockprojectvariableResponse());
    }

    public QueryLinkeantcodeAntcodeUnlockprojectvariableResponse queryLinkeantcodeAntcodeUnlockprojectvariable(QueryLinkeantcodeAntcodeUnlockprojectvariableRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeUnlockprojectvariableWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeUpdatesnexistinglabelwithnewnameornowcolorResponse queryLinkeantcodeAntcodeUpdatesnexistinglabelwithnewnameornowcolorWithOptions(QueryLinkeantcodeAntcodeUpdatesnexistinglabelwithnewnameornowcolorRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeUpdatesnexistinglabelwithnewnameornowcolor", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeUpdatesnexistinglabelwithnewnameornowcolorResponse());
    }

    public QueryLinkeantcodeAntcodeUpdatesnexistinglabelwithnewnameornowcolorResponse queryLinkeantcodeAntcodeUpdatesnexistinglabelwithnewnameornowcolor(QueryLinkeantcodeAntcodeUpdatesnexistinglabelwithnewnameornowcolorRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeUpdatesnexistinglabelwithnewnameornowcolorWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeUserkeyskeyidResponse queryLinkeantcodeAntcodeUserkeyskeyidWithOptions(QueryLinkeantcodeAntcodeUserkeyskeyidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeUserkeyskeyid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeUserkeyskeyidResponse());
    }

    public QueryLinkeantcodeAntcodeUserkeyskeyidResponse queryLinkeantcodeAntcodeUserkeyskeyid(QueryLinkeantcodeAntcodeUserkeyskeyidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeUserkeyskeyidWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeUserpasswordResponse queryLinkeantcodeAntcodeUserpasswordWithOptions(QueryLinkeantcodeAntcodeUserpasswordRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeUserpassword", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeUserpasswordResponse());
    }

    public QueryLinkeantcodeAntcodeUserpasswordResponse queryLinkeantcodeAntcodeUserpassword(QueryLinkeantcodeAntcodeUserpasswordRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeUserpasswordWithOptions(request, runtime);
    }

    public QueryLinkeantcodeAntcodeUsertrackResponse queryLinkeantcodeAntcodeUsertrackWithOptions(QueryLinkeantcodeAntcodeUsertrackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeantcodeAntcodeUsertrack", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeantcodeAntcodeUsertrackResponse());
    }

    public QueryLinkeantcodeAntcodeUsertrackResponse queryLinkeantcodeAntcodeUsertrack(QueryLinkeantcodeAntcodeUsertrackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeantcodeAntcodeUsertrackWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAdminiterationtemplateidResponse queryLinkeBahamutAdminiterationtemplateidWithOptions(QueryLinkeBahamutAdminiterationtemplateidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAdminiterationtemplateid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAdminiterationtemplateidResponse());
    }

    public QueryLinkeBahamutAdminiterationtemplateidResponse queryLinkeBahamutAdminiterationtemplateid(QueryLinkeBahamutAdminiterationtemplateidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAdminiterationtemplateidWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAdminpipelineResponse queryLinkeBahamutAdminpipelineWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAdminpipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAdminpipelineResponse());
    }

    public QueryLinkeBahamutAdminpipelineResponse queryLinkeBahamutAdminpipeline() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAdminpipelineWithOptions(runtime);
    }

    public QueryLinkeBahamutAdminpipelinecomponentResponse queryLinkeBahamutAdminpipelinecomponentWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAdminpipelinecomponent", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAdminpipelinecomponentResponse());
    }

    public QueryLinkeBahamutAdminpipelinecomponentResponse queryLinkeBahamutAdminpipelinecomponent() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAdminpipelinecomponentWithOptions(runtime);
    }

    public QueryLinkeBahamutAdmintenantidpipelineResponse queryLinkeBahamutAdmintenantidpipelineWithOptions(QueryLinkeBahamutAdmintenantidpipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAdmintenantidpipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAdmintenantidpipelineResponse());
    }

    public QueryLinkeBahamutAdmintenantidpipelineResponse queryLinkeBahamutAdmintenantidpipeline(QueryLinkeBahamutAdmintenantidpipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAdmintenantidpipelineWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAdmintesttemplatResponse queryLinkeBahamutAdmintesttemplatWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAdmintesttemplat", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAdmintesttemplatResponse());
    }

    public QueryLinkeBahamutAdmintesttemplatResponse queryLinkeBahamutAdmintesttemplat() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAdmintesttemplatWithOptions(runtime);
    }

    public QueryLinkeBahamutAdminuserroleResponse queryLinkeBahamutAdminuserroleWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAdminuserrole", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAdminuserroleResponse());
    }

    public QueryLinkeBahamutAdminuserroleResponse queryLinkeBahamutAdminuserrole() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAdminuserroleWithOptions(runtime);
    }

    public QueryLinkeBahamutAntcloudappResponse queryLinkeBahamutAntcloudappWithOptions(QueryLinkeBahamutAntcloudappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAntcloudapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAntcloudappResponse());
    }

    public QueryLinkeBahamutAntcloudappResponse queryLinkeBahamutAntcloudapp(QueryLinkeBahamutAntcloudappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAntcloudappWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAoneinternalgreenchannelsResponse queryLinkeBahamutAoneinternalgreenchannelsWithOptions(QueryLinkeBahamutAoneinternalgreenchannelsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAoneinternalgreenchannels", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAoneinternalgreenchannelsResponse());
    }

    public QueryLinkeBahamutAoneinternalgreenchannelsResponse queryLinkeBahamutAoneinternalgreenchannels(QueryLinkeBahamutAoneinternalgreenchannelsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAoneinternalgreenchannelsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAoneinternaliterationResponse queryLinkeBahamutAoneinternaliterationWithOptions(QueryLinkeBahamutAoneinternaliterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAoneinternaliteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAoneinternaliterationResponse());
    }

    public QueryLinkeBahamutAoneinternaliterationResponse queryLinkeBahamutAoneinternaliteration(QueryLinkeBahamutAoneinternaliterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAoneinternaliterationWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAoneinternalnotrelatedreleaseaonecodechangeResponse queryLinkeBahamutAoneinternalnotrelatedreleaseaonecodechangeWithOptions(QueryLinkeBahamutAoneinternalnotrelatedreleaseaonecodechangeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAoneinternalnotrelatedreleaseaonecodechange", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAoneinternalnotrelatedreleaseaonecodechangeResponse());
    }

    public QueryLinkeBahamutAoneinternalnotrelatedreleaseaonecodechangeResponse queryLinkeBahamutAoneinternalnotrelatedreleaseaonecodechange(QueryLinkeBahamutAoneinternalnotrelatedreleaseaonecodechangeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAoneinternalnotrelatedreleaseaonecodechangeWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAoneinternalpagedprojectsResponse queryLinkeBahamutAoneinternalpagedprojectsWithOptions(QueryLinkeBahamutAoneinternalpagedprojectsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAoneinternalpagedprojects", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAoneinternalpagedprojectsResponse());
    }

    public QueryLinkeBahamutAoneinternalpagedprojectsResponse queryLinkeBahamutAoneinternalpagedprojects(QueryLinkeBahamutAoneinternalpagedprojectsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAoneinternalpagedprojectsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAoneinternalworkitemResponse queryLinkeBahamutAoneinternalworkitemWithOptions(QueryLinkeBahamutAoneinternalworkitemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAoneinternalworkitem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAoneinternalworkitemResponse());
    }

    public QueryLinkeBahamutAoneinternalworkitemResponse queryLinkeBahamutAoneinternalworkitem(QueryLinkeBahamutAoneinternalworkitemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAoneinternalworkitemWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAoneinternalworkitemsearchbyidsResponse queryLinkeBahamutAoneinternalworkitemsearchbyidsWithOptions(QueryLinkeBahamutAoneinternalworkitemsearchbyidsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAoneinternalworkitemsearchbyids", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAoneinternalworkitemsearchbyidsResponse());
    }

    public QueryLinkeBahamutAoneinternalworkitemsearchbyidsResponse queryLinkeBahamutAoneinternalworkitemsearchbyids(QueryLinkeBahamutAoneinternalworkitemsearchbyidsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAoneinternalworkitemsearchbyidsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAoneiterationsResponse queryLinkeBahamutAoneiterationsWithOptions(QueryLinkeBahamutAoneiterationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAoneiterations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAoneiterationsResponse());
    }

    public QueryLinkeBahamutAoneiterationsResponse queryLinkeBahamutAoneiterations(QueryLinkeBahamutAoneiterationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAoneiterationsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppResponse queryLinkeBahamutAppWithOptions(QueryLinkeBahamutAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppResponse());
    }

    public QueryLinkeBahamutAppResponse queryLinkeBahamutApp(QueryLinkeBahamutAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppalipaypubownercleanResponse queryLinkeBahamutAppalipaypubownercleanWithOptions(QueryLinkeBahamutAppalipaypubownercleanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAppalipaypubownerclean", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppalipaypubownercleanResponse());
    }

    public QueryLinkeBahamutAppalipaypubownercleanResponse queryLinkeBahamutAppalipaypubownerclean(QueryLinkeBahamutAppalipaypubownercleanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppalipaypubownercleanWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppcreateorimporttaskResponse queryLinkeBahamutAppcreateorimporttaskWithOptions(QueryLinkeBahamutAppcreateorimporttaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAppcreateorimporttask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppcreateorimporttaskResponse());
    }

    public QueryLinkeBahamutAppcreateorimporttaskResponse queryLinkeBahamutAppcreateorimporttask(QueryLinkeBahamutAppcreateorimporttaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppcreateorimporttaskWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppcustomcijobbranchResponse queryLinkeBahamutAppcustomcijobbranchWithOptions(QueryLinkeBahamutAppcustomcijobbranchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAppcustomcijobbranch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppcustomcijobbranchResponse());
    }

    public QueryLinkeBahamutAppcustomcijobbranchResponse queryLinkeBahamutAppcustomcijobbranch(QueryLinkeBahamutAppcustomcijobbranchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppcustomcijobbranchWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppcustomcijobbranchlogResponse queryLinkeBahamutAppcustomcijobbranchlogWithOptions(QueryLinkeBahamutAppcustomcijobbranchlogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAppcustomcijobbranchlog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppcustomcijobbranchlogResponse());
    }

    public QueryLinkeBahamutAppcustomcijobbranchlogResponse queryLinkeBahamutAppcustomcijobbranchlog(QueryLinkeBahamutAppcustomcijobbranchlogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppcustomcijobbranchlogWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppcustomcijoblogResponse queryLinkeBahamutAppcustomcijoblogWithOptions(QueryLinkeBahamutAppcustomcijoblogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAppcustomcijoblog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppcustomcijoblogResponse());
    }

    public QueryLinkeBahamutAppcustomcijoblogResponse queryLinkeBahamutAppcustomcijoblog(QueryLinkeBahamutAppcustomcijoblogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppcustomcijoblogWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppcustomciqualityResponse queryLinkeBahamutAppcustomciqualityWithOptions(QueryLinkeBahamutAppcustomciqualityRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAppcustomciquality", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppcustomciqualityResponse());
    }

    public QueryLinkeBahamutAppcustomciqualityResponse queryLinkeBahamutAppcustomciquality(QueryLinkeBahamutAppcustomciqualityRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppcustomciqualityWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppcustomcivalidatecronResponse queryLinkeBahamutAppcustomcivalidatecronWithOptions(QueryLinkeBahamutAppcustomcivalidatecronRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAppcustomcivalidatecron", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppcustomcivalidatecronResponse());
    }

    public QueryLinkeBahamutAppcustomcivalidatecronResponse queryLinkeBahamutAppcustomcivalidatecron(QueryLinkeBahamutAppcustomcivalidatecronRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppcustomcivalidatecronWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppgroupssearchResponse queryLinkeBahamutAppgroupssearchWithOptions(QueryLinkeBahamutAppgroupssearchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAppgroupssearch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppgroupssearchResponse());
    }

    public QueryLinkeBahamutAppgroupssearchResponse queryLinkeBahamutAppgroupssearch(QueryLinkeBahamutAppgroupssearchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppgroupssearchWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppinitmvnjarResponse queryLinkeBahamutAppinitmvnjarWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAppinitmvnjar", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppinitmvnjarResponse());
    }

    public QueryLinkeBahamutAppinitmvnjarResponse queryLinkeBahamutAppinitmvnjar() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppinitmvnjarWithOptions(runtime);
    }

    public QueryLinkeBahamutApppipelinecomponentallallowskipwhichneedconfigResponse queryLinkeBahamutApppipelinecomponentallallowskipwhichneedconfigWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutApppipelinecomponentallallowskipwhichneedconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutApppipelinecomponentallallowskipwhichneedconfigResponse());
    }

    public QueryLinkeBahamutApppipelinecomponentallallowskipwhichneedconfigResponse queryLinkeBahamutApppipelinecomponentallallowskipwhichneedconfig() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutApppipelinecomponentallallowskipwhichneedconfigWithOptions(runtime);
    }

    public QueryLinkeBahamutApppullrequestreviewsettingsResponse queryLinkeBahamutApppullrequestreviewsettingsWithOptions(QueryLinkeBahamutApppullrequestreviewsettingsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutApppullrequestreviewsettings", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutApppullrequestreviewsettingsResponse());
    }

    public QueryLinkeBahamutApppullrequestreviewsettingsResponse queryLinkeBahamutApppullrequestreviewsettings(QueryLinkeBahamutApppullrequestreviewsettingsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutApppullrequestreviewsettingsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppqueryappisexistResponse queryLinkeBahamutAppqueryappisexistWithOptions(QueryLinkeBahamutAppqueryappisexistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAppqueryappisexist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppqueryappisexistResponse());
    }

    public QueryLinkeBahamutAppqueryappisexistResponse queryLinkeBahamutAppqueryappisexist(QueryLinkeBahamutAppqueryappisexistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppqueryappisexistWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppquerypullrequestsettingsResponse queryLinkeBahamutAppquerypullrequestsettingsWithOptions(QueryLinkeBahamutAppquerypullrequestsettingsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAppquerypullrequestsettings", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppquerypullrequestsettingsResponse());
    }

    public QueryLinkeBahamutAppquerypullrequestsettingsResponse queryLinkeBahamutAppquerypullrequestsettings(QueryLinkeBahamutAppquerypullrequestsettingsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppquerypullrequestsettingsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppssearchliteResponse queryLinkeBahamutAppssearchliteWithOptions(QueryLinkeBahamutAppssearchliteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAppssearchlite", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppssearchliteResponse());
    }

    public QueryLinkeBahamutAppssearchliteResponse queryLinkeBahamutAppssearchlite(QueryLinkeBahamutAppssearchliteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppssearchliteWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAppstenantexternalidappnamequeryapprepoResponse queryLinkeBahamutAppstenantexternalidappnamequeryapprepoWithOptions(QueryLinkeBahamutAppstenantexternalidappnamequeryapprepoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAppstenantexternalidappnamequeryapprepo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAppstenantexternalidappnamequeryapprepoResponse());
    }

    public QueryLinkeBahamutAppstenantexternalidappnamequeryapprepoResponse queryLinkeBahamutAppstenantexternalidappnamequeryapprepo(QueryLinkeBahamutAppstenantexternalidappnamequeryapprepoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAppstenantexternalidappnamequeryapprepoWithOptions(request, runtime);
    }

    public QueryLinkeBahamutApptodotaskquerybyreleaseResponse queryLinkeBahamutApptodotaskquerybyreleaseWithOptions(QueryLinkeBahamutApptodotaskquerybyreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutApptodotaskquerybyrelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutApptodotaskquerybyreleaseResponse());
    }

    public QueryLinkeBahamutApptodotaskquerybyreleaseResponse queryLinkeBahamutApptodotaskquerybyrelease(QueryLinkeBahamutApptodotaskquerybyreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutApptodotaskquerybyreleaseWithOptions(request, runtime);
    }

    public QueryLinkeBahamutApptodotasksResponse queryLinkeBahamutApptodotasksWithOptions(QueryLinkeBahamutApptodotasksRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutApptodotasks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutApptodotasksResponse());
    }

    public QueryLinkeBahamutApptodotasksResponse queryLinkeBahamutApptodotasks(QueryLinkeBahamutApptodotasksRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutApptodotasksWithOptions(request, runtime);
    }

    public QueryLinkeBahamutArchdomainResponse queryLinkeBahamutArchdomainWithOptions(QueryLinkeBahamutArchdomainRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutArchdomain", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutArchdomainResponse());
    }

    public QueryLinkeBahamutArchdomainResponse queryLinkeBahamutArchdomain(QueryLinkeBahamutArchdomainRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutArchdomainWithOptions(request, runtime);
    }

    public QueryLinkeBahamutArchdomainsResponse queryLinkeBahamutArchdomainsWithOptions(QueryLinkeBahamutArchdomainsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutArchdomains", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutArchdomainsResponse());
    }

    public QueryLinkeBahamutArchdomainsResponse queryLinkeBahamutArchdomains(QueryLinkeBahamutArchdomainsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutArchdomainsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutArchdomainsfromlinkmResponse queryLinkeBahamutArchdomainsfromlinkmWithOptions(QueryLinkeBahamutArchdomainsfromlinkmRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutArchdomainsfromlinkm", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutArchdomainsfromlinkmResponse());
    }

    public QueryLinkeBahamutArchdomainsfromlinkmResponse queryLinkeBahamutArchdomainsfromlinkm(QueryLinkeBahamutArchdomainsfromlinkmRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutArchdomainsfromlinkmWithOptions(request, runtime);
    }

    public QueryLinkeBahamutAttachableiterationsbyreleaseResponse queryLinkeBahamutAttachableiterationsbyreleaseWithOptions(QueryLinkeBahamutAttachableiterationsbyreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutAttachableiterationsbyrelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutAttachableiterationsbyreleaseResponse());
    }

    public QueryLinkeBahamutAttachableiterationsbyreleaseResponse queryLinkeBahamutAttachableiterationsbyrelease(QueryLinkeBahamutAttachableiterationsbyreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutAttachableiterationsbyreleaseWithOptions(request, runtime);
    }

    public QueryLinkeBahamutBatchnextstageResponse queryLinkeBahamutBatchnextstageWithOptions(QueryLinkeBahamutBatchnextstageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutBatchnextstage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutBatchnextstageResponse());
    }

    public QueryLinkeBahamutBatchnextstageResponse queryLinkeBahamutBatchnextstage(QueryLinkeBahamutBatchnextstageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutBatchnextstageWithOptions(request, runtime);
    }

    public QueryLinkeBahamutBuildconfigResponse queryLinkeBahamutBuildconfigWithOptions(QueryLinkeBahamutBuildconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutBuildconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutBuildconfigResponse());
    }

    public QueryLinkeBahamutBuildconfigResponse queryLinkeBahamutBuildconfig(QueryLinkeBahamutBuildconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutBuildconfigWithOptions(request, runtime);
    }

    public QueryLinkeBahamutCloudtenantapplevelResponse queryLinkeBahamutCloudtenantapplevelWithOptions(QueryLinkeBahamutCloudtenantapplevelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutCloudtenantapplevel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutCloudtenantapplevelResponse());
    }

    public QueryLinkeBahamutCloudtenantapplevelResponse queryLinkeBahamutCloudtenantapplevel(QueryLinkeBahamutCloudtenantapplevelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutCloudtenantapplevelWithOptions(request, runtime);
    }

    public QueryLinkeBahamutCloudtenantresetcloudaccessResponse queryLinkeBahamutCloudtenantresetcloudaccessWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutCloudtenantresetcloudaccess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutCloudtenantresetcloudaccessResponse());
    }

    public QueryLinkeBahamutCloudtenantresetcloudaccessResponse queryLinkeBahamutCloudtenantresetcloudaccess() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutCloudtenantresetcloudaccessWithOptions(runtime);
    }

    public QueryLinkeBahamutCloudtenanttechstacksResponse queryLinkeBahamutCloudtenanttechstacksWithOptions(QueryLinkeBahamutCloudtenanttechstacksRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutCloudtenanttechstacks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutCloudtenanttechstacksResponse());
    }

    public QueryLinkeBahamutCloudtenanttechstacksResponse queryLinkeBahamutCloudtenanttechstacks(QueryLinkeBahamutCloudtenanttechstacksRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutCloudtenanttechstacksWithOptions(request, runtime);
    }

    public QueryLinkeBahamutCodeservicesearchgroupResponse queryLinkeBahamutCodeservicesearchgroupWithOptions(QueryLinkeBahamutCodeservicesearchgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutCodeservicesearchgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutCodeservicesearchgroupResponse());
    }

    public QueryLinkeBahamutCodeservicesearchgroupResponse queryLinkeBahamutCodeservicesearchgroup(QueryLinkeBahamutCodeservicesearchgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutCodeservicesearchgroupWithOptions(request, runtime);
    }

    public QueryLinkeBahamutComponentsResponse queryLinkeBahamutComponentsWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutComponents", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutComponentsResponse());
    }

    public QueryLinkeBahamutComponentsResponse queryLinkeBahamutComponents() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutComponentsWithOptions(runtime);
    }

    public QueryLinkeBahamutCurrentcurrentpipelinesResponse queryLinkeBahamutCurrentcurrentpipelinesWithOptions(QueryLinkeBahamutCurrentcurrentpipelinesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutCurrentcurrentpipelines", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutCurrentcurrentpipelinesResponse());
    }

    public QueryLinkeBahamutCurrentcurrentpipelinesResponse queryLinkeBahamutCurrentcurrentpipelines(QueryLinkeBahamutCurrentcurrentpipelinesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutCurrentcurrentpipelinesWithOptions(request, runtime);
    }

    public QueryLinkeBahamutDelbasejarmoduleResponse queryLinkeBahamutDelbasejarmoduleWithOptions(QueryLinkeBahamutDelbasejarmoduleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutDelbasejarmodule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutDelbasejarmoduleResponse());
    }

    public QueryLinkeBahamutDelbasejarmoduleResponse queryLinkeBahamutDelbasejarmodule(QueryLinkeBahamutDelbasejarmoduleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutDelbasejarmoduleWithOptions(request, runtime);
    }

    public QueryLinkeBahamutDeployenvResponse queryLinkeBahamutDeployenvWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutDeployenv", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutDeployenvResponse());
    }

    public QueryLinkeBahamutDeployenvResponse queryLinkeBahamutDeployenv() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutDeployenvWithOptions(runtime);
    }

    public QueryLinkeBahamutExpressionexpressiontestResponse queryLinkeBahamutExpressionexpressiontestWithOptions(QueryLinkeBahamutExpressionexpressiontestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutExpressionexpressiontest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutExpressionexpressiontestResponse());
    }

    public QueryLinkeBahamutExpressionexpressiontestResponse queryLinkeBahamutExpressionexpressiontest(QueryLinkeBahamutExpressionexpressiontestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutExpressionexpressiontestWithOptions(request, runtime);
    }

    public QueryLinkeBahamutGetmvnrepoResponse queryLinkeBahamutGetmvnrepoWithOptions(QueryLinkeBahamutGetmvnrepoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutGetmvnrepo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutGetmvnrepoResponse());
    }

    public QueryLinkeBahamutGetmvnrepoResponse queryLinkeBahamutGetmvnrepo(QueryLinkeBahamutGetmvnrepoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutGetmvnrepoWithOptions(request, runtime);
    }

    public QueryLinkeBahamutGlobalappResponse queryLinkeBahamutGlobalappWithOptions(QueryLinkeBahamutGlobalappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutGlobalapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutGlobalappResponse());
    }

    public QueryLinkeBahamutGlobalappResponse queryLinkeBahamutGlobalapp(QueryLinkeBahamutGlobalappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutGlobalappWithOptions(request, runtime);
    }

    public QueryLinkeBahamutGlobalreleaseResponse queryLinkeBahamutGlobalreleaseWithOptions(QueryLinkeBahamutGlobalreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutGlobalrelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutGlobalreleaseResponse());
    }

    public QueryLinkeBahamutGlobalreleaseResponse queryLinkeBahamutGlobalrelease(QueryLinkeBahamutGlobalreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutGlobalreleaseWithOptions(request, runtime);
    }

    public QueryLinkeBahamutIterationResponse queryLinkeBahamutIterationWithOptions(QueryLinkeBahamutIterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutIteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutIterationResponse());
    }

    public QueryLinkeBahamutIterationResponse queryLinkeBahamutIteration(QueryLinkeBahamutIterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutIterationWithOptions(request, runtime);
    }

    public QueryLinkeBahamutIterationaddunitResponse queryLinkeBahamutIterationaddunitWithOptions(QueryLinkeBahamutIterationaddunitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutIterationaddunit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutIterationaddunitResponse());
    }

    public QueryLinkeBahamutIterationaddunitResponse queryLinkeBahamutIterationaddunit(QueryLinkeBahamutIterationaddunitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutIterationaddunitWithOptions(request, runtime);
    }

    public QueryLinkeBahamutIterationadvancedsearchResponse queryLinkeBahamutIterationadvancedsearchWithOptions(QueryLinkeBahamutIterationadvancedsearchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutIterationadvancedsearch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutIterationadvancedsearchResponse());
    }

    public QueryLinkeBahamutIterationadvancedsearchResponse queryLinkeBahamutIterationadvancedsearch(QueryLinkeBahamutIterationadvancedsearchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutIterationadvancedsearchWithOptions(request, runtime);
    }

    public QueryLinkeBahamutIterationdetachreleaseResponse queryLinkeBahamutIterationdetachreleaseWithOptions(QueryLinkeBahamutIterationdetachreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutIterationdetachrelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutIterationdetachreleaseResponse());
    }

    public QueryLinkeBahamutIterationdetachreleaseResponse queryLinkeBahamutIterationdetachrelease(QueryLinkeBahamutIterationdetachreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutIterationdetachreleaseWithOptions(request, runtime);
    }

    public QueryLinkeBahamutIterationsResponse queryLinkeBahamutIterationsWithOptions(QueryLinkeBahamutIterationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutIterations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutIterationsResponse());
    }

    public QueryLinkeBahamutIterationsResponse queryLinkeBahamutIterations(QueryLinkeBahamutIterationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutIterationsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutIterationsupdateiterationpersonsResponse queryLinkeBahamutIterationsupdateiterationpersonsWithOptions(QueryLinkeBahamutIterationsupdateiterationpersonsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutIterationsupdateiterationpersons", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutIterationsupdateiterationpersonsResponse());
    }

    public QueryLinkeBahamutIterationsupdateiterationpersonsResponse queryLinkeBahamutIterationsupdateiterationpersons(QueryLinkeBahamutIterationsupdateiterationpersonsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutIterationsupdateiterationpersonsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutIterationtemplateResponse queryLinkeBahamutIterationtemplateWithOptions(QueryLinkeBahamutIterationtemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutIterationtemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutIterationtemplateResponse());
    }

    public QueryLinkeBahamutIterationtemplateResponse queryLinkeBahamutIterationtemplate(QueryLinkeBahamutIterationtemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutIterationtemplateWithOptions(request, runtime);
    }

    public QueryLinkeBahamutIterationunitbatchnextstageResponse queryLinkeBahamutIterationunitbatchnextstageWithOptions(QueryLinkeBahamutIterationunitbatchnextstageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutIterationunitbatchnextstage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutIterationunitbatchnextstageResponse());
    }

    public QueryLinkeBahamutIterationunitbatchnextstageResponse queryLinkeBahamutIterationunitbatchnextstage(QueryLinkeBahamutIterationunitbatchnextstageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutIterationunitbatchnextstageWithOptions(request, runtime);
    }

    public QueryLinkeBahamutIterationunitsResponse queryLinkeBahamutIterationunitsWithOptions(QueryLinkeBahamutIterationunitsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutIterationunits", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutIterationunitsResponse());
    }

    public QueryLinkeBahamutIterationunitsResponse queryLinkeBahamutIterationunits(QueryLinkeBahamutIterationunitsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutIterationunitsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutLinketenantResponse queryLinkeBahamutLinketenantWithOptions(QueryLinkeBahamutLinketenantRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutLinketenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutLinketenantResponse());
    }

    public QueryLinkeBahamutLinketenantResponse queryLinkeBahamutLinketenant(QueryLinkeBahamutLinketenantRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutLinketenantWithOptions(request, runtime);
    }

    public QueryLinkeBahamutListprojectsprojectsauthorizedResponse queryLinkeBahamutListprojectsprojectsauthorizedWithOptions(QueryLinkeBahamutListprojectsprojectsauthorizedRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutListprojectsprojectsauthorized", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutListprojectsprojectsauthorizedResponse());
    }

    public QueryLinkeBahamutListprojectsprojectsauthorizedResponse queryLinkeBahamutListprojectsprojectsauthorized(QueryLinkeBahamutListprojectsprojectsauthorizedRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutListprojectsprojectsauthorizedWithOptions(request, runtime);
    }

    public QueryLinkeBahamutMetacenterarchdomainResponse queryLinkeBahamutMetacenterarchdomainWithOptions(QueryLinkeBahamutMetacenterarchdomainRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutMetacenterarchdomain", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutMetacenterarchdomainResponse());
    }

    public QueryLinkeBahamutMetacenterarchdomainResponse queryLinkeBahamutMetacenterarchdomain(QueryLinkeBahamutMetacenterarchdomainRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutMetacenterarchdomainWithOptions(request, runtime);
    }

    public QueryLinkeBahamutMyvcsgroupsResponse queryLinkeBahamutMyvcsgroupsWithOptions(QueryLinkeBahamutMyvcsgroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutMyvcsgroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutMyvcsgroupsResponse());
    }

    public QueryLinkeBahamutMyvcsgroupsResponse queryLinkeBahamutMyvcsgroups(QueryLinkeBahamutMyvcsgroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutMyvcsgroupsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutNaminggetbranchnameResponse queryLinkeBahamutNaminggetbranchnameWithOptions(QueryLinkeBahamutNaminggetbranchnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutNaminggetbranchname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutNaminggetbranchnameResponse());
    }

    public QueryLinkeBahamutNaminggetbranchnameResponse queryLinkeBahamutNaminggetbranchname(QueryLinkeBahamutNaminggetbranchnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutNaminggetbranchnameWithOptions(request, runtime);
    }

    public QueryLinkeBahamutOpenontrialResponse queryLinkeBahamutOpenontrialWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutOpenontrial", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutOpenontrialResponse());
    }

    public QueryLinkeBahamutOpenontrialResponse queryLinkeBahamutOpenontrial() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutOpenontrialWithOptions(runtime);
    }

    public QueryLinkeBahamutPaasapplyserversResponse queryLinkeBahamutPaasapplyserversWithOptions(QueryLinkeBahamutPaasapplyserversRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutPaasapplyservers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutPaasapplyserversResponse());
    }

    public QueryLinkeBahamutPaasapplyserversResponse queryLinkeBahamutPaasapplyservers(QueryLinkeBahamutPaasapplyserversRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutPaasapplyserversWithOptions(request, runtime);
    }

    public QueryLinkeBahamutPaasgetmachinecountResponse queryLinkeBahamutPaasgetmachinecountWithOptions(QueryLinkeBahamutPaasgetmachinecountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutPaasgetmachinecount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutPaasgetmachinecountResponse());
    }

    public QueryLinkeBahamutPaasgetmachinecountResponse queryLinkeBahamutPaasgetmachinecount(QueryLinkeBahamutPaasgetmachinecountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutPaasgetmachinecountWithOptions(request, runtime);
    }

    public QueryLinkeBahamutPaasqueryserversResponse queryLinkeBahamutPaasqueryserversWithOptions(QueryLinkeBahamutPaasqueryserversRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutPaasqueryservers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutPaasqueryserversResponse());
    }

    public QueryLinkeBahamutPaasqueryserversResponse queryLinkeBahamutPaasqueryservers(QueryLinkeBahamutPaasqueryserversRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutPaasqueryserversWithOptions(request, runtime);
    }

    public QueryLinkeBahamutPipelinecomponentconfirmResponse queryLinkeBahamutPipelinecomponentconfirmWithOptions(QueryLinkeBahamutPipelinecomponentconfirmRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutPipelinecomponentconfirm", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutPipelinecomponentconfirmResponse());
    }

    public QueryLinkeBahamutPipelinecomponentconfirmResponse queryLinkeBahamutPipelinecomponentconfirm(QueryLinkeBahamutPipelinecomponentconfirmRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutPipelinecomponentconfirmWithOptions(request, runtime);
    }

    public QueryLinkeBahamutPipelineexecuteResponse queryLinkeBahamutPipelineexecuteWithOptions(QueryLinkeBahamutPipelineexecuteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutPipelineexecute", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutPipelineexecuteResponse());
    }

    public QueryLinkeBahamutPipelineexecuteResponse queryLinkeBahamutPipelineexecute(QueryLinkeBahamutPipelineexecuteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutPipelineexecuteWithOptions(request, runtime);
    }

    public QueryLinkeBahamutPipelinererunResponse queryLinkeBahamutPipelinererunWithOptions(QueryLinkeBahamutPipelinererunRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutPipelinererun", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutPipelinererunResponse());
    }

    public QueryLinkeBahamutPipelinererunResponse queryLinkeBahamutPipelinererun(QueryLinkeBahamutPipelinererunRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutPipelinererunWithOptions(request, runtime);
    }

    public QueryLinkeBahamutProjectResponse queryLinkeBahamutProjectWithOptions(QueryLinkeBahamutProjectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutProject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutProjectResponse());
    }

    public QueryLinkeBahamutProjectResponse queryLinkeBahamutProject(QueryLinkeBahamutProjectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutProjectWithOptions(request, runtime);
    }

    public QueryLinkeBahamutProjectsResponse queryLinkeBahamutProjectsWithOptions(QueryLinkeBahamutProjectsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutProjects", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutProjectsResponse());
    }

    public QueryLinkeBahamutProjectsResponse queryLinkeBahamutProjects(QueryLinkeBahamutProjectsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutProjectsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutQualitylogResponse queryLinkeBahamutQualitylogWithOptions(QueryLinkeBahamutQualitylogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutQualitylog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutQualitylogResponse());
    }

    public QueryLinkeBahamutQualitylogResponse queryLinkeBahamutQualitylog(QueryLinkeBahamutQualitylogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutQualitylogWithOptions(request, runtime);
    }

    public QueryLinkeBahamutRecommenditerationResponse queryLinkeBahamutRecommenditerationWithOptions(QueryLinkeBahamutRecommenditerationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutRecommenditeration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutRecommenditerationResponse());
    }

    public QueryLinkeBahamutRecommenditerationResponse queryLinkeBahamutRecommenditeration(QueryLinkeBahamutRecommenditerationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutRecommenditerationWithOptions(request, runtime);
    }

    public QueryLinkeBahamutReleaseResponse queryLinkeBahamutReleaseWithOptions(QueryLinkeBahamutReleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutRelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutReleaseResponse());
    }

    public QueryLinkeBahamutReleaseResponse queryLinkeBahamutRelease(QueryLinkeBahamutReleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutReleaseWithOptions(request, runtime);
    }

    public QueryLinkeBahamutReleaseattachtoreleaseResponse queryLinkeBahamutReleaseattachtoreleaseWithOptions(QueryLinkeBahamutReleaseattachtoreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutReleaseattachtorelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutReleaseattachtoreleaseResponse());
    }

    public QueryLinkeBahamutReleaseattachtoreleaseResponse queryLinkeBahamutReleaseattachtorelease(QueryLinkeBahamutReleaseattachtoreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutReleaseattachtoreleaseWithOptions(request, runtime);
    }

    public QueryLinkeBahamutReleaseexternalidcodediffsResponse queryLinkeBahamutReleaseexternalidcodediffsWithOptions(QueryLinkeBahamutReleaseexternalidcodediffsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutReleaseexternalidcodediffs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutReleaseexternalidcodediffsResponse());
    }

    public QueryLinkeBahamutReleaseexternalidcodediffsResponse queryLinkeBahamutReleaseexternalidcodediffs(QueryLinkeBahamutReleaseexternalidcodediffsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutReleaseexternalidcodediffsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutReleaseexternalidjarsResponse queryLinkeBahamutReleaseexternalidjarsWithOptions(QueryLinkeBahamutReleaseexternalidjarsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutReleaseexternalidjars", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutReleaseexternalidjarsResponse());
    }

    public QueryLinkeBahamutReleaseexternalidjarsResponse queryLinkeBahamutReleaseexternalidjars(QueryLinkeBahamutReleaseexternalidjarsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutReleaseexternalidjarsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutReleasequeryapppipelineinfoinmultienvResponse queryLinkeBahamutReleasequeryapppipelineinfoinmultienvWithOptions(QueryLinkeBahamutReleasequeryapppipelineinfoinmultienvRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutReleasequeryapppipelineinfoinmultienv", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutReleasequeryapppipelineinfoinmultienvResponse());
    }

    public QueryLinkeBahamutReleasequeryapppipelineinfoinmultienvResponse queryLinkeBahamutReleasequeryapppipelineinfoinmultienv(QueryLinkeBahamutReleasequeryapppipelineinfoinmultienvRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutReleasequeryapppipelineinfoinmultienvWithOptions(request, runtime);
    }

    public QueryLinkeBahamutReleaserollbacktagResponse queryLinkeBahamutReleaserollbacktagWithOptions(QueryLinkeBahamutReleaserollbacktagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutReleaserollbacktag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutReleaserollbacktagResponse());
    }

    public QueryLinkeBahamutReleaserollbacktagResponse queryLinkeBahamutReleaserollbacktag(QueryLinkeBahamutReleaserollbacktagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutReleaserollbacktagWithOptions(request, runtime);
    }

    public QueryLinkeBahamutReleasesResponse queryLinkeBahamutReleasesWithOptions(QueryLinkeBahamutReleasesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutReleases", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutReleasesResponse());
    }

    public QueryLinkeBahamutReleasesResponse queryLinkeBahamutReleases(QueryLinkeBahamutReleasesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutReleasesWithOptions(request, runtime);
    }

    public QueryLinkeBahamutReleasesandboxdeployResponse queryLinkeBahamutReleasesandboxdeployWithOptions(QueryLinkeBahamutReleasesandboxdeployRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutReleasesandboxdeploy", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutReleasesandboxdeployResponse());
    }

    public QueryLinkeBahamutReleasesandboxdeployResponse queryLinkeBahamutReleasesandboxdeploy(QueryLinkeBahamutReleasesandboxdeployRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutReleasesandboxdeployWithOptions(request, runtime);
    }

    public QueryLinkeBahamutSandboxdeployResponse queryLinkeBahamutSandboxdeployWithOptions(QueryLinkeBahamutSandboxdeployRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutSandboxdeploy", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutSandboxdeployResponse());
    }

    public QueryLinkeBahamutSandboxdeployResponse queryLinkeBahamutSandboxdeploy(QueryLinkeBahamutSandboxdeployRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutSandboxdeployWithOptions(request, runtime);
    }

    public QueryLinkeBahamutSandboxdeploycheckResponse queryLinkeBahamutSandboxdeploycheckWithOptions(QueryLinkeBahamutSandboxdeploycheckRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutSandboxdeploycheck", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutSandboxdeploycheckResponse());
    }

    public QueryLinkeBahamutSandboxdeploycheckResponse queryLinkeBahamutSandboxdeploycheck(QueryLinkeBahamutSandboxdeploycheckRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutSandboxdeploycheckWithOptions(request, runtime);
    }

    public QueryLinkeBahamutUserResponse queryLinkeBahamutUserWithOptions(QueryLinkeBahamutUserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutUser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutUserResponse());
    }

    public QueryLinkeBahamutUserResponse queryLinkeBahamutUser(QueryLinkeBahamutUserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutUserWithOptions(request, runtime);
    }

    public QueryLinkeBahamutUseraccountResponse queryLinkeBahamutUseraccountWithOptions(QueryLinkeBahamutUseraccountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutUseraccount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutUseraccountResponse());
    }

    public QueryLinkeBahamutUseraccountResponse queryLinkeBahamutUseraccount(QueryLinkeBahamutUseraccountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutUseraccountWithOptions(request, runtime);
    }

    public QueryLinkeBahamutUsersResponse queryLinkeBahamutUsersWithOptions(QueryLinkeBahamutUsersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutUsers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutUsersResponse());
    }

    public QueryLinkeBahamutUsersResponse queryLinkeBahamutUsers(QueryLinkeBahamutUsersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutUsersWithOptions(request, runtime);
    }

    public QueryLinkeBahamutUsersbyacountResponse queryLinkeBahamutUsersbyacountWithOptions(QueryLinkeBahamutUsersbyacountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutUsersbyacount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutUsersbyacountResponse());
    }

    public QueryLinkeBahamutUsersbyacountResponse queryLinkeBahamutUsersbyacount(QueryLinkeBahamutUsersbyacountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutUsersbyacountWithOptions(request, runtime);
    }

    public QueryLinkeBahamutUsertokenResponse queryLinkeBahamutUsertokenWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutUsertoken", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutUsertokenResponse());
    }

    public QueryLinkeBahamutUsertokenResponse queryLinkeBahamutUsertoken() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutUsertokenWithOptions(runtime);
    }

    public QueryLinkeBahamutVcsgroupsResponse queryLinkeBahamutVcsgroupsWithOptions(QueryLinkeBahamutVcsgroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutVcsgroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutVcsgroupsResponse());
    }

    public QueryLinkeBahamutVcsgroupsResponse queryLinkeBahamutVcsgroups(QueryLinkeBahamutVcsgroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutVcsgroupsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutVcsmembersResponse queryLinkeBahamutVcsmembersWithOptions(QueryLinkeBahamutVcsmembersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutVcsmembers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutVcsmembersResponse());
    }

    public QueryLinkeBahamutVcsmembersResponse queryLinkeBahamutVcsmembers(QueryLinkeBahamutVcsmembersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutVcsmembersWithOptions(request, runtime);
    }

    public QueryLinkeBahamutVcsmergerequestResponse queryLinkeBahamutVcsmergerequestWithOptions(QueryLinkeBahamutVcsmergerequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutVcsmergerequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutVcsmergerequestResponse());
    }

    public QueryLinkeBahamutVcsmergerequestResponse queryLinkeBahamutVcsmergerequest(QueryLinkeBahamutVcsmergerequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutVcsmergerequestWithOptions(request, runtime);
    }

    public QueryLinkeBahamutWebapiexpressiontestResponse queryLinkeBahamutWebapiexpressiontestWithOptions(QueryLinkeBahamutWebapiexpressiontestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutWebapiexpressiontest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutWebapiexpressiontestResponse());
    }

    public QueryLinkeBahamutWebapiexpressiontestResponse queryLinkeBahamutWebapiexpressiontest(QueryLinkeBahamutWebapiexpressiontestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutWebapiexpressiontestWithOptions(request, runtime);
    }

    public QueryLinkeBahamutWebapiguardapilistguardResponse queryLinkeBahamutWebapiguardapilistguardWithOptions(QueryLinkeBahamutWebapiguardapilistguardRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutWebapiguardapilistguard", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutWebapiguardapilistguardResponse());
    }

    public QueryLinkeBahamutWebapiguardapilistguardResponse queryLinkeBahamutWebapiguardapilistguard(QueryLinkeBahamutWebapiguardapilistguardRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutWebapiguardapilistguardWithOptions(request, runtime);
    }

    public QueryLinkeBahamutWebapiguardsguardapilistguardResponse queryLinkeBahamutWebapiguardsguardapilistguardWithOptions(QueryLinkeBahamutWebapiguardsguardapilistguardRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutWebapiguardsguardapilistguard", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutWebapiguardsguardapilistguardResponse());
    }

    public QueryLinkeBahamutWebapiguardsguardapilistguardResponse queryLinkeBahamutWebapiguardsguardapilistguard(QueryLinkeBahamutWebapiguardsguardapilistguardRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutWebapiguardsguardapilistguardWithOptions(request, runtime);
    }

    public QueryLinkeBahamutWebapilistguardResponse queryLinkeBahamutWebapilistguardWithOptions(QueryLinkeBahamutWebapilistguardRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutWebapilistguard", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutWebapilistguardResponse());
    }

    public QueryLinkeBahamutWebapilistguardResponse queryLinkeBahamutWebapilistguard(QueryLinkeBahamutWebapilistguardRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutWebapilistguardWithOptions(request, runtime);
    }

    public QueryLinkeBahamutWebapimakeupprepubResponse queryLinkeBahamutWebapimakeupprepubWithOptions(QueryLinkeBahamutWebapimakeupprepubRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutWebapimakeupprepub", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutWebapimakeupprepubResponse());
    }

    public QueryLinkeBahamutWebapimakeupprepubResponse queryLinkeBahamutWebapimakeupprepub(QueryLinkeBahamutWebapimakeupprepubRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutWebapimakeupprepubWithOptions(request, runtime);
    }

    public QueryLinkeBahamutWebapisandboxdeploybyreleaseResponse queryLinkeBahamutWebapisandboxdeploybyreleaseWithOptions(QueryLinkeBahamutWebapisandboxdeploybyreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutWebapisandboxdeploybyrelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutWebapisandboxdeploybyreleaseResponse());
    }

    public QueryLinkeBahamutWebapisandboxdeploybyreleaseResponse queryLinkeBahamutWebapisandboxdeploybyrelease(QueryLinkeBahamutWebapisandboxdeploybyreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutWebapisandboxdeploybyreleaseWithOptions(request, runtime);
    }

    public QueryLinkeBahamutWorkitemResponse queryLinkeBahamutWorkitemWithOptions(QueryLinkeBahamutWorkitemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutWorkitem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutWorkitemResponse());
    }

    public QueryLinkeBahamutWorkitemResponse queryLinkeBahamutWorkitem(QueryLinkeBahamutWorkitemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutWorkitemWithOptions(request, runtime);
    }

    public QueryLinkeBahamutWorkitemsResponse queryLinkeBahamutWorkitemsWithOptions(QueryLinkeBahamutWorkitemsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutWorkitems", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutWorkitemsResponse());
    }

    public QueryLinkeBahamutWorkitemsResponse queryLinkeBahamutWorkitems(QueryLinkeBahamutWorkitemsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutWorkitemsWithOptions(request, runtime);
    }

    public QueryLinkeBahamutWorkspacesResponse queryLinkeBahamutWorkspacesWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutWorkspaces", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutWorkspacesResponse());
    }

    public QueryLinkeBahamutWorkspacesResponse queryLinkeBahamutWorkspaces() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutWorkspacesWithOptions(runtime);
    }

    public QueryLinkeBahamutWorkspacewithoutakResponse queryLinkeBahamutWorkspacewithoutakWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutWorkspacewithoutak", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutWorkspacewithoutakResponse());
    }

    public QueryLinkeBahamutWorkspacewithoutakResponse queryLinkeBahamutWorkspacewithoutak() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutWorkspacewithoutakWithOptions(runtime);
    }

    public QueryLinkeBahamutZappinfoprimarchdomainResponse queryLinkeBahamutZappinfoprimarchdomainWithOptions(QueryLinkeBahamutZappinfoprimarchdomainRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutZappinfoprimarchdomain", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutZappinfoprimarchdomainResponse());
    }

    public QueryLinkeBahamutZappinfoprimarchdomainResponse queryLinkeBahamutZappinfoprimarchdomain(QueryLinkeBahamutZappinfoprimarchdomainRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutZappinfoprimarchdomainWithOptions(request, runtime);
    }

    public QueryLinkeBahamutZappinfosecarchdomainResponse queryLinkeBahamutZappinfosecarchdomainWithOptions(QueryLinkeBahamutZappinfosecarchdomainRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeBahamutZappinfosecarchdomain", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeBahamutZappinfosecarchdomainResponse());
    }

    public QueryLinkeBahamutZappinfosecarchdomainResponse queryLinkeBahamutZappinfosecarchdomain(QueryLinkeBahamutZappinfosecarchdomainRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeBahamutZappinfosecarchdomainWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreActionqueryactionidResponse queryLinkedeploycoreDeploycoreActionqueryactionidWithOptions(QueryLinkedeploycoreDeploycoreActionqueryactionidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreActionqueryactionid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreActionqueryactionidResponse());
    }

    public QueryLinkedeploycoreDeploycoreActionqueryactionidResponse queryLinkedeploycoreDeploycoreActionqueryactionid(QueryLinkedeploycoreDeploycoreActionqueryactionidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreActionqueryactionidWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreAppqueryallResponse queryLinkedeploycoreDeploycoreAppqueryallWithOptions(QueryLinkedeploycoreDeploycoreAppqueryallRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreAppqueryall", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreAppqueryallResponse());
    }

    public QueryLinkedeploycoreDeploycoreAppqueryallResponse queryLinkedeploycoreDeploycoreAppqueryall(QueryLinkedeploycoreDeploycoreAppqueryallRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreAppqueryallWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreAppquerybranchResponse queryLinkedeploycoreDeploycoreAppquerybranchWithOptions(QueryLinkedeploycoreDeploycoreAppquerybranchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreAppquerybranch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreAppquerybranchResponse());
    }

    public QueryLinkedeploycoreDeploycoreAppquerybranchResponse queryLinkedeploycoreDeploycoreAppquerybranch(QueryLinkedeploycoreDeploycoreAppquerybranchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreAppquerybranchWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreAppquerybranchcommitResponse queryLinkedeploycoreDeploycoreAppquerybranchcommitWithOptions(QueryLinkedeploycoreDeploycoreAppquerybranchcommitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreAppquerybranchcommit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreAppquerybranchcommitResponse());
    }

    public QueryLinkedeploycoreDeploycoreAppquerybranchcommitResponse queryLinkedeploycoreDeploycoreAppquerybranchcommit(QueryLinkedeploycoreDeploycoreAppquerybranchcommitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreAppquerybranchcommitWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreAppqueryprofileResponse queryLinkedeploycoreDeploycoreAppqueryprofileWithOptions(QueryLinkedeploycoreDeploycoreAppqueryprofileRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreAppqueryprofile", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreAppqueryprofileResponse());
    }

    public QueryLinkedeploycoreDeploycoreAppqueryprofileResponse queryLinkedeploycoreDeploycoreAppqueryprofile(QueryLinkedeploycoreDeploycoreAppqueryprofileRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreAppqueryprofileWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreAppservicefollowResponse queryLinkedeploycoreDeploycoreAppservicefollowWithOptions(QueryLinkedeploycoreDeploycoreAppservicefollowRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreAppservicefollow", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreAppservicefollowResponse());
    }

    public QueryLinkedeploycoreDeploycoreAppservicefollowResponse queryLinkedeploycoreDeploycoreAppservicefollow(QueryLinkedeploycoreDeploycoreAppservicefollowRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreAppservicefollowWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreAppserviceiterationbindResponse queryLinkedeploycoreDeploycoreAppserviceiterationbindWithOptions(QueryLinkedeploycoreDeploycoreAppserviceiterationbindRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreAppserviceiterationbind", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreAppserviceiterationbindResponse());
    }

    public QueryLinkedeploycoreDeploycoreAppserviceiterationbindResponse queryLinkedeploycoreDeploycoreAppserviceiterationbind(QueryLinkedeploycoreDeploycoreAppserviceiterationbindRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreAppserviceiterationbindWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreAppserviceiterationunbindResponse queryLinkedeploycoreDeploycoreAppserviceiterationunbindWithOptions(QueryLinkedeploycoreDeploycoreAppserviceiterationunbindRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreAppserviceiterationunbind", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreAppserviceiterationunbindResponse());
    }

    public QueryLinkedeploycoreDeploycoreAppserviceiterationunbindResponse queryLinkedeploycoreDeploycoreAppserviceiterationunbind(QueryLinkedeploycoreDeploycoreAppserviceiterationunbindRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreAppserviceiterationunbindWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreAppservicequeryResponse queryLinkedeploycoreDeploycoreAppservicequeryWithOptions(QueryLinkedeploycoreDeploycoreAppservicequeryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreAppservicequery", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreAppservicequeryResponse());
    }

    public QueryLinkedeploycoreDeploycoreAppservicequeryResponse queryLinkedeploycoreDeploycoreAppservicequery(QueryLinkedeploycoreDeploycoreAppservicequeryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreAppservicequeryWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreAppservicequeryappserviceiddetailResponse queryLinkedeploycoreDeploycoreAppservicequeryappserviceiddetailWithOptions(QueryLinkedeploycoreDeploycoreAppservicequeryappserviceiddetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreAppservicequeryappserviceiddetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreAppservicequeryappserviceiddetailResponse());
    }

    public QueryLinkedeploycoreDeploycoreAppservicequeryappserviceiddetailResponse queryLinkedeploycoreDeploycoreAppservicequeryappserviceiddetail(QueryLinkedeploycoreDeploycoreAppservicequeryappserviceiddetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreAppservicequeryappserviceiddetailWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreAppservicequerycomputersResponse queryLinkedeploycoreDeploycoreAppservicequerycomputersWithOptions(QueryLinkedeploycoreDeploycoreAppservicequerycomputersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreAppservicequerycomputers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreAppservicequerycomputersResponse());
    }

    public QueryLinkedeploycoreDeploycoreAppservicequerycomputersResponse queryLinkedeploycoreDeploycoreAppservicequerycomputers(QueryLinkedeploycoreDeploycoreAppservicequerycomputersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreAppservicequerycomputersWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreAppservicequeryconfigversionappserviceidResponse queryLinkedeploycoreDeploycoreAppservicequeryconfigversionappserviceidWithOptions(QueryLinkedeploycoreDeploycoreAppservicequeryconfigversionappserviceidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreAppservicequeryconfigversionappserviceid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreAppservicequeryconfigversionappserviceidResponse());
    }

    public QueryLinkedeploycoreDeploycoreAppservicequeryconfigversionappserviceidResponse queryLinkedeploycoreDeploycoreAppservicequeryconfigversionappserviceid(QueryLinkedeploycoreDeploycoreAppservicequeryconfigversionappserviceidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreAppservicequeryconfigversionappserviceidWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreAppservicequeryimportResponse queryLinkedeploycoreDeploycoreAppservicequeryimportWithOptions(QueryLinkedeploycoreDeploycoreAppservicequeryimportRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreAppservicequeryimport", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreAppservicequeryimportResponse());
    }

    public QueryLinkedeploycoreDeploycoreAppservicequeryimportResponse queryLinkedeploycoreDeploycoreAppservicequeryimport(QueryLinkedeploycoreDeploycoreAppservicequeryimportRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreAppservicequeryimportWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreAppserviceunfollowResponse queryLinkedeploycoreDeploycoreAppserviceunfollowWithOptions(QueryLinkedeploycoreDeploycoreAppserviceunfollowRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreAppserviceunfollow", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreAppserviceunfollowResponse());
    }

    public QueryLinkedeploycoreDeploycoreAppserviceunfollowResponse queryLinkedeploycoreDeploycoreAppserviceunfollow(QueryLinkedeploycoreDeploycoreAppserviceunfollowRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreAppserviceunfollowWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreEnvqueryalldetailResponse queryLinkedeploycoreDeploycoreEnvqueryalldetailWithOptions(QueryLinkedeploycoreDeploycoreEnvqueryalldetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreEnvqueryalldetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreEnvqueryalldetailResponse());
    }

    public QueryLinkedeploycoreDeploycoreEnvqueryalldetailResponse queryLinkedeploycoreDeploycoreEnvqueryalldetail(QueryLinkedeploycoreDeploycoreEnvqueryalldetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreEnvqueryalldetailWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreEnvquerydeploymodeResponse queryLinkedeploycoreDeploycoreEnvquerydeploymodeWithOptions(QueryLinkedeploycoreDeploycoreEnvquerydeploymodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreEnvquerydeploymode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreEnvquerydeploymodeResponse());
    }

    public QueryLinkedeploycoreDeploycoreEnvquerydeploymodeResponse queryLinkedeploycoreDeploycoreEnvquerydeploymode(QueryLinkedeploycoreDeploycoreEnvquerydeploymodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreEnvquerydeploymodeWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreEnvqueryenvcenterurlResponse queryLinkedeploycoreDeploycoreEnvqueryenvcenterurlWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreEnvqueryenvcenterurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreEnvqueryenvcenterurlResponse());
    }

    public QueryLinkedeploycoreDeploycoreEnvqueryenvcenterurlResponse queryLinkedeploycoreDeploycoreEnvqueryenvcenterurl() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreEnvqueryenvcenterurlWithOptions(runtime);
    }

    public QueryLinkedeploycoreDeploycoreEnvqueryproducthostResponse queryLinkedeploycoreDeploycoreEnvqueryproducthostWithOptions(QueryLinkedeploycoreDeploycoreEnvqueryproducthostRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreEnvqueryproducthost", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreEnvqueryproducthostResponse());
    }

    public QueryLinkedeploycoreDeploycoreEnvqueryproducthostResponse queryLinkedeploycoreDeploycoreEnvqueryproducthost(QueryLinkedeploycoreDeploycoreEnvqueryproducthostRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreEnvqueryproducthostWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreEnvquerytypeResponse queryLinkedeploycoreDeploycoreEnvquerytypeWithOptions(QueryLinkedeploycoreDeploycoreEnvquerytypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreEnvquerytype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreEnvquerytypeResponse());
    }

    public QueryLinkedeploycoreDeploycoreEnvquerytypeResponse queryLinkedeploycoreDeploycoreEnvquerytype(QueryLinkedeploycoreDeploycoreEnvquerytypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreEnvquerytypeWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreIterationqueryappsResponse queryLinkedeploycoreDeploycoreIterationqueryappsWithOptions(QueryLinkedeploycoreDeploycoreIterationqueryappsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreIterationqueryapps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreIterationqueryappsResponse());
    }

    public QueryLinkedeploycoreDeploycoreIterationqueryappsResponse queryLinkedeploycoreDeploycoreIterationqueryapps(QueryLinkedeploycoreDeploycoreIterationqueryappsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreIterationqueryappsWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreIterationquerylistResponse queryLinkedeploycoreDeploycoreIterationquerylistWithOptions(QueryLinkedeploycoreDeploycoreIterationquerylistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreIterationquerylist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreIterationquerylistResponse());
    }

    public QueryLinkedeploycoreDeploycoreIterationquerylistResponse queryLinkedeploycoreDeploycoreIterationquerylist(QueryLinkedeploycoreDeploycoreIterationquerylistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreIterationquerylistWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreOrderResponse queryLinkedeploycoreDeploycoreOrderWithOptions(QueryLinkedeploycoreDeploycoreOrderRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreOrder", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreOrderResponse());
    }

    public QueryLinkedeploycoreDeploycoreOrderResponse queryLinkedeploycoreDeploycoreOrder(QueryLinkedeploycoreDeploycoreOrderRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreOrderWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreOrderqueryorderidactionsResponse queryLinkedeploycoreDeploycoreOrderqueryorderidactionsWithOptions(QueryLinkedeploycoreDeploycoreOrderqueryorderidactionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreOrderqueryorderidactions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreOrderqueryorderidactionsResponse());
    }

    public QueryLinkedeploycoreDeploycoreOrderqueryorderidactionsResponse queryLinkedeploycoreDeploycoreOrderqueryorderidactions(QueryLinkedeploycoreDeploycoreOrderqueryorderidactionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreOrderqueryorderidactionsWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreOrderqueryorderiddetailResponse queryLinkedeploycoreDeploycoreOrderqueryorderiddetailWithOptions(QueryLinkedeploycoreDeploycoreOrderqueryorderiddetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreOrderqueryorderiddetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreOrderqueryorderiddetailResponse());
    }

    public QueryLinkedeploycoreDeploycoreOrderqueryorderiddetailResponse queryLinkedeploycoreDeploycoreOrderqueryorderiddetail(QueryLinkedeploycoreDeploycoreOrderqueryorderiddetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreOrderqueryorderiddetailWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycorePipelinesResponse queryLinkedeploycoreDeploycorePipelinesWithOptions(QueryLinkedeploycoreDeploycorePipelinesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycorePipelines", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycorePipelinesResponse());
    }

    public QueryLinkedeploycoreDeploycorePipelinesResponse queryLinkedeploycoreDeploycorePipelines(QueryLinkedeploycoreDeploycorePipelinesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycorePipelinesWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreProfileResponse queryLinkedeploycoreDeploycoreProfileWithOptions(QueryLinkedeploycoreDeploycoreProfileRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreProfile", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreProfileResponse());
    }

    public QueryLinkedeploycoreDeploycoreProfileResponse queryLinkedeploycoreDeploycoreProfile(QueryLinkedeploycoreDeploycoreProfileRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreProfileWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreProfilequeryappserviceidResponse queryLinkedeploycoreDeploycoreProfilequeryappserviceidWithOptions(QueryLinkedeploycoreDeploycoreProfilequeryappserviceidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreProfilequeryappserviceid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreProfilequeryappserviceidResponse());
    }

    public QueryLinkedeploycoreDeploycoreProfilequeryappserviceidResponse queryLinkedeploycoreDeploycoreProfilequeryappserviceid(QueryLinkedeploycoreDeploycoreProfilequeryappserviceidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreProfilequeryappserviceidWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreProfilequeryglobalResponse queryLinkedeploycoreDeploycoreProfilequeryglobalWithOptions(QueryLinkedeploycoreDeploycoreProfilequeryglobalRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreProfilequeryglobal", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreProfilequeryglobalResponse());
    }

    public QueryLinkedeploycoreDeploycoreProfilequeryglobalResponse queryLinkedeploycoreDeploycoreProfilequeryglobal(QueryLinkedeploycoreDeploycoreProfilequeryglobalRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreProfilequeryglobalWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreProfilequerysidecarsResponse queryLinkedeploycoreDeploycoreProfilequerysidecarsWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreProfilequerysidecars", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreProfilequerysidecarsResponse());
    }

    public QueryLinkedeploycoreDeploycoreProfilequerysidecarsResponse queryLinkedeploycoreDeploycoreProfilequerysidecars() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreProfilequerysidecarsWithOptions(runtime);
    }

    public QueryLinkedeploycoreDeploycoreProjectsprojectidchecksuitesResponse queryLinkedeploycoreDeploycoreProjectsprojectidchecksuitesWithOptions(QueryLinkedeploycoreDeploycoreProjectsprojectidchecksuitesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreProjectsprojectidchecksuites", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreProjectsprojectidchecksuitesResponse());
    }

    public QueryLinkedeploycoreDeploycoreProjectsprojectidchecksuitesResponse queryLinkedeploycoreDeploycoreProjectsprojectidchecksuites(QueryLinkedeploycoreDeploycoreProjectsprojectidchecksuitesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreProjectsprojectidchecksuitesWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreResourceResponse queryLinkedeploycoreDeploycoreResourceWithOptions(QueryLinkedeploycoreDeploycoreResourceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreResource", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreResourceResponse());
    }

    public QueryLinkedeploycoreDeploycoreResourceResponse queryLinkedeploycoreDeploycoreResource(QueryLinkedeploycoreDeploycoreResourceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreResourceWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreResourcequeryappserviceidpodResponse queryLinkedeploycoreDeploycoreResourcequeryappserviceidpodWithOptions(QueryLinkedeploycoreDeploycoreResourcequeryappserviceidpodRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreResourcequeryappserviceidpod", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreResourcequeryappserviceidpodResponse());
    }

    public QueryLinkedeploycoreDeploycoreResourcequeryappserviceidpodResponse queryLinkedeploycoreDeploycoreResourcequeryappserviceidpod(QueryLinkedeploycoreDeploycoreResourcequeryappserviceidpodRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreResourcequeryappserviceidpodWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreResourcequeryappserviceidserviceResponse queryLinkedeploycoreDeploycoreResourcequeryappserviceidserviceWithOptions(QueryLinkedeploycoreDeploycoreResourcequeryappserviceidserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreResourcequeryappserviceidservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreResourcequeryappserviceidserviceResponse());
    }

    public QueryLinkedeploycoreDeploycoreResourcequeryappserviceidserviceResponse queryLinkedeploycoreDeploycoreResourcequeryappserviceidservice(QueryLinkedeploycoreDeploycoreResourcequeryappserviceidserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreResourcequeryappserviceidserviceWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreResourcequerypodeventsResponse queryLinkedeploycoreDeploycoreResourcequerypodeventsWithOptions(QueryLinkedeploycoreDeploycoreResourcequerypodeventsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreResourcequerypodevents", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreResourcequerypodeventsResponse());
    }

    public QueryLinkedeploycoreDeploycoreResourcequerypodeventsResponse queryLinkedeploycoreDeploycoreResourcequerypodevents(QueryLinkedeploycoreDeploycoreResourcequerypodeventsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreResourcequerypodeventsWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreResourcequerypodlogsResponse queryLinkedeploycoreDeploycoreResourcequerypodlogsWithOptions(QueryLinkedeploycoreDeploycoreResourcequerypodlogsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreResourcequerypodlogs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreResourcequerypodlogsResponse());
    }

    public QueryLinkedeploycoreDeploycoreResourcequerypodlogsResponse queryLinkedeploycoreDeploycoreResourcequerypodlogs(QueryLinkedeploycoreDeploycoreResourcequerypodlogsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreResourcequerypodlogsWithOptions(request, runtime);
    }

    public QueryLinkedeploycoreDeploycoreTenantallResponse queryLinkedeploycoreDeploycoreTenantallWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreTenantall", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreTenantallResponse());
    }

    public QueryLinkedeploycoreDeploycoreTenantallResponse queryLinkedeploycoreDeploycoreTenantall() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreTenantallWithOptions(runtime);
    }

    public QueryLinkedeploycoreDeploycoreTenantauthResponse queryLinkedeploycoreDeploycoreTenantauthWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreTenantauth", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreTenantauthResponse());
    }

    public QueryLinkedeploycoreDeploycoreTenantauthResponse queryLinkedeploycoreDeploycoreTenantauth() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreTenantauthWithOptions(runtime);
    }

    public QueryLinkedeploycoreDeploycoreUsercurrentResponse queryLinkedeploycoreDeploycoreUsercurrentWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkedeploycoreDeploycoreUsercurrent", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkedeploycoreDeploycoreUsercurrentResponse());
    }

    public QueryLinkedeploycoreDeploycoreUsercurrentResponse queryLinkedeploycoreDeploycoreUsercurrent() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkedeploycoreDeploycoreUsercurrentWithOptions(runtime);
    }

    public QueryLinkefabricFabricAllmsgappliesResponse queryLinkefabricFabricAllmsgappliesWithOptions(QueryLinkefabricFabricAllmsgappliesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricAllmsgapplies", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricAllmsgappliesResponse());
    }

    public QueryLinkefabricFabricAllmsgappliesResponse queryLinkefabricFabricAllmsgapplies(QueryLinkefabricFabricAllmsgappliesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricAllmsgappliesWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricAllzoneResponse queryLinkefabricFabricAllzoneWithOptions(QueryLinkefabricFabricAllzoneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricAllzone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricAllzoneResponse());
    }

    public QueryLinkefabricFabricAllzoneResponse queryLinkefabricFabricAllzone(QueryLinkefabricFabricAllzoneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricAllzoneWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricAllzonebydevstageenvResponse queryLinkefabricFabricAllzonebydevstageenvWithOptions(QueryLinkefabricFabricAllzonebydevstageenvRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricAllzonebydevstageenv", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricAllzonebydevstageenvResponse());
    }

    public QueryLinkefabricFabricAllzonebydevstageenvResponse queryLinkefabricFabricAllzonebydevstageenv(QueryLinkefabricFabricAllzonebydevstageenvRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricAllzonebydevstageenvWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricAntxsystemcloudconfigResponse queryLinkefabricFabricAntxsystemcloudconfigWithOptions(QueryLinkefabricFabricAntxsystemcloudconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricAntxsystemcloudconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricAntxsystemcloudconfigResponse());
    }

    public QueryLinkefabricFabricAntxsystemcloudconfigResponse queryLinkefabricFabricAntxsystemcloudconfig(QueryLinkefabricFabricAntxsystemcloudconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricAntxsystemcloudconfigWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricCibranchconfigsResponse queryLinkefabricFabricCibranchconfigsWithOptions(QueryLinkefabricFabricCibranchconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricCibranchconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricCibranchconfigsResponse());
    }

    public QueryLinkefabricFabricCibranchconfigsResponse queryLinkefabricFabricCibranchconfigs(QueryLinkefabricFabricCibranchconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricCibranchconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricCiconfigsResponse queryLinkefabricFabricCiconfigsWithOptions(QueryLinkefabricFabricCiconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricCiconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricCiconfigsResponse());
    }

    public QueryLinkefabricFabricCiconfigsResponse queryLinkefabricFabricCiconfigs(QueryLinkefabricFabricCiconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricCiconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricCiprojectbyappnameResponse queryLinkefabricFabricCiprojectbyappnameWithOptions(QueryLinkefabricFabricCiprojectbyappnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricCiprojectbyappname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricCiprojectbyappnameResponse());
    }

    public QueryLinkefabricFabricCiprojectbyappnameResponse queryLinkefabricFabricCiprojectbyappname(QueryLinkefabricFabricCiprojectbyappnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricCiprojectbyappnameWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricCloudallstrategyResponse queryLinkefabricFabricCloudallstrategyWithOptions(QueryLinkefabricFabricCloudallstrategyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricCloudallstrategy", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricCloudallstrategyResponse());
    }

    public QueryLinkefabricFabricCloudallstrategyResponse queryLinkefabricFabricCloudallstrategy(QueryLinkefabricFabricCloudallstrategyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricCloudallstrategyWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricClouddetailbytypeResponse queryLinkefabricFabricClouddetailbytypeWithOptions(QueryLinkefabricFabricClouddetailbytypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricClouddetailbytype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricClouddetailbytypeResponse());
    }

    public QueryLinkefabricFabricClouddetailbytypeResponse queryLinkefabricFabricClouddetailbytype(QueryLinkefabricFabricClouddetailbytypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricClouddetailbytypeWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricCloudenvinfoResponse queryLinkefabricFabricCloudenvinfoWithOptions(QueryLinkefabricFabricCloudenvinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricCloudenvinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricCloudenvinfoResponse());
    }

    public QueryLinkefabricFabricCloudenvinfoResponse queryLinkefabricFabricCloudenvinfo(QueryLinkefabricFabricCloudenvinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricCloudenvinfoWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricCloudmsgbinginginfoResponse queryLinkefabricFabricCloudmsgbinginginfoWithOptions(QueryLinkefabricFabricCloudmsgbinginginfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricCloudmsgbinginginfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricCloudmsgbinginginfoResponse());
    }

    public QueryLinkefabricFabricCloudmsgbinginginfoResponse queryLinkefabricFabricCloudmsgbinginginfo(QueryLinkefabricFabricCloudmsgbinginginfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricCloudmsgbinginginfoWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricCloudmsgconfigsResponse queryLinkefabricFabricCloudmsgconfigsWithOptions(QueryLinkefabricFabricCloudmsgconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricCloudmsgconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricCloudmsgconfigsResponse());
    }

    public QueryLinkefabricFabricCloudmsgconfigsResponse queryLinkefabricFabricCloudmsgconfigs(QueryLinkefabricFabricCloudmsgconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricCloudmsgconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricCloudmsgtypeinfoResponse queryLinkefabricFabricCloudmsgtypeinfoWithOptions(QueryLinkefabricFabricCloudmsgtypeinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricCloudmsgtypeinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricCloudmsgtypeinfoResponse());
    }

    public QueryLinkefabricFabricCloudmsgtypeinfoResponse queryLinkefabricFabricCloudmsgtypeinfo(QueryLinkefabricFabricCloudmsgtypeinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricCloudmsgtypeinfoWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricCloudsystemconfigisopenapiResponse queryLinkefabricFabricCloudsystemconfigisopenapiWithOptions(QueryLinkefabricFabricCloudsystemconfigisopenapiRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricCloudsystemconfigisopenapi", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricCloudsystemconfigisopenapiResponse());
    }

    public QueryLinkefabricFabricCloudsystemconfigisopenapiResponse queryLinkefabricFabricCloudsystemconfigisopenapi(QueryLinkefabricFabricCloudsystemconfigisopenapiRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricCloudsystemconfigisopenapiWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricConfigdisableexecuteResponse queryLinkefabricFabricConfigdisableexecuteWithOptions(QueryLinkefabricFabricConfigdisableexecuteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricConfigdisableexecute", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricConfigdisableexecuteResponse());
    }

    public QueryLinkefabricFabricConfigdisableexecuteResponse queryLinkefabricFabricConfigdisableexecute(QueryLinkefabricFabricConfigdisableexecuteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricConfigdisableexecuteWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricConfigdisableswitchResponse queryLinkefabricFabricConfigdisableswitchWithOptions(QueryLinkefabricFabricConfigdisableswitchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricConfigdisableswitch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricConfigdisableswitchResponse());
    }

    public QueryLinkefabricFabricConfigdisableswitchResponse queryLinkefabricFabricConfigdisableswitch(QueryLinkefabricFabricConfigdisableswitchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricConfigdisableswitchWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricConfigenvconfigResponse queryLinkefabricFabricConfigenvconfigWithOptions(QueryLinkefabricFabricConfigenvconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricConfigenvconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricConfigenvconfigResponse());
    }

    public QueryLinkefabricFabricConfigenvconfigResponse queryLinkefabricFabricConfigenvconfig(QueryLinkefabricFabricConfigenvconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricConfigenvconfigWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricDbconfigsResponse queryLinkefabricFabricDbconfigsWithOptions(QueryLinkefabricFabricDbconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricDbconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricDbconfigsResponse());
    }

    public QueryLinkefabricFabricDbconfigsResponse queryLinkefabricFabricDbconfigs(QueryLinkefabricFabricDbconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricDbconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricDetailbytypeResponse queryLinkefabricFabricDetailbytypeWithOptions(QueryLinkefabricFabricDetailbytypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricDetailbytype", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricDetailbytypeResponse());
    }

    public QueryLinkefabricFabricDetailbytypeResponse queryLinkefabricFabricDetailbytype(QueryLinkefabricFabricDetailbytypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricDetailbytypeWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricDockerruleconfigsResponse queryLinkefabricFabricDockerruleconfigsWithOptions(QueryLinkefabricFabricDockerruleconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricDockerruleconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricDockerruleconfigsResponse());
    }

    public QueryLinkefabricFabricDockerruleconfigsResponse queryLinkefabricFabricDockerruleconfigs(QueryLinkefabricFabricDockerruleconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricDockerruleconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricDrmconfigsResponse queryLinkefabricFabricDrmconfigsWithOptions(QueryLinkefabricFabricDrmconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricDrmconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricDrmconfigsResponse());
    }

    public QueryLinkefabricFabricDrmconfigsResponse queryLinkefabricFabricDrmconfigs(QueryLinkefabricFabricDrmconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricDrmconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricDrmresourcetplResponse queryLinkefabricFabricDrmresourcetplWithOptions(QueryLinkefabricFabricDrmresourcetplRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricDrmresourcetpl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricDrmresourcetplResponse());
    }

    public QueryLinkefabricFabricDrmresourcetplResponse queryLinkefabricFabricDrmresourcetpl(QueryLinkefabricFabricDrmresourcetplRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricDrmresourcetplWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricEnvconfigsResponse queryLinkefabricFabricEnvconfigsWithOptions(QueryLinkefabricFabricEnvconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricEnvconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricEnvconfigsResponse());
    }

    public QueryLinkefabricFabricEnvconfigsResponse queryLinkefabricFabricEnvconfigs(QueryLinkefabricFabricEnvconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricEnvconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricExistdrmresourcetplResponse queryLinkefabricFabricExistdrmresourcetplWithOptions(QueryLinkefabricFabricExistdrmresourcetplRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricExistdrmresourcetpl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricExistdrmresourcetplResponse());
    }

    public QueryLinkefabricFabricExistdrmresourcetplResponse queryLinkefabricFabricExistdrmresourcetpl(QueryLinkefabricFabricExistdrmresourcetplRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricExistdrmresourcetplWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricMsgbinginginfoResponse queryLinkefabricFabricMsgbinginginfoWithOptions(QueryLinkefabricFabricMsgbinginginfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricMsgbinginginfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricMsgbinginginfoResponse());
    }

    public QueryLinkefabricFabricMsgbinginginfoResponse queryLinkefabricFabricMsgbinginginfo(QueryLinkefabricFabricMsgbinginginfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricMsgbinginginfoWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricMsgconfigResponse queryLinkefabricFabricMsgconfigWithOptions(QueryLinkefabricFabricMsgconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricMsgconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricMsgconfigResponse());
    }

    public QueryLinkefabricFabricMsgconfigResponse queryLinkefabricFabricMsgconfig(QueryLinkefabricFabricMsgconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricMsgconfigWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricMsgconfigsystemcloudconfigResponse queryLinkefabricFabricMsgconfigsystemcloudconfigWithOptions(QueryLinkefabricFabricMsgconfigsystemcloudconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricMsgconfigsystemcloudconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricMsgconfigsystemcloudconfigResponse());
    }

    public QueryLinkefabricFabricMsgconfigsystemcloudconfigResponse queryLinkefabricFabricMsgconfigsystemcloudconfig(QueryLinkefabricFabricMsgconfigsystemcloudconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricMsgconfigsystemcloudconfigWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricMsgtypeinfoResponse queryLinkefabricFabricMsgtypeinfoWithOptions(QueryLinkefabricFabricMsgtypeinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricMsgtypeinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricMsgtypeinfoResponse());
    }

    public QueryLinkefabricFabricMsgtypeinfoResponse queryLinkefabricFabricMsgtypeinfo(QueryLinkefabricFabricMsgtypeinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricMsgtypeinfoWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricNewappconfigsResponse queryLinkefabricFabricNewappconfigsWithOptions(QueryLinkefabricFabricNewappconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricNewappconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricNewappconfigsResponse());
    }

    public QueryLinkefabricFabricNewappconfigsResponse queryLinkefabricFabricNewappconfigs(QueryLinkefabricFabricNewappconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricNewappconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricNewappinfoResponse queryLinkefabricFabricNewappinfoWithOptions(QueryLinkefabricFabricNewappinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricNewappinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricNewappinfoResponse());
    }

    public QueryLinkefabricFabricNewappinfoResponse queryLinkefabricFabricNewappinfo(QueryLinkefabricFabricNewappinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricNewappinfoWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricOperationrecordbyprojectResponse queryLinkefabricFabricOperationrecordbyprojectWithOptions(QueryLinkefabricFabricOperationrecordbyprojectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricOperationrecordbyproject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricOperationrecordbyprojectResponse());
    }

    public QueryLinkefabricFabricOperationrecordbyprojectResponse queryLinkefabricFabricOperationrecordbyproject(QueryLinkefabricFabricOperationrecordbyprojectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricOperationrecordbyprojectWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricProjectconfigtypesResponse queryLinkefabricFabricProjectconfigtypesWithOptions(QueryLinkefabricFabricProjectconfigtypesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricProjectconfigtypes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricProjectconfigtypesResponse());
    }

    public QueryLinkefabricFabricProjectconfigtypesResponse queryLinkefabricFabricProjectconfigtypes(QueryLinkefabricFabricProjectconfigtypesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricProjectconfigtypesWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricPublicappsResponse queryLinkefabricFabricPublicappsWithOptions(QueryLinkefabricFabricPublicappsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricPublicapps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricPublicappsResponse());
    }

    public QueryLinkefabricFabricPublicappsResponse queryLinkefabricFabricPublicapps(QueryLinkefabricFabricPublicappsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricPublicappsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricReleaseantxconfigsResponse queryLinkefabricFabricReleaseantxconfigsWithOptions(QueryLinkefabricFabricReleaseantxconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricReleaseantxconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricReleaseantxconfigsResponse());
    }

    public QueryLinkefabricFabricReleaseantxconfigsResponse queryLinkefabricFabricReleaseantxconfigs(QueryLinkefabricFabricReleaseantxconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricReleaseantxconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricReleaseciconfigsResponse queryLinkefabricFabricReleaseciconfigsWithOptions(QueryLinkefabricFabricReleaseciconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricReleaseciconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricReleaseciconfigsResponse());
    }

    public QueryLinkefabricFabricReleaseciconfigsResponse queryLinkefabricFabricReleaseciconfigs(QueryLinkefabricFabricReleaseciconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricReleaseciconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricReleaseconfigtypesResponse queryLinkefabricFabricReleaseconfigtypesWithOptions(QueryLinkefabricFabricReleaseconfigtypesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricReleaseconfigtypes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricReleaseconfigtypesResponse());
    }

    public QueryLinkefabricFabricReleaseconfigtypesResponse queryLinkefabricFabricReleaseconfigtypes(QueryLinkefabricFabricReleaseconfigtypesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricReleaseconfigtypesWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricReleasedrmconfigsResponse queryLinkefabricFabricReleasedrmconfigsWithOptions(QueryLinkefabricFabricReleasedrmconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricReleasedrmconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricReleasedrmconfigsResponse());
    }

    public QueryLinkefabricFabricReleasedrmconfigsResponse queryLinkefabricFabricReleasedrmconfigs(QueryLinkefabricFabricReleasedrmconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricReleasedrmconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricReleaseinfoResponse queryLinkefabricFabricReleaseinfoWithOptions(QueryLinkefabricFabricReleaseinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricReleaseinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricReleaseinfoResponse());
    }

    public QueryLinkefabricFabricReleaseinfoResponse queryLinkefabricFabricReleaseinfo(QueryLinkefabricFabricReleaseinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricReleaseinfoWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricReleasemsgconfigsResponse queryLinkefabricFabricReleasemsgconfigsWithOptions(QueryLinkefabricFabricReleasemsgconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricReleasemsgconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricReleasemsgconfigsResponse());
    }

    public QueryLinkefabricFabricReleasemsgconfigsResponse queryLinkefabricFabricReleasemsgconfigs(QueryLinkefabricFabricReleasemsgconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricReleasemsgconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricSchedulerconfigsResponse queryLinkefabricFabricSchedulerconfigsWithOptions(QueryLinkefabricFabricSchedulerconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricSchedulerconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricSchedulerconfigsResponse());
    }

    public QueryLinkefabricFabricSchedulerconfigsResponse queryLinkefabricFabricSchedulerconfigs(QueryLinkefabricFabricSchedulerconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricSchedulerconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricSchedulerconfigsqueryallstrategResponse queryLinkefabricFabricSchedulerconfigsqueryallstrategWithOptions(QueryLinkefabricFabricSchedulerconfigsqueryallstrategRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricSchedulerconfigsqueryallstrateg", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricSchedulerconfigsqueryallstrategResponse());
    }

    public QueryLinkefabricFabricSchedulerconfigsqueryallstrategResponse queryLinkefabricFabricSchedulerconfigsqueryallstrateg(QueryLinkefabricFabricSchedulerconfigsqueryallstrategRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricSchedulerconfigsqueryallstrategWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricSchedulerconfigsqueryallzoneResponse queryLinkefabricFabricSchedulerconfigsqueryallzoneWithOptions(QueryLinkefabricFabricSchedulerconfigsqueryallzoneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricSchedulerconfigsqueryallzone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricSchedulerconfigsqueryallzoneResponse());
    }

    public QueryLinkefabricFabricSchedulerconfigsqueryallzoneResponse queryLinkefabricFabricSchedulerconfigsqueryallzone(QueryLinkefabricFabricSchedulerconfigsqueryallzoneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricSchedulerconfigsqueryallzoneWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricSchedulerconfigsreleasetaskResponse queryLinkefabricFabricSchedulerconfigsreleasetaskWithOptions(QueryLinkefabricFabricSchedulerconfigsreleasetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricSchedulerconfigsreleasetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricSchedulerconfigsreleasetaskResponse());
    }

    public QueryLinkefabricFabricSchedulerconfigsreleasetaskResponse queryLinkefabricFabricSchedulerconfigsreleasetask(QueryLinkefabricFabricSchedulerconfigsreleasetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricSchedulerconfigsreleasetaskWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricShedulerconfigsResponse queryLinkefabricFabricShedulerconfigsWithOptions(QueryLinkefabricFabricShedulerconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricShedulerconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricShedulerconfigsResponse());
    }

    public QueryLinkefabricFabricShedulerconfigsResponse queryLinkefabricFabricShedulerconfigs(QueryLinkefabricFabricShedulerconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricShedulerconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricSmartdeployconfigsdrmquerytenantidappnameResponse queryLinkefabricFabricSmartdeployconfigsdrmquerytenantidappnameWithOptions(QueryLinkefabricFabricSmartdeployconfigsdrmquerytenantidappnameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricSmartdeployconfigsdrmquerytenantidappname", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricSmartdeployconfigsdrmquerytenantidappnameResponse());
    }

    public QueryLinkefabricFabricSmartdeployconfigsdrmquerytenantidappnameResponse queryLinkefabricFabricSmartdeployconfigsdrmquerytenantidappname(QueryLinkefabricFabricSmartdeployconfigsdrmquerytenantidappnameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricSmartdeployconfigsdrmquerytenantidappnameWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricSoftwareconfigsResponse queryLinkefabricFabricSoftwareconfigsWithOptions(QueryLinkefabricFabricSoftwareconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricSoftwareconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricSoftwareconfigsResponse());
    }

    public QueryLinkefabricFabricSoftwareconfigsResponse queryLinkefabricFabricSoftwareconfigs(QueryLinkefabricFabricSoftwareconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricSoftwareconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricSwconfigsResponse queryLinkefabricFabricSwconfigsWithOptions(QueryLinkefabricFabricSwconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricSwconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricSwconfigsResponse());
    }

    public QueryLinkefabricFabricSwconfigsResponse queryLinkefabricFabricSwconfigs(QueryLinkefabricFabricSwconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricSwconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricSystemparameterconfigResponse queryLinkefabricFabricSystemparameterconfigWithOptions(QueryLinkefabricFabricSystemparameterconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricSystemparameterconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricSystemparameterconfigResponse());
    }

    public QueryLinkefabricFabricSystemparameterconfigResponse queryLinkefabricFabricSystemparameterconfig(QueryLinkefabricFabricSystemparameterconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricSystemparameterconfigWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricSystemparameterisadminResponse queryLinkefabricFabricSystemparameterisadminWithOptions(QueryLinkefabricFabricSystemparameterisadminRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricSystemparameterisadmin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricSystemparameterisadminResponse());
    }

    public QueryLinkefabricFabricSystemparameterisadminResponse queryLinkefabricFabricSystemparameterisadmin(QueryLinkefabricFabricSystemparameterisadminRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricSystemparameterisadminWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricSystemparameterqueryconfigbycacheResponse queryLinkefabricFabricSystemparameterqueryconfigbycacheWithOptions(QueryLinkefabricFabricSystemparameterqueryconfigbycacheRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricSystemparameterqueryconfigbycache", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricSystemparameterqueryconfigbycacheResponse());
    }

    public QueryLinkefabricFabricSystemparameterqueryconfigbycacheResponse queryLinkefabricFabricSystemparameterqueryconfigbycache(QueryLinkefabricFabricSystemparameterqueryconfigbycacheRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricSystemparameterqueryconfigbycacheWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricTaskinfoResponse queryLinkefabricFabricTaskinfoWithOptions(QueryLinkefabricFabricTaskinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricTaskinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricTaskinfoResponse());
    }

    public QueryLinkefabricFabricTaskinfoResponse queryLinkefabricFabricTaskinfo(QueryLinkefabricFabricTaskinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricTaskinfoWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricTaskstatusResponse queryLinkefabricFabricTaskstatusWithOptions(QueryLinkefabricFabricTaskstatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricTaskstatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricTaskstatusResponse());
    }

    public QueryLinkefabricFabricTaskstatusResponse queryLinkefabricFabricTaskstatus(QueryLinkefabricFabricTaskstatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricTaskstatusWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricTechstackconfigsResponse queryLinkefabricFabricTechstackconfigsWithOptions(QueryLinkefabricFabricTechstackconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricTechstackconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricTechstackconfigsResponse());
    }

    public QueryLinkefabricFabricTechstackconfigsResponse queryLinkefabricFabricTechstackconfigs(QueryLinkefabricFabricTechstackconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricTechstackconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricUrlsaoneurlResponse queryLinkefabricFabricUrlsaoneurlWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricUrlsaoneurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricUrlsaoneurlResponse());
    }

    public QueryLinkefabricFabricUrlsaoneurlResponse queryLinkefabricFabricUrlsaoneurl() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricUrlsaoneurlWithOptions(runtime);
    }

    public QueryLinkefabricFabricUrlscloudboxurlResponse queryLinkefabricFabricUrlscloudboxurlWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricUrlscloudboxurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricUrlscloudboxurlResponse());
    }

    public QueryLinkefabricFabricUrlscloudboxurlResponse queryLinkefabricFabricUrlscloudboxurl() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricUrlscloudboxurlWithOptions(runtime);
    }

    public QueryLinkefabricFabricUrlsclouddrmurlResponse queryLinkefabricFabricUrlsclouddrmurlWithOptions(QueryLinkefabricFabricUrlsclouddrmurlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricUrlsclouddrmurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricUrlsclouddrmurlResponse());
    }

    public QueryLinkefabricFabricUrlsclouddrmurlResponse queryLinkefabricFabricUrlsclouddrmurl(QueryLinkefabricFabricUrlsclouddrmurlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricUrlsclouddrmurlWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricUrlscloudlegourlResponse queryLinkefabricFabricUrlscloudlegourlWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricUrlscloudlegourl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricUrlscloudlegourlResponse());
    }

    public QueryLinkefabricFabricUrlscloudlegourlResponse queryLinkefabricFabricUrlscloudlegourl() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricUrlscloudlegourlWithOptions(runtime);
    }

    public QueryLinkefabricFabricUrlsddsconsoleurlResponse queryLinkefabricFabricUrlsddsconsoleurlWithOptions(QueryLinkefabricFabricUrlsddsconsoleurlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricUrlsddsconsoleurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricUrlsddsconsoleurlResponse());
    }

    public QueryLinkefabricFabricUrlsddsconsoleurlResponse queryLinkefabricFabricUrlsddsconsoleurl(QueryLinkefabricFabricUrlsddsconsoleurlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricUrlsddsconsoleurlWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricUrlsfabricurlResponse queryLinkefabricFabricUrlsfabricurlWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricUrlsfabricurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricUrlsfabricurlResponse());
    }

    public QueryLinkefabricFabricUrlsfabricurlResponse queryLinkefabricFabricUrlsfabricurl() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricUrlsfabricurlWithOptions(runtime);
    }

    public QueryLinkefabricFabricUrlsidburlResponse queryLinkefabricFabricUrlsidburlWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricUrlsidburl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricUrlsidburlResponse());
    }

    public QueryLinkefabricFabricUrlsidburlResponse queryLinkefabricFabricUrlsidburl() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricUrlsidburlWithOptions(runtime);
    }

    public QueryLinkefabricFabricUrlsjiuzhouurlResponse queryLinkefabricFabricUrlsjiuzhouurlWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricUrlsjiuzhouurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricUrlsjiuzhouurlResponse());
    }

    public QueryLinkefabricFabricUrlsjiuzhouurlResponse queryLinkefabricFabricUrlsjiuzhouurl() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricUrlsjiuzhouurlWithOptions(runtime);
    }

    public QueryLinkefabricFabricUrlsopsslaurlResponse queryLinkefabricFabricUrlsopsslaurlWithOptions(QueryLinkefabricFabricUrlsopsslaurlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricUrlsopsslaurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricUrlsopsslaurlResponse());
    }

    public QueryLinkefabricFabricUrlsopsslaurlResponse queryLinkefabricFabricUrlsopsslaurl(QueryLinkefabricFabricUrlsopsslaurlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricUrlsopsslaurlWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricUrlszdataconsoleurlResponse queryLinkefabricFabricUrlszdataconsoleurlWithOptions(QueryLinkefabricFabricUrlszdataconsoleurlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricUrlszdataconsoleurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricUrlszdataconsoleurlResponse());
    }

    public QueryLinkefabricFabricUrlszdataconsoleurlResponse queryLinkefabricFabricUrlszdataconsoleurl(QueryLinkefabricFabricUrlszdataconsoleurlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricUrlszdataconsoleurlWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricUrlszopsurlResponse queryLinkefabricFabricUrlszopsurlWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricUrlszopsurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricUrlszopsurlResponse());
    }

    public QueryLinkefabricFabricUrlszopsurlResponse queryLinkefabricFabricUrlszopsurl() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricUrlszopsurlWithOptions(runtime);
    }

    public QueryLinkefabricFabricWebapidbconfigsResponse queryLinkefabricFabricWebapidbconfigsWithOptions(QueryLinkefabricFabricWebapidbconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricWebapidbconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricWebapidbconfigsResponse());
    }

    public QueryLinkefabricFabricWebapidbconfigsResponse queryLinkefabricFabricWebapidbconfigs(QueryLinkefabricFabricWebapidbconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricWebapidbconfigsWithOptions(request, runtime);
    }

    public QueryLinkefabricFabricZdalconfigsResponse queryLinkefabricFabricZdalconfigsWithOptions(QueryLinkefabricFabricZdalconfigsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkefabricFabricZdalconfigs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkefabricFabricZdalconfigsResponse());
    }

    public QueryLinkefabricFabricZdalconfigsResponse queryLinkefabricFabricZdalconfigs(QueryLinkefabricFabricZdalconfigsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkefabricFabricZdalconfigsWithOptions(request, runtime);
    }

    public QueryLinkeLinkaAllsourcefilenodesResponse queryLinkeLinkaAllsourcefilenodesWithOptions(QueryLinkeLinkaAllsourcefilenodesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaAllsourcefilenodes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaAllsourcefilenodesResponse());
    }

    public QueryLinkeLinkaAllsourcefilenodesResponse queryLinkeLinkaAllsourcefilenodes(QueryLinkeLinkaAllsourcefilenodesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaAllsourcefilenodesWithOptions(request, runtime);
    }

    public QueryLinkeLinkaCoveragehistoryResponse queryLinkeLinkaCoveragehistoryWithOptions(QueryLinkeLinkaCoveragehistoryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaCoveragehistory", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaCoveragehistoryResponse());
    }

    public QueryLinkeLinkaCoveragehistoryResponse queryLinkeLinkaCoveragehistory(QueryLinkeLinkaCoveragehistoryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaCoveragehistoryWithOptions(request, runtime);
    }

    public QueryLinkeLinkaCoveragenodeResponse queryLinkeLinkaCoveragenodeWithOptions(QueryLinkeLinkaCoveragenodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaCoveragenode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaCoveragenodeResponse());
    }

    public QueryLinkeLinkaCoveragenodeResponse queryLinkeLinkaCoveragenode(QueryLinkeLinkaCoveragenodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaCoveragenodeWithOptions(request, runtime);
    }

    public QueryLinkeLinkaCpdResponse queryLinkeLinkaCpdWithOptions(QueryLinkeLinkaCpdRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaCpd", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaCpdResponse());
    }

    public QueryLinkeLinkaCpdResponse queryLinkeLinkaCpd(QueryLinkeLinkaCpdRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaCpdWithOptions(request, runtime);
    }

    public QueryLinkeLinkaFilecontentResponse queryLinkeLinkaFilecontentWithOptions(QueryLinkeLinkaFilecontentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaFilecontent", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaFilecontentResponse());
    }

    public QueryLinkeLinkaFilecontentResponse queryLinkeLinkaFilecontent(QueryLinkeLinkaFilecontentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaFilecontentWithOptions(request, runtime);
    }

    public QueryLinkeLinkaFilecontentsResponse queryLinkeLinkaFilecontentsWithOptions(QueryLinkeLinkaFilecontentsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaFilecontents", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaFilecontentsResponse());
    }

    public QueryLinkeLinkaFilecontentsResponse queryLinkeLinkaFilecontents(QueryLinkeLinkaFilecontentsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaFilecontentsWithOptions(request, runtime);
    }

    public QueryLinkeLinkaGrouphistoryResponse queryLinkeLinkaGrouphistoryWithOptions(QueryLinkeLinkaGrouphistoryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaGrouphistory", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaGrouphistoryResponse());
    }

    public QueryLinkeLinkaGrouphistoryResponse queryLinkeLinkaGrouphistory(QueryLinkeLinkaGrouphistoryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaGrouphistoryWithOptions(request, runtime);
    }

    public QueryLinkeLinkaMngtasksummaryResponse queryLinkeLinkaMngtasksummaryWithOptions(QueryLinkeLinkaMngtasksummaryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaMngtasksummary", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaMngtasksummaryResponse());
    }

    public QueryLinkeLinkaMngtasksummaryResponse queryLinkeLinkaMngtasksummary(QueryLinkeLinkaMngtasksummaryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaMngtasksummaryWithOptions(request, runtime);
    }

    public QueryLinkeLinkaOutdatedtaskResponse queryLinkeLinkaOutdatedtaskWithOptions(QueryLinkeLinkaOutdatedtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaOutdatedtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaOutdatedtaskResponse());
    }

    public QueryLinkeLinkaOutdatedtaskResponse queryLinkeLinkaOutdatedtask(QueryLinkeLinkaOutdatedtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaOutdatedtaskWithOptions(request, runtime);
    }

    public QueryLinkeLinkaPmdruleresultsResponse queryLinkeLinkaPmdruleresultsWithOptions(QueryLinkeLinkaPmdruleresultsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaPmdruleresults", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaPmdruleresultsResponse());
    }

    public QueryLinkeLinkaPmdruleresultsResponse queryLinkeLinkaPmdruleresults(QueryLinkeLinkaPmdruleresultsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaPmdruleresultsWithOptions(request, runtime);
    }

    public QueryLinkeLinkaPmdtaskfilecontentResponse queryLinkeLinkaPmdtaskfilecontentWithOptions(QueryLinkeLinkaPmdtaskfilecontentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaPmdtaskfilecontent", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaPmdtaskfilecontentResponse());
    }

    public QueryLinkeLinkaPmdtaskfilecontentResponse queryLinkeLinkaPmdtaskfilecontent(QueryLinkeLinkaPmdtaskfilecontentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaPmdtaskfilecontentWithOptions(request, runtime);
    }

    public QueryLinkeLinkaPmdtaskresultResponse queryLinkeLinkaPmdtaskresultWithOptions(QueryLinkeLinkaPmdtaskresultRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaPmdtaskresult", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaPmdtaskresultResponse());
    }

    public QueryLinkeLinkaPmdtaskresultResponse queryLinkeLinkaPmdtaskresult(QueryLinkeLinkaPmdtaskresultRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaPmdtaskresultWithOptions(request, runtime);
    }

    public QueryLinkeLinkaPmdtaskstatusResponse queryLinkeLinkaPmdtaskstatusWithOptions(QueryLinkeLinkaPmdtaskstatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaPmdtaskstatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaPmdtaskstatusResponse());
    }

    public QueryLinkeLinkaPmdtaskstatusResponse queryLinkeLinkaPmdtaskstatus(QueryLinkeLinkaPmdtaskstatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaPmdtaskstatusWithOptions(request, runtime);
    }

    public QueryLinkeLinkaPmdtasksummaryresultResponse queryLinkeLinkaPmdtasksummaryresultWithOptions(QueryLinkeLinkaPmdtasksummaryresultRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaPmdtasksummaryresult", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaPmdtasksummaryresultResponse());
    }

    public QueryLinkeLinkaPmdtasksummaryresultResponse queryLinkeLinkaPmdtasksummaryresult(QueryLinkeLinkaPmdtasksummaryresultRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaPmdtasksummaryresultWithOptions(request, runtime);
    }

    public QueryLinkeLinkaPriorityresultsResponse queryLinkeLinkaPriorityresultsWithOptions(QueryLinkeLinkaPriorityresultsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaPriorityresults", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaPriorityresultsResponse());
    }

    public QueryLinkeLinkaPriorityresultsResponse queryLinkeLinkaPriorityresults(QueryLinkeLinkaPriorityresultsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaPriorityresultsWithOptions(request, runtime);
    }

    public QueryLinkeLinkaSinglecoveragetaskResponse queryLinkeLinkaSinglecoveragetaskWithOptions(QueryLinkeLinkaSinglecoveragetaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaSinglecoveragetask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaSinglecoveragetaskResponse());
    }

    public QueryLinkeLinkaSinglecoveragetaskResponse queryLinkeLinkaSinglecoveragetask(QueryLinkeLinkaSinglecoveragetaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaSinglecoveragetaskWithOptions(request, runtime);
    }

    public QueryLinkeLinkaStatisticsResponse queryLinkeLinkaStatisticsWithOptions(QueryLinkeLinkaStatisticsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaStatistics", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaStatisticsResponse());
    }

    public QueryLinkeLinkaStatisticsResponse queryLinkeLinkaStatistics(QueryLinkeLinkaStatisticsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaStatisticsWithOptions(request, runtime);
    }

    public QueryLinkeLinkaTaskcoveragenodesResponse queryLinkeLinkaTaskcoveragenodesWithOptions(QueryLinkeLinkaTaskcoveragenodesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaTaskcoveragenodes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaTaskcoveragenodesResponse());
    }

    public QueryLinkeLinkaTaskcoveragenodesResponse queryLinkeLinkaTaskcoveragenodes(QueryLinkeLinkaTaskcoveragenodesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaTaskcoveragenodesWithOptions(request, runtime);
    }

    public QueryLinkeLinkaTaskreportsummaryResponse queryLinkeLinkaTaskreportsummaryWithOptions(QueryLinkeLinkaTaskreportsummaryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaTaskreportsummary", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaTaskreportsummaryResponse());
    }

    public QueryLinkeLinkaTaskreportsummaryResponse queryLinkeLinkaTaskreportsummary(QueryLinkeLinkaTaskreportsummaryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaTaskreportsummaryWithOptions(request, runtime);
    }

    public QueryLinkeLinkaTaskstatisticsinfoResponse queryLinkeLinkaTaskstatisticsinfoWithOptions(QueryLinkeLinkaTaskstatisticsinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaTaskstatisticsinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaTaskstatisticsinfoResponse());
    }

    public QueryLinkeLinkaTaskstatisticsinfoResponse queryLinkeLinkaTaskstatisticsinfo(QueryLinkeLinkaTaskstatisticsinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaTaskstatisticsinfoWithOptions(request, runtime);
    }

    public QueryLinkeLinkaTasksummaryResponse queryLinkeLinkaTasksummaryWithOptions(QueryLinkeLinkaTasksummaryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinkaTasksummary", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinkaTasksummaryResponse());
    }

    public QueryLinkeLinkaTasksummaryResponse queryLinkeLinkaTasksummary(QueryLinkeLinkaTasksummaryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinkaTasksummaryWithOptions(request, runtime);
    }

    public QueryLinkelinkflowLinkflowCurrenttenantResponse queryLinkelinkflowLinkflowCurrenttenantWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkelinkflowLinkflowCurrenttenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkelinkflowLinkflowCurrenttenantResponse());
    }

    public QueryLinkelinkflowLinkflowCurrenttenantResponse queryLinkelinkflowLinkflowCurrenttenant() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkelinkflowLinkflowCurrenttenantWithOptions(runtime);
    }

    public QueryLinkelinkflowLinkflowGetuserResponse queryLinkelinkflowLinkflowGetuserWithOptions(QueryLinkelinkflowLinkflowGetuserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkelinkflowLinkflowGetuser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkelinkflowLinkflowGetuserResponse());
    }

    public QueryLinkelinkflowLinkflowGetuserResponse queryLinkelinkflowLinkflowGetuser(QueryLinkelinkflowLinkflowGetuserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkelinkflowLinkflowGetuserWithOptions(request, runtime);
    }

    public QueryLinkelinkflowLinkflowProcessResponse queryLinkelinkflowLinkflowProcessWithOptions(QueryLinkelinkflowLinkflowProcessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkelinkflowLinkflowProcess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkelinkflowLinkflowProcessResponse());
    }

    public QueryLinkelinkflowLinkflowProcessResponse queryLinkelinkflowLinkflowProcess(QueryLinkelinkflowLinkflowProcessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkelinkflowLinkflowProcessWithOptions(request, runtime);
    }

    public QueryLinkelinkflowLinkflowTaskResponse queryLinkelinkflowLinkflowTaskWithOptions(QueryLinkelinkflowLinkflowTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkelinkflowLinkflowTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkelinkflowLinkflowTaskResponse());
    }

    public QueryLinkelinkflowLinkflowTaskResponse queryLinkelinkflowLinkflowTask(QueryLinkelinkflowLinkflowTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkelinkflowLinkflowTaskWithOptions(request, runtime);
    }

    public QueryLinkeLinklogAbridgedcontentwithrangeResponse queryLinkeLinklogAbridgedcontentwithrangeWithOptions(QueryLinkeLinklogAbridgedcontentwithrangeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinklogAbridgedcontentwithrange", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinklogAbridgedcontentwithrangeResponse());
    }

    public QueryLinkeLinklogAbridgedcontentwithrangeResponse queryLinkeLinklogAbridgedcontentwithrange(QueryLinkeLinklogAbridgedcontentwithrangeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinklogAbridgedcontentwithrangeWithOptions(request, runtime);
    }

    public QueryLinkeLinklogAccountlistResponse queryLinkeLinklogAccountlistWithOptions(QueryLinkeLinklogAccountlistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinklogAccountlist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinklogAccountlistResponse());
    }

    public QueryLinkeLinklogAccountlistResponse queryLinkeLinklogAccountlist(QueryLinkeLinklogAccountlistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinklogAccountlistWithOptions(request, runtime);
    }

    public QueryLinkeLinktDemotwoResponse queryLinkeLinktDemotwoWithOptions(QueryLinkeLinktDemotwoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktDemotwo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktDemotwoResponse());
    }

    public QueryLinkeLinktDemotwoResponse queryLinkeLinktDemotwo(QueryLinkeLinktDemotwoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktDemotwoWithOptions(request, runtime);
    }

    public QueryLinkeLinktImportprocessresultResponse queryLinkeLinktImportprocessresultWithOptions(QueryLinkeLinktImportprocessresultRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktImportprocessresult", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktImportprocessresultResponse());
    }

    public QueryLinkeLinktImportprocessresultResponse queryLinkeLinktImportprocessresult(QueryLinkeLinktImportprocessresultRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktImportprocessresultWithOptions(request, runtime);
    }

    public QueryLinkeLinktImportresultResponse queryLinkeLinktImportresultWithOptions(QueryLinkeLinktImportresultRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktImportresult", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktImportresultResponse());
    }

    public QueryLinkeLinktImportresultResponse queryLinkeLinktImportresult(QueryLinkeLinktImportresultRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktImportresultWithOptions(request, runtime);
    }

    public QueryLinkeLinktIterationResponse queryLinkeLinktIterationWithOptions(QueryLinkeLinktIterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktIteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktIterationResponse());
    }

    public QueryLinkeLinktIterationResponse queryLinkeLinktIteration(QueryLinkeLinktIterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktIterationWithOptions(request, runtime);
    }

    public QueryLinkeLinktIterationmeetingResponse queryLinkeLinktIterationmeetingWithOptions(QueryLinkeLinktIterationmeetingRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktIterationmeeting", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktIterationmeetingResponse());
    }

    public QueryLinkeLinktIterationmeetingResponse queryLinkeLinktIterationmeeting(QueryLinkeLinktIterationmeetingRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktIterationmeetingWithOptions(request, runtime);
    }

    public QueryLinkeLinktIterationsResponse queryLinkeLinktIterationsWithOptions(QueryLinkeLinktIterationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktIterations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktIterationsResponse());
    }

    public QueryLinkeLinktIterationsResponse queryLinkeLinktIterations(QueryLinkeLinktIterationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktIterationsWithOptions(request, runtime);
    }

    public QueryLinkeLinktKanbancolumninfoResponse queryLinkeLinktKanbancolumninfoWithOptions(QueryLinkeLinktKanbancolumninfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktKanbancolumninfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktKanbancolumninfoResponse());
    }

    public QueryLinkeLinktKanbancolumninfoResponse queryLinkeLinktKanbancolumninfo(QueryLinkeLinktKanbancolumninfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktKanbancolumninfoWithOptions(request, runtime);
    }

    public QueryLinkeLinktLinkeiterationsResponse queryLinkeLinktLinkeiterationsWithOptions(QueryLinkeLinktLinkeiterationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktLinkeiterations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktLinkeiterationsResponse());
    }

    public QueryLinkeLinktLinkeiterationsResponse queryLinkeLinktLinkeiterations(QueryLinkeLinktLinkeiterationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktLinkeiterationsWithOptions(request, runtime);
    }

    public QueryLinkeLinktMilestoneResponse queryLinkeLinktMilestoneWithOptions(QueryLinkeLinktMilestoneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktMilestone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktMilestoneResponse());
    }

    public QueryLinkeLinktMilestoneResponse queryLinkeLinktMilestone(QueryLinkeLinktMilestoneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktMilestoneWithOptions(request, runtime);
    }

    public QueryLinkeLinktMyentryprojectsResponse queryLinkeLinktMyentryprojectsWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktMyentryprojects", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktMyentryprojectsResponse());
    }

    public QueryLinkeLinktMyentryprojectsResponse queryLinkeLinktMyentryprojects() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktMyentryprojectsWithOptions(runtime);
    }

    public QueryLinkeLinktMyparticipatedprojectsResponse queryLinkeLinktMyparticipatedprojectsWithOptions(QueryLinkeLinktMyparticipatedprojectsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktMyparticipatedprojects", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktMyparticipatedprojectsResponse());
    }

    public QueryLinkeLinktMyparticipatedprojectsResponse queryLinkeLinktMyparticipatedprojects(QueryLinkeLinktMyparticipatedprojectsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktMyparticipatedprojectsWithOptions(request, runtime);
    }

    public QueryLinkeLinktNextreachablestatusesResponse queryLinkeLinktNextreachablestatusesWithOptions(QueryLinkeLinktNextreachablestatusesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktNextreachablestatuses", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktNextreachablestatusesResponse());
    }

    public QueryLinkeLinktNextreachablestatusesResponse queryLinkeLinktNextreachablestatuses(QueryLinkeLinktNextreachablestatusesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktNextreachablestatusesWithOptions(request, runtime);
    }

    public QueryLinkeLinktProjectResponse queryLinkeLinktProjectWithOptions(QueryLinkeLinktProjectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktProject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktProjectResponse());
    }

    public QueryLinkeLinktProjectResponse queryLinkeLinktProject(QueryLinkeLinktProjectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktProjectWithOptions(request, runtime);
    }

    public QueryLinkeLinktProjectcreatedstatusesgroupbystageResponse queryLinkeLinktProjectcreatedstatusesgroupbystageWithOptions(QueryLinkeLinktProjectcreatedstatusesgroupbystageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktProjectcreatedstatusesgroupbystage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktProjectcreatedstatusesgroupbystageResponse());
    }

    public QueryLinkeLinktProjectcreatedstatusesgroupbystageResponse queryLinkeLinktProjectcreatedstatusesgroupbystage(QueryLinkeLinktProjectcreatedstatusesgroupbystageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktProjectcreatedstatusesgroupbystageWithOptions(request, runtime);
    }

    public QueryLinkeLinktProjectcreatedtagsResponse queryLinkeLinktProjectcreatedtagsWithOptions(QueryLinkeLinktProjectcreatedtagsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktProjectcreatedtags", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktProjectcreatedtagsResponse());
    }

    public QueryLinkeLinktProjectcreatedtagsResponse queryLinkeLinktProjectcreatedtags(QueryLinkeLinktProjectcreatedtagsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktProjectcreatedtagsWithOptions(request, runtime);
    }

    public QueryLinkeLinktProjectmembersResponse queryLinkeLinktProjectmembersWithOptions(QueryLinkeLinktProjectmembersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktProjectmembers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktProjectmembersResponse());
    }

    public QueryLinkeLinktProjectmembersResponse queryLinkeLinktProjectmembers(QueryLinkeLinktProjectmembersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktProjectmembersWithOptions(request, runtime);
    }

    public QueryLinkeLinktProjectmilestonegroupsResponse queryLinkeLinktProjectmilestonegroupsWithOptions(QueryLinkeLinktProjectmilestonegroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktProjectmilestonegroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktProjectmilestonegroupsResponse());
    }

    public QueryLinkeLinktProjectmilestonegroupsResponse queryLinkeLinktProjectmilestonegroups(QueryLinkeLinktProjectmilestonegroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktProjectmilestonegroupsWithOptions(request, runtime);
    }

    public QueryLinkeLinktProjectmilestonesResponse queryLinkeLinktProjectmilestonesWithOptions(QueryLinkeLinktProjectmilestonesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktProjectmilestones", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktProjectmilestonesResponse());
    }

    public QueryLinkeLinktProjectmilestonesResponse queryLinkeLinktProjectmilestones(QueryLinkeLinktProjectmilestonesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktProjectmilestonesWithOptions(request, runtime);
    }

    public QueryLinkeLinktProjectnoticeResponse queryLinkeLinktProjectnoticeWithOptions(QueryLinkeLinktProjectnoticeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktProjectnotice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktProjectnoticeResponse());
    }

    public QueryLinkeLinktProjectnoticeResponse queryLinkeLinktProjectnotice(QueryLinkeLinktProjectnoticeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktProjectnoticeWithOptions(request, runtime);
    }

    public QueryLinkeLinktProjectongoingiterationsResponse queryLinkeLinktProjectongoingiterationsWithOptions(QueryLinkeLinktProjectongoingiterationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktProjectongoingiterations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktProjectongoingiterationsResponse());
    }

    public QueryLinkeLinktProjectongoingiterationsResponse queryLinkeLinktProjectongoingiterations(QueryLinkeLinktProjectongoingiterationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktProjectongoingiterationsWithOptions(request, runtime);
    }

    public QueryLinkeLinktProjectusedstatusesResponse queryLinkeLinktProjectusedstatusesWithOptions(QueryLinkeLinktProjectusedstatusesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktProjectusedstatuses", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktProjectusedstatusesResponse());
    }

    public QueryLinkeLinktProjectusedstatusesResponse queryLinkeLinktProjectusedstatuses(QueryLinkeLinktProjectusedstatusesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktProjectusedstatusesWithOptions(request, runtime);
    }

    public QueryLinkeLinktRelatedworkitemsResponse queryLinkeLinktRelatedworkitemsWithOptions(QueryLinkeLinktRelatedworkitemsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktRelatedworkitems", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktRelatedworkitemsResponse());
    }

    public QueryLinkeLinktRelatedworkitemsResponse queryLinkeLinktRelatedworkitems(QueryLinkeLinktRelatedworkitemsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktRelatedworkitemsWithOptions(request, runtime);
    }

    public QueryLinkeLinktSimpleprojectResponse queryLinkeLinktSimpleprojectWithOptions(QueryLinkeLinktSimpleprojectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktSimpleproject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktSimpleprojectResponse());
    }

    public QueryLinkeLinktSimpleprojectResponse queryLinkeLinktSimpleproject(QueryLinkeLinktSimpleprojectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktSimpleprojectWithOptions(request, runtime);
    }

    public QueryLinkeLinktSimpleprojectmembersResponse queryLinkeLinktSimpleprojectmembersWithOptions(QueryLinkeLinktSimpleprojectmembersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktSimpleprojectmembers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktSimpleprojectmembersResponse());
    }

    public QueryLinkeLinktSimpleprojectmembersResponse queryLinkeLinktSimpleprojectmembers(QueryLinkeLinktSimpleprojectmembersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktSimpleprojectmembersWithOptions(request, runtime);
    }

    public QueryLinkeLinktStatisticsResponse queryLinkeLinktStatisticsWithOptions(QueryLinkeLinktStatisticsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktStatistics", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktStatisticsResponse());
    }

    public QueryLinkeLinktStatisticsResponse queryLinkeLinktStatistics(QueryLinkeLinktStatisticsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktStatisticsWithOptions(request, runtime);
    }

    public QueryLinkeLinktSubprojectsResponse queryLinkeLinktSubprojectsWithOptions(QueryLinkeLinktSubprojectsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktSubprojects", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktSubprojectsResponse());
    }

    public QueryLinkeLinktSubprojectsResponse queryLinkeLinktSubprojects(QueryLinkeLinktSubprojectsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktSubprojectsWithOptions(request, runtime);
    }

    public QueryLinkeLinktTagsResponse queryLinkeLinktTagsWithOptions(QueryLinkeLinktTagsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktTags", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktTagsResponse());
    }

    public QueryLinkeLinktTagsResponse queryLinkeLinktTags(QueryLinkeLinktTagsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktTagsWithOptions(request, runtime);
    }

    public QueryLinkeLinktTemplateworkflowResponse queryLinkeLinktTemplateworkflowWithOptions(QueryLinkeLinktTemplateworkflowRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktTemplateworkflow", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktTemplateworkflowResponse());
    }

    public QueryLinkeLinktTemplateworkflowResponse queryLinkeLinktTemplateworkflow(QueryLinkeLinktTemplateworkflowRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktTemplateworkflowWithOptions(request, runtime);
    }

    public QueryLinkeLinktWorkitemResponse queryLinkeLinktWorkitemWithOptions(QueryLinkeLinktWorkitemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryLinkeLinktWorkitem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryLinkeLinktWorkitemResponse());
    }

    public QueryLinkeLinktWorkitemResponse queryLinkeLinktWorkitem(QueryLinkeLinktWorkitemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryLinkeLinktWorkitemWithOptions(request, runtime);
    }

    public QueryMqSofamqCellByCellTypeResponse queryMqSofamqCellByCellTypeWithOptions(QueryMqSofamqCellByCellTypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqCellByCellType", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqCellByCellTypeResponse());
    }

    public QueryMqSofamqCellByCellTypeResponse queryMqSofamqCellByCellType(QueryMqSofamqCellByCellTypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqCellByCellTypeWithOptions(request, runtime);
    }

    public QueryMqSofamqConsumerAccumulateResponse queryMqSofamqConsumerAccumulateWithOptions(QueryMqSofamqConsumerAccumulateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqConsumerAccumulate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqConsumerAccumulateResponse());
    }

    public QueryMqSofamqConsumerAccumulateResponse queryMqSofamqConsumerAccumulate(QueryMqSofamqConsumerAccumulateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqConsumerAccumulateWithOptions(request, runtime);
    }

    public QueryMqSofamqConsumerConnectionResponse queryMqSofamqConsumerConnectionWithOptions(QueryMqSofamqConsumerConnectionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqConsumerConnection", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqConsumerConnectionResponse());
    }

    public QueryMqSofamqConsumerConnectionResponse queryMqSofamqConsumerConnection(QueryMqSofamqConsumerConnectionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqConsumerConnectionWithOptions(request, runtime);
    }

    public QueryMqSofamqConsumerTimespanResponse queryMqSofamqConsumerTimespanWithOptions(QueryMqSofamqConsumerTimespanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqConsumerTimespan", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqConsumerTimespanResponse());
    }

    public QueryMqSofamqConsumerTimespanResponse queryMqSofamqConsumerTimespan(QueryMqSofamqConsumerTimespanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqConsumerTimespanWithOptions(request, runtime);
    }

    public QueryMqSofamqDLQMessageByGroupIdResponse queryMqSofamqDLQMessageByGroupIdWithOptions(QueryMqSofamqDLQMessageByGroupIdRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqDLQMessageByGroupId", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqDLQMessageByGroupIdResponse());
    }

    public QueryMqSofamqDLQMessageByGroupIdResponse queryMqSofamqDLQMessageByGroupId(QueryMqSofamqDLQMessageByGroupIdRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqDLQMessageByGroupIdWithOptions(request, runtime);
    }

    public QueryMqSofamqEndpointResponse queryMqSofamqEndpointWithOptions(QueryMqSofamqEndpointRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqEndpoint", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqEndpointResponse());
    }

    public QueryMqSofamqEndpointResponse queryMqSofamqEndpoint(QueryMqSofamqEndpointRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqEndpointWithOptions(request, runtime);
    }

    public QueryMqSofamqGroupNameResponse queryMqSofamqGroupNameWithOptions(QueryMqSofamqGroupNameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqGroupName", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqGroupNameResponse());
    }

    public QueryMqSofamqGroupNameResponse queryMqSofamqGroupName(QueryMqSofamqGroupNameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqGroupNameWithOptions(request, runtime);
    }

    public QueryMqSofamqGroupSubDetailResponse queryMqSofamqGroupSubDetailWithOptions(QueryMqSofamqGroupSubDetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqGroupSubDetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqGroupSubDetailResponse());
    }

    public QueryMqSofamqGroupSubDetailResponse queryMqSofamqGroupSubDetail(QueryMqSofamqGroupSubDetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqGroupSubDetailWithOptions(request, runtime);
    }

    public QueryMqSofamqLinkResponse queryMqSofamqLinkWithOptions(QueryMqSofamqLinkRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqLink", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqLinkResponse());
    }

    public QueryMqSofamqLinkResponse queryMqSofamqLink(QueryMqSofamqLinkRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqLinkWithOptions(request, runtime);
    }

    public QueryMqSofamqMessageByKeyResponse queryMqSofamqMessageByKeyWithOptions(QueryMqSofamqMessageByKeyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqMessageByKey", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqMessageByKeyResponse());
    }

    public QueryMqSofamqMessageByKeyResponse queryMqSofamqMessageByKey(QueryMqSofamqMessageByKeyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqMessageByKeyWithOptions(request, runtime);
    }

    public QueryMqSofamqMessageByTopicResponse queryMqSofamqMessageByTopicWithOptions(QueryMqSofamqMessageByTopicRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqMessageByTopic", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqMessageByTopicResponse());
    }

    public QueryMqSofamqMessageByTopicResponse queryMqSofamqMessageByTopic(QueryMqSofamqMessageByTopicRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqMessageByTopicWithOptions(request, runtime);
    }

    public QueryMqSofamqMessageTraceResponse queryMqSofamqMessageTraceWithOptions(QueryMqSofamqMessageTraceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqMessageTrace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqMessageTraceResponse());
    }

    public QueryMqSofamqMessageTraceResponse queryMqSofamqMessageTrace(QueryMqSofamqMessageTraceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqMessageTraceWithOptions(request, runtime);
    }

    public QueryMqSofamqRouterResponse queryMqSofamqRouterWithOptions(QueryMqSofamqRouterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqRouter", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqRouterResponse());
    }

    public QueryMqSofamqRouterResponse queryMqSofamqRouter(QueryMqSofamqRouterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqRouterWithOptions(request, runtime);
    }

    public QueryMqSofamqTopicNameResponse queryMqSofamqTopicNameWithOptions(QueryMqSofamqTopicNameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqTopicName", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqTopicNameResponse());
    }

    public QueryMqSofamqTopicNameResponse queryMqSofamqTopicName(QueryMqSofamqTopicNameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqTopicNameWithOptions(request, runtime);
    }

    public QueryMqSofamqTopicSubDetailResponse queryMqSofamqTopicSubDetailWithOptions(QueryMqSofamqTopicSubDetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqTopicSubDetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqTopicSubDetailResponse());
    }

    public QueryMqSofamqTopicSubDetailResponse queryMqSofamqTopicSubDetail(QueryMqSofamqTopicSubDetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqTopicSubDetailWithOptions(request, runtime);
    }

    public QueryMqSofamqTraceByMsgKeyResponse queryMqSofamqTraceByMsgKeyWithOptions(QueryMqSofamqTraceByMsgKeyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqTraceByMsgKey", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqTraceByMsgKeyResponse());
    }

    public QueryMqSofamqTraceByMsgKeyResponse queryMqSofamqTraceByMsgKey(QueryMqSofamqTraceByMsgKeyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqTraceByMsgKeyWithOptions(request, runtime);
    }

    public QueryMqSofamqTraceByTopicResponse queryMqSofamqTraceByTopicWithOptions(QueryMqSofamqTraceByTopicRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMqSofamqTraceByTopic", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMqSofamqTraceByTopicResponse());
    }

    public QueryMqSofamqTraceByTopicResponse queryMqSofamqTraceByTopic(QueryMqSofamqTraceByTopicRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMqSofamqTraceByTopicWithOptions(request, runtime);
    }

    public QueryMsConfigAttributesResponse queryMsConfigAttributesWithOptions(QueryMsConfigAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsConfigAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsConfigAttributesResponse());
    }

    public QueryMsConfigAttributesResponse queryMsConfigAttributes(QueryMsConfigAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsConfigAttributesWithOptions(request, runtime);
    }

    public QueryMsConfigClientsResponse queryMsConfigClientsWithOptions(QueryMsConfigClientsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsConfigClients", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsConfigClientsResponse());
    }

    public QueryMsConfigClientsResponse queryMsConfigClients(QueryMsConfigClientsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsConfigClientsWithOptions(request, runtime);
    }

    public QueryMsConfigClientValuesResponse queryMsConfigClientValuesWithOptions(QueryMsConfigClientValuesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsConfigClientValues", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsConfigClientValuesResponse());
    }

    public QueryMsConfigClientValuesResponse queryMsConfigClientValues(QueryMsConfigClientValuesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsConfigClientValuesWithOptions(request, runtime);
    }

    public QueryMsConfigDataResponse queryMsConfigDataWithOptions(QueryMsConfigDataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsConfigData", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsConfigDataResponse());
    }

    public QueryMsConfigDataResponse queryMsConfigData(QueryMsConfigDataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsConfigDataWithOptions(request, runtime);
    }

    public QueryMsConfigResourcesResponse queryMsConfigResourcesWithOptions(QueryMsConfigResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsConfigResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsConfigResourcesResponse());
    }

    public QueryMsConfigResourcesResponse queryMsConfigResources(QueryMsConfigResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsConfigResourcesWithOptions(request, runtime);
    }

    public QueryMSDdcsAttributesResponse queryMSDdcsAttributesWithOptions(QueryMSDdcsAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMSDdcsAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMSDdcsAttributesResponse());
    }

    public QueryMSDdcsAttributesResponse queryMSDdcsAttributes(QueryMSDdcsAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMSDdcsAttributesWithOptions(request, runtime);
    }

    public QueryMSDdcsClientsResponse queryMSDdcsClientsWithOptions(QueryMSDdcsClientsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMSDdcsClients", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMSDdcsClientsResponse());
    }

    public QueryMSDdcsClientsResponse queryMSDdcsClients(QueryMSDdcsClientsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMSDdcsClientsWithOptions(request, runtime);
    }

    public QueryMSDdcsClientValueResponse queryMSDdcsClientValueWithOptions(QueryMSDdcsClientValueRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMSDdcsClientValue", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMSDdcsClientValueResponse());
    }

    public QueryMSDdcsClientValueResponse queryMSDdcsClientValue(QueryMSDdcsClientValueRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMSDdcsClientValueWithOptions(request, runtime);
    }

    public QueryMSDdcsDataResponse queryMSDdcsDataWithOptions(QueryMSDdcsDataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMSDdcsData", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMSDdcsDataResponse());
    }

    public QueryMSDdcsDataResponse queryMSDdcsData(QueryMSDdcsDataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMSDdcsDataWithOptions(request, runtime);
    }

    public QueryMSDdcsPushHistoryResponse queryMSDdcsPushHistoryWithOptions(QueryMSDdcsPushHistoryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMSDdcsPushHistory", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMSDdcsPushHistoryResponse());
    }

    public QueryMSDdcsPushHistoryResponse queryMSDdcsPushHistory(QueryMSDdcsPushHistoryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMSDdcsPushHistoryWithOptions(request, runtime);
    }

    public QueryMSDdcsResourcesResponse queryMSDdcsResourcesWithOptions(QueryMSDdcsResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMSDdcsResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMSDdcsResourcesResponse());
    }

    public QueryMSDdcsResourcesResponse queryMSDdcsResources(QueryMSDdcsResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMSDdcsResourcesWithOptions(request, runtime);
    }

    public QueryMSDdsJobsResponse queryMSDdsJobsWithOptions(QueryMSDdsJobsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMSDdsJobs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMSDdsJobsResponse());
    }

    public QueryMSDdsJobsResponse queryMSDdsJobs(QueryMSDdsJobsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMSDdsJobsWithOptions(request, runtime);
    }

    public QueryMsDrmClientInfosResponse queryMsDrmClientInfosWithOptions(QueryMsDrmClientInfosRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsDrmClientInfos", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsDrmClientInfosResponse());
    }

    public QueryMsDrmClientInfosResponse queryMsDrmClientInfos(QueryMsDrmClientInfosRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsDrmClientInfosWithOptions(request, runtime);
    }

    public QueryMsDrmClientsResponse queryMsDrmClientsWithOptions(QueryMsDrmClientsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsDrmClients", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsDrmClientsResponse());
    }

    public QueryMsDrmClientsResponse queryMsDrmClients(QueryMsDrmClientsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsDrmClientsWithOptions(request, runtime);
    }

    public QueryMsDrmDrmResourceTplResponse queryMsDrmDrmResourceTplWithOptions(QueryMsDrmDrmResourceTplRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsDrmDrmResourceTpl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsDrmDrmResourceTplResponse());
    }

    public QueryMsDrmDrmResourceTplResponse queryMsDrmDrmResourceTpl(QueryMsDrmDrmResourceTplRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsDrmDrmResourceTplWithOptions(request, runtime);
    }

    public QueryMsDrmHostsResponse queryMsDrmHostsWithOptions(QueryMsDrmHostsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsDrmHosts", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsDrmHostsResponse());
    }

    public QueryMsDrmHostsResponse queryMsDrmHosts(QueryMsDrmHostsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsDrmHostsWithOptions(request, runtime);
    }

    public QueryMsDrmLogsResponse queryMsDrmLogsWithOptions(QueryMsDrmLogsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsDrmLogs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsDrmLogsResponse());
    }

    public QueryMsDrmLogsResponse queryMsDrmLogs(QueryMsDrmLogsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsDrmLogsWithOptions(request, runtime);
    }

    public QueryMsDrmResourcesResponse queryMsDrmResourcesWithOptions(QueryMsDrmResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsDrmResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsDrmResourcesResponse());
    }

    public QueryMsDrmResourcesResponse queryMsDrmResources(QueryMsDrmResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsDrmResourcesWithOptions(request, runtime);
    }

    public QueryMsGuardianAppsResponse queryMsGuardianAppsWithOptions(QueryMsGuardianAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsGuardianApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsGuardianAppsResponse());
    }

    public QueryMsGuardianAppsResponse queryMsGuardianApps(QueryMsGuardianAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsGuardianAppsWithOptions(request, runtime);
    }

    public QueryMsGuardianRulePushHistorysResponse queryMsGuardianRulePushHistorysWithOptions(QueryMsGuardianRulePushHistorysRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsGuardianRulePushHistorys", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsGuardianRulePushHistorysResponse());
    }

    public QueryMsGuardianRulePushHistorysResponse queryMsGuardianRulePushHistorys(QueryMsGuardianRulePushHistorysRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsGuardianRulePushHistorysWithOptions(request, runtime);
    }

    public QueryMsGuardianRulesResponse queryMsGuardianRulesWithOptions(QueryMsGuardianRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsGuardianRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsGuardianRulesResponse());
    }

    public QueryMsGuardianRulesResponse queryMsGuardianRules(QueryMsGuardianRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsGuardianRulesWithOptions(request, runtime);
    }

    public QueryMsRcSyncClusterResponse queryMsRcSyncClusterWithOptions(QueryMsRcSyncClusterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsRcSyncCluster", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsRcSyncClusterResponse());
    }

    public QueryMsRcSyncClusterResponse queryMsRcSyncCluster(QueryMsRcSyncClusterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsRcSyncClusterWithOptions(request, runtime);
    }

    public QueryMsRcSyncDataResponse queryMsRcSyncDataWithOptions(QueryMsRcSyncDataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsRcSyncData", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsRcSyncDataResponse());
    }

    public QueryMsRcSyncDataResponse queryMsRcSyncData(QueryMsRcSyncDataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsRcSyncDataWithOptions(request, runtime);
    }

    public QueryMsRcSyncTaskResponse queryMsRcSyncTaskWithOptions(QueryMsRcSyncTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsRcSyncTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsRcSyncTaskResponse());
    }

    public QueryMsRcSyncTaskResponse queryMsRcSyncTask(QueryMsRcSyncTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsRcSyncTaskWithOptions(request, runtime);
    }

    public QueryMSServiceResponse queryMSServiceWithOptions(QueryMSServiceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMSService", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMSServiceResponse());
    }

    public QueryMSServiceResponse queryMSService(QueryMSServiceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMSServiceWithOptions(request, runtime);
    }

    public QueryMSServicePublisherResponse queryMSServicePublisherWithOptions(QueryMSServicePublisherRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMSServicePublisher", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMSServicePublisherResponse());
    }

    public QueryMSServicePublisherResponse queryMSServicePublisher(QueryMSServicePublisherRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMSServicePublisherWithOptions(request, runtime);
    }

    public QueryMSServiceSubscriberResponse queryMSServiceSubscriberWithOptions(QueryMSServiceSubscriberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMSServiceSubscriber", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMSServiceSubscriberResponse());
    }

    public QueryMSServiceSubscriberResponse queryMSServiceSubscriber(QueryMSServiceSubscriberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMSServiceSubscriberWithOptions(request, runtime);
    }

    public QueryMsSgAppRelationsResponse queryMsSgAppRelationsWithOptions(QueryMsSgAppRelationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsSgAppRelations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsSgAppRelationsResponse());
    }

    public QueryMsSgAppRelationsResponse queryMsSgAppRelations(QueryMsSgAppRelationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsSgAppRelationsWithOptions(request, runtime);
    }

    public QueryMsSgDowngradeGroupsResponse queryMsSgDowngradeGroupsWithOptions(QueryMsSgDowngradeGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsSgDowngradeGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsSgDowngradeGroupsResponse());
    }

    public QueryMsSgDowngradeGroupsResponse queryMsSgDowngradeGroups(QueryMsSgDowngradeGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsSgDowngradeGroupsWithOptions(request, runtime);
    }

    public QueryMsSGFormConfigResponse queryMsSGFormConfigWithOptions(QueryMsSGFormConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsSGFormConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsSGFormConfigResponse());
    }

    public QueryMsSGFormConfigResponse queryMsSGFormConfig(QueryMsSGFormConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsSGFormConfigWithOptions(request, runtime);
    }

    public QueryMsSgServiceKeywordResponse queryMsSgServiceKeywordWithOptions(QueryMsSgServiceKeywordRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsSgServiceKeyword", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsSgServiceKeywordResponse());
    }

    public QueryMsSgServiceKeywordResponse queryMsSgServiceKeyword(QueryMsSgServiceKeywordRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsSgServiceKeywordWithOptions(request, runtime);
    }

    public QueryMsSgServicePubKeysResponse queryMsSgServicePubKeysWithOptions(QueryMsSgServicePubKeysRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsSgServicePubKeys", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsSgServicePubKeysResponse());
    }

    public QueryMsSgServicePubKeysResponse queryMsSgServicePubKeys(QueryMsSgServicePubKeysRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsSgServicePubKeysWithOptions(request, runtime);
    }

    public QueryMsSgServicePublishersResponse queryMsSgServicePublishersWithOptions(QueryMsSgServicePublishersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsSgServicePublishers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsSgServicePublishersResponse());
    }

    public QueryMsSgServicePublishersResponse queryMsSgServicePublishers(QueryMsSgServicePublishersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsSgServicePublishersWithOptions(request, runtime);
    }

    public QueryMsSgServicePubRelationsResponse queryMsSgServicePubRelationsWithOptions(QueryMsSgServicePubRelationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsSgServicePubRelations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsSgServicePubRelationsResponse());
    }

    public QueryMsSgServicePubRelationsResponse queryMsSgServicePubRelations(QueryMsSgServicePubRelationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsSgServicePubRelationsWithOptions(request, runtime);
    }

    public QueryMsSgServiceRateLimitRulesResponse queryMsSgServiceRateLimitRulesWithOptions(QueryMsSgServiceRateLimitRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsSgServiceRateLimitRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsSgServiceRateLimitRulesResponse());
    }

    public QueryMsSgServiceRateLimitRulesResponse queryMsSgServiceRateLimitRules(QueryMsSgServiceRateLimitRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsSgServiceRateLimitRulesWithOptions(request, runtime);
    }

    public QueryMsSgServicesResponse queryMsSgServicesWithOptions(QueryMsSgServicesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsSgServices", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsSgServicesResponse());
    }

    public QueryMsSgServicesResponse queryMsSgServices(QueryMsSgServicesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsSgServicesWithOptions(request, runtime);
    }

    public QueryMsSgServiceSubKeysResponse queryMsSgServiceSubKeysWithOptions(QueryMsSgServiceSubKeysRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsSgServiceSubKeys", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsSgServiceSubKeysResponse());
    }

    public QueryMsSgServiceSubKeysResponse queryMsSgServiceSubKeys(QueryMsSgServiceSubKeysRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsSgServiceSubKeysWithOptions(request, runtime);
    }

    public QueryMsSgServiceSubRelationsResponse queryMsSgServiceSubRelationsWithOptions(QueryMsSgServiceSubRelationsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsSgServiceSubRelations", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsSgServiceSubRelationsResponse());
    }

    public QueryMsSgServiceSubRelationsResponse queryMsSgServiceSubRelations(QueryMsSgServiceSubRelationsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsSgServiceSubRelationsWithOptions(request, runtime);
    }

    public QueryMsSgServiceSubsResponse queryMsSgServiceSubsWithOptions(QueryMsSgServiceSubsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsSgServiceSubs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsSgServiceSubsResponse());
    }

    public QueryMsSgServiceSubsResponse queryMsSgServiceSubs(QueryMsSgServiceSubsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsSgServiceSubsWithOptions(request, runtime);
    }

    public QueryMsSgServiceSubscribersResponse queryMsSgServiceSubscribersWithOptions(QueryMsSgServiceSubscribersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsSgServiceSubscribers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsSgServiceSubscribersResponse());
    }

    public QueryMsSgServiceSubscribersResponse queryMsSgServiceSubscribers(QueryMsSgServiceSubscribersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsSgServiceSubscribersWithOptions(request, runtime);
    }

    public QueryMsTransparentProxyAppResponse queryMsTransparentProxyAppWithOptions(QueryMsTransparentProxyAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsTransparentProxyApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsTransparentProxyAppResponse());
    }

    public QueryMsTransparentProxyAppResponse queryMsTransparentProxyApp(QueryMsTransparentProxyAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsTransparentProxyAppWithOptions(request, runtime);
    }

    public QueryMsTransparentProxyLogResponse queryMsTransparentProxyLogWithOptions(QueryMsTransparentProxyLogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsTransparentProxyLog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsTransparentProxyLogResponse());
    }

    public QueryMsTransparentProxyLogResponse queryMsTransparentProxyLog(QueryMsTransparentProxyLogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsTransparentProxyLogWithOptions(request, runtime);
    }

    public QueryMsTransparentProxyNodeResponse queryMsTransparentProxyNodeWithOptions(QueryMsTransparentProxyNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryMsTransparentProxyNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryMsTransparentProxyNodeResponse());
    }

    public QueryMsTransparentProxyNodeResponse queryMsTransparentProxyNode(QueryMsTransparentProxyNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryMsTransparentProxyNodeWithOptions(request, runtime);
    }

    public QueryODPBizDbnodesResponse queryODPBizDbnodesWithOptions(QueryODPBizDbnodesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPBizDbnodes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPBizDbnodesResponse());
    }

    public QueryODPBizDbnodesResponse queryODPBizDbnodes(QueryODPBizDbnodesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPBizDbnodesWithOptions(request, runtime);
    }

    public QueryODPDbnodesResponse queryODPDbnodesWithOptions(QueryODPDbnodesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPDbnodes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPDbnodesResponse());
    }

    public QueryODPDbnodesResponse queryODPDbnodes(QueryODPDbnodesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPDbnodesWithOptions(request, runtime);
    }

    public QueryODPDbnodesRelatedPhysicalSchemasResponse queryODPDbnodesRelatedPhysicalSchemasWithOptions(QueryODPDbnodesRelatedPhysicalSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPDbnodesRelatedPhysicalSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPDbnodesRelatedPhysicalSchemasResponse());
    }

    public QueryODPDbnodesRelatedPhysicalSchemasResponse queryODPDbnodesRelatedPhysicalSchemas(QueryODPDbnodesRelatedPhysicalSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPDbnodesRelatedPhysicalSchemasWithOptions(request, runtime);
    }

    public QueryODPEnvironmentResponse queryODPEnvironmentWithOptions(QueryODPEnvironmentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPEnvironment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPEnvironmentResponse());
    }

    public QueryODPEnvironmentResponse queryODPEnvironment(QueryODPEnvironmentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPEnvironmentWithOptions(request, runtime);
    }

    public QueryODPEnvironmentLookoutAddressResponse queryODPEnvironmentLookoutAddressWithOptions(QueryODPEnvironmentLookoutAddressRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPEnvironmentLookoutAddress", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPEnvironmentLookoutAddressResponse());
    }

    public QueryODPEnvironmentLookoutAddressResponse queryODPEnvironmentLookoutAddress(QueryODPEnvironmentLookoutAddressRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPEnvironmentLookoutAddressWithOptions(request, runtime);
    }

    public QueryODPEnvironmentMiddlewareTenantResponse queryODPEnvironmentMiddlewareTenantWithOptions(QueryODPEnvironmentMiddlewareTenantRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPEnvironmentMiddlewareTenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPEnvironmentMiddlewareTenantResponse());
    }

    public QueryODPEnvironmentMiddlewareTenantResponse queryODPEnvironmentMiddlewareTenant(QueryODPEnvironmentMiddlewareTenantRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPEnvironmentMiddlewareTenantWithOptions(request, runtime);
    }

    public QueryODPEnvironmentUploadUrlResponse queryODPEnvironmentUploadUrlWithOptions(QueryODPEnvironmentUploadUrlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPEnvironmentUploadUrl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPEnvironmentUploadUrlResponse());
    }

    public QueryODPEnvironmentUploadUrlResponse queryODPEnvironmentUploadUrl(QueryODPEnvironmentUploadUrlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPEnvironmentUploadUrlWithOptions(request, runtime);
    }

    public QueryODPInstancesResponse queryODPInstancesWithOptions(QueryODPInstancesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPInstances", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPInstancesResponse());
    }

    public QueryODPInstancesResponse queryODPInstances(QueryODPInstancesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPInstancesWithOptions(request, runtime);
    }

    public QueryODPInstancesIPWhiteListResponse queryODPInstancesIPWhiteListWithOptions(QueryODPInstancesIPWhiteListRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPInstancesIPWhiteList", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPInstancesIPWhiteListResponse());
    }

    public QueryODPInstancesIPWhiteListResponse queryODPInstancesIPWhiteList(QueryODPInstancesIPWhiteListRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPInstancesIPWhiteListWithOptions(request, runtime);
    }

    public QueryODPInstancesMachinesResponse queryODPInstancesMachinesWithOptions(QueryODPInstancesMachinesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPInstancesMachines", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPInstancesMachinesResponse());
    }

    public QueryODPInstancesMachinesResponse queryODPInstancesMachines(QueryODPInstancesMachinesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPInstancesMachinesWithOptions(request, runtime);
    }

    public QueryODPInstancesSpUrlsResponse queryODPInstancesSpUrlsWithOptions(QueryODPInstancesSpUrlsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPInstancesSpUrls", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPInstancesSpUrlsResponse());
    }

    public QueryODPInstancesSpUrlsResponse queryODPInstancesSpUrls(QueryODPInstancesSpUrlsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPInstancesSpUrlsWithOptions(request, runtime);
    }

    public QueryODPInstancesUsersResponse queryODPInstancesUsersWithOptions(QueryODPInstancesUsersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPInstancesUsers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPInstancesUsersResponse());
    }

    public QueryODPInstancesUsersResponse queryODPInstancesUsers(QueryODPInstancesUsersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPInstancesUsersWithOptions(request, runtime);
    }

    public QueryODPJobsSqlbatchResponse queryODPJobsSqlbatchWithOptions(QueryODPJobsSqlbatchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPJobsSqlbatch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPJobsSqlbatchResponse());
    }

    public QueryODPJobsSqlbatchResponse queryODPJobsSqlbatch(QueryODPJobsSqlbatchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPJobsSqlbatchWithOptions(request, runtime);
    }

    public QueryODPJobsSqlbatchProgressResponse queryODPJobsSqlbatchProgressWithOptions(QueryODPJobsSqlbatchProgressRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPJobsSqlbatchProgress", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPJobsSqlbatchProgressResponse());
    }

    public QueryODPJobsSqlbatchProgressResponse queryODPJobsSqlbatchProgress(QueryODPJobsSqlbatchProgressRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPJobsSqlbatchProgressWithOptions(request, runtime);
    }

    public QueryODPMetricsResponse queryODPMetricsWithOptions(QueryODPMetricsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPMetrics", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPMetricsResponse());
    }

    public QueryODPMetricsResponse queryODPMetrics(QueryODPMetricsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPMetricsWithOptions(request, runtime);
    }

    public QueryODPSchemasResponse queryODPSchemasWithOptions(QueryODPSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPSchemasResponse());
    }

    public QueryODPSchemasResponse queryODPSchemas(QueryODPSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPSchemasWithOptions(request, runtime);
    }

    public QueryODPSchemasConnPropsResponse queryODPSchemasConnPropsWithOptions(QueryODPSchemasConnPropsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPSchemasConnProps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPSchemasConnPropsResponse());
    }

    public QueryODPSchemasConnPropsResponse queryODPSchemasConnProps(QueryODPSchemasConnPropsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPSchemasConnPropsWithOptions(request, runtime);
    }

    public QueryODPSchemasLogicTablesResponse queryODPSchemasLogicTablesWithOptions(QueryODPSchemasLogicTablesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPSchemasLogicTables", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPSchemasLogicTablesResponse());
    }

    public QueryODPSchemasLogicTablesResponse queryODPSchemasLogicTables(QueryODPSchemasLogicTablesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPSchemasLogicTablesWithOptions(request, runtime);
    }

    public QueryODPSchemasPhysicalSchemasResponse queryODPSchemasPhysicalSchemasWithOptions(QueryODPSchemasPhysicalSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPSchemasPhysicalSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPSchemasPhysicalSchemasResponse());
    }

    public QueryODPSchemasPhysicalSchemasResponse queryODPSchemasPhysicalSchemas(QueryODPSchemasPhysicalSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPSchemasPhysicalSchemasWithOptions(request, runtime);
    }

    public QueryODPSqlAuditDetailResponse queryODPSqlAuditDetailWithOptions(QueryODPSqlAuditDetailRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPSqlAuditDetail", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPSqlAuditDetailResponse());
    }

    public QueryODPSqlAuditDetailResponse queryODPSqlAuditDetail(QueryODPSqlAuditDetailRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPSqlAuditDetailWithOptions(request, runtime);
    }

    public QueryODPSqlAuditInstancesResponse queryODPSqlAuditInstancesWithOptions(QueryODPSqlAuditInstancesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPSqlAuditInstances", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPSqlAuditInstancesResponse());
    }

    public QueryODPSqlAuditInstancesResponse queryODPSqlAuditInstances(QueryODPSqlAuditInstancesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPSqlAuditInstancesWithOptions(request, runtime);
    }

    public QueryODPSqlAuditStatusResponse queryODPSqlAuditStatusWithOptions(QueryODPSqlAuditStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPSqlAuditStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPSqlAuditStatusResponse());
    }

    public QueryODPSqlAuditStatusResponse queryODPSqlAuditStatus(QueryODPSqlAuditStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPSqlAuditStatusWithOptions(request, runtime);
    }

    public QueryODPSqlAuditSummaryResponse queryODPSqlAuditSummaryWithOptions(QueryODPSqlAuditSummaryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryODPSqlAuditSummary", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryODPSqlAuditSummaryResponse());
    }

    public QueryODPSqlAuditSummaryResponse queryODPSqlAuditSummary(QueryODPSqlAuditSummaryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryODPSqlAuditSummaryWithOptions(request, runtime);
    }

    public QueryOneconsoleDeploymodeResponse queryOneconsoleDeploymodeWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryOneconsoleDeploymode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryOneconsoleDeploymodeResponse());
    }

    public QueryOneconsoleDeploymodeResponse queryOneconsoleDeploymode() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryOneconsoleDeploymodeWithOptions(runtime);
    }

    public QueryOneconsoleIndexesResponse queryOneconsoleIndexesWithOptions(QueryOneconsoleIndexesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryOneconsoleIndexes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryOneconsoleIndexesResponse());
    }

    public QueryOneconsoleIndexesResponse queryOneconsoleIndexes(QueryOneconsoleIndexesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryOneconsoleIndexesWithOptions(request, runtime);
    }

    public QueryOneconsolePlatformurlResponse queryOneconsolePlatformurlWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryOneconsolePlatformurl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryOneconsolePlatformurlResponse());
    }

    public QueryOneconsolePlatformurlResponse queryOneconsolePlatformurl() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryOneconsolePlatformurlWithOptions(runtime);
    }

    public QueryOneconsoleUserprojectsResponse queryOneconsoleUserprojectsWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryOneconsoleUserprojects", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryOneconsoleUserprojectsResponse());
    }

    public QueryOneconsoleUserprojectsResponse queryOneconsoleUserprojects() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryOneconsoleUserprojectsWithOptions(runtime);
    }

    public QueryPLRLegacyAuthResponse queryPLRLegacyAuthWithOptions(QueryPLRLegacyAuthRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryPLRLegacyAuth", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryPLRLegacyAuthResponse());
    }

    public QueryPLRLegacyAuthResponse queryPLRLegacyAuth(QueryPLRLegacyAuthRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryPLRLegacyAuthWithOptions(request, runtime);
    }

    public QueryPLRLegacyEnabledResponse queryPLRLegacyEnabledWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("QueryPLRLegacyEnabled", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryPLRLegacyEnabledResponse());
    }

    public QueryPLRLegacyEnabledResponse queryPLRLegacyEnabled() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryPLRLegacyEnabledWithOptions(runtime);
    }

    public QueryPLRProductsResponse queryPLRProductsWithOptions(QueryPLRProductsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryPLRProducts", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryPLRProductsResponse());
    }

    public QueryPLRProductsResponse queryPLRProducts(QueryPLRProductsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryPLRProductsWithOptions(request, runtime);
    }

    public QueryRmsAlarmBlacklistResponse queryRmsAlarmBlacklistWithOptions(QueryRmsAlarmBlacklistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAlarmBlacklist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAlarmBlacklistResponse());
    }

    public QueryRmsAlarmBlacklistResponse queryRmsAlarmBlacklist(QueryRmsAlarmBlacklistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAlarmBlacklistWithOptions(request, runtime);
    }

    public QueryRmsAlarmHistoryResponse queryRmsAlarmHistoryWithOptions(QueryRmsAlarmHistoryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAlarmHistory", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAlarmHistoryResponse());
    }

    public QueryRmsAlarmHistoryResponse queryRmsAlarmHistory(QueryRmsAlarmHistoryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAlarmHistoryWithOptions(request, runtime);
    }

    public QueryRmsAlarmHistorycountResponse queryRmsAlarmHistorycountWithOptions(QueryRmsAlarmHistorycountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAlarmHistorycount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAlarmHistorycountResponse());
    }

    public QueryRmsAlarmHistorycountResponse queryRmsAlarmHistorycount(QueryRmsAlarmHistorycountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAlarmHistorycountWithOptions(request, runtime);
    }

    public QueryRmsAlarmMetricResponse queryRmsAlarmMetricWithOptions(QueryRmsAlarmMetricRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAlarmMetric", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAlarmMetricResponse());
    }

    public QueryRmsAlarmMetricResponse queryRmsAlarmMetric(QueryRmsAlarmMetricRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAlarmMetricWithOptions(request, runtime);
    }

    public QueryRmsAlarmRecentcountResponse queryRmsAlarmRecentcountWithOptions(QueryRmsAlarmRecentcountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAlarmRecentcount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAlarmRecentcountResponse());
    }

    public QueryRmsAlarmRecentcountResponse queryRmsAlarmRecentcount(QueryRmsAlarmRecentcountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAlarmRecentcountWithOptions(request, runtime);
    }

    public QueryRmsAlarmrecordsResponse queryRmsAlarmrecordsWithOptions(QueryRmsAlarmrecordsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAlarmrecords", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAlarmrecordsResponse());
    }

    public QueryRmsAlarmrecordsResponse queryRmsAlarmrecords(QueryRmsAlarmrecordsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAlarmrecordsWithOptions(request, runtime);
    }

    public QueryRmsAlertRecordsResponse queryRmsAlertRecordsWithOptions(QueryRmsAlertRecordsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAlertRecords", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAlertRecordsResponse());
    }

    public QueryRmsAlertRecordsResponse queryRmsAlertRecords(QueryRmsAlertRecordsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAlertRecordsWithOptions(request, runtime);
    }

    public QueryRmsAlertruleAppstatusResponse queryRmsAlertruleAppstatusWithOptions(QueryRmsAlertruleAppstatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAlertruleAppstatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAlertruleAppstatusResponse());
    }

    public QueryRmsAlertruleAppstatusResponse queryRmsAlertruleAppstatus(QueryRmsAlertruleAppstatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAlertruleAppstatusWithOptions(request, runtime);
    }

    public QueryRmsAlertruleMonitortargetsResponse queryRmsAlertruleMonitortargetsWithOptions(QueryRmsAlertruleMonitortargetsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAlertruleMonitortargets", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAlertruleMonitortargetsResponse());
    }

    public QueryRmsAlertruleMonitortargetsResponse queryRmsAlertruleMonitortargets(QueryRmsAlertruleMonitortargetsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAlertruleMonitortargetsWithOptions(request, runtime);
    }

    public QueryRmsAlertrulesResponse queryRmsAlertrulesWithOptions(QueryRmsAlertrulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAlertrules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAlertrulesResponse());
    }

    public QueryRmsAlertrulesResponse queryRmsAlertrules(QueryRmsAlertrulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAlertrulesWithOptions(request, runtime);
    }

    public QueryRmsAlertRuleSubscribesResponse queryRmsAlertRuleSubscribesWithOptions(QueryRmsAlertRuleSubscribesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAlertRuleSubscribes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAlertRuleSubscribesResponse());
    }

    public QueryRmsAlertRuleSubscribesResponse queryRmsAlertRuleSubscribes(QueryRmsAlertRuleSubscribesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAlertRuleSubscribesWithOptions(request, runtime);
    }

    public QueryRmsAllAppResourceGroupResponse queryRmsAllAppResourceGroupWithOptions(QueryRmsAllAppResourceGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAllAppResourceGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAllAppResourceGroupResponse());
    }

    public QueryRmsAllAppResourceGroupResponse queryRmsAllAppResourceGroup(QueryRmsAllAppResourceGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAllAppResourceGroupWithOptions(request, runtime);
    }

    public QueryRmsAllResourceGroupsResponse queryRmsAllResourceGroupsWithOptions(QueryRmsAllResourceGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAllResourceGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAllResourceGroupsResponse());
    }

    public QueryRmsAllResourceGroupsResponse queryRmsAllResourceGroups(QueryRmsAllResourceGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAllResourceGroupsWithOptions(request, runtime);
    }

    public QueryRmsAppviewAppsResponse queryRmsAppviewAppsWithOptions(QueryRmsAppviewAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAppviewApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAppviewAppsResponse());
    }

    public QueryRmsAppviewAppsResponse queryRmsAppviewApps(QueryRmsAppviewAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAppviewAppsWithOptions(request, runtime);
    }

    public QueryRmsAppviewAppsinfoResponse queryRmsAppviewAppsinfoWithOptions(QueryRmsAppviewAppsinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsAppviewAppsinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsAppviewAppsinfoResponse());
    }

    public QueryRmsAppviewAppsinfoResponse queryRmsAppviewAppsinfo(QueryRmsAppviewAppsinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsAppviewAppsinfoWithOptions(request, runtime);
    }

    public QueryRmsCloudmeshListappserviceversionsResponse queryRmsCloudmeshListappserviceversionsWithOptions(QueryRmsCloudmeshListappserviceversionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsCloudmeshListappserviceversions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsCloudmeshListappserviceversionsResponse());
    }

    public QueryRmsCloudmeshListappserviceversionsResponse queryRmsCloudmeshListappserviceversions(QueryRmsCloudmeshListappserviceversionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsCloudmeshListappserviceversionsWithOptions(request, runtime);
    }

    public QueryRmsCloudmeshListdataidsResponse queryRmsCloudmeshListdataidsWithOptions(QueryRmsCloudmeshListdataidsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsCloudmeshListdataids", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsCloudmeshListdataidsResponse());
    }

    public QueryRmsCloudmeshListdataidsResponse queryRmsCloudmeshListdataids(QueryRmsCloudmeshListdataidsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsCloudmeshListdataidsWithOptions(request, runtime);
    }

    public QueryRmsCloudmeshListmetasResponse queryRmsCloudmeshListmetasWithOptions(QueryRmsCloudmeshListmetasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsCloudmeshListmetas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsCloudmeshListmetasResponse());
    }

    public QueryRmsCloudmeshListmetasResponse queryRmsCloudmeshListmetas(QueryRmsCloudmeshListmetasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsCloudmeshListmetasWithOptions(request, runtime);
    }

    public QueryRmsCloudmeshListpodsResponse queryRmsCloudmeshListpodsWithOptions(QueryRmsCloudmeshListpodsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsCloudmeshListpods", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsCloudmeshListpodsResponse());
    }

    public QueryRmsCloudmeshListpodsResponse queryRmsCloudmeshListpods(QueryRmsCloudmeshListpodsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsCloudmeshListpodsWithOptions(request, runtime);
    }

    public QueryRmsCloudmeshMultibizqueryResponse queryRmsCloudmeshMultibizqueryWithOptions(QueryRmsCloudmeshMultibizqueryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsCloudmeshMultibizquery", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsCloudmeshMultibizqueryResponse());
    }

    public QueryRmsCloudmeshMultibizqueryResponse queryRmsCloudmeshMultibizquery(QueryRmsCloudmeshMultibizqueryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsCloudmeshMultibizqueryWithOptions(request, runtime);
    }

    public QueryRmsCloudmeshRunningstatesResponse queryRmsCloudmeshRunningstatesWithOptions(QueryRmsCloudmeshRunningstatesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsCloudmeshRunningstates", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsCloudmeshRunningstatesResponse());
    }

    public QueryRmsCloudmeshRunningstatesResponse queryRmsCloudmeshRunningstates(QueryRmsCloudmeshRunningstatesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsCloudmeshRunningstatesWithOptions(request, runtime);
    }

    public QueryRmsCloudmeshServicemetricsResponse queryRmsCloudmeshServicemetricsWithOptions(QueryRmsCloudmeshServicemetricsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsCloudmeshServicemetrics", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsCloudmeshServicemetricsResponse());
    }

    public QueryRmsCloudmeshServicemetricsResponse queryRmsCloudmeshServicemetrics(QueryRmsCloudmeshServicemetricsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsCloudmeshServicemetricsWithOptions(request, runtime);
    }

    public QueryRmsCloudmeshSidecarcountResponse queryRmsCloudmeshSidecarcountWithOptions(QueryRmsCloudmeshSidecarcountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsCloudmeshSidecarcount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsCloudmeshSidecarcountResponse());
    }

    public QueryRmsCloudmeshSidecarcountResponse queryRmsCloudmeshSidecarcount(QueryRmsCloudmeshSidecarcountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsCloudmeshSidecarcountWithOptions(request, runtime);
    }

    public QueryRmsCloudmeshSidecarlistResponse queryRmsCloudmeshSidecarlistWithOptions(QueryRmsCloudmeshSidecarlistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsCloudmeshSidecarlist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsCloudmeshSidecarlistResponse());
    }

    public QueryRmsCloudmeshSidecarlistResponse queryRmsCloudmeshSidecarlist(QueryRmsCloudmeshSidecarlistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsCloudmeshSidecarlistWithOptions(request, runtime);
    }

    public QueryRmsCloudmeshSysmetricsResponse queryRmsCloudmeshSysmetricsWithOptions(QueryRmsCloudmeshSysmetricsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsCloudmeshSysmetrics", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsCloudmeshSysmetricsResponse());
    }

    public QueryRmsCloudmeshSysmetricsResponse queryRmsCloudmeshSysmetrics(QueryRmsCloudmeshSysmetricsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsCloudmeshSysmetricsWithOptions(request, runtime);
    }

    public QueryRmsCloudmeshTopappservicesResponse queryRmsCloudmeshTopappservicesWithOptions(QueryRmsCloudmeshTopappservicesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsCloudmeshTopappservices", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsCloudmeshTopappservicesResponse());
    }

    public QueryRmsCloudmeshTopappservicesResponse queryRmsCloudmeshTopappservices(QueryRmsCloudmeshTopappservicesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsCloudmeshTopappservicesWithOptions(request, runtime);
    }

    public QueryRmsDataSeriesResponse queryRmsDataSeriesWithOptions(QueryRmsDataSeriesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsDataSeries", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsDataSeriesResponse());
    }

    public QueryRmsDataSeriesResponse queryRmsDataSeries(QueryRmsDataSeriesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsDataSeriesWithOptions(request, runtime);
    }

    public QueryRmsDataTopksResponse queryRmsDataTopksWithOptions(QueryRmsDataTopksRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsDataTopks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsDataTopksResponse());
    }

    public QueryRmsDataTopksResponse queryRmsDataTopks(QueryRmsDataTopksRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsDataTopksWithOptions(request, runtime);
    }

    public QueryRmsResourceGroupByidResponse queryRmsResourceGroupByidWithOptions(QueryRmsResourceGroupByidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsResourceGroupByid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsResourceGroupByidResponse());
    }

    public QueryRmsResourceGroupByidResponse queryRmsResourceGroupByid(QueryRmsResourceGroupByidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsResourceGroupByidWithOptions(request, runtime);
    }

    public QueryRmsResourceGroupByNameResponse queryRmsResourceGroupByNameWithOptions(QueryRmsResourceGroupByNameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsResourceGroupByName", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsResourceGroupByNameResponse());
    }

    public QueryRmsResourceGroupByNameResponse queryRmsResourceGroupByName(QueryRmsResourceGroupByNameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsResourceGroupByNameWithOptions(request, runtime);
    }

    public QueryRmsResourceGroupsResponse queryRmsResourceGroupsWithOptions(QueryRmsResourceGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsResourceGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsResourceGroupsResponse());
    }

    public QueryRmsResourceGroupsResponse queryRmsResourceGroups(QueryRmsResourceGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsResourceGroupsWithOptions(request, runtime);
    }

    public QueryRmsResourceidMetricsResponse queryRmsResourceidMetricsWithOptions(QueryRmsResourceidMetricsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsResourceidMetrics", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsResourceidMetricsResponse());
    }

    public QueryRmsResourceidMetricsResponse queryRmsResourceidMetrics(QueryRmsResourceidMetricsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsResourceidMetricsWithOptions(request, runtime);
    }

    public QueryRmsResourcesResponse queryRmsResourcesWithOptions(QueryRmsResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsResourcesResponse());
    }

    public QueryRmsResourcesResponse queryRmsResources(QueryRmsResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsResourcesWithOptions(request, runtime);
    }

    public QueryRmsRuleGroupByNameResponse queryRmsRuleGroupByNameWithOptions(QueryRmsRuleGroupByNameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsRuleGroupByName", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsRuleGroupByNameResponse());
    }

    public QueryRmsRuleGroupByNameResponse queryRmsRuleGroupByName(QueryRmsRuleGroupByNameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsRuleGroupByNameWithOptions(request, runtime);
    }

    public QueryRmsRulesGroupsResponse queryRmsRulesGroupsWithOptions(QueryRmsRulesGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsRulesGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsRulesGroupsResponse());
    }

    public QueryRmsRulesGroupsResponse queryRmsRulesGroups(QueryRmsRulesGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsRulesGroupsWithOptions(request, runtime);
    }

    public QueryRmsSubscriptionsResponse queryRmsSubscriptionsWithOptions(QueryRmsSubscriptionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsSubscriptions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsSubscriptionsResponse());
    }

    public QueryRmsSubscriptionsResponse queryRmsSubscriptions(QueryRmsSubscriptionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsSubscriptionsWithOptions(request, runtime);
    }

    public QueryRmsUsersResponse queryRmsUsersWithOptions(QueryRmsUsersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsUsers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsUsersResponse());
    }

    public QueryRmsUsersResponse queryRmsUsers(QueryRmsUsersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsUsersWithOptions(request, runtime);
    }

    public QueryRmsXflushDelegateResponse queryRmsXflushDelegateWithOptions(QueryRmsXflushDelegateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryRmsXflushDelegate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryRmsXflushDelegateResponse());
    }

    public QueryRmsXflushDelegateResponse queryRmsXflushDelegate(QueryRmsXflushDelegateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryRmsXflushDelegateWithOptions(request, runtime);
    }

    public QuerySofamqCellByCellTypeResponse querySofamqCellByCellTypeWithOptions(QuerySofamqCellByCellTypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QuerySofamqCellByCellType", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QuerySofamqCellByCellTypeResponse());
    }

    public QuerySofamqCellByCellTypeResponse querySofamqCellByCellType(QuerySofamqCellByCellTypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.querySofamqCellByCellTypeWithOptions(request, runtime);
    }

    public QueryTSChunkResponse queryTSChunkWithOptions(QueryTSChunkRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSChunk", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSChunkResponse());
    }

    public QueryTSChunkResponse queryTSChunk(QueryTSChunkRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSChunkWithOptions(request, runtime);
    }

    public QueryTSChunksResponse queryTSChunksWithOptions(QueryTSChunksRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSChunks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSChunksResponse());
    }

    public QueryTSChunksResponse queryTSChunks(QueryTSChunksRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSChunksWithOptions(request, runtime);
    }

    public QueryTSChunksExecutionResponse queryTSChunksExecutionWithOptions(QueryTSChunksExecutionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSChunksExecution", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSChunksExecutionResponse());
    }

    public QueryTSChunksExecutionResponse queryTSChunksExecution(QueryTSChunksExecutionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSChunksExecutionWithOptions(request, runtime);
    }

    public QueryTSClientsResponse queryTSClientsWithOptions(QueryTSClientsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSClients", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSClientsResponse());
    }

    public QueryTSClientsResponse queryTSClients(QueryTSClientsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSClientsWithOptions(request, runtime);
    }

    public QueryTSConfigSwitchesResponse queryTSConfigSwitchesWithOptions(QueryTSConfigSwitchesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSConfigSwitches", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSConfigSwitchesResponse());
    }

    public QueryTSConfigSwitchesResponse queryTSConfigSwitches(QueryTSConfigSwitchesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSConfigSwitchesWithOptions(request, runtime);
    }

    public QueryTSExecuteInstanceResponse queryTSExecuteInstanceWithOptions(QueryTSExecuteInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSExecuteInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSExecuteInstanceResponse());
    }

    public QueryTSExecuteInstanceResponse queryTSExecuteInstance(QueryTSExecuteInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSExecuteInstanceWithOptions(request, runtime);
    }

    public QueryTSExecuteInstanceByIpResponse queryTSExecuteInstanceByIpWithOptions(QueryTSExecuteInstanceByIpRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSExecuteInstanceByIp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSExecuteInstanceByIpResponse());
    }

    public QueryTSExecuteInstanceByIpResponse queryTSExecuteInstanceByIp(QueryTSExecuteInstanceByIpRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSExecuteInstanceByIpWithOptions(request, runtime);
    }

    public QueryTSExecuteInstanceShardingsResponse queryTSExecuteInstanceShardingsWithOptions(QueryTSExecuteInstanceShardingsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSExecuteInstanceShardings", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSExecuteInstanceShardingsResponse());
    }

    public QueryTSExecuteInstanceShardingsResponse queryTSExecuteInstanceShardings(QueryTSExecuteInstanceShardingsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSExecuteInstanceShardingsWithOptions(request, runtime);
    }

    public QueryTSExecuteInstanceStepsResponse queryTSExecuteInstanceStepsWithOptions(QueryTSExecuteInstanceStepsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSExecuteInstanceSteps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSExecuteInstanceStepsResponse());
    }

    public QueryTSExecuteInstanceStepsResponse queryTSExecuteInstanceSteps(QueryTSExecuteInstanceStepsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSExecuteInstanceStepsWithOptions(request, runtime);
    }

    public QueryTSJobResponse queryTSJobWithOptions(QueryTSJobRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSJob", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSJobResponse());
    }

    public QueryTSJobResponse queryTSJob(QueryTSJobRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSJobWithOptions(request, runtime);
    }

    public QueryTSJobAppsResponse queryTSJobAppsWithOptions(QueryTSJobAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSJobApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSJobAppsResponse());
    }

    public QueryTSJobAppsResponse queryTSJobApps(QueryTSJobAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSJobAppsWithOptions(request, runtime);
    }

    public QueryTSJobGroupNamesResponse queryTSJobGroupNamesWithOptions(QueryTSJobGroupNamesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSJobGroupNames", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSJobGroupNamesResponse());
    }

    public QueryTSJobGroupNamesResponse queryTSJobGroupNames(QueryTSJobGroupNamesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSJobGroupNamesWithOptions(request, runtime);
    }

    public QueryTSJobGroupsResponse queryTSJobGroupsWithOptions(QueryTSJobGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSJobGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSJobGroupsResponse());
    }

    public QueryTSJobGroupsResponse queryTSJobGroups(QueryTSJobGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSJobGroupsWithOptions(request, runtime);
    }

    public QueryTSJobItemByNameResponse queryTSJobItemByNameWithOptions(QueryTSJobItemByNameRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSJobItemByName", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSJobItemByNameResponse());
    }

    public QueryTSJobItemByNameResponse queryTSJobItemByName(QueryTSJobItemByNameRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSJobItemByNameWithOptions(request, runtime);
    }

    public QueryTSJobItemsResponse queryTSJobItemsWithOptions(QueryTSJobItemsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSJobItems", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSJobItemsResponse());
    }

    public QueryTSJobItemsResponse queryTSJobItems(QueryTSJobItemsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSJobItemsWithOptions(request, runtime);
    }

    public QueryTSJobsResponse queryTSJobsWithOptions(QueryTSJobsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSJobs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSJobsResponse());
    }

    public QueryTSJobsResponse queryTSJobs(QueryTSJobsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSJobsWithOptions(request, runtime);
    }

    public QueryTSJobsOssUploadUrlResponse queryTSJobsOssUploadUrlWithOptions(QueryTSJobsOssUploadUrlRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSJobsOssUploadUrl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSJobsOssUploadUrlResponse());
    }

    public QueryTSJobsOssUploadUrlResponse queryTSJobsOssUploadUrl(QueryTSJobsOssUploadUrlRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSJobsOssUploadUrlWithOptions(request, runtime);
    }

    public QueryTSOperationRecordsResponse queryTSOperationRecordsWithOptions(QueryTSOperationRecordsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSOperationRecords", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSOperationRecordsResponse());
    }

    public QueryTSOperationRecordsResponse queryTSOperationRecords(QueryTSOperationRecordsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSOperationRecordsWithOptions(request, runtime);
    }

    public QueryTSTimeZonesResponse queryTSTimeZonesWithOptions(QueryTSTimeZonesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSTimeZones", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSTimeZonesResponse());
    }

    public QueryTSTimeZonesResponse queryTSTimeZones(QueryTSTimeZonesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSTimeZonesWithOptions(request, runtime);
    }

    public QueryTSTopologiesResponse queryTSTopologiesWithOptions(QueryTSTopologiesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSTopologies", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSTopologiesResponse());
    }

    public QueryTSTopologiesResponse queryTSTopologies(QueryTSTopologiesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSTopologiesWithOptions(request, runtime);
    }

    public QueryTSTopologyResponse queryTSTopologyWithOptions(QueryTSTopologyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSTopology", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSTopologyResponse());
    }

    public QueryTSTopologyResponse queryTSTopology(QueryTSTopologyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSTopologyWithOptions(request, runtime);
    }

    public QueryTSTopologyBaseVersionsResponse queryTSTopologyBaseVersionsWithOptions(QueryTSTopologyBaseVersionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSTopologyBaseVersions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSTopologyBaseVersionsResponse());
    }

    public QueryTSTopologyBaseVersionsResponse queryTSTopologyBaseVersions(QueryTSTopologyBaseVersionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSTopologyBaseVersionsWithOptions(request, runtime);
    }

    public QueryTSTopologyInstanceResponse queryTSTopologyInstanceWithOptions(QueryTSTopologyInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSTopologyInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSTopologyInstanceResponse());
    }

    public QueryTSTopologyInstanceResponse queryTSTopologyInstance(QueryTSTopologyInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSTopologyInstanceWithOptions(request, runtime);
    }

    public QueryTSTopologyParamsResponse queryTSTopologyParamsWithOptions(QueryTSTopologyParamsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSTopologyParams", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSTopologyParamsResponse());
    }

    public QueryTSTopologyParamsResponse queryTSTopologyParams(QueryTSTopologyParamsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSTopologyParamsWithOptions(request, runtime);
    }

    public QueryTSTopologyShardingsResponse queryTSTopologyShardingsWithOptions(QueryTSTopologyShardingsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSTopologyShardings", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSTopologyShardingsResponse());
    }

    public QueryTSTopologyShardingsResponse queryTSTopologyShardings(QueryTSTopologyShardingsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSTopologyShardingsWithOptions(request, runtime);
    }

    public QueryTSTopologyVersionsResponse queryTSTopologyVersionsWithOptions(QueryTSTopologyVersionsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSTopologyVersions", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSTopologyVersionsResponse());
    }

    public QueryTSTopologyVersionsResponse queryTSTopologyVersions(QueryTSTopologyVersionsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSTopologyVersionsWithOptions(request, runtime);
    }

    public QueryTSTriggerInstanceResponse queryTSTriggerInstanceWithOptions(QueryTSTriggerInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSTriggerInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSTriggerInstanceResponse());
    }

    public QueryTSTriggerInstanceResponse queryTSTriggerInstance(QueryTSTriggerInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSTriggerInstanceWithOptions(request, runtime);
    }

    public QueryTSTriggerInstanceNewestResponse queryTSTriggerInstanceNewestWithOptions(QueryTSTriggerInstanceNewestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSTriggerInstanceNewest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSTriggerInstanceNewestResponse());
    }

    public QueryTSTriggerInstanceNewestResponse queryTSTriggerInstanceNewest(QueryTSTriggerInstanceNewestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSTriggerInstanceNewestWithOptions(request, runtime);
    }

    public QueryTSTriggerInstancesResponse queryTSTriggerInstancesWithOptions(QueryTSTriggerInstancesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSTriggerInstances", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSTriggerInstancesResponse());
    }

    public QueryTSTriggerInstancesResponse queryTSTriggerInstances(QueryTSTriggerInstancesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSTriggerInstancesWithOptions(request, runtime);
    }

    public QueryTSZoneListResponse queryTSZoneListWithOptions(QueryTSZoneListRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSZoneList", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSZoneListResponse());
    }

    public QueryTSZoneListResponse queryTSZoneList(QueryTSZoneListRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSZoneListWithOptions(request, runtime);
    }

    public QueryTSZoneModeResponse queryTSZoneModeWithOptions(QueryTSZoneModeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSZoneMode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSZoneModeResponse());
    }

    public QueryTSZoneModeResponse queryTSZoneMode(QueryTSZoneModeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSZoneModeWithOptions(request, runtime);
    }

    public QueryTSZonesResponse queryTSZonesWithOptions(QueryTSZonesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("QueryTSZones", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new QueryTSZonesResponse());
    }

    public QueryTSZonesResponse queryTSZones(QueryTSZonesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.queryTSZonesWithOptions(request, runtime);
    }

    public RebootCasDatabaseResponse rebootCasDatabaseWithOptions(RebootCasDatabaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RebootCasDatabase", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RebootCasDatabaseResponse());
    }

    public RebootCasDatabaseResponse rebootCasDatabase(RebootCasDatabaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.rebootCasDatabaseWithOptions(request, runtime);
    }

    public RebootLinkeantcodeAntcodeUserpasswordresetResponse rebootLinkeantcodeAntcodeUserpasswordresetWithOptions(RebootLinkeantcodeAntcodeUserpasswordresetRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RebootLinkeantcodeAntcodeUserpasswordreset", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RebootLinkeantcodeAntcodeUserpasswordresetResponse());
    }

    public RebootLinkeantcodeAntcodeUserpasswordresetResponse rebootLinkeantcodeAntcodeUserpasswordreset(RebootLinkeantcodeAntcodeUserpasswordresetRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.rebootLinkeantcodeAntcodeUserpasswordresetWithOptions(request, runtime);
    }

    public RebootLinkedeploycoreDeploycoreAppserviceResponse rebootLinkedeploycoreDeploycoreAppserviceWithOptions(RebootLinkedeploycoreDeploycoreAppserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RebootLinkedeploycoreDeploycoreAppservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RebootLinkedeploycoreDeploycoreAppserviceResponse());
    }

    public RebootLinkedeploycoreDeploycoreAppserviceResponse rebootLinkedeploycoreDeploycoreAppservice(RebootLinkedeploycoreDeploycoreAppserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.rebootLinkedeploycoreDeploycoreAppserviceWithOptions(request, runtime);
    }

    public RecognizeODPSchemasResponse recognizeODPSchemasWithOptions(RecognizeODPSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RecognizeODPSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RecognizeODPSchemasResponse());
    }

    public RecognizeODPSchemasResponse recognizeODPSchemas(RecognizeODPSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.recognizeODPSchemasWithOptions(request, runtime);
    }

    public RefreshODPSchemasResponse refreshODPSchemasWithOptions(RefreshODPSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RefreshODPSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RefreshODPSchemasResponse());
    }

    public RefreshODPSchemasResponse refreshODPSchemas(RefreshODPSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.refreshODPSchemasWithOptions(request, runtime);
    }

    public ReInitAKSClusterKubeconfigResponse reInitAKSClusterKubeconfigWithOptions(ReInitAKSClusterKubeconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReInitAKSClusterKubeconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReInitAKSClusterKubeconfigResponse());
    }

    public ReInitAKSClusterKubeconfigResponse reInitAKSClusterKubeconfig(ReInitAKSClusterKubeconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.reInitAKSClusterKubeconfigWithOptions(request, runtime);
    }

    public ReinitAKSOpsContainerServiceResponse reinitAKSOpsContainerServiceWithOptions(ReinitAKSOpsContainerServiceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReinitAKSOpsContainerService", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReinitAKSOpsContainerServiceResponse());
    }

    public ReinitAKSOpsContainerServiceResponse reinitAKSOpsContainerService(ReinitAKSOpsContainerServiceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.reinitAKSOpsContainerServiceWithOptions(request, runtime);
    }

    public ReinitLDCAppopsResponse reinitLDCAppopsWithOptions(ReinitLDCAppopsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReinitLDCAppops", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReinitLDCAppopsResponse());
    }

    public ReinitLDCAppopsResponse reinitLDCAppops(ReinitLDCAppopsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.reinitLDCAppopsWithOptions(request, runtime);
    }

    public ReinitLinkeantcodeAntcodeUserprivatetokenResponse reinitLinkeantcodeAntcodeUserprivatetokenWithOptions(ReinitLinkeantcodeAntcodeUserprivatetokenRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReinitLinkeantcodeAntcodeUserprivatetoken", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReinitLinkeantcodeAntcodeUserprivatetokenResponse());
    }

    public ReinitLinkeantcodeAntcodeUserprivatetokenResponse reinitLinkeantcodeAntcodeUserprivatetoken(ReinitLinkeantcodeAntcodeUserprivatetokenRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.reinitLinkeantcodeAntcodeUserprivatetokenWithOptions(request, runtime);
    }

    public ReinitMsRcSyncClustersResponse reinitMsRcSyncClustersWithOptions(ReinitMsRcSyncClustersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReinitMsRcSyncClusters", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReinitMsRcSyncClustersResponse());
    }

    public ReinitMsRcSyncClustersResponse reinitMsRcSyncClusters(ReinitMsRcSyncClustersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.reinitMsRcSyncClustersWithOptions(request, runtime);
    }

    public ReinitMsSgServiceParamsResponse reinitMsSgServiceParamsWithOptions(ReinitMsSgServiceParamsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReinitMsSgServiceParams", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReinitMsSgServiceParamsResponse());
    }

    public ReinitMsSgServiceParamsResponse reinitMsSgServiceParams(ReinitMsSgServiceParamsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.reinitMsSgServiceParamsWithOptions(request, runtime);
    }

    public ReleaseLinkeBahamutAdminpipelineResponse releaseLinkeBahamutAdminpipelineWithOptions(ReleaseLinkeBahamutAdminpipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReleaseLinkeBahamutAdminpipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReleaseLinkeBahamutAdminpipelineResponse());
    }

    public ReleaseLinkeBahamutAdminpipelineResponse releaseLinkeBahamutAdminpipeline(ReleaseLinkeBahamutAdminpipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.releaseLinkeBahamutAdminpipelineWithOptions(request, runtime);
    }

    public ReleaseLinkeBahamutIterationattachtoreleaseResponse releaseLinkeBahamutIterationattachtoreleaseWithOptions(ReleaseLinkeBahamutIterationattachtoreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReleaseLinkeBahamutIterationattachtorelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReleaseLinkeBahamutIterationattachtoreleaseResponse());
    }

    public ReleaseLinkeBahamutIterationattachtoreleaseResponse releaseLinkeBahamutIterationattachtorelease(ReleaseLinkeBahamutIterationattachtoreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.releaseLinkeBahamutIterationattachtoreleaseWithOptions(request, runtime);
    }

    public ReleaseLinkeBahamutReleasedetachdetachtoreleaseResponse releaseLinkeBahamutReleasedetachdetachtoreleaseWithOptions(ReleaseLinkeBahamutReleasedetachdetachtoreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReleaseLinkeBahamutReleasedetachdetachtorelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReleaseLinkeBahamutReleasedetachdetachtoreleaseResponse());
    }

    public ReleaseLinkeBahamutReleasedetachdetachtoreleaseResponse releaseLinkeBahamutReleasedetachdetachtorelease(ReleaseLinkeBahamutReleasedetachdetachtoreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.releaseLinkeBahamutReleasedetachdetachtoreleaseWithOptions(request, runtime);
    }

    public ReleaseLinkeBahamutSandboxdeploybyreleaseResponse releaseLinkeBahamutSandboxdeploybyreleaseWithOptions(ReleaseLinkeBahamutSandboxdeploybyreleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReleaseLinkeBahamutSandboxdeploybyrelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReleaseLinkeBahamutSandboxdeploybyreleaseResponse());
    }

    public ReleaseLinkeBahamutSandboxdeploybyreleaseResponse releaseLinkeBahamutSandboxdeploybyrelease(ReleaseLinkeBahamutSandboxdeploybyreleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.releaseLinkeBahamutSandboxdeploybyreleaseWithOptions(request, runtime);
    }

    public RemoveLinkeantcodeAntcodeInstallationsserviceResponse removeLinkeantcodeAntcodeInstallationsserviceWithOptions(RemoveLinkeantcodeAntcodeInstallationsserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeantcodeAntcodeInstallationsservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeantcodeAntcodeInstallationsserviceResponse());
    }

    public RemoveLinkeantcodeAntcodeInstallationsserviceResponse removeLinkeantcodeAntcodeInstallationsservice(RemoveLinkeantcodeAntcodeInstallationsserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeantcodeAntcodeInstallationsserviceWithOptions(request, runtime);
    }

    public RemoveLinkeantcodeAntcodeProjectsidreviewssubscriptionssubscriptionidResponse removeLinkeantcodeAntcodeProjectsidreviewssubscriptionssubscriptionidWithOptions(RemoveLinkeantcodeAntcodeProjectsidreviewssubscriptionssubscriptionidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeantcodeAntcodeProjectsidreviewssubscriptionssubscriptionid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeantcodeAntcodeProjectsidreviewssubscriptionssubscriptionidResponse());
    }

    public RemoveLinkeantcodeAntcodeProjectsidreviewssubscriptionssubscriptionidResponse removeLinkeantcodeAntcodeProjectsidreviewssubscriptionssubscriptionid(RemoveLinkeantcodeAntcodeProjectsidreviewssubscriptionssubscriptionidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeantcodeAntcodeProjectsidreviewssubscriptionssubscriptionidWithOptions(request, runtime);
    }

    public RemoveLinkeantcodeAntcodePullrequestssourcebranchResponse removeLinkeantcodeAntcodePullrequestssourcebranchWithOptions(RemoveLinkeantcodeAntcodePullrequestssourcebranchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeantcodeAntcodePullrequestssourcebranch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeantcodeAntcodePullrequestssourcebranchResponse());
    }

    public RemoveLinkeantcodeAntcodePullrequestssourcebranchResponse removeLinkeantcodeAntcodePullrequestssourcebranch(RemoveLinkeantcodeAntcodePullrequestssourcebranchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeantcodeAntcodePullrequestssourcebranchWithOptions(request, runtime);
    }

    public RemoveLinkeantcodeAntcodeRemoveprojectResponse removeLinkeantcodeAntcodeRemoveprojectWithOptions(RemoveLinkeantcodeAntcodeRemoveprojectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeantcodeAntcodeRemoveproject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeantcodeAntcodeRemoveprojectResponse());
    }

    public RemoveLinkeantcodeAntcodeRemoveprojectResponse removeLinkeantcodeAntcodeRemoveproject(RemoveLinkeantcodeAntcodeRemoveprojectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeantcodeAntcodeRemoveprojectWithOptions(request, runtime);
    }

    public RemoveLinkeantcodeAntcodeRemovereviewssubscriptionResponse removeLinkeantcodeAntcodeRemovereviewssubscriptionWithOptions(RemoveLinkeantcodeAntcodeRemovereviewssubscriptionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeantcodeAntcodeRemovereviewssubscription", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeantcodeAntcodeRemovereviewssubscriptionResponse());
    }

    public RemoveLinkeantcodeAntcodeRemovereviewssubscriptionResponse removeLinkeantcodeAntcodeRemovereviewssubscription(RemoveLinkeantcodeAntcodeRemovereviewssubscriptionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeantcodeAntcodeRemovereviewssubscriptionWithOptions(request, runtime);
    }

    public RemoveLinkeantcodeAntcodeUsergpgkeyResponse removeLinkeantcodeAntcodeUsergpgkeyWithOptions(RemoveLinkeantcodeAntcodeUsergpgkeyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeantcodeAntcodeUsergpgkey", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeantcodeAntcodeUsergpgkeyResponse());
    }

    public RemoveLinkeantcodeAntcodeUsergpgkeyResponse removeLinkeantcodeAntcodeUsergpgkey(RemoveLinkeantcodeAntcodeUsergpgkeyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeantcodeAntcodeUsergpgkeyWithOptions(request, runtime);
    }

    public RemoveLinkeBahamutBuildconfigregistryResponse removeLinkeBahamutBuildconfigregistryWithOptions(RemoveLinkeBahamutBuildconfigregistryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeBahamutBuildconfigregistry", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeBahamutBuildconfigregistryResponse());
    }

    public RemoveLinkeBahamutBuildconfigregistryResponse removeLinkeBahamutBuildconfigregistry(RemoveLinkeBahamutBuildconfigregistryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeBahamutBuildconfigregistryWithOptions(request, runtime);
    }

    public RemoveLinkeBahamutIterationclearoiterationResponse removeLinkeBahamutIterationclearoiterationWithOptions(RemoveLinkeBahamutIterationclearoiterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeBahamutIterationclearoiteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeBahamutIterationclearoiterationResponse());
    }

    public RemoveLinkeBahamutIterationclearoiterationResponse removeLinkeBahamutIterationclearoiteration(RemoveLinkeBahamutIterationclearoiterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeBahamutIterationclearoiterationWithOptions(request, runtime);
    }

    public RemoveLinkeBahamutIterationremovememberResponse removeLinkeBahamutIterationremovememberWithOptions(RemoveLinkeBahamutIterationremovememberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeBahamutIterationremovemember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeBahamutIterationremovememberResponse());
    }

    public RemoveLinkeBahamutIterationremovememberResponse removeLinkeBahamutIterationremovemember(RemoveLinkeBahamutIterationremovememberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeBahamutIterationremovememberWithOptions(request, runtime);
    }

    public RemoveLinkeBahamutIterationremoveunitResponse removeLinkeBahamutIterationremoveunitWithOptions(RemoveLinkeBahamutIterationremoveunitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeBahamutIterationremoveunit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeBahamutIterationremoveunitResponse());
    }

    public RemoveLinkeBahamutIterationremoveunitResponse removeLinkeBahamutIterationremoveunit(RemoveLinkeBahamutIterationremoveunitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeBahamutIterationremoveunitWithOptions(request, runtime);
    }

    public RemoveLinkeBahamutIterationunitremovememberforunitResponse removeLinkeBahamutIterationunitremovememberforunitWithOptions(RemoveLinkeBahamutIterationunitremovememberforunitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeBahamutIterationunitremovememberforunit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeBahamutIterationunitremovememberforunitResponse());
    }

    public RemoveLinkeBahamutIterationunitremovememberforunitResponse removeLinkeBahamutIterationunitremovememberforunit(RemoveLinkeBahamutIterationunitremovememberforunitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeBahamutIterationunitremovememberforunitWithOptions(request, runtime);
    }

    public RemoveLinkeLinktProjectroleforuserResponse removeLinkeLinktProjectroleforuserWithOptions(RemoveLinkeLinktProjectroleforuserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeLinktProjectroleforuser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeLinktProjectroleforuserResponse());
    }

    public RemoveLinkeLinktProjectroleforuserResponse removeLinkeLinktProjectroleforuser(RemoveLinkeLinktProjectroleforuserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeLinktProjectroleforuserWithOptions(request, runtime);
    }

    public RemoveLinkeLinktProjecttemplateResponse removeLinkeLinktProjecttemplateWithOptions(RemoveLinkeLinktProjecttemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeLinktProjecttemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeLinktProjecttemplateResponse());
    }

    public RemoveLinkeLinktProjecttemplateResponse removeLinkeLinktProjecttemplate(RemoveLinkeLinktProjecttemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeLinktProjecttemplateWithOptions(request, runtime);
    }

    public RemoveLinkeLinktRelatedlinkeiterationResponse removeLinkeLinktRelatedlinkeiterationWithOptions(RemoveLinkeLinktRelatedlinkeiterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeLinktRelatedlinkeiteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeLinktRelatedlinkeiterationResponse());
    }

    public RemoveLinkeLinktRelatedlinkeiterationResponse removeLinkeLinktRelatedlinkeiteration(RemoveLinkeLinktRelatedlinkeiterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeLinktRelatedlinkeiterationWithOptions(request, runtime);
    }

    public RemoveLinkeLinktStatusResponse removeLinkeLinktStatusWithOptions(RemoveLinkeLinktStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeLinktStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeLinktStatusResponse());
    }

    public RemoveLinkeLinktStatusResponse removeLinkeLinktStatus(RemoveLinkeLinktStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeLinktStatusWithOptions(request, runtime);
    }

    public RemoveLinkeLinktTemplatecustomfieldResponse removeLinkeLinktTemplatecustomfieldWithOptions(RemoveLinkeLinktTemplatecustomfieldRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeLinktTemplatecustomfield", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeLinktTemplatecustomfieldResponse());
    }

    public RemoveLinkeLinktTemplatecustomfieldResponse removeLinkeLinktTemplatecustomfield(RemoveLinkeLinktTemplatecustomfieldRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeLinktTemplatecustomfieldWithOptions(request, runtime);
    }

    public RemoveLinkeLinktWorkitemrelationResponse removeLinkeLinktWorkitemrelationWithOptions(RemoveLinkeLinktWorkitemrelationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeLinktWorkitemrelation", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeLinktWorkitemrelationResponse());
    }

    public RemoveLinkeLinktWorkitemrelationResponse removeLinkeLinktWorkitemrelation(RemoveLinkeLinktWorkitemrelationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeLinktWorkitemrelationWithOptions(request, runtime);
    }

    public RemoveLinkeLinktWorkitemtagResponse removeLinkeLinktWorkitemtagWithOptions(RemoveLinkeLinktWorkitemtagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveLinkeLinktWorkitemtag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveLinkeLinktWorkitemtagResponse());
    }

    public RemoveLinkeLinktWorkitemtagResponse removeLinkeLinktWorkitemtag(RemoveLinkeLinktWorkitemtagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeLinkeLinktWorkitemtagWithOptions(request, runtime);
    }

    public RemoveTSJobGroupJobsResponse removeTSJobGroupJobsWithOptions(RemoveTSJobGroupJobsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RemoveTSJobGroupJobs", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RemoveTSJobGroupJobsResponse());
    }

    public RemoveTSJobGroupJobsResponse removeTSJobGroupJobs(RemoveTSJobGroupJobsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.removeTSJobGroupJobsWithOptions(request, runtime);
    }

    public ReopenDWSTaskResponse reopenDWSTaskWithOptions(ReopenDWSTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReopenDWSTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReopenDWSTaskResponse());
    }

    public ReopenDWSTaskResponse reopenDWSTask(ReopenDWSTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.reopenDWSTaskWithOptions(request, runtime);
    }

    public ReopenLinkeantcodeAntcodeProjectreviewtaskResponse reopenLinkeantcodeAntcodeProjectreviewtaskWithOptions(ReopenLinkeantcodeAntcodeProjectreviewtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReopenLinkeantcodeAntcodeProjectreviewtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReopenLinkeantcodeAntcodeProjectreviewtaskResponse());
    }

    public ReopenLinkeantcodeAntcodeProjectreviewtaskResponse reopenLinkeantcodeAntcodeProjectreviewtask(ReopenLinkeantcodeAntcodeProjectreviewtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.reopenLinkeantcodeAntcodeProjectreviewtaskWithOptions(request, runtime);
    }

    public ReopenLinkeBahamutVcsmergerequestResponse reopenLinkeBahamutVcsmergerequestWithOptions(ReopenLinkeBahamutVcsmergerequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReopenLinkeBahamutVcsmergerequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReopenLinkeBahamutVcsmergerequestResponse());
    }

    public ReopenLinkeBahamutVcsmergerequestResponse reopenLinkeBahamutVcsmergerequest(ReopenLinkeBahamutVcsmergerequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.reopenLinkeBahamutVcsmergerequestWithOptions(request, runtime);
    }

    public ReplaceLinkelinkflowLinkflowTaskResponse replaceLinkelinkflowLinkflowTaskWithOptions(ReplaceLinkelinkflowLinkflowTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ReplaceLinkelinkflowLinkflowTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ReplaceLinkelinkflowLinkflowTaskResponse());
    }

    public ReplaceLinkelinkflowLinkflowTaskResponse replaceLinkelinkflowLinkflowTask(ReplaceLinkelinkflowLinkflowTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.replaceLinkelinkflowLinkflowTaskWithOptions(request, runtime);
    }

    public ResendMqSofamqDLQMessageBatchResponse resendMqSofamqDLQMessageBatchWithOptions(ResendMqSofamqDLQMessageBatchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ResendMqSofamqDLQMessageBatch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ResendMqSofamqDLQMessageBatchResponse());
    }

    public ResendMqSofamqDLQMessageBatchResponse resendMqSofamqDLQMessageBatch(ResendMqSofamqDLQMessageBatchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.resendMqSofamqDLQMessageBatchWithOptions(request, runtime);
    }

    public ResendMqSofamqDLQMessageByIdResponse resendMqSofamqDLQMessageByIdWithOptions(ResendMqSofamqDLQMessageByIdRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ResendMqSofamqDLQMessageById", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ResendMqSofamqDLQMessageByIdResponse());
    }

    public ResendMqSofamqDLQMessageByIdResponse resendMqSofamqDLQMessageById(ResendMqSofamqDLQMessageByIdRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.resendMqSofamqDLQMessageByIdWithOptions(request, runtime);
    }

    public ResetMqSofamqConsumerOffsetResponse resetMqSofamqConsumerOffsetWithOptions(ResetMqSofamqConsumerOffsetRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ResetMqSofamqConsumerOffset", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ResetMqSofamqConsumerOffsetResponse());
    }

    public ResetMqSofamqConsumerOffsetResponse resetMqSofamqConsumerOffset(ResetMqSofamqConsumerOffsetRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.resetMqSofamqConsumerOffsetWithOptions(request, runtime);
    }

    public ResetTSActivityInstanceResponse resetTSActivityInstanceWithOptions(ResetTSActivityInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ResetTSActivityInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ResetTSActivityInstanceResponse());
    }

    public ResetTSActivityInstanceResponse resetTSActivityInstance(ResetTSActivityInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.resetTSActivityInstanceWithOptions(request, runtime);
    }

    public ResetTSTriggerInstanceStatusResponse resetTSTriggerInstanceStatusWithOptions(ResetTSTriggerInstanceStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ResetTSTriggerInstanceStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ResetTSTriggerInstanceStatusResponse());
    }

    public ResetTSTriggerInstanceStatusResponse resetTSTriggerInstanceStatus(ResetTSTriggerInstanceStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.resetTSTriggerInstanceStatusWithOptions(request, runtime);
    }

    public ResolveLinkedeploycoreDeploycoreHandleResponse resolveLinkedeploycoreDeploycoreHandleWithOptions(ResolveLinkedeploycoreDeploycoreHandleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ResolveLinkedeploycoreDeploycoreHandle", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ResolveLinkedeploycoreDeploycoreHandleResponse());
    }

    public ResolveLinkedeploycoreDeploycoreHandleResponse resolveLinkedeploycoreDeploycoreHandle(ResolveLinkedeploycoreDeploycoreHandleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.resolveLinkedeploycoreDeploycoreHandleWithOptions(request, runtime);
    }

    public ResolveLinkeLinktImportResponse resolveLinkeLinktImportWithOptions(ResolveLinkeLinktImportRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ResolveLinkeLinktImport", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ResolveLinkeLinktImportResponse());
    }

    public ResolveLinkeLinktImportResponse resolveLinkeLinktImport(ResolveLinkeLinktImportRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.resolveLinkeLinktImportWithOptions(request, runtime);
    }

    public ResumeTSActivityInstanceResponse resumeTSActivityInstanceWithOptions(ResumeTSActivityInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ResumeTSActivityInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ResumeTSActivityInstanceResponse());
    }

    public ResumeTSActivityInstanceResponse resumeTSActivityInstance(ResumeTSActivityInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.resumeTSActivityInstanceWithOptions(request, runtime);
    }

    public ResumeTSTriggerInstanceResponse resumeTSTriggerInstanceWithOptions(ResumeTSTriggerInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ResumeTSTriggerInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ResumeTSTriggerInstanceResponse());
    }

    public ResumeTSTriggerInstanceResponse resumeTSTriggerInstance(ResumeTSTriggerInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.resumeTSTriggerInstanceWithOptions(request, runtime);
    }

    public RetryAKSClusterTaskResponse retryAKSClusterTaskWithOptions(RetryAKSClusterTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryAKSClusterTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryAKSClusterTaskResponse());
    }

    public RetryAKSClusterTaskResponse retryAKSClusterTask(RetryAKSClusterTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryAKSClusterTaskWithOptions(request, runtime);
    }

    public RetryAKSOpsTaskResponse retryAKSOpsTaskWithOptions(RetryAKSOpsTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryAKSOpsTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryAKSOpsTaskResponse());
    }

    public RetryAKSOpsTaskResponse retryAKSOpsTask(RetryAKSOpsTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryAKSOpsTaskWithOptions(request, runtime);
    }

    public RetryClriskRuleTaskResponse retryClriskRuleTaskWithOptions(RetryClriskRuleTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryClriskRuleTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryClriskRuleTaskResponse());
    }

    public RetryClriskRuleTaskResponse retryClriskRuleTask(RetryClriskRuleTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryClriskRuleTaskWithOptions(request, runtime);
    }

    public RetryDWSNodeResponse retryDWSNodeWithOptions(RetryDWSNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryDWSNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryDWSNodeResponse());
    }

    public RetryDWSNodeResponse retryDWSNode(RetryDWSNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryDWSNodeWithOptions(request, runtime);
    }

    public RetryDWSOrderResponse retryDWSOrderWithOptions(RetryDWSOrderRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryDWSOrder", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryDWSOrderResponse());
    }

    public RetryDWSOrderResponse retryDWSOrder(RetryDWSOrderRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryDWSOrderWithOptions(request, runtime);
    }

    public RetryLDCOpsplanServiceResponse retryLDCOpsplanServiceWithOptions(RetryLDCOpsplanServiceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryLDCOpsplanService", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryLDCOpsplanServiceResponse());
    }

    public RetryLDCOpsplanServiceResponse retryLDCOpsplanService(RetryLDCOpsplanServiceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryLDCOpsplanServiceWithOptions(request, runtime);
    }

    public RetryLinkeBahamutAppcreateorimporttaskResponse retryLinkeBahamutAppcreateorimporttaskWithOptions(RetryLinkeBahamutAppcreateorimporttaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryLinkeBahamutAppcreateorimporttask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryLinkeBahamutAppcreateorimporttaskResponse());
    }

    public RetryLinkeBahamutAppcreateorimporttaskResponse retryLinkeBahamutAppcreateorimporttask(RetryLinkeBahamutAppcreateorimporttaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryLinkeBahamutAppcreateorimporttaskWithOptions(request, runtime);
    }

    public RetryLinkeBahamutAppcustomciexecutionexecutionidResponse retryLinkeBahamutAppcustomciexecutionexecutionidWithOptions(RetryLinkeBahamutAppcustomciexecutionexecutionidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryLinkeBahamutAppcustomciexecutionexecutionid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryLinkeBahamutAppcustomciexecutionexecutionidResponse());
    }

    public RetryLinkeBahamutAppcustomciexecutionexecutionidResponse retryLinkeBahamutAppcustomciexecutionexecutionid(RetryLinkeBahamutAppcustomciexecutionexecutionidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryLinkeBahamutAppcustomciexecutionexecutionidWithOptions(request, runtime);
    }

    public RetryLinkeBahamutComponentResponse retryLinkeBahamutComponentWithOptions(RetryLinkeBahamutComponentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryLinkeBahamutComponent", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryLinkeBahamutComponentResponse());
    }

    public RetryLinkeBahamutComponentResponse retryLinkeBahamutComponent(RetryLinkeBahamutComponentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryLinkeBahamutComponentWithOptions(request, runtime);
    }

    public RetryLinkeBahamutFlowtaskResponse retryLinkeBahamutFlowtaskWithOptions(RetryLinkeBahamutFlowtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryLinkeBahamutFlowtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryLinkeBahamutFlowtaskResponse());
    }

    public RetryLinkeBahamutFlowtaskResponse retryLinkeBahamutFlowtask(RetryLinkeBahamutFlowtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryLinkeBahamutFlowtaskWithOptions(request, runtime);
    }

    public RetryLinkeBahamutPipelineResponse retryLinkeBahamutPipelineWithOptions(RetryLinkeBahamutPipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryLinkeBahamutPipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryLinkeBahamutPipelineResponse());
    }

    public RetryLinkeBahamutPipelineResponse retryLinkeBahamutPipeline(RetryLinkeBahamutPipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryLinkeBahamutPipelineWithOptions(request, runtime);
    }

    public RetryLinkeBahamutPipelineretryoldResponse retryLinkeBahamutPipelineretryoldWithOptions(RetryLinkeBahamutPipelineretryoldRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryLinkeBahamutPipelineretryold", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryLinkeBahamutPipelineretryoldResponse());
    }

    public RetryLinkeBahamutPipelineretryoldResponse retryLinkeBahamutPipelineretryold(RetryLinkeBahamutPipelineretryoldRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryLinkeBahamutPipelineretryoldWithOptions(request, runtime);
    }

    public RetryLinkeBahamutPipelinevoneResponse retryLinkeBahamutPipelinevoneWithOptions(RetryLinkeBahamutPipelinevoneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryLinkeBahamutPipelinevone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryLinkeBahamutPipelinevoneResponse());
    }

    public RetryLinkeBahamutPipelinevoneResponse retryLinkeBahamutPipelinevone(RetryLinkeBahamutPipelinevoneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryLinkeBahamutPipelinevoneWithOptions(request, runtime);
    }

    public RetryLinkeBahamutTaskResponse retryLinkeBahamutTaskWithOptions(RetryLinkeBahamutTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryLinkeBahamutTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryLinkeBahamutTaskResponse());
    }

    public RetryLinkeBahamutTaskResponse retryLinkeBahamutTask(RetryLinkeBahamutTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryLinkeBahamutTaskWithOptions(request, runtime);
    }

    public RetryLinkedeploycoreDeploycoreActionretryResponse retryLinkedeploycoreDeploycoreActionretryWithOptions(RetryLinkedeploycoreDeploycoreActionretryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryLinkedeploycoreDeploycoreActionretry", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryLinkedeploycoreDeploycoreActionretryResponse());
    }

    public RetryLinkedeploycoreDeploycoreActionretryResponse retryLinkedeploycoreDeploycoreActionretry(RetryLinkedeploycoreDeploycoreActionretryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryLinkedeploycoreDeploycoreActionretryWithOptions(request, runtime);
    }

    public RetryLinkefabricFabricCloudtaskResponse retryLinkefabricFabricCloudtaskWithOptions(RetryLinkefabricFabricCloudtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryLinkefabricFabricCloudtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryLinkefabricFabricCloudtaskResponse());
    }

    public RetryLinkefabricFabricCloudtaskResponse retryLinkefabricFabricCloudtask(RetryLinkefabricFabricCloudtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryLinkefabricFabricCloudtaskWithOptions(request, runtime);
    }

    public RetryLinkefabricFabricTaskResponse retryLinkefabricFabricTaskWithOptions(RetryLinkefabricFabricTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryLinkefabricFabricTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryLinkefabricFabricTaskResponse());
    }

    public RetryLinkefabricFabricTaskResponse retryLinkefabricFabricTask(RetryLinkefabricFabricTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryLinkefabricFabricTaskWithOptions(request, runtime);
    }

    public RetryMsSgAuthRuleGroupsResponse retryMsSgAuthRuleGroupsWithOptions(RetryMsSgAuthRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryMsSgAuthRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryMsSgAuthRuleGroupsResponse());
    }

    public RetryMsSgAuthRuleGroupsResponse retryMsSgAuthRuleGroups(RetryMsSgAuthRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryMsSgAuthRuleGroupsWithOptions(request, runtime);
    }

    public RetryODPJobsSqlbatchResponse retryODPJobsSqlbatchWithOptions(RetryODPJobsSqlbatchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryODPJobsSqlbatch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryODPJobsSqlbatchResponse());
    }

    public RetryODPJobsSqlbatchResponse retryODPJobsSqlbatch(RetryODPJobsSqlbatchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryODPJobsSqlbatchWithOptions(request, runtime);
    }

    public RetryrollbackLinkeBahamutWebapirecoveryinitinstanceResponse retryrollbackLinkeBahamutWebapirecoveryinitinstanceWithOptions(RetryrollbackLinkeBahamutWebapirecoveryinitinstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryrollbackLinkeBahamutWebapirecoveryinitinstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryrollbackLinkeBahamutWebapirecoveryinitinstanceResponse());
    }

    public RetryrollbackLinkeBahamutWebapirecoveryinitinstanceResponse retryrollbackLinkeBahamutWebapirecoveryinitinstance(RetryrollbackLinkeBahamutWebapirecoveryinitinstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryrollbackLinkeBahamutWebapirecoveryinitinstanceWithOptions(request, runtime);
    }

    public RetryTSActivityInstanceResponse retryTSActivityInstanceWithOptions(RetryTSActivityInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryTSActivityInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryTSActivityInstanceResponse());
    }

    public RetryTSActivityInstanceResponse retryTSActivityInstance(RetryTSActivityInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryTSActivityInstanceWithOptions(request, runtime);
    }

    public RetryTSChunksResponse retryTSChunksWithOptions(RetryTSChunksRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryTSChunks", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryTSChunksResponse());
    }

    public RetryTSChunksResponse retryTSChunks(RetryTSChunksRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryTSChunksWithOptions(request, runtime);
    }

    public RetryTSExecuteInstanceResponse retryTSExecuteInstanceWithOptions(RetryTSExecuteInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryTSExecuteInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryTSExecuteInstanceResponse());
    }

    public RetryTSExecuteInstanceResponse retryTSExecuteInstance(RetryTSExecuteInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryTSExecuteInstanceWithOptions(request, runtime);
    }

    public RetryTSShardingActivityInstancesResponse retryTSShardingActivityInstancesWithOptions(RetryTSShardingActivityInstancesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RetryTSShardingActivityInstances", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RetryTSShardingActivityInstancesResponse());
    }

    public RetryTSShardingActivityInstancesResponse retryTSShardingActivityInstances(RetryTSShardingActivityInstancesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.retryTSShardingActivityInstancesWithOptions(request, runtime);
    }

    public RollbackAKSHelmChartReleaseResponse rollbackAKSHelmChartReleaseWithOptions(RollbackAKSHelmChartReleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RollbackAKSHelmChartRelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RollbackAKSHelmChartReleaseResponse());
    }

    public RollbackAKSHelmChartReleaseResponse rollbackAKSHelmChartRelease(RollbackAKSHelmChartReleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.rollbackAKSHelmChartReleaseWithOptions(request, runtime);
    }

    public RollbackLDCContainerserviceDeploymentResponse rollbackLDCContainerserviceDeploymentWithOptions(RollbackLDCContainerserviceDeploymentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RollbackLDCContainerserviceDeployment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RollbackLDCContainerserviceDeploymentResponse());
    }

    public RollbackLDCContainerserviceDeploymentResponse rollbackLDCContainerserviceDeployment(RollbackLDCContainerserviceDeploymentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.rollbackLDCContainerserviceDeploymentWithOptions(request, runtime);
    }

    public RollbackLinkeBahamutAdminpipelinerollbackexistedResponse rollbackLinkeBahamutAdminpipelinerollbackexistedWithOptions(RollbackLinkeBahamutAdminpipelinerollbackexistedRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RollbackLinkeBahamutAdminpipelinerollbackexisted", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RollbackLinkeBahamutAdminpipelinerollbackexistedResponse());
    }

    public RollbackLinkeBahamutAdminpipelinerollbackexistedResponse rollbackLinkeBahamutAdminpipelinerollbackexisted(RollbackLinkeBahamutAdminpipelinerollbackexistedRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.rollbackLinkeBahamutAdminpipelinerollbackexistedWithOptions(request, runtime);
    }

    public RollbackLinkedeploycoreDeploycoreAppserviceResponse rollbackLinkedeploycoreDeploycoreAppserviceWithOptions(RollbackLinkedeploycoreDeploycoreAppserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RollbackLinkedeploycoreDeploycoreAppservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RollbackLinkedeploycoreDeploycoreAppserviceResponse());
    }

    public RollbackLinkedeploycoreDeploycoreAppserviceResponse rollbackLinkedeploycoreDeploycoreAppservice(RollbackLinkedeploycoreDeploycoreAppserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.rollbackLinkedeploycoreDeploycoreAppserviceWithOptions(request, runtime);
    }

    public RunClriskRuleResponse runClriskRuleWithOptions(RunClriskRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RunClriskRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RunClriskRuleResponse());
    }

    public RunClriskRuleResponse runClriskRule(RunClriskRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.runClriskRuleWithOptions(request, runtime);
    }

    public RunClriskTemplateRuleResponse runClriskTemplateRuleWithOptions(RunClriskTemplateRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("RunClriskTemplateRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new RunClriskTemplateRuleResponse());
    }

    public RunClriskTemplateRuleResponse runClriskTemplateRule(RunClriskTemplateRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.runClriskTemplateRuleWithOptions(request, runtime);
    }

    public SaveAKSHelmChartPackageTreeResponse saveAKSHelmChartPackageTreeWithOptions(SaveAKSHelmChartPackageTreeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveAKSHelmChartPackageTree", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveAKSHelmChartPackageTreeResponse());
    }

    public SaveAKSHelmChartPackageTreeResponse saveAKSHelmChartPackageTree(SaveAKSHelmChartPackageTreeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveAKSHelmChartPackageTreeWithOptions(request, runtime);
    }

    public SaveClriskAuthProjectResponse saveClriskAuthProjectWithOptions(SaveClriskAuthProjectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveClriskAuthProject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveClriskAuthProjectResponse());
    }

    public SaveClriskAuthProjectResponse saveClriskAuthProject(SaveClriskAuthProjectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveClriskAuthProjectWithOptions(request, runtime);
    }

    public SaveClriskModelResponse saveClriskModelWithOptions(SaveClriskModelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveClriskModel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveClriskModelResponse());
    }

    public SaveClriskModelResponse saveClriskModel(SaveClriskModelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveClriskModelWithOptions(request, runtime);
    }

    public SaveClriskRuleResponse saveClriskRuleWithOptions(SaveClriskRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveClriskRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveClriskRuleResponse());
    }

    public SaveClriskRuleResponse saveClriskRule(SaveClriskRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveClriskRuleWithOptions(request, runtime);
    }

    public SaveClriskSubscriberResponse saveClriskSubscriberWithOptions(SaveClriskSubscriberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveClriskSubscriber", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveClriskSubscriberResponse());
    }

    public SaveClriskSubscriberResponse saveClriskSubscriber(SaveClriskSubscriberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveClriskSubscriberWithOptions(request, runtime);
    }

    public SaveClriskTemplateResponse saveClriskTemplateWithOptions(SaveClriskTemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveClriskTemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveClriskTemplateResponse());
    }

    public SaveClriskTemplateResponse saveClriskTemplate(SaveClriskTemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveClriskTemplateWithOptions(request, runtime);
    }

    public SaveClriskTemplateRuleResponse saveClriskTemplateRuleWithOptions(SaveClriskTemplateRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveClriskTemplateRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveClriskTemplateRuleResponse());
    }

    public SaveClriskTemplateRuleResponse saveClriskTemplateRule(SaveClriskTemplateRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveClriskTemplateRuleWithOptions(request, runtime);
    }

    public SaveDSTAppCollectionResponse saveDSTAppCollectionWithOptions(SaveDSTAppCollectionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveDSTAppCollection", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveDSTAppCollectionResponse());
    }

    public SaveDSTAppCollectionResponse saveDSTAppCollection(SaveDSTAppCollectionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveDSTAppCollectionWithOptions(request, runtime);
    }

    public SaveDSTTraceCollectionResponse saveDSTTraceCollectionWithOptions(SaveDSTTraceCollectionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveDSTTraceCollection", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveDSTTraceCollectionResponse());
    }

    public SaveDSTTraceCollectionResponse saveDSTTraceCollection(SaveDSTTraceCollectionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveDSTTraceCollectionWithOptions(request, runtime);
    }

    public SaveHasUserappgroupRelationResponse saveHasUserappgroupRelationWithOptions(SaveHasUserappgroupRelationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveHasUserappgroupRelation", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveHasUserappgroupRelationResponse());
    }

    public SaveHasUserappgroupRelationResponse saveHasUserappgroupRelation(SaveHasUserappgroupRelationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveHasUserappgroupRelationWithOptions(request, runtime);
    }

    public SaveLinkeantcodeAntcodeSnippetsResponse saveLinkeantcodeAntcodeSnippetsWithOptions(SaveLinkeantcodeAntcodeSnippetsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeantcodeAntcodeSnippets", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeantcodeAntcodeSnippetsResponse());
    }

    public SaveLinkeantcodeAntcodeSnippetsResponse saveLinkeantcodeAntcodeSnippets(SaveLinkeantcodeAntcodeSnippetsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeantcodeAntcodeSnippetsWithOptions(request, runtime);
    }

    public SaveLinkeBahamutAdminiterationtemplateResponse saveLinkeBahamutAdminiterationtemplateWithOptions(SaveLinkeBahamutAdminiterationtemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeBahamutAdminiterationtemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeBahamutAdminiterationtemplateResponse());
    }

    public SaveLinkeBahamutAdminiterationtemplateResponse saveLinkeBahamutAdminiterationtemplate(SaveLinkeBahamutAdminiterationtemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeBahamutAdminiterationtemplateWithOptions(request, runtime);
    }

    public SaveLinkeBahamutAdminiterationtemplateeditstageResponse saveLinkeBahamutAdminiterationtemplateeditstageWithOptions(SaveLinkeBahamutAdminiterationtemplateeditstageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeBahamutAdminiterationtemplateeditstage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeBahamutAdminiterationtemplateeditstageResponse());
    }

    public SaveLinkeBahamutAdminiterationtemplateeditstageResponse saveLinkeBahamutAdminiterationtemplateeditstage(SaveLinkeBahamutAdminiterationtemplateeditstageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeBahamutAdminiterationtemplateeditstageWithOptions(request, runtime);
    }

    public SaveLinkeBahamutAdmintenantiditerationtemplateeditbaseinfoResponse saveLinkeBahamutAdmintenantiditerationtemplateeditbaseinfoWithOptions(SaveLinkeBahamutAdmintenantiditerationtemplateeditbaseinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeBahamutAdmintenantiditerationtemplateeditbaseinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeBahamutAdmintenantiditerationtemplateeditbaseinfoResponse());
    }

    public SaveLinkeBahamutAdmintenantiditerationtemplateeditbaseinfoResponse saveLinkeBahamutAdmintenantiditerationtemplateeditbaseinfo(SaveLinkeBahamutAdmintenantiditerationtemplateeditbaseinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeBahamutAdmintenantiditerationtemplateeditbaseinfoWithOptions(request, runtime);
    }

    public SaveLinkeBahamutAdminworkspaceResponse saveLinkeBahamutAdminworkspaceWithOptions(SaveLinkeBahamutAdminworkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeBahamutAdminworkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeBahamutAdminworkspaceResponse());
    }

    public SaveLinkeBahamutAdminworkspaceResponse saveLinkeBahamutAdminworkspace(SaveLinkeBahamutAdminworkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeBahamutAdminworkspaceWithOptions(request, runtime);
    }

    public SaveLinkeBahamutAppcustomciconfigResponse saveLinkeBahamutAppcustomciconfigWithOptions(SaveLinkeBahamutAppcustomciconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeBahamutAppcustomciconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeBahamutAppcustomciconfigResponse());
    }

    public SaveLinkeBahamutAppcustomciconfigResponse saveLinkeBahamutAppcustomciconfig(SaveLinkeBahamutAppcustomciconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeBahamutAppcustomciconfigWithOptions(request, runtime);
    }

    public SaveLinkeBahamutApptenantidappnamecustompipelinesaveconfigResponse saveLinkeBahamutApptenantidappnamecustompipelinesaveconfigWithOptions(SaveLinkeBahamutApptenantidappnamecustompipelinesaveconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeBahamutApptenantidappnamecustompipelinesaveconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeBahamutApptenantidappnamecustompipelinesaveconfigResponse());
    }

    public SaveLinkeBahamutApptenantidappnamecustompipelinesaveconfigResponse saveLinkeBahamutApptenantidappnamecustompipelinesaveconfig(SaveLinkeBahamutApptenantidappnamecustompipelinesaveconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeBahamutApptenantidappnamecustompipelinesaveconfigWithOptions(request, runtime);
    }

    public SaveLinkeBahamutBuildconfigResponse saveLinkeBahamutBuildconfigWithOptions(SaveLinkeBahamutBuildconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeBahamutBuildconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeBahamutBuildconfigResponse());
    }

    public SaveLinkeBahamutBuildconfigResponse saveLinkeBahamutBuildconfig(SaveLinkeBahamutBuildconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeBahamutBuildconfigWithOptions(request, runtime);
    }

    public SaveLinkeBahamutBuildconfigregistryResponse saveLinkeBahamutBuildconfigregistryWithOptions(SaveLinkeBahamutBuildconfigregistryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeBahamutBuildconfigregistry", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeBahamutBuildconfigregistryResponse());
    }

    public SaveLinkeBahamutBuildconfigregistryResponse saveLinkeBahamutBuildconfigregistry(SaveLinkeBahamutBuildconfigregistryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeBahamutBuildconfigregistryWithOptions(request, runtime);
    }

    public SaveLinkeBahamutFlagcabinetResponse saveLinkeBahamutFlagcabinetWithOptions(SaveLinkeBahamutFlagcabinetRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeBahamutFlagcabinet", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeBahamutFlagcabinetResponse());
    }

    public SaveLinkeBahamutFlagcabinetResponse saveLinkeBahamutFlagcabinet(SaveLinkeBahamutFlagcabinetRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeBahamutFlagcabinetWithOptions(request, runtime);
    }

    public SaveLinkeLinktAdmintemplateorderResponse saveLinkeLinktAdmintemplateorderWithOptions(SaveLinkeLinktAdmintemplateorderRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeLinktAdmintemplateorder", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeLinktAdmintemplateorderResponse());
    }

    public SaveLinkeLinktAdmintemplateorderResponse saveLinkeLinktAdmintemplateorder(SaveLinkeLinktAdmintemplateorderRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeLinktAdmintemplateorderWithOptions(request, runtime);
    }

    public SaveLinkeLinktCommentResponse saveLinkeLinktCommentWithOptions(SaveLinkeLinktCommentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeLinktComment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeLinktCommentResponse());
    }

    public SaveLinkeLinktCommentResponse saveLinkeLinktComment(SaveLinkeLinktCommentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeLinktCommentWithOptions(request, runtime);
    }

    public SaveLinkeLinktCustomfieldorderResponse saveLinkeLinktCustomfieldorderWithOptions(SaveLinkeLinktCustomfieldorderRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeLinktCustomfieldorder", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeLinktCustomfieldorderResponse());
    }

    public SaveLinkeLinktCustomfieldorderResponse saveLinkeLinktCustomfieldorder(SaveLinkeLinktCustomfieldorderRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeLinktCustomfieldorderWithOptions(request, runtime);
    }

    public SaveLinkeLinktIterationlockResponse saveLinkeLinktIterationlockWithOptions(SaveLinkeLinktIterationlockRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeLinktIterationlock", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeLinktIterationlockResponse());
    }

    public SaveLinkeLinktIterationlockResponse saveLinkeLinktIterationlock(SaveLinkeLinktIterationlockRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeLinktIterationlockWithOptions(request, runtime);
    }

    public SaveLinkeLinktTemplateorderResponse saveLinkeLinktTemplateorderWithOptions(SaveLinkeLinktTemplateorderRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeLinktTemplateorder", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeLinktTemplateorderResponse());
    }

    public SaveLinkeLinktTemplateorderResponse saveLinkeLinktTemplateorder(SaveLinkeLinktTemplateorderRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeLinktTemplateorderWithOptions(request, runtime);
    }

    public SaveLinkeLinktWorkitemreviewcommentResponse saveLinkeLinktWorkitemreviewcommentWithOptions(SaveLinkeLinktWorkitemreviewcommentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveLinkeLinktWorkitemreviewcomment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveLinkeLinktWorkitemreviewcommentResponse());
    }

    public SaveLinkeLinktWorkitemreviewcommentResponse saveLinkeLinktWorkitemreviewcomment(SaveLinkeLinktWorkitemreviewcommentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveLinkeLinktWorkitemreviewcommentWithOptions(request, runtime);
    }

    public SaveMsSgAuthRuleGroupsResponse saveMsSgAuthRuleGroupsWithOptions(SaveMsSgAuthRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SaveMsSgAuthRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SaveMsSgAuthRuleGroupsResponse());
    }

    public SaveMsSgAuthRuleGroupsResponse saveMsSgAuthRuleGroups(SaveMsSgAuthRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.saveMsSgAuthRuleGroupsWithOptions(request, runtime);
    }

    public ScaleAKSClusterNodeResponse scaleAKSClusterNodeWithOptions(ScaleAKSClusterNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("ScaleAKSClusterNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new ScaleAKSClusterNodeResponse());
    }

    public ScaleAKSClusterNodeResponse scaleAKSClusterNode(ScaleAKSClusterNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.scaleAKSClusterNodeWithOptions(request, runtime);
    }

    public SendLinkeBahamutFlowtasknoticeResponse sendLinkeBahamutFlowtasknoticeWithOptions(SendLinkeBahamutFlowtasknoticeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SendLinkeBahamutFlowtasknotice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SendLinkeBahamutFlowtasknoticeResponse());
    }

    public SendLinkeBahamutFlowtasknoticeResponse sendLinkeBahamutFlowtasknotice(SendLinkeBahamutFlowtasknoticeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.sendLinkeBahamutFlowtasknoticeWithOptions(request, runtime);
    }

    public SendMqSofamqMessageResponse sendMqSofamqMessageWithOptions(SendMqSofamqMessageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SendMqSofamqMessage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SendMqSofamqMessageResponse());
    }

    public SendMqSofamqMessageResponse sendMqSofamqMessage(SendMqSofamqMessageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.sendMqSofamqMessageWithOptions(request, runtime);
    }

    public SetCasDatabaseAccountpasswordResponse setCasDatabaseAccountpasswordWithOptions(SetCasDatabaseAccountpasswordRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetCasDatabaseAccountpassword", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetCasDatabaseAccountpasswordResponse());
    }

    public SetCasDatabaseAccountpasswordResponse setCasDatabaseAccountpassword(SetCasDatabaseAccountpasswordRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setCasDatabaseAccountpasswordWithOptions(request, runtime);
    }

    public SetCasDatabaseAssignResponse setCasDatabaseAssignWithOptions(SetCasDatabaseAssignRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetCasDatabaseAssign", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetCasDatabaseAssignResponse());
    }

    public SetCasDatabaseAssignResponse setCasDatabaseAssign(SetCasDatabaseAssignRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setCasDatabaseAssignWithOptions(request, runtime);
    }

    public SetCasDatabaseShareResponse setCasDatabaseShareWithOptions(SetCasDatabaseShareRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetCasDatabaseShare", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetCasDatabaseShareResponse());
    }

    public SetCasDatabaseShareResponse setCasDatabaseShare(SetCasDatabaseShareRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setCasDatabaseShareWithOptions(request, runtime);
    }

    public SetDSTSlsConfigResponse setDSTSlsConfigWithOptions(SetDSTSlsConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetDSTSlsConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetDSTSlsConfigResponse());
    }

    public SetDSTSlsConfigResponse setDSTSlsConfig(SetDSTSlsConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setDSTSlsConfigWithOptions(request, runtime);
    }

    public SetDWSConfigResponse setDWSConfigWithOptions(SetDWSConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetDWSConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetDWSConfigResponse());
    }

    public SetDWSConfigResponse setDWSConfig(SetDWSConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setDWSConfigWithOptions(request, runtime);
    }

    public SetLDCFlowDefaultUidResponse setLDCFlowDefaultUidWithOptions(SetLDCFlowDefaultUidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetLDCFlowDefaultUid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetLDCFlowDefaultUidResponse());
    }

    public SetLDCFlowDefaultUidResponse setLDCFlowDefaultUid(SetLDCFlowDefaultUidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setLDCFlowDefaultUidWithOptions(request, runtime);
    }

    public SetLinkeBahamutAdminiterationtemplateResponse setLinkeBahamutAdminiterationtemplateWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("SetLinkeBahamutAdminiterationtemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetLinkeBahamutAdminiterationtemplateResponse());
    }

    public SetLinkeBahamutAdminiterationtemplateResponse setLinkeBahamutAdminiterationtemplate() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setLinkeBahamutAdminiterationtemplateWithOptions(runtime);
    }

    public SetLinkeBahamutCookieswitchtenantResponse setLinkeBahamutCookieswitchtenantWithOptions(SetLinkeBahamutCookieswitchtenantRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetLinkeBahamutCookieswitchtenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetLinkeBahamutCookieswitchtenantResponse());
    }

    public SetLinkeBahamutCookieswitchtenantResponse setLinkeBahamutCookieswitchtenant(SetLinkeBahamutCookieswitchtenantRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setLinkeBahamutCookieswitchtenantWithOptions(request, runtime);
    }

    public SetLinkeBahamutEditinstanceResponse setLinkeBahamutEditinstanceWithOptions(SetLinkeBahamutEditinstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetLinkeBahamutEditinstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetLinkeBahamutEditinstanceResponse());
    }

    public SetLinkeBahamutEditinstanceResponse setLinkeBahamutEditinstance(SetLinkeBahamutEditinstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setLinkeBahamutEditinstanceWithOptions(request, runtime);
    }

    public SetLinkeBahamutIterationrecommendgrayResponse setLinkeBahamutIterationrecommendgrayWithOptions(SetLinkeBahamutIterationrecommendgrayRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetLinkeBahamutIterationrecommendgray", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetLinkeBahamutIterationrecommendgrayResponse());
    }

    public SetLinkeBahamutIterationrecommendgrayResponse setLinkeBahamutIterationrecommendgray(SetLinkeBahamutIterationrecommendgrayRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setLinkeBahamutIterationrecommendgrayWithOptions(request, runtime);
    }

    public SetLinkeBahamutIterationsfixnnitswithnonestageResponse setLinkeBahamutIterationsfixnnitswithnonestageWithOptions(SetLinkeBahamutIterationsfixnnitswithnonestageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetLinkeBahamutIterationsfixnnitswithnonestage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetLinkeBahamutIterationsfixnnitswithnonestageResponse());
    }

    public SetLinkeBahamutIterationsfixnnitswithnonestageResponse setLinkeBahamutIterationsfixnnitswithnonestage(SetLinkeBahamutIterationsfixnnitswithnonestageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setLinkeBahamutIterationsfixnnitswithnonestageWithOptions(request, runtime);
    }

    public SetLinkeBahamutIterationunitsnotreadyResponse setLinkeBahamutIterationunitsnotreadyWithOptions(SetLinkeBahamutIterationunitsnotreadyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetLinkeBahamutIterationunitsnotready", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetLinkeBahamutIterationunitsnotreadyResponse());
    }

    public SetLinkeBahamutIterationunitsnotreadyResponse setLinkeBahamutIterationunitsnotready(SetLinkeBahamutIterationunitsnotreadyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setLinkeBahamutIterationunitsnotreadyWithOptions(request, runtime);
    }

    public SetLinkeBahamutReviewResponse setLinkeBahamutReviewWithOptions(SetLinkeBahamutReviewRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetLinkeBahamutReview", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetLinkeBahamutReviewResponse());
    }

    public SetLinkeBahamutReviewResponse setLinkeBahamutReview(SetLinkeBahamutReviewRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setLinkeBahamutReviewWithOptions(request, runtime);
    }

    public SetLinkeBahamutTenantResponse setLinkeBahamutTenantWithOptions(SetLinkeBahamutTenantRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetLinkeBahamutTenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetLinkeBahamutTenantResponse());
    }

    public SetLinkeBahamutTenantResponse setLinkeBahamutTenant(SetLinkeBahamutTenantRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setLinkeBahamutTenantWithOptions(request, runtime);
    }

    public SetLinkeBahamutTenantcodeconfigResponse setLinkeBahamutTenantcodeconfigWithOptions(SetLinkeBahamutTenantcodeconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetLinkeBahamutTenantcodeconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetLinkeBahamutTenantcodeconfigResponse());
    }

    public SetLinkeBahamutTenantcodeconfigResponse setLinkeBahamutTenantcodeconfig(SetLinkeBahamutTenantcodeconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setLinkeBahamutTenantcodeconfigWithOptions(request, runtime);
    }

    public SetLinkeBahamutTenantcookieResponse setLinkeBahamutTenantcookieWithOptions(SetLinkeBahamutTenantcookieRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetLinkeBahamutTenantcookie", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetLinkeBahamutTenantcookieResponse());
    }

    public SetLinkeBahamutTenantcookieResponse setLinkeBahamutTenantcookie(SetLinkeBahamutTenantcookieRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setLinkeBahamutTenantcookieWithOptions(request, runtime);
    }

    public SetLinkeBahamutWriteflagResponse setLinkeBahamutWriteflagWithOptions(SetLinkeBahamutWriteflagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetLinkeBahamutWriteflag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetLinkeBahamutWriteflagResponse());
    }

    public SetLinkeBahamutWriteflagResponse setLinkeBahamutWriteflag(SetLinkeBahamutWriteflagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setLinkeBahamutWriteflagWithOptions(request, runtime);
    }

    public SetLinkeLinktWorkflowstatusreachableResponse setLinkeLinktWorkflowstatusreachableWithOptions(SetLinkeLinktWorkflowstatusreachableRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetLinkeLinktWorkflowstatusreachable", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetLinkeLinktWorkflowstatusreachableResponse());
    }

    public SetLinkeLinktWorkflowstatusreachableResponse setLinkeLinktWorkflowstatusreachable(SetLinkeLinktWorkflowstatusreachableRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setLinkeLinktWorkflowstatusreachableWithOptions(request, runtime);
    }

    public SetMsSgCircuitBreakerRuleResponse setMsSgCircuitBreakerRuleWithOptions(SetMsSgCircuitBreakerRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetMsSgCircuitBreakerRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetMsSgCircuitBreakerRuleResponse());
    }

    public SetMsSgCircuitBreakerRuleResponse setMsSgCircuitBreakerRule(SetMsSgCircuitBreakerRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setMsSgCircuitBreakerRuleWithOptions(request, runtime);
    }

    public SetMsSgServiceParamWeightResponse setMsSgServiceParamWeightWithOptions(SetMsSgServiceParamWeightRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SetMsSgServiceParamWeight", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SetMsSgServiceParamWeightResponse());
    }

    public SetMsSgServiceParamWeightResponse setMsSgServiceParamWeight(SetMsSgServiceParamWeightRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.setMsSgServiceParamWeightWithOptions(request, runtime);
    }

    public SkipDWSNodeResponse skipDWSNodeWithOptions(SkipDWSNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SkipDWSNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SkipDWSNodeResponse());
    }

    public SkipDWSNodeResponse skipDWSNode(SkipDWSNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.skipDWSNodeWithOptions(request, runtime);
    }

    public SkipDWSOrderResponse skipDWSOrderWithOptions(SkipDWSOrderRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SkipDWSOrder", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SkipDWSOrderResponse());
    }

    public SkipDWSOrderResponse skipDWSOrder(SkipDWSOrderRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.skipDWSOrderWithOptions(request, runtime);
    }

    public SkipLinkeBahamutIterationunitnextstageResponse skipLinkeBahamutIterationunitnextstageWithOptions(SkipLinkeBahamutIterationunitnextstageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SkipLinkeBahamutIterationunitnextstage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SkipLinkeBahamutIterationunitnextstageResponse());
    }

    public SkipLinkeBahamutIterationunitnextstageResponse skipLinkeBahamutIterationunitnextstage(SkipLinkeBahamutIterationunitnextstageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.skipLinkeBahamutIterationunitnextstageWithOptions(request, runtime);
    }

    public SkipLinkeBahamutPipelinecomponentexecutskipionidResponse skipLinkeBahamutPipelinecomponentexecutskipionidWithOptions(SkipLinkeBahamutPipelinecomponentexecutskipionidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SkipLinkeBahamutPipelinecomponentexecutskipionid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SkipLinkeBahamutPipelinecomponentexecutskipionidResponse());
    }

    public SkipLinkeBahamutPipelinecomponentexecutskipionidResponse skipLinkeBahamutPipelinecomponentexecutskipionid(SkipLinkeBahamutPipelinecomponentexecutskipionidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.skipLinkeBahamutPipelinecomponentexecutskipionidWithOptions(request, runtime);
    }

    public SkipODPJobsSqlbatchResponse skipODPJobsSqlbatchWithOptions(SkipODPJobsSqlbatchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SkipODPJobsSqlbatch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SkipODPJobsSqlbatchResponse());
    }

    public SkipODPJobsSqlbatchResponse skipODPJobsSqlbatch(SkipODPJobsSqlbatchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.skipODPJobsSqlbatchWithOptions(request, runtime);
    }

    public SkipTSActivityInstanceResponse skipTSActivityInstanceWithOptions(SkipTSActivityInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SkipTSActivityInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SkipTSActivityInstanceResponse());
    }

    public SkipTSActivityInstanceResponse skipTSActivityInstance(SkipTSActivityInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.skipTSActivityInstanceWithOptions(request, runtime);
    }

    public SkipTSActivityInstanceWaitingEventResponse skipTSActivityInstanceWaitingEventWithOptions(SkipTSActivityInstanceWaitingEventRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SkipTSActivityInstanceWaitingEvent", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SkipTSActivityInstanceWaitingEventResponse());
    }

    public SkipTSActivityInstanceWaitingEventResponse skipTSActivityInstanceWaitingEvent(SkipTSActivityInstanceWaitingEventRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.skipTSActivityInstanceWaitingEventWithOptions(request, runtime);
    }

    public SkipTSShardingActivityInstancesResponse skipTSShardingActivityInstancesWithOptions(SkipTSShardingActivityInstancesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SkipTSShardingActivityInstances", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SkipTSShardingActivityInstancesResponse());
    }

    public SkipTSShardingActivityInstancesResponse skipTSShardingActivityInstances(SkipTSShardingActivityInstancesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.skipTSShardingActivityInstancesWithOptions(request, runtime);
    }

    public StartCasLoadbalanceListenerResponse startCasLoadbalanceListenerWithOptions(StartCasLoadbalanceListenerRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StartCasLoadbalanceListener", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StartCasLoadbalanceListenerResponse());
    }

    public StartCasLoadbalanceListenerResponse startCasLoadbalanceListener(StartCasLoadbalanceListenerRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.startCasLoadbalanceListenerWithOptions(request, runtime);
    }

    public StartLDCAppopsResponse startLDCAppopsWithOptions(StartLDCAppopsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StartLDCAppops", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StartLDCAppopsResponse());
    }

    public StartLDCAppopsResponse startLDCAppops(StartLDCAppopsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.startLDCAppopsWithOptions(request, runtime);
    }

    public StartLDCOpsplanServiceResponse startLDCOpsplanServiceWithOptions(StartLDCOpsplanServiceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StartLDCOpsplanService", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StartLDCOpsplanServiceResponse());
    }

    public StartLDCOpsplanServiceResponse startLDCOpsplanService(StartLDCOpsplanServiceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.startLDCOpsplanServiceWithOptions(request, runtime);
    }

    public StartLinkeBahamutPrepubpipelineResponse startLinkeBahamutPrepubpipelineWithOptions(StartLinkeBahamutPrepubpipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StartLinkeBahamutPrepubpipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StartLinkeBahamutPrepubpipelineResponse());
    }

    public StartLinkeBahamutPrepubpipelineResponse startLinkeBahamutPrepubpipeline(StartLinkeBahamutPrepubpipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.startLinkeBahamutPrepubpipelineWithOptions(request, runtime);
    }

    public StartLinkeBahamutReleaseResponse startLinkeBahamutReleaseWithOptions(StartLinkeBahamutReleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StartLinkeBahamutRelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StartLinkeBahamutReleaseResponse());
    }

    public StartLinkeBahamutReleaseResponse startLinkeBahamutRelease(StartLinkeBahamutReleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.startLinkeBahamutReleaseWithOptions(request, runtime);
    }

    public StartLinkelinkflowLinkflowProcessResponse startLinkelinkflowLinkflowProcessWithOptions(StartLinkelinkflowLinkflowProcessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StartLinkelinkflowLinkflowProcess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StartLinkelinkflowLinkflowProcessResponse());
    }

    public StartLinkelinkflowLinkflowProcessResponse startLinkelinkflowLinkflowProcess(StartLinkelinkflowLinkflowProcessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.startLinkelinkflowLinkflowProcessWithOptions(request, runtime);
    }

    public StartMsRcSyncTaskResponse startMsRcSyncTaskWithOptions(StartMsRcSyncTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StartMsRcSyncTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StartMsRcSyncTaskResponse());
    }

    public StartMsRcSyncTaskResponse startMsRcSyncTask(StartMsRcSyncTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.startMsRcSyncTaskWithOptions(request, runtime);
    }

    public StopCasLoadbalanceListenerResponse stopCasLoadbalanceListenerWithOptions(StopCasLoadbalanceListenerRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StopCasLoadbalanceListener", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StopCasLoadbalanceListenerResponse());
    }

    public StopCasLoadbalanceListenerResponse stopCasLoadbalanceListener(StopCasLoadbalanceListenerRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.stopCasLoadbalanceListenerWithOptions(request, runtime);
    }

    public StopDWSTaskResponse stopDWSTaskWithOptions(StopDWSTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StopDWSTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StopDWSTaskResponse());
    }

    public StopDWSTaskResponse stopDWSTask(StopDWSTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.stopDWSTaskWithOptions(request, runtime);
    }

    public StopHasInspectTaskResponse stopHasInspectTaskWithOptions(StopHasInspectTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StopHasInspectTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StopHasInspectTaskResponse());
    }

    public StopHasInspectTaskResponse stopHasInspectTask(StopHasInspectTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.stopHasInspectTaskWithOptions(request, runtime);
    }

    public StopLinkelinkflowLinkflowProcessResponse stopLinkelinkflowLinkflowProcessWithOptions(StopLinkelinkflowLinkflowProcessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StopLinkelinkflowLinkflowProcess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StopLinkelinkflowLinkflowProcessResponse());
    }

    public StopLinkelinkflowLinkflowProcessResponse stopLinkelinkflowLinkflowProcess(StopLinkelinkflowLinkflowProcessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.stopLinkelinkflowLinkflowProcessWithOptions(request, runtime);
    }

    public StopMsRcSyncTaskResponse stopMsRcSyncTaskWithOptions(StopMsRcSyncTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StopMsRcSyncTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StopMsRcSyncTaskResponse());
    }

    public StopMsRcSyncTaskResponse stopMsRcSyncTask(StopMsRcSyncTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.stopMsRcSyncTaskWithOptions(request, runtime);
    }

    public StopTSActivityInstanceResponse stopTSActivityInstanceWithOptions(StopTSActivityInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StopTSActivityInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StopTSActivityInstanceResponse());
    }

    public StopTSActivityInstanceResponse stopTSActivityInstance(StopTSActivityInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.stopTSActivityInstanceWithOptions(request, runtime);
    }

    public StopTSTriggerInstanceResponse stopTSTriggerInstanceWithOptions(StopTSTriggerInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("StopTSTriggerInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new StopTSTriggerInstanceResponse());
    }

    public StopTSTriggerInstanceResponse stopTSTriggerInstance(StopTSTriggerInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.stopTSTriggerInstanceWithOptions(request, runtime);
    }

    public SwitchLinkeBahamutAdminswitchlinkqResponse switchLinkeBahamutAdminswitchlinkqWithOptions(SwitchLinkeBahamutAdminswitchlinkqRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SwitchLinkeBahamutAdminswitchlinkq", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SwitchLinkeBahamutAdminswitchlinkqResponse());
    }

    public SwitchLinkeBahamutAdminswitchlinkqResponse switchLinkeBahamutAdminswitchlinkq(SwitchLinkeBahamutAdminswitchlinkqRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.switchLinkeBahamutAdminswitchlinkqWithOptions(request, runtime);
    }

    public SyncDWSVpcIpResponse syncDWSVpcIpWithOptions(SyncDWSVpcIpRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SyncDWSVpcIp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SyncDWSVpcIpResponse());
    }

    public SyncDWSVpcIpResponse syncDWSVpcIp(SyncDWSVpcIpRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.syncDWSVpcIpWithOptions(request, runtime);
    }

    public SyncHasBaselineSyncfortenantResponse syncHasBaselineSyncfortenantWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("SyncHasBaselineSyncfortenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SyncHasBaselineSyncfortenantResponse());
    }

    public SyncHasBaselineSyncfortenantResponse syncHasBaselineSyncfortenant() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.syncHasBaselineSyncfortenantWithOptions(runtime);
    }

    public SyncHasCloudarchResponse syncHasCloudarchWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("SyncHasCloudarch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SyncHasCloudarchResponse());
    }

    public SyncHasCloudarchResponse syncHasCloudarch() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.syncHasCloudarchWithOptions(runtime);
    }

    public SyncLinkeBahamutAdminsyncappResponse syncLinkeBahamutAdminsyncappWithOptions(SyncLinkeBahamutAdminsyncappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SyncLinkeBahamutAdminsyncapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SyncLinkeBahamutAdminsyncappResponse());
    }

    public SyncLinkeBahamutAdminsyncappResponse syncLinkeBahamutAdminsyncapp(SyncLinkeBahamutAdminsyncappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.syncLinkeBahamutAdminsyncappWithOptions(request, runtime);
    }

    public SyncLinkeBahamutAppResponse syncLinkeBahamutAppWithOptions(SyncLinkeBahamutAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SyncLinkeBahamutApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SyncLinkeBahamutAppResponse());
    }

    public SyncLinkeBahamutAppResponse syncLinkeBahamutApp(SyncLinkeBahamutAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.syncLinkeBahamutAppWithOptions(request, runtime);
    }

    public SyncLinkeBahamutAppdatasyncappmembernamestenantidResponse syncLinkeBahamutAppdatasyncappmembernamestenantidWithOptions(SyncLinkeBahamutAppdatasyncappmembernamestenantidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SyncLinkeBahamutAppdatasyncappmembernamestenantid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SyncLinkeBahamutAppdatasyncappmembernamestenantidResponse());
    }

    public SyncLinkeBahamutAppdatasyncappmembernamestenantidResponse syncLinkeBahamutAppdatasyncappmembernamestenantid(SyncLinkeBahamutAppdatasyncappmembernamestenantidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.syncLinkeBahamutAppdatasyncappmembernamestenantidWithOptions(request, runtime);
    }

    public SyncLinkeBahamutAppsyncforadminResponse syncLinkeBahamutAppsyncforadminWithOptions(SyncLinkeBahamutAppsyncforadminRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SyncLinkeBahamutAppsyncforadmin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SyncLinkeBahamutAppsyncforadminResponse());
    }

    public SyncLinkeBahamutAppsyncforadminResponse syncLinkeBahamutAppsyncforadmin(SyncLinkeBahamutAppsyncforadminRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.syncLinkeBahamutAppsyncforadminWithOptions(request, runtime);
    }

    public SyncLinkeBahamutAppsynctocloudResponse syncLinkeBahamutAppsynctocloudWithOptions(SyncLinkeBahamutAppsynctocloudRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SyncLinkeBahamutAppsynctocloud", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SyncLinkeBahamutAppsynctocloudResponse());
    }

    public SyncLinkeBahamutAppsynctocloudResponse syncLinkeBahamutAppsynctocloud(SyncLinkeBahamutAppsynctocloudRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.syncLinkeBahamutAppsynctocloudWithOptions(request, runtime);
    }

    public SyncLinkeBahamutBasejarmodulesResponse syncLinkeBahamutBasejarmodulesWithOptions(SyncLinkeBahamutBasejarmodulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SyncLinkeBahamutBasejarmodules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SyncLinkeBahamutBasejarmodulesResponse());
    }

    public SyncLinkeBahamutBasejarmodulesResponse syncLinkeBahamutBasejarmodules(SyncLinkeBahamutBasejarmodulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.syncLinkeBahamutBasejarmodulesWithOptions(request, runtime);
    }

    public SyncLinkeBahamutCloudapplistsyncResponse syncLinkeBahamutCloudapplistsyncWithOptions(SyncLinkeBahamutCloudapplistsyncRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SyncLinkeBahamutCloudapplistsync", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SyncLinkeBahamutCloudapplistsyncResponse());
    }

    public SyncLinkeBahamutCloudapplistsyncResponse syncLinkeBahamutCloudapplistsync(SyncLinkeBahamutCloudapplistsyncRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.syncLinkeBahamutCloudapplistsyncWithOptions(request, runtime);
    }

    public SyncLinkeBahamutIterationsyncstagetagsResponse syncLinkeBahamutIterationsyncstagetagsWithOptions(SyncLinkeBahamutIterationsyncstagetagsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SyncLinkeBahamutIterationsyncstagetags", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SyncLinkeBahamutIterationsyncstagetagsResponse());
    }

    public SyncLinkeBahamutIterationsyncstagetagsResponse syncLinkeBahamutIterationsyncstagetags(SyncLinkeBahamutIterationsyncstagetagsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.syncLinkeBahamutIterationsyncstagetagsWithOptions(request, runtime);
    }

    public SyncLinkefabricFabricMsgcloudconfigthroughdevstageResponse syncLinkefabricFabricMsgcloudconfigthroughdevstageWithOptions(SyncLinkefabricFabricMsgcloudconfigthroughdevstageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("SyncLinkefabricFabricMsgcloudconfigthroughdevstage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new SyncLinkefabricFabricMsgcloudconfigthroughdevstageResponse());
    }

    public SyncLinkefabricFabricMsgcloudconfigthroughdevstageResponse syncLinkefabricFabricMsgcloudconfigthroughdevstage(SyncLinkefabricFabricMsgcloudconfigthroughdevstageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.syncLinkefabricFabricMsgcloudconfigthroughdevstageWithOptions(request, runtime);
    }

    public TriggerTSActivityInstanceResponse triggerTSActivityInstanceWithOptions(TriggerTSActivityInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("TriggerTSActivityInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new TriggerTSActivityInstanceResponse());
    }

    public TriggerTSActivityInstanceResponse triggerTSActivityInstance(TriggerTSActivityInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.triggerTSActivityInstanceWithOptions(request, runtime);
    }

    public TriggerTSJobResponse triggerTSJobWithOptions(TriggerTSJobRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("TriggerTSJob", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new TriggerTSJobResponse());
    }

    public TriggerTSJobResponse triggerTSJob(TriggerTSJobRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.triggerTSJobWithOptions(request, runtime);
    }

    public TriggerTSJobItemResponse triggerTSJobItemWithOptions(TriggerTSJobItemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("TriggerTSJobItem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new TriggerTSJobItemResponse());
    }

    public TriggerTSJobItemResponse triggerTSJobItem(TriggerTSJobItemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.triggerTSJobItemWithOptions(request, runtime);
    }

    public TriggerTSJobItemBetaResponse triggerTSJobItemBetaWithOptions(TriggerTSJobItemBetaRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("TriggerTSJobItemBeta", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new TriggerTSJobItemBetaResponse());
    }

    public TriggerTSJobItemBetaResponse triggerTSJobItemBeta(TriggerTSJobItemBetaRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.triggerTSJobItemBetaWithOptions(request, runtime);
    }

    public UnLockTSActivityInstanceResponse unLockTSActivityInstanceWithOptions(UnLockTSActivityInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UnLockTSActivityInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UnLockTSActivityInstanceResponse());
    }

    public UnLockTSActivityInstanceResponse unLockTSActivityInstance(UnLockTSActivityInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.unLockTSActivityInstanceWithOptions(request, runtime);
    }

    public UnmountGWApiGroupAuthUserResponse unmountGWApiGroupAuthUserWithOptions(UnmountGWApiGroupAuthUserRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UnmountGWApiGroupAuthUser", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UnmountGWApiGroupAuthUserResponse());
    }

    public UnmountGWApiGroupAuthUserResponse unmountGWApiGroupAuthUser(UnmountGWApiGroupAuthUserRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.unmountGWApiGroupAuthUserWithOptions(request, runtime);
    }

    public UpdateAKSBuildConfigResponse updateAKSBuildConfigWithOptions(UpdateAKSBuildConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateAKSBuildConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateAKSBuildConfigResponse());
    }

    public UpdateAKSBuildConfigResponse updateAKSBuildConfig(UpdateAKSBuildConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateAKSBuildConfigWithOptions(request, runtime);
    }

    public UpdateAKSClusterLogResponse updateAKSClusterLogWithOptions(UpdateAKSClusterLogRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateAKSClusterLog", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateAKSClusterLogResponse());
    }

    public UpdateAKSClusterLogResponse updateAKSClusterLog(UpdateAKSClusterLogRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateAKSClusterLogWithOptions(request, runtime);
    }

    public UpdateAKSClusterNamespaceResponse updateAKSClusterNamespaceWithOptions(UpdateAKSClusterNamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateAKSClusterNamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateAKSClusterNamespaceResponse());
    }

    public UpdateAKSClusterNamespaceResponse updateAKSClusterNamespace(UpdateAKSClusterNamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateAKSClusterNamespaceWithOptions(request, runtime);
    }

    public UpdateAKSConfigmapResponse updateAKSConfigmapWithOptions(UpdateAKSConfigmapRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateAKSConfigmap", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateAKSConfigmapResponse());
    }

    public UpdateAKSConfigmapResponse updateAKSConfigmap(UpdateAKSConfigmapRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateAKSConfigmapWithOptions(request, runtime);
    }

    public UpdateAKSKubernetesResourceResponse updateAKSKubernetesResourceWithOptions(UpdateAKSKubernetesResourceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateAKSKubernetesResource", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateAKSKubernetesResourceResponse());
    }

    public UpdateAKSKubernetesResourceResponse updateAKSKubernetesResource(UpdateAKSKubernetesResourceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateAKSKubernetesResourceWithOptions(request, runtime);
    }

    public UpdateAKSNodeDaemonSetResponse updateAKSNodeDaemonSetWithOptions(UpdateAKSNodeDaemonSetRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateAKSNodeDaemonSet", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateAKSNodeDaemonSetResponse());
    }

    public UpdateAKSNodeDaemonSetResponse updateAKSNodeDaemonSet(UpdateAKSNodeDaemonSetRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateAKSNodeDaemonSetWithOptions(request, runtime);
    }

    public UpdateAKSNodeLabelResponse updateAKSNodeLabelWithOptions(UpdateAKSNodeLabelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateAKSNodeLabel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateAKSNodeLabelResponse());
    }

    public UpdateAKSNodeLabelResponse updateAKSNodeLabel(UpdateAKSNodeLabelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateAKSNodeLabelWithOptions(request, runtime);
    }

    public UpdateAKSNodePackageResponse updateAKSNodePackageWithOptions(UpdateAKSNodePackageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateAKSNodePackage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateAKSNodePackageResponse());
    }

    public UpdateAKSNodePackageResponse updateAKSNodePackage(UpdateAKSNodePackageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateAKSNodePackageWithOptions(request, runtime);
    }

    public UpdateAKSNodeTaintResponse updateAKSNodeTaintWithOptions(UpdateAKSNodeTaintRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateAKSNodeTaint", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateAKSNodeTaintResponse());
    }

    public UpdateAKSNodeTaintResponse updateAKSNodeTaint(UpdateAKSNodeTaintRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateAKSNodeTaintWithOptions(request, runtime);
    }

    public UpdateAKSSecretResponse updateAKSSecretWithOptions(UpdateAKSSecretRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateAKSSecret", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateAKSSecretResponse());
    }

    public UpdateAKSSecretResponse updateAKSSecret(UpdateAKSSecretRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateAKSSecretWithOptions(request, runtime);
    }

    public UpdateCASApplicationResponse updateCASApplicationWithOptions(UpdateCASApplicationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateCASApplication", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateCASApplicationResponse());
    }

    public UpdateCASApplicationResponse updateCASApplication(UpdateCASApplicationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateCASApplicationWithOptions(request, runtime);
    }

    public UpdateCasDatabaseAccountResponse updateCasDatabaseAccountWithOptions(UpdateCasDatabaseAccountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateCasDatabaseAccount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateCasDatabaseAccountResponse());
    }

    public UpdateCasDatabaseAccountResponse updateCasDatabaseAccount(UpdateCasDatabaseAccountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateCasDatabaseAccountWithOptions(request, runtime);
    }

    public UpdateCasDatabaseInfoResponse updateCasDatabaseInfoWithOptions(UpdateCasDatabaseInfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateCasDatabaseInfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateCasDatabaseInfoResponse());
    }

    public UpdateCasDatabaseInfoResponse updateCasDatabaseInfo(UpdateCasDatabaseInfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateCasDatabaseInfoWithOptions(request, runtime);
    }

    public UpdateCasLoadbalanceListenerResponse updateCasLoadbalanceListenerWithOptions(UpdateCasLoadbalanceListenerRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateCasLoadbalanceListener", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateCasLoadbalanceListenerResponse());
    }

    public UpdateCasLoadbalanceListenerResponse updateCasLoadbalanceListener(UpdateCasLoadbalanceListenerRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateCasLoadbalanceListenerWithOptions(request, runtime);
    }

    public UpdateCasLoadbalanceMountResponse updateCasLoadbalanceMountWithOptions(UpdateCasLoadbalanceMountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateCasLoadbalanceMount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateCasLoadbalanceMountResponse());
    }

    public UpdateCasLoadbalanceMountResponse updateCasLoadbalanceMount(UpdateCasLoadbalanceMountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateCasLoadbalanceMountWithOptions(request, runtime);
    }

    public UpdateCASSlsConfigResponse updateCASSlsConfigWithOptions(UpdateCASSlsConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateCASSlsConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateCASSlsConfigResponse());
    }

    public UpdateCASSlsConfigResponse updateCASSlsConfig(UpdateCASSlsConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateCASSlsConfigWithOptions(request, runtime);
    }

    public UpdateClriskSceneResponse updateClriskSceneWithOptions(UpdateClriskSceneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateClriskScene", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateClriskSceneResponse());
    }

    public UpdateClriskSceneResponse updateClriskScene(UpdateClriskSceneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateClriskSceneWithOptions(request, runtime);
    }

    public UpdateDmsBindingResponse updateDmsBindingWithOptions(UpdateDmsBindingRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateDmsBinding", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateDmsBindingResponse());
    }

    public UpdateDmsBindingResponse updateDmsBinding(UpdateDmsBindingRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateDmsBindingWithOptions(request, runtime);
    }

    public UpdateDmsMsgTypeResponse updateDmsMsgTypeWithOptions(UpdateDmsMsgTypeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateDmsMsgType", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateDmsMsgTypeResponse());
    }

    public UpdateDmsMsgTypeResponse updateDmsMsgType(UpdateDmsMsgTypeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateDmsMsgTypeWithOptions(request, runtime);
    }

    public UpdateDSTBizLogConfigResponse updateDSTBizLogConfigWithOptions(UpdateDSTBizLogConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateDSTBizLogConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateDSTBizLogConfigResponse());
    }

    public UpdateDSTBizLogConfigResponse updateDSTBizLogConfig(UpdateDSTBizLogConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateDSTBizLogConfigWithOptions(request, runtime);
    }

    public UpdateDTXWhitelistResponse updateDTXWhitelistWithOptions(UpdateDTXWhitelistRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateDTXWhitelist", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateDTXWhitelistResponse());
    }

    public UpdateDTXWhitelistResponse updateDTXWhitelist(UpdateDTXWhitelistRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateDTXWhitelistWithOptions(request, runtime);
    }

    public UpdateDWSDscfgResponse updateDWSDscfgWithOptions(UpdateDWSDscfgRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateDWSDscfg", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateDWSDscfgResponse());
    }

    public UpdateDWSDscfgResponse updateDWSDscfg(UpdateDWSDscfgRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateDWSDscfgWithOptions(request, runtime);
    }

    public UpdateDWSMetadataLogictablesResponse updateDWSMetadataLogictablesWithOptions(UpdateDWSMetadataLogictablesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateDWSMetadataLogictables", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateDWSMetadataLogictablesResponse());
    }

    public UpdateDWSMetadataLogictablesResponse updateDWSMetadataLogictables(UpdateDWSMetadataLogictablesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateDWSMetadataLogictablesWithOptions(request, runtime);
    }

    public UpdateDWSTaskResponse updateDWSTaskWithOptions(UpdateDWSTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateDWSTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateDWSTaskResponse());
    }

    public UpdateDWSTaskResponse updateDWSTask(UpdateDWSTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateDWSTaskWithOptions(request, runtime);
    }

    public UpdateDWSUsersResponse updateDWSUsersWithOptions(UpdateDWSUsersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateDWSUsers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateDWSUsersResponse());
    }

    public UpdateDWSUsersResponse updateDWSUsers(UpdateDWSUsersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateDWSUsersWithOptions(request, runtime);
    }

    public UpdateGWApiGroupAuthUserConfigResponse updateGWApiGroupAuthUserConfigWithOptions(UpdateGWApiGroupAuthUserConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateGWApiGroupAuthUserConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateGWApiGroupAuthUserConfigResponse());
    }

    public UpdateGWApiGroupAuthUserConfigResponse updateGWApiGroupAuthUserConfig(UpdateGWApiGroupAuthUserConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateGWApiGroupAuthUserConfigWithOptions(request, runtime);
    }

    public UpdateGWAppResponse updateGWAppWithOptions(UpdateGWAppRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateGWApp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateGWAppResponse());
    }

    public UpdateGWAppResponse updateGWApp(UpdateGWAppRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateGWAppWithOptions(request, runtime);
    }

    public UpdateGWAppAuthApiResponse updateGWAppAuthApiWithOptions(UpdateGWAppAuthApiRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateGWAppAuthApi", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateGWAppAuthApiResponse());
    }

    public UpdateGWAppAuthApiResponse updateGWAppAuthApi(UpdateGWAppAuthApiRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateGWAppAuthApiWithOptions(request, runtime);
    }

    public UpdateHasAdminConfigResponse updateHasAdminConfigWithOptions(UpdateHasAdminConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasAdminConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasAdminConfigResponse());
    }

    public UpdateHasAdminConfigResponse updateHasAdminConfig(UpdateHasAdminConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasAdminConfigWithOptions(request, runtime);
    }

    public UpdateHasAdminSshResponse updateHasAdminSshWithOptions(UpdateHasAdminSshRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasAdminSsh", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasAdminSshResponse());
    }

    public UpdateHasAdminSshResponse updateHasAdminSsh(UpdateHasAdminSshRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasAdminSshWithOptions(request, runtime);
    }

    public UpdateHasBaselineNwapprovalprocessResponse updateHasBaselineNwapprovalprocessWithOptions(UpdateHasBaselineNwapprovalprocessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasBaselineNwapprovalprocess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasBaselineNwapprovalprocessResponse());
    }

    public UpdateHasBaselineNwapprovalprocessResponse updateHasBaselineNwapprovalprocess(UpdateHasBaselineNwapprovalprocessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasBaselineNwapprovalprocessWithOptions(request, runtime);
    }

    public UpdateHasCloudarchCellResponse updateHasCloudarchCellWithOptions(UpdateHasCloudarchCellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasCloudarchCell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasCloudarchCellResponse());
    }

    public UpdateHasCloudarchCellResponse updateHasCloudarchCell(UpdateHasCloudarchCellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasCloudarchCellWithOptions(request, runtime);
    }

    public UpdateHasCloudarchCellgroupResponse updateHasCloudarchCellgroupWithOptions(UpdateHasCloudarchCellgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasCloudarchCellgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasCloudarchCellgroupResponse());
    }

    public UpdateHasCloudarchCellgroupResponse updateHasCloudarchCellgroup(UpdateHasCloudarchCellgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasCloudarchCellgroupWithOptions(request, runtime);
    }

    public UpdateHasCloudarchIaasakemetadataResponse updateHasCloudarchIaasakemetadataWithOptions(UpdateHasCloudarchIaasakemetadataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasCloudarchIaasakemetadata", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasCloudarchIaasakemetadataResponse());
    }

    public UpdateHasCloudarchIaasakemetadataResponse updateHasCloudarchIaasakemetadata(UpdateHasCloudarchIaasakemetadataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasCloudarchIaasakemetadataWithOptions(request, runtime);
    }

    public UpdateHasCloudarchIaasmetadataResponse updateHasCloudarchIaasmetadataWithOptions(UpdateHasCloudarchIaasmetadataRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasCloudarchIaasmetadata", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasCloudarchIaasmetadataResponse());
    }

    public UpdateHasCloudarchIaasmetadataResponse updateHasCloudarchIaasmetadata(UpdateHasCloudarchIaasmetadataRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasCloudarchIaasmetadataWithOptions(request, runtime);
    }

    public UpdateHasCloudarchRegionResponse updateHasCloudarchRegionWithOptions(UpdateHasCloudarchRegionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasCloudarchRegion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasCloudarchRegionResponse());
    }

    public UpdateHasCloudarchRegionResponse updateHasCloudarchRegion(UpdateHasCloudarchRegionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasCloudarchRegionWithOptions(request, runtime);
    }

    public UpdateHasCloudarchWorkspaceResponse updateHasCloudarchWorkspaceWithOptions(UpdateHasCloudarchWorkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasCloudarchWorkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasCloudarchWorkspaceResponse());
    }

    public UpdateHasCloudarchWorkspaceResponse updateHasCloudarchWorkspace(UpdateHasCloudarchWorkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasCloudarchWorkspaceWithOptions(request, runtime);
    }

    public UpdateHasCloudarchWorkspacegroupResponse updateHasCloudarchWorkspacegroupWithOptions(UpdateHasCloudarchWorkspacegroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasCloudarchWorkspacegroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasCloudarchWorkspacegroupResponse());
    }

    public UpdateHasCloudarchWorkspacegroupResponse updateHasCloudarchWorkspacegroup(UpdateHasCloudarchWorkspacegroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasCloudarchWorkspacegroupWithOptions(request, runtime);
    }

    public UpdateHasCloudarchZoneResponse updateHasCloudarchZoneWithOptions(UpdateHasCloudarchZoneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasCloudarchZone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasCloudarchZoneResponse());
    }

    public UpdateHasCloudarchZoneResponse updateHasCloudarchZone(UpdateHasCloudarchZoneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasCloudarchZoneWithOptions(request, runtime);
    }

    public UpdateHasConfigSwitchResponse updateHasConfigSwitchWithOptions(UpdateHasConfigSwitchRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasConfigSwitch", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasConfigSwitchResponse());
    }

    public UpdateHasConfigSwitchResponse updateHasConfigSwitch(UpdateHasConfigSwitchRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasConfigSwitchWithOptions(request, runtime);
    }

    public UpdateHasCongfigSidemenuResponse updateHasCongfigSidemenuWithOptions(UpdateHasCongfigSidemenuRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasCongfigSidemenu", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasCongfigSidemenuResponse());
    }

    public UpdateHasCongfigSidemenuResponse updateHasCongfigSidemenu(UpdateHasCongfigSidemenuRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasCongfigSidemenuWithOptions(request, runtime);
    }

    public UpdateHasDiagnosisGraphnodeResponse updateHasDiagnosisGraphnodeWithOptions(UpdateHasDiagnosisGraphnodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasDiagnosisGraphnode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasDiagnosisGraphnodeResponse());
    }

    public UpdateHasDiagnosisGraphnodeResponse updateHasDiagnosisGraphnode(UpdateHasDiagnosisGraphnodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasDiagnosisGraphnodeWithOptions(request, runtime);
    }

    public UpdateHasDiagnosisNodeResponse updateHasDiagnosisNodeWithOptions(UpdateHasDiagnosisNodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasDiagnosisNode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasDiagnosisNodeResponse());
    }

    public UpdateHasDiagnosisNodeResponse updateHasDiagnosisNode(UpdateHasDiagnosisNodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasDiagnosisNodeWithOptions(request, runtime);
    }

    public UpdateHasDiagnosisPlanResponse updateHasDiagnosisPlanWithOptions(UpdateHasDiagnosisPlanRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasDiagnosisPlan", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasDiagnosisPlanResponse());
    }

    public UpdateHasDiagnosisPlanResponse updateHasDiagnosisPlan(UpdateHasDiagnosisPlanRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasDiagnosisPlanWithOptions(request, runtime);
    }

    public UpdateHasDiagnosisRuleResponse updateHasDiagnosisRuleWithOptions(UpdateHasDiagnosisRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasDiagnosisRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasDiagnosisRuleResponse());
    }

    public UpdateHasDiagnosisRuleResponse updateHasDiagnosisRule(UpdateHasDiagnosisRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasDiagnosisRuleWithOptions(request, runtime);
    }

    public UpdateHasDiagnosisRuleargofnodeResponse updateHasDiagnosisRuleargofnodeWithOptions(UpdateHasDiagnosisRuleargofnodeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasDiagnosisRuleargofnode", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasDiagnosisRuleargofnodeResponse());
    }

    public UpdateHasDiagnosisRuleargofnodeResponse updateHasDiagnosisRuleargofnode(UpdateHasDiagnosisRuleargofnodeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasDiagnosisRuleargofnodeWithOptions(request, runtime);
    }

    public UpdateHasDingtalkRobotResponse updateHasDingtalkRobotWithOptions(UpdateHasDingtalkRobotRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasDingtalkRobot", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasDingtalkRobotResponse());
    }

    public UpdateHasDingtalkRobotResponse updateHasDingtalkRobot(UpdateHasDingtalkRobotRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasDingtalkRobotWithOptions(request, runtime);
    }

    public UpdateHasDingtalkRobotupdateauthResponse updateHasDingtalkRobotupdateauthWithOptions(UpdateHasDingtalkRobotupdateauthRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasDingtalkRobotupdateauth", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasDingtalkRobotupdateauthResponse());
    }

    public UpdateHasDingtalkRobotupdateauthResponse updateHasDingtalkRobotupdateauth(UpdateHasDingtalkRobotupdateauthRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasDingtalkRobotupdateauthWithOptions(request, runtime);
    }

    public UpdateHasInspectMissionResponse updateHasInspectMissionWithOptions(UpdateHasInspectMissionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasInspectMission", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasInspectMissionResponse());
    }

    public UpdateHasInspectMissionResponse updateHasInspectMission(UpdateHasInspectMissionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasInspectMissionWithOptions(request, runtime);
    }

    public UpdateHasInspectMissionscheduleResponse updateHasInspectMissionscheduleWithOptions(UpdateHasInspectMissionscheduleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasInspectMissionschedule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasInspectMissionscheduleResponse());
    }

    public UpdateHasInspectMissionscheduleResponse updateHasInspectMissionschedule(UpdateHasInspectMissionscheduleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasInspectMissionscheduleWithOptions(request, runtime);
    }

    public UpdateHasInspectParamResponse updateHasInspectParamWithOptions(UpdateHasInspectParamRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasInspectParam", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasInspectParamResponse());
    }

    public UpdateHasInspectParamResponse updateHasInspectParam(UpdateHasInspectParamRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasInspectParamWithOptions(request, runtime);
    }

    public UpdateHasInspectPluginResponse updateHasInspectPluginWithOptions(UpdateHasInspectPluginRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasInspectPlugin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasInspectPluginResponse());
    }

    public UpdateHasInspectPluginResponse updateHasInspectPlugin(UpdateHasInspectPluginRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasInspectPluginWithOptions(request, runtime);
    }

    public UpdateHasInspectRuleResponse updateHasInspectRuleWithOptions(UpdateHasInspectRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasInspectRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasInspectRuleResponse());
    }

    public UpdateHasInspectRuleResponse updateHasInspectRule(UpdateHasInspectRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasInspectRuleWithOptions(request, runtime);
    }

    public UpdateHasInspectRuleargofmissionResponse updateHasInspectRuleargofmissionWithOptions(UpdateHasInspectRuleargofmissionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasInspectRuleargofmission", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasInspectRuleargofmissionResponse());
    }

    public UpdateHasInspectRuleargofmissionResponse updateHasInspectRuleargofmission(UpdateHasInspectRuleargofmissionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasInspectRuleargofmissionWithOptions(request, runtime);
    }

    public UpdateHasRiskAggregationoffResponse updateHasRiskAggregationoffWithOptions(UpdateHasRiskAggregationoffRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasRiskAggregationoff", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasRiskAggregationoffResponse());
    }

    public UpdateHasRiskAggregationoffResponse updateHasRiskAggregationoff(UpdateHasRiskAggregationoffRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasRiskAggregationoffWithOptions(request, runtime);
    }

    public UpdateHasRiskAggregationprocessResponse updateHasRiskAggregationprocessWithOptions(UpdateHasRiskAggregationprocessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasRiskAggregationprocess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasRiskAggregationprocessResponse());
    }

    public UpdateHasRiskAggregationprocessResponse updateHasRiskAggregationprocess(UpdateHasRiskAggregationprocessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasRiskAggregationprocessWithOptions(request, runtime);
    }

    public UpdateHasRiskAggregationresolveResponse updateHasRiskAggregationresolveWithOptions(UpdateHasRiskAggregationresolveRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasRiskAggregationresolve", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasRiskAggregationresolveResponse());
    }

    public UpdateHasRiskAggregationresolveResponse updateHasRiskAggregationresolve(UpdateHasRiskAggregationresolveRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasRiskAggregationresolveWithOptions(request, runtime);
    }

    public UpdateHasRisksceneResponse updateHasRisksceneWithOptions(UpdateHasRisksceneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateHasRiskscene", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateHasRisksceneResponse());
    }

    public UpdateHasRisksceneResponse updateHasRiskscene(UpdateHasRisksceneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateHasRisksceneWithOptions(request, runtime);
    }

    public UpdateLDCCellResponse updateLDCCellWithOptions(UpdateLDCCellRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCCell", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCCellResponse());
    }

    public UpdateLDCCellResponse updateLDCCell(UpdateLDCCellRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCCellWithOptions(request, runtime);
    }

    public UpdateLDCCellgroupDisasterinfoResponse updateLDCCellgroupDisasterinfoWithOptions(UpdateLDCCellgroupDisasterinfoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCCellgroupDisasterinfo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCCellgroupDisasterinfoResponse());
    }

    public UpdateLDCCellgroupDisasterinfoResponse updateLDCCellgroupDisasterinfo(UpdateLDCCellgroupDisasterinfoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCCellgroupDisasterinfoWithOptions(request, runtime);
    }

    public UpdateLDCContainerserviceCommentResponse updateLDCContainerserviceCommentWithOptions(UpdateLDCContainerserviceCommentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCContainerserviceComment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCContainerserviceCommentResponse());
    }

    public UpdateLDCContainerserviceCommentResponse updateLDCContainerserviceComment(UpdateLDCContainerserviceCommentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCContainerserviceCommentWithOptions(request, runtime);
    }

    public UpdateLDCContainerServiceImageResponse updateLDCContainerServiceImageWithOptions(UpdateLDCContainerServiceImageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCContainerServiceImage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCContainerServiceImageResponse());
    }

    public UpdateLDCContainerServiceImageResponse updateLDCContainerServiceImage(UpdateLDCContainerServiceImageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCContainerServiceImageWithOptions(request, runtime);
    }

    public UpdateLDCContainerServiceReplicasResponse updateLDCContainerServiceReplicasWithOptions(UpdateLDCContainerServiceReplicasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCContainerServiceReplicas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCContainerServiceReplicasResponse());
    }

    public UpdateLDCContainerServiceReplicasResponse updateLDCContainerServiceReplicas(UpdateLDCContainerServiceReplicasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCContainerServiceReplicasWithOptions(request, runtime);
    }

    public UpdateLDCFederationConfigmapResponse updateLDCFederationConfigmapWithOptions(UpdateLDCFederationConfigmapRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCFederationConfigmap", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCFederationConfigmapResponse());
    }

    public UpdateLDCFederationConfigmapResponse updateLDCFederationConfigmap(UpdateLDCFederationConfigmapRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCFederationConfigmapWithOptions(request, runtime);
    }

    public UpdateLDCFederationNamespaceResponse updateLDCFederationNamespaceWithOptions(UpdateLDCFederationNamespaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCFederationNamespace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCFederationNamespaceResponse());
    }

    public UpdateLDCFederationNamespaceResponse updateLDCFederationNamespace(UpdateLDCFederationNamespaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCFederationNamespaceWithOptions(request, runtime);
    }

    public UpdateLDCFederationSecretResponse updateLDCFederationSecretWithOptions(UpdateLDCFederationSecretRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCFederationSecret", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCFederationSecretResponse());
    }

    public UpdateLDCFederationSecretResponse updateLDCFederationSecret(UpdateLDCFederationSecretRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCFederationSecretWithOptions(request, runtime);
    }

    public UpdateLDCFederationSpannerClusterResponse updateLDCFederationSpannerClusterWithOptions(UpdateLDCFederationSpannerClusterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCFederationSpannerCluster", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCFederationSpannerClusterResponse());
    }

    public UpdateLDCFederationSpannerClusterResponse updateLDCFederationSpannerCluster(UpdateLDCFederationSpannerClusterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCFederationSpannerClusterWithOptions(request, runtime);
    }

    public UpdateLDCFederationSpannerClusterStatusResponse updateLDCFederationSpannerClusterStatusWithOptions(UpdateLDCFederationSpannerClusterStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCFederationSpannerClusterStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCFederationSpannerClusterStatusResponse());
    }

    public UpdateLDCFederationSpannerClusterStatusResponse updateLDCFederationSpannerClusterStatus(UpdateLDCFederationSpannerClusterStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCFederationSpannerClusterStatusWithOptions(request, runtime);
    }

    public UpdateLDCFlowCellWeightResponse updateLDCFlowCellWeightWithOptions(UpdateLDCFlowCellWeightRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCFlowCellWeight", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCFlowCellWeightResponse());
    }

    public UpdateLDCFlowCellWeightResponse updateLDCFlowCellWeight(UpdateLDCFlowCellWeightRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCFlowCellWeightWithOptions(request, runtime);
    }

    public UpdateLDCFlowSiteResponse updateLDCFlowSiteWithOptions(UpdateLDCFlowSiteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCFlowSite", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCFlowSiteResponse());
    }

    public UpdateLDCFlowSiteResponse updateLDCFlowSite(UpdateLDCFlowSiteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCFlowSiteWithOptions(request, runtime);
    }

    public UpdateLDCFlowUidRangeResponse updateLDCFlowUidRangeWithOptions(UpdateLDCFlowUidRangeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCFlowUidRange", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCFlowUidRangeResponse());
    }

    public UpdateLDCFlowUidRangeResponse updateLDCFlowUidRange(UpdateLDCFlowUidRangeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCFlowUidRangeWithOptions(request, runtime);
    }

    public UpdateLDCUnifiedAccessInstanceResponse updateLDCUnifiedAccessInstanceWithOptions(UpdateLDCUnifiedAccessInstanceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLDCUnifiedAccessInstance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLDCUnifiedAccessInstanceResponse());
    }

    public UpdateLDCUnifiedAccessInstanceResponse updateLDCUnifiedAccessInstance(UpdateLDCUnifiedAccessInstanceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLDCUnifiedAccessInstanceWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeApiupdateexistingfileinrepositoryResponse updateLinkeantcodeAntcodeApiupdateexistingfileinrepositoryWithOptions(UpdateLinkeantcodeAntcodeApiupdateexistingfileinrepositoryRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeApiupdateexistingfileinrepository", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeApiupdateexistingfileinrepositoryResponse());
    }

    public UpdateLinkeantcodeAntcodeApiupdateexistingfileinrepositoryResponse updateLinkeantcodeAntcodeApiupdateexistingfileinrepository(UpdateLinkeantcodeAntcodeApiupdateexistingfileinrepositoryRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeApiupdateexistingfileinrepositoryWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeApiupdateprojectpullrequestnoteResponse updateLinkeantcodeAntcodeApiupdateprojectpullrequestnoteWithOptions(UpdateLinkeantcodeAntcodeApiupdateprojectpullrequestnoteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeApiupdateprojectpullrequestnote", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeApiupdateprojectpullrequestnoteResponse());
    }

    public UpdateLinkeantcodeAntcodeApiupdateprojectpullrequestnoteResponse updateLinkeantcodeAntcodeApiupdateprojectpullrequestnote(UpdateLinkeantcodeAntcodeApiupdateprojectpullrequestnoteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeApiupdateprojectpullrequestnoteWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeCurrenttenantResponse updateLinkeantcodeAntcodeCurrenttenantWithOptions(UpdateLinkeantcodeAntcodeCurrenttenantRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeCurrenttenant", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeCurrenttenantResponse());
    }

    public UpdateLinkeantcodeAntcodeCurrenttenantResponse updateLinkeantcodeAntcodeCurrenttenant(UpdateLinkeantcodeAntcodeCurrenttenantRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeCurrenttenantWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeGroupsidservicesserviceidResponse updateLinkeantcodeAntcodeGroupsidservicesserviceidWithOptions(UpdateLinkeantcodeAntcodeGroupsidservicesserviceidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeGroupsidservicesserviceid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeGroupsidservicesserviceidResponse());
    }

    public UpdateLinkeantcodeAntcodeGroupsidservicesserviceidResponse updateLinkeantcodeAntcodeGroupsidservicesserviceid(UpdateLinkeantcodeAntcodeGroupsidservicesserviceidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeGroupsidservicesserviceidWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeGroupslabelResponse updateLinkeantcodeAntcodeGroupslabelWithOptions(UpdateLinkeantcodeAntcodeGroupslabelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeGroupslabel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeGroupslabelResponse());
    }

    public UpdateLinkeantcodeAntcodeGroupslabelResponse updateLinkeantcodeAntcodeGroupslabel(UpdateLinkeantcodeAntcodeGroupslabelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeGroupslabelWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeIssueResponse updateLinkeantcodeAntcodeIssueWithOptions(UpdateLinkeantcodeAntcodeIssueRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeIssue", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeIssueResponse());
    }

    public UpdateLinkeantcodeAntcodeIssueResponse updateLinkeantcodeAntcodeIssue(UpdateLinkeantcodeAntcodeIssueRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeIssueWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeNamespacememberResponse updateLinkeantcodeAntcodeNamespacememberWithOptions(UpdateLinkeantcodeAntcodeNamespacememberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeNamespacemember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeNamespacememberResponse());
    }

    public UpdateLinkeantcodeAntcodeNamespacememberResponse updateLinkeantcodeAntcodeNamespacemember(UpdateLinkeantcodeAntcodeNamespacememberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeNamespacememberWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeNamespacesidservicesResponse updateLinkeantcodeAntcodeNamespacesidservicesWithOptions(UpdateLinkeantcodeAntcodeNamespacesidservicesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeNamespacesidservices", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeNamespacesidservicesResponse());
    }

    public UpdateLinkeantcodeAntcodeNamespacesidservicesResponse updateLinkeantcodeAntcodeNamespacesidservices(UpdateLinkeantcodeAntcodeNamespacesidservicesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeNamespacesidservicesWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeProjectexistinglabelResponse updateLinkeantcodeAntcodeProjectexistinglabelWithOptions(UpdateLinkeantcodeAntcodeProjectexistinglabelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeProjectexistinglabel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeProjectexistinglabelResponse());
    }

    public UpdateLinkeantcodeAntcodeProjectexistinglabelResponse updateLinkeantcodeAntcodeProjectexistinglabel(UpdateLinkeantcodeAntcodeProjectexistinglabelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeProjectexistinglabelWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeProjectpullrequestconfigResponse updateLinkeantcodeAntcodeProjectpullrequestconfigWithOptions(UpdateLinkeantcodeAntcodeProjectpullrequestconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeProjectpullrequestconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeProjectpullrequestconfigResponse());
    }

    public UpdateLinkeantcodeAntcodeProjectpullrequestconfigResponse updateLinkeantcodeAntcodeProjectpullrequestconfig(UpdateLinkeantcodeAntcodeProjectpullrequestconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeProjectpullrequestconfigWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeProjectreviewconfigResponse updateLinkeantcodeAntcodeProjectreviewconfigWithOptions(UpdateLinkeantcodeAntcodeProjectreviewconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeProjectreviewconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeProjectreviewconfigResponse());
    }

    public UpdateLinkeantcodeAntcodeProjectreviewconfigResponse updateLinkeantcodeAntcodeProjectreviewconfig(UpdateLinkeantcodeAntcodeProjectreviewconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeProjectreviewconfigWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeProjectreviewmemberResponse updateLinkeantcodeAntcodeProjectreviewmemberWithOptions(UpdateLinkeantcodeAntcodeProjectreviewmemberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeProjectreviewmember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeProjectreviewmemberResponse());
    }

    public UpdateLinkeantcodeAntcodeProjectreviewmemberResponse updateLinkeantcodeAntcodeProjectreviewmember(UpdateLinkeantcodeAntcodeProjectreviewmemberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeProjectreviewmemberWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeProjectreviewtaskResponse updateLinkeantcodeAntcodeProjectreviewtaskWithOptions(UpdateLinkeantcodeAntcodeProjectreviewtaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeProjectreviewtask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeProjectreviewtaskResponse());
    }

    public UpdateLinkeantcodeAntcodeProjectreviewtaskResponse updateLinkeantcodeAntcodeProjectreviewtask(UpdateLinkeantcodeAntcodeProjectreviewtaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeProjectreviewtaskWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeProjectsprojectidartifactsmanagementidResponse updateLinkeantcodeAntcodeProjectsprojectidartifactsmanagementidWithOptions(UpdateLinkeantcodeAntcodeProjectsprojectidartifactsmanagementidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeProjectsprojectidartifactsmanagementid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeProjectsprojectidartifactsmanagementidResponse());
    }

    public UpdateLinkeantcodeAntcodeProjectsprojectidartifactsmanagementidResponse updateLinkeantcodeAntcodeProjectsprojectidartifactsmanagementid(UpdateLinkeantcodeAntcodeProjectsprojectidartifactsmanagementidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeProjectsprojectidartifactsmanagementidWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeProjectsprojectidcheckrunssuitessuiteidResponse updateLinkeantcodeAntcodeProjectsprojectidcheckrunssuitessuiteidWithOptions(UpdateLinkeantcodeAntcodeProjectsprojectidcheckrunssuitessuiteidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeProjectsprojectidcheckrunssuitessuiteid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeProjectsprojectidcheckrunssuitessuiteidResponse());
    }

    public UpdateLinkeantcodeAntcodeProjectsprojectidcheckrunssuitessuiteidResponse updateLinkeantcodeAntcodeProjectsprojectidcheckrunssuitessuiteid(UpdateLinkeantcodeAntcodeProjectsprojectidcheckrunssuitessuiteidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeProjectsprojectidcheckrunssuitessuiteidWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeRecoverytaskResponse updateLinkeantcodeAntcodeRecoverytaskWithOptions(UpdateLinkeantcodeAntcodeRecoverytaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeRecoverytask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeRecoverytaskResponse());
    }

    public UpdateLinkeantcodeAntcodeRecoverytaskResponse updateLinkeantcodeAntcodeRecoverytask(UpdateLinkeantcodeAntcodeRecoverytaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeRecoverytaskWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeSnippetsidResponse updateLinkeantcodeAntcodeSnippetsidWithOptions(UpdateLinkeantcodeAntcodeSnippetsidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeSnippetsid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeSnippetsidResponse());
    }

    public UpdateLinkeantcodeAntcodeSnippetsidResponse updateLinkeantcodeAntcodeSnippetsid(UpdateLinkeantcodeAntcodeSnippetsidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeSnippetsidWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeTenantapplicationsettingsvisibilityaccessResponse updateLinkeantcodeAntcodeTenantapplicationsettingsvisibilityaccessWithOptions(UpdateLinkeantcodeAntcodeTenantapplicationsettingsvisibilityaccessRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeTenantapplicationsettingsvisibilityaccess", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeTenantapplicationsettingsvisibilityaccessResponse());
    }

    public UpdateLinkeantcodeAntcodeTenantapplicationsettingsvisibilityaccessResponse updateLinkeantcodeAntcodeTenantapplicationsettingsvisibilityaccess(UpdateLinkeantcodeAntcodeTenantapplicationsettingsvisibilityaccessRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeTenantapplicationsettingsvisibilityaccessWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeTenantlabelsupdateResponse updateLinkeantcodeAntcodeTenantlabelsupdateWithOptions(UpdateLinkeantcodeAntcodeTenantlabelsupdateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeTenantlabelsupdate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeTenantlabelsupdateResponse());
    }

    public UpdateLinkeantcodeAntcodeTenantlabelsupdateResponse updateLinkeantcodeAntcodeTenantlabelsupdate(UpdateLinkeantcodeAntcodeTenantlabelsupdateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeTenantlabelsupdateWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeTenantmembersuseridResponse updateLinkeantcodeAntcodeTenantmembersuseridWithOptions(UpdateLinkeantcodeAntcodeTenantmembersuseridRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeTenantmembersuserid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeTenantmembersuseridResponse());
    }

    public UpdateLinkeantcodeAntcodeTenantmembersuseridResponse updateLinkeantcodeAntcodeTenantmembersuserid(UpdateLinkeantcodeAntcodeTenantmembersuseridRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeTenantmembersuseridWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeTenantpusheventsrecoveriesResponse updateLinkeantcodeAntcodeTenantpusheventsrecoveriesWithOptions(UpdateLinkeantcodeAntcodeTenantpusheventsrecoveriesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeTenantpusheventsrecoveries", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeTenantpusheventsrecoveriesResponse());
    }

    public UpdateLinkeantcodeAntcodeTenantpusheventsrecoveriesResponse updateLinkeantcodeAntcodeTenantpusheventsrecoveries(UpdateLinkeantcodeAntcodeTenantpusheventsrecoveriesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeTenantpusheventsrecoveriesWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeTenantserviceResponse updateLinkeantcodeAntcodeTenantserviceWithOptions(UpdateLinkeantcodeAntcodeTenantserviceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeTenantservice", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeTenantserviceResponse());
    }

    public UpdateLinkeantcodeAntcodeTenantserviceResponse updateLinkeantcodeAntcodeTenantservice(UpdateLinkeantcodeAntcodeTenantserviceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeTenantserviceWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUpdatecommitnoteResponse updateLinkeantcodeAntcodeUpdatecommitnoteWithOptions(UpdateLinkeantcodeAntcodeUpdatecommitnoteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUpdatecommitnote", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUpdatecommitnoteResponse());
    }

    public UpdateLinkeantcodeAntcodeUpdatecommitnoteResponse updateLinkeantcodeAntcodeUpdatecommitnote(UpdateLinkeantcodeAntcodeUpdatecommitnoteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUpdatecommitnoteWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUpdatehookResponse updateLinkeantcodeAntcodeUpdatehookWithOptions(UpdateLinkeantcodeAntcodeUpdatehookRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUpdatehook", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUpdatehookResponse());
    }

    public UpdateLinkeantcodeAntcodeUpdatehookResponse updateLinkeantcodeAntcodeUpdatehook(UpdateLinkeantcodeAntcodeUpdatehookRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUpdatehookWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUpdatenamespacememberResponse updateLinkeantcodeAntcodeUpdatenamespacememberWithOptions(UpdateLinkeantcodeAntcodeUpdatenamespacememberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUpdatenamespacemember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUpdatenamespacememberResponse());
    }

    public UpdateLinkeantcodeAntcodeUpdatenamespacememberResponse updateLinkeantcodeAntcodeUpdatenamespacemember(UpdateLinkeantcodeAntcodeUpdatenamespacememberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUpdatenamespacememberWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUpdatepipelinetimingconfigResponse updateLinkeantcodeAntcodeUpdatepipelinetimingconfigWithOptions(UpdateLinkeantcodeAntcodeUpdatepipelinetimingconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUpdatepipelinetimingconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUpdatepipelinetimingconfigResponse());
    }

    public UpdateLinkeantcodeAntcodeUpdatepipelinetimingconfigResponse updateLinkeantcodeAntcodeUpdatepipelinetimingconfig(UpdateLinkeantcodeAntcodeUpdatepipelinetimingconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUpdatepipelinetimingconfigWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUpdateprojectmemberResponse updateLinkeantcodeAntcodeUpdateprojectmemberWithOptions(UpdateLinkeantcodeAntcodeUpdateprojectmemberRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUpdateprojectmember", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUpdateprojectmemberResponse());
    }

    public UpdateLinkeantcodeAntcodeUpdateprojectmemberResponse updateLinkeantcodeAntcodeUpdateprojectmember(UpdateLinkeantcodeAntcodeUpdateprojectmemberRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUpdateprojectmemberWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUpdateprojectpullrequestResponse updateLinkeantcodeAntcodeUpdateprojectpullrequestWithOptions(UpdateLinkeantcodeAntcodeUpdateprojectpullrequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUpdateprojectpullrequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUpdateprojectpullrequestResponse());
    }

    public UpdateLinkeantcodeAntcodeUpdateprojectpullrequestResponse updateLinkeantcodeAntcodeUpdateprojectpullrequest(UpdateLinkeantcodeAntcodeUpdateprojectpullrequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUpdateprojectpullrequestWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUpdateprojectpullrequestnoteResponse updateLinkeantcodeAntcodeUpdateprojectpullrequestnoteWithOptions(UpdateLinkeantcodeAntcodeUpdateprojectpullrequestnoteRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUpdateprojectpullrequestnote", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUpdateprojectpullrequestnoteResponse());
    }

    public UpdateLinkeantcodeAntcodeUpdateprojectpullrequestnoteResponse updateLinkeantcodeAntcodeUpdateprojectpullrequestnote(UpdateLinkeantcodeAntcodeUpdateprojectpullrequestnoteRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUpdateprojectpullrequestnoteWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUpdateprojectvariableResponse updateLinkeantcodeAntcodeUpdateprojectvariableWithOptions(UpdateLinkeantcodeAntcodeUpdateprojectvariableRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUpdateprojectvariable", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUpdateprojectvariableResponse());
    }

    public UpdateLinkeantcodeAntcodeUpdateprojectvariableResponse updateLinkeantcodeAntcodeUpdateprojectvariable(UpdateLinkeantcodeAntcodeUpdateprojectvariableRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUpdateprojectvariableWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUpdateprotectrepositorybranchesResponse updateLinkeantcodeAntcodeUpdateprotectrepositorybranchesWithOptions(UpdateLinkeantcodeAntcodeUpdateprotectrepositorybranchesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUpdateprotectrepositorybranches", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUpdateprotectrepositorybranchesResponse());
    }

    public UpdateLinkeantcodeAntcodeUpdateprotectrepositorybranchesResponse updateLinkeantcodeAntcodeUpdateprotectrepositorybranches(UpdateLinkeantcodeAntcodeUpdateprotectrepositorybranchesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUpdateprotectrepositorybranchesWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUpdatesanexistinglabelResponse updateLinkeantcodeAntcodeUpdatesanexistinglabelWithOptions(UpdateLinkeantcodeAntcodeUpdatesanexistinglabelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUpdatesanexistinglabel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUpdatesanexistinglabelResponse());
    }

    public UpdateLinkeantcodeAntcodeUpdatesanexistinglabelResponse updateLinkeantcodeAntcodeUpdatesanexistinglabel(UpdateLinkeantcodeAntcodeUpdatesanexistinglabelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUpdatesanexistinglabelWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUpdatesanexistinglabelwithnewnameornowcolorResponse updateLinkeantcodeAntcodeUpdatesanexistinglabelwithnewnameornowcolorWithOptions(UpdateLinkeantcodeAntcodeUpdatesanexistinglabelwithnewnameornowcolorRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUpdatesanexistinglabelwithnewnameornowcolor", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUpdatesanexistinglabelwithnewnameornowcolorResponse());
    }

    public UpdateLinkeantcodeAntcodeUpdatesanexistinglabelwithnewnameornowcolorResponse updateLinkeantcodeAntcodeUpdatesanexistinglabelwithnewnameornowcolor(UpdateLinkeantcodeAntcodeUpdatesanexistinglabelwithnewnameornowcolorRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUpdatesanexistinglabelwithnewnameornowcolorWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUpdatethelabelResponse updateLinkeantcodeAntcodeUpdatethelabelWithOptions(UpdateLinkeantcodeAntcodeUpdatethelabelRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUpdatethelabel", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUpdatethelabelResponse());
    }

    public UpdateLinkeantcodeAntcodeUpdatethelabelResponse updateLinkeantcodeAntcodeUpdatethelabel(UpdateLinkeantcodeAntcodeUpdatethelabelRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUpdatethelabelWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUsergitauthResponse updateLinkeantcodeAntcodeUsergitauthWithOptions(UpdateLinkeantcodeAntcodeUsergitauthRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUsergitauth", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUsergitauthResponse());
    }

    public UpdateLinkeantcodeAntcodeUsergitauthResponse updateLinkeantcodeAntcodeUsergitauth(UpdateLinkeantcodeAntcodeUsergitauthRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUsergitauthWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUserlimitsettingsResponse updateLinkeantcodeAntcodeUserlimitsettingsWithOptions(UpdateLinkeantcodeAntcodeUserlimitsettingsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUserlimitsettings", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUserlimitsettingsResponse());
    }

    public UpdateLinkeantcodeAntcodeUserlimitsettingsResponse updateLinkeantcodeAntcodeUserlimitsettings(UpdateLinkeantcodeAntcodeUserlimitsettingsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUserlimitsettingsWithOptions(request, runtime);
    }

    public UpdateLinkeantcodeAntcodeUserpasswordResponse updateLinkeantcodeAntcodeUserpasswordWithOptions(UpdateLinkeantcodeAntcodeUserpasswordRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeantcodeAntcodeUserpassword", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeantcodeAntcodeUserpasswordResponse());
    }

    public UpdateLinkeantcodeAntcodeUserpasswordResponse updateLinkeantcodeAntcodeUserpassword(UpdateLinkeantcodeAntcodeUserpasswordRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeantcodeAntcodeUserpasswordWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutAdminparentmenuidupdatesecmenuResponse updateLinkeBahamutAdminparentmenuidupdatesecmenuWithOptions(UpdateLinkeBahamutAdminparentmenuidupdatesecmenuRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutAdminparentmenuidupdatesecmenu", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutAdminparentmenuidupdatesecmenuResponse());
    }

    public UpdateLinkeBahamutAdminparentmenuidupdatesecmenuResponse updateLinkeBahamutAdminparentmenuidupdatesecmenu(UpdateLinkeBahamutAdminparentmenuidupdatesecmenuRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutAdminparentmenuidupdatesecmenuWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutAdminpipelineResponse updateLinkeBahamutAdminpipelineWithOptions(UpdateLinkeBahamutAdminpipelineRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutAdminpipeline", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutAdminpipelineResponse());
    }

    public UpdateLinkeBahamutAdminpipelineResponse updateLinkeBahamutAdminpipeline(UpdateLinkeBahamutAdminpipelineRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutAdminpipelineWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutAdminpipelineexistediterationResponse updateLinkeBahamutAdminpipelineexistediterationWithOptions(UpdateLinkeBahamutAdminpipelineexistediterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutAdminpipelineexistediteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutAdminpipelineexistediterationResponse());
    }

    public UpdateLinkeBahamutAdminpipelineexistediterationResponse updateLinkeBahamutAdminpipelineexistediteration(UpdateLinkeBahamutAdminpipelineexistediterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutAdminpipelineexistediterationWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutAdminproductidupdatemenuResponse updateLinkeBahamutAdminproductidupdatemenuWithOptions(UpdateLinkeBahamutAdminproductidupdatemenuRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutAdminproductidupdatemenu", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutAdminproductidupdatemenuResponse());
    }

    public UpdateLinkeBahamutAdminproductidupdatemenuResponse updateLinkeBahamutAdminproductidupdatemenu(UpdateLinkeBahamutAdminproductidupdatemenuRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutAdminproductidupdatemenuWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutAdminsecretdicResponse updateLinkeBahamutAdminsecretdicWithOptions(UpdateLinkeBahamutAdminsecretdicRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutAdminsecretdic", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutAdminsecretdicResponse());
    }

    public UpdateLinkeBahamutAdminsecretdicResponse updateLinkeBahamutAdminsecretdic(UpdateLinkeBahamutAdminsecretdicRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutAdminsecretdicWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutAdmintenantidconfigResponse updateLinkeBahamutAdmintenantidconfigWithOptions(UpdateLinkeBahamutAdmintenantidconfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutAdmintenantidconfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutAdmintenantidconfigResponse());
    }

    public UpdateLinkeBahamutAdmintenantidconfigResponse updateLinkeBahamutAdmintenantidconfig(UpdateLinkeBahamutAdmintenantidconfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutAdmintenantidconfigWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutAdminupdatecommonuseResponse updateLinkeBahamutAdminupdatecommonuseWithOptions(UpdateLinkeBahamutAdminupdatecommonuseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutAdminupdatecommonuse", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutAdminupdatecommonuseResponse());
    }

    public UpdateLinkeBahamutAdminupdatecommonuseResponse updateLinkeBahamutAdminupdatecommonuse(UpdateLinkeBahamutAdminupdatecommonuseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutAdminupdatecommonuseWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutAdminupdatedataupdateofflineauthcontrolResponse updateLinkeBahamutAdminupdatedataupdateofflineauthcontrolWithOptions(UpdateLinkeBahamutAdminupdatedataupdateofflineauthcontrolRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutAdminupdatedataupdateofflineauthcontrol", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutAdminupdatedataupdateofflineauthcontrolResponse());
    }

    public UpdateLinkeBahamutAdminupdatedataupdateofflineauthcontrolResponse updateLinkeBahamutAdminupdatedataupdateofflineauthcontrol(UpdateLinkeBahamutAdminupdatedataupdateofflineauthcontrolRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutAdminupdatedataupdateofflineauthcontrolWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutAdminupdateproductResponse updateLinkeBahamutAdminupdateproductWithOptions(UpdateLinkeBahamutAdminupdateproductRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutAdminupdateproduct", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutAdminupdateproductResponse());
    }

    public UpdateLinkeBahamutAdminupdateproductResponse updateLinkeBahamutAdminupdateproduct(UpdateLinkeBahamutAdminupdateproductRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutAdminupdateproductWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutAdminuserroleResponse updateLinkeBahamutAdminuserroleWithOptions(UpdateLinkeBahamutAdminuserroleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutAdminuserrole", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutAdminuserroleResponse());
    }

    public UpdateLinkeBahamutAdminuserroleResponse updateLinkeBahamutAdminuserrole(UpdateLinkeBahamutAdminuserroleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutAdminuserroleWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutAoneinternalworkitemResponse updateLinkeBahamutAoneinternalworkitemWithOptions(UpdateLinkeBahamutAoneinternalworkitemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutAoneinternalworkitem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutAoneinternalworkitemResponse());
    }

    public UpdateLinkeBahamutAoneinternalworkitemResponse updateLinkeBahamutAoneinternalworkitem(UpdateLinkeBahamutAoneinternalworkitemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutAoneinternalworkitemWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutAppgroupResponse updateLinkeBahamutAppgroupWithOptions(UpdateLinkeBahamutAppgroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutAppgroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutAppgroupResponse());
    }

    public UpdateLinkeBahamutAppgroupResponse updateLinkeBahamutAppgroup(UpdateLinkeBahamutAppgroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutAppgroupWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutApprepoResponse updateLinkeBahamutApprepoWithOptions(UpdateLinkeBahamutApprepoRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutApprepo", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutApprepoResponse());
    }

    public UpdateLinkeBahamutApprepoResponse updateLinkeBahamutApprepo(UpdateLinkeBahamutApprepoRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutApprepoWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutAppupdatepullrequestsettingsResponse updateLinkeBahamutAppupdatepullrequestsettingsWithOptions(UpdateLinkeBahamutAppupdatepullrequestsettingsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutAppupdatepullrequestsettings", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutAppupdatepullrequestsettingsResponse());
    }

    public UpdateLinkeBahamutAppupdatepullrequestsettingsResponse updateLinkeBahamutAppupdatepullrequestsettings(UpdateLinkeBahamutAppupdatepullrequestsettingsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutAppupdatepullrequestsettingsWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutArchdomainResponse updateLinkeBahamutArchdomainWithOptions(UpdateLinkeBahamutArchdomainRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutArchdomain", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutArchdomainResponse());
    }

    public UpdateLinkeBahamutArchdomainResponse updateLinkeBahamutArchdomain(UpdateLinkeBahamutArchdomainRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutArchdomainWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutArchdomainsResponse updateLinkeBahamutArchdomainsWithOptions(UpdateLinkeBahamutArchdomainsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutArchdomains", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutArchdomainsResponse());
    }

    public UpdateLinkeBahamutArchdomainsResponse updateLinkeBahamutArchdomains(UpdateLinkeBahamutArchdomainsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutArchdomainsWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutCloudacheappResponse updateLinkeBahamutCloudacheappWithOptions(UpdateLinkeBahamutCloudacheappRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutCloudacheapp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutCloudacheappResponse());
    }

    public UpdateLinkeBahamutCloudacheappResponse updateLinkeBahamutCloudacheapp(UpdateLinkeBahamutCloudacheappRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutCloudacheappWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutCoverageupdatecoveragebyunitidResponse updateLinkeBahamutCoverageupdatecoveragebyunitidWithOptions(UpdateLinkeBahamutCoverageupdatecoveragebyunitidRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutCoverageupdatecoveragebyunitid", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutCoverageupdatecoveragebyunitidResponse());
    }

    public UpdateLinkeBahamutCoverageupdatecoveragebyunitidResponse updateLinkeBahamutCoverageupdatecoveragebyunitid(UpdateLinkeBahamutCoverageupdatecoveragebyunitidRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutCoverageupdatecoveragebyunitidWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutIterationnameprojectResponse updateLinkeBahamutIterationnameprojectWithOptions(UpdateLinkeBahamutIterationnameprojectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutIterationnameproject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutIterationnameprojectResponse());
    }

    public UpdateLinkeBahamutIterationnameprojectResponse updateLinkeBahamutIterationnameproject(UpdateLinkeBahamutIterationnameprojectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutIterationnameprojectWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutIterationsupdateResponse updateLinkeBahamutIterationsupdateWithOptions(UpdateLinkeBahamutIterationsupdateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutIterationsupdate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutIterationsupdateResponse());
    }

    public UpdateLinkeBahamutIterationsupdateResponse updateLinkeBahamutIterationsupdate(UpdateLinkeBahamutIterationsupdateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutIterationsupdateWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutIterationtemplateResponse updateLinkeBahamutIterationtemplateWithOptions(UpdateLinkeBahamutIterationtemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutIterationtemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutIterationtemplateResponse());
    }

    public UpdateLinkeBahamutIterationtemplateResponse updateLinkeBahamutIterationtemplate(UpdateLinkeBahamutIterationtemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutIterationtemplateWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutIterationupdateiterationworkitemsResponse updateLinkeBahamutIterationupdateiterationworkitemsWithOptions(UpdateLinkeBahamutIterationupdateiterationworkitemsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutIterationupdateiterationworkitems", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutIterationupdateiterationworkitemsResponse());
    }

    public UpdateLinkeBahamutIterationupdateiterationworkitemsResponse updateLinkeBahamutIterationupdateiterationworkitems(UpdateLinkeBahamutIterationupdateiterationworkitemsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutIterationupdateiterationworkitemsWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutIterationworkitemResponse updateLinkeBahamutIterationworkitemWithOptions(UpdateLinkeBahamutIterationworkitemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutIterationworkitem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutIterationworkitemResponse());
    }

    public UpdateLinkeBahamutIterationworkitemResponse updateLinkeBahamutIterationworkitem(UpdateLinkeBahamutIterationworkitemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutIterationworkitemWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutOpenupdateaddmetaResponse updateLinkeBahamutOpenupdateaddmetaWithOptions(UpdateLinkeBahamutOpenupdateaddmetaRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutOpenupdateaddmeta", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutOpenupdateaddmetaResponse());
    }

    public UpdateLinkeBahamutOpenupdateaddmetaResponse updateLinkeBahamutOpenupdateaddmeta(UpdateLinkeBahamutOpenupdateaddmetaRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutOpenupdateaddmetaWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutPaasupdateappsResponse updateLinkeBahamutPaasupdateappsWithOptions(UpdateLinkeBahamutPaasupdateappsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutPaasupdateapps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutPaasupdateappsResponse());
    }

    public UpdateLinkeBahamutPaasupdateappsResponse updateLinkeBahamutPaasupdateapps(UpdateLinkeBahamutPaasupdateappsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutPaasupdateappsWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutPipelinetemplateResponse updateLinkeBahamutPipelinetemplateWithOptions(UpdateLinkeBahamutPipelinetemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutPipelinetemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutPipelinetemplateResponse());
    }

    public UpdateLinkeBahamutPipelinetemplateResponse updateLinkeBahamutPipelinetemplate(UpdateLinkeBahamutPipelinetemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutPipelinetemplateWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutQualityupdatecoverageResponse updateLinkeBahamutQualityupdatecoverageWithOptions(UpdateLinkeBahamutQualityupdatecoverageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutQualityupdatecoverage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutQualityupdatecoverageResponse());
    }

    public UpdateLinkeBahamutQualityupdatecoverageResponse updateLinkeBahamutQualityupdatecoverage(UpdateLinkeBahamutQualityupdatecoverageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutQualityupdatecoverageWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutReleaseResponse updateLinkeBahamutReleaseWithOptions(UpdateLinkeBahamutReleaseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutRelease", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutReleaseResponse());
    }

    public UpdateLinkeBahamutReleaseResponse updateLinkeBahamutRelease(UpdateLinkeBahamutReleaseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutReleaseWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutReleasedependencyResponse updateLinkeBahamutReleasedependencyWithOptions(UpdateLinkeBahamutReleasedependencyRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutReleasedependency", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutReleasedependencyResponse());
    }

    public UpdateLinkeBahamutReleasedependencyResponse updateLinkeBahamutReleasedependency(UpdateLinkeBahamutReleasedependencyRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutReleasedependencyWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutReleasemanagerResponse updateLinkeBahamutReleasemanagerWithOptions(UpdateLinkeBahamutReleasemanagerRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutReleasemanager", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutReleasemanagerResponse());
    }

    public UpdateLinkeBahamutReleasemanagerResponse updateLinkeBahamutReleasemanager(UpdateLinkeBahamutReleasemanagerRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutReleasemanagerWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutTaskResponse updateLinkeBahamutTaskWithOptions(UpdateLinkeBahamutTaskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutTask", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutTaskResponse());
    }

    public UpdateLinkeBahamutTaskResponse updateLinkeBahamutTask(UpdateLinkeBahamutTaskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutTaskWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutTenanttpauthResponse updateLinkeBahamutTenanttpauthWithOptions(RuntimeOptions runtime) throws Exception {
        OpenApiRequest req = new OpenApiRequest();
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutTenanttpauth", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutTenanttpauthResponse());
    }

    public UpdateLinkeBahamutTenanttpauthResponse updateLinkeBahamutTenanttpauth() throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutTenanttpauthWithOptions(runtime);
    }

    public UpdateLinkeBahamutUpdatebasejarversionResponse updateLinkeBahamutUpdatebasejarversionWithOptions(UpdateLinkeBahamutUpdatebasejarversionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutUpdatebasejarversion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutUpdatebasejarversionResponse());
    }

    public UpdateLinkeBahamutUpdatebasejarversionResponse updateLinkeBahamutUpdatebasejarversion(UpdateLinkeBahamutUpdatebasejarversionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutUpdatebasejarversionWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutUserproductResponse updateLinkeBahamutUserproductWithOptions(UpdateLinkeBahamutUserproductRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutUserproduct", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutUserproductResponse());
    }

    public UpdateLinkeBahamutUserproductResponse updateLinkeBahamutUserproduct(UpdateLinkeBahamutUserproductRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutUserproductWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutVcscommitcommentResponse updateLinkeBahamutVcscommitcommentWithOptions(UpdateLinkeBahamutVcscommitcommentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutVcscommitcomment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutVcscommitcommentResponse());
    }

    public UpdateLinkeBahamutVcscommitcommentResponse updateLinkeBahamutVcscommitcomment(UpdateLinkeBahamutVcscommitcommentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutVcscommitcommentWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutVcsmergerequestResponse updateLinkeBahamutVcsmergerequestWithOptions(UpdateLinkeBahamutVcsmergerequestRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutVcsmergerequest", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutVcsmergerequestResponse());
    }

    public UpdateLinkeBahamutVcsmergerequestResponse updateLinkeBahamutVcsmergerequest(UpdateLinkeBahamutVcsmergerequestRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutVcsmergerequestWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutVcsmergerequestmrcommentResponse updateLinkeBahamutVcsmergerequestmrcommentWithOptions(UpdateLinkeBahamutVcsmergerequestmrcommentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutVcsmergerequestmrcomment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutVcsmergerequestmrcommentResponse());
    }

    public UpdateLinkeBahamutVcsmergerequestmrcommentResponse updateLinkeBahamutVcsmergerequestmrcomment(UpdateLinkeBahamutVcsmergerequestmrcommentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutVcsmergerequestmrcommentWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutVcsmergerequestsResponse updateLinkeBahamutVcsmergerequestsWithOptions(UpdateLinkeBahamutVcsmergerequestsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutVcsmergerequests", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutVcsmergerequestsResponse());
    }

    public UpdateLinkeBahamutVcsmergerequestsResponse updateLinkeBahamutVcsmergerequests(UpdateLinkeBahamutVcsmergerequestsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutVcsmergerequestsWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutWebapiupdatebasejarversionResponse updateLinkeBahamutWebapiupdatebasejarversionWithOptions(UpdateLinkeBahamutWebapiupdatebasejarversionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutWebapiupdatebasejarversion", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutWebapiupdatebasejarversionResponse());
    }

    public UpdateLinkeBahamutWebapiupdatebasejarversionResponse updateLinkeBahamutWebapiupdatebasejarversion(UpdateLinkeBahamutWebapiupdatebasejarversionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutWebapiupdatebasejarversionWithOptions(request, runtime);
    }

    public UpdateLinkeBahamutWebapiupdatelterationunitResponse updateLinkeBahamutWebapiupdatelterationunitWithOptions(UpdateLinkeBahamutWebapiupdatelterationunitRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeBahamutWebapiupdatelterationunit", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeBahamutWebapiupdatelterationunitResponse());
    }

    public UpdateLinkeBahamutWebapiupdatelterationunitResponse updateLinkeBahamutWebapiupdatelterationunit(UpdateLinkeBahamutWebapiupdatelterationunitRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeBahamutWebapiupdatelterationunitWithOptions(request, runtime);
    }

    public UpdateLinkedeploycoreDeploycoreDebugportResponse updateLinkedeploycoreDeploycoreDebugportWithOptions(UpdateLinkedeploycoreDeploycoreDebugportRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkedeploycoreDeploycoreDebugport", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkedeploycoreDeploycoreDebugportResponse());
    }

    public UpdateLinkedeploycoreDeploycoreDebugportResponse updateLinkedeploycoreDeploycoreDebugport(UpdateLinkedeploycoreDeploycoreDebugportRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkedeploycoreDeploycoreDebugportWithOptions(request, runtime);
    }

    public UpdateLinkedeploycoreDeploycoreLangResponse updateLinkedeploycoreDeploycoreLangWithOptions(UpdateLinkedeploycoreDeploycoreLangRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkedeploycoreDeploycoreLang", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkedeploycoreDeploycoreLangResponse());
    }

    public UpdateLinkedeploycoreDeploycoreLangResponse updateLinkedeploycoreDeploycoreLang(UpdateLinkedeploycoreDeploycoreLangRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkedeploycoreDeploycoreLangWithOptions(request, runtime);
    }

    public UpdateLinkedeploycoreDeploycoreProfileResponse updateLinkedeploycoreDeploycoreProfileWithOptions(UpdateLinkedeploycoreDeploycoreProfileRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkedeploycoreDeploycoreProfile", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkedeploycoreDeploycoreProfileResponse());
    }

    public UpdateLinkedeploycoreDeploycoreProfileResponse updateLinkedeploycoreDeploycoreProfile(UpdateLinkedeploycoreDeploycoreProfileRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkedeploycoreDeploycoreProfileWithOptions(request, runtime);
    }

    public UpdateLinkeLinklogAccountResponse updateLinkeLinklogAccountWithOptions(UpdateLinkeLinklogAccountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinklogAccount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinklogAccountResponse());
    }

    public UpdateLinkeLinklogAccountResponse updateLinkeLinklogAccount(UpdateLinkeLinklogAccountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinklogAccountWithOptions(request, runtime);
    }

    public UpdateLinkeLinklogAddconditionResponse updateLinkeLinklogAddconditionWithOptions(UpdateLinkeLinklogAddconditionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinklogAddcondition", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinklogAddconditionResponse());
    }

    public UpdateLinkeLinklogAddconditionResponse updateLinkeLinklogAddcondition(UpdateLinkeLinklogAddconditionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinklogAddconditionWithOptions(request, runtime);
    }

    public UpdateLinkeLinklogConditionResponse updateLinkeLinklogConditionWithOptions(UpdateLinkeLinklogConditionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinklogCondition", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinklogConditionResponse());
    }

    public UpdateLinkeLinklogConditionResponse updateLinkeLinklogCondition(UpdateLinkeLinklogConditionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinklogConditionWithOptions(request, runtime);
    }

    public UpdateLinkeLinklogConfigResponse updateLinkeLinklogConfigWithOptions(UpdateLinkeLinklogConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinklogConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinklogConfigResponse());
    }

    public UpdateLinkeLinklogConfigResponse updateLinkeLinklogConfig(UpdateLinkeLinklogConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinklogConfigWithOptions(request, runtime);
    }

    public UpdateLinkeLinklogKnowledgeResponse updateLinkeLinklogKnowledgeWithOptions(UpdateLinkeLinklogKnowledgeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinklogKnowledge", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinklogKnowledgeResponse());
    }

    public UpdateLinkeLinklogKnowledgeResponse updateLinkeLinklogKnowledge(UpdateLinkeLinklogKnowledgeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinklogKnowledgeWithOptions(request, runtime);
    }

    public UpdateLinkeLinklogKnowledgepriorityResponse updateLinkeLinklogKnowledgepriorityWithOptions(UpdateLinkeLinklogKnowledgepriorityRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinklogKnowledgepriority", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinklogKnowledgepriorityResponse());
    }

    public UpdateLinkeLinklogKnowledgepriorityResponse updateLinkeLinklogKnowledgepriority(UpdateLinkeLinklogKnowledgepriorityRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinklogKnowledgepriorityWithOptions(request, runtime);
    }

    public UpdateLinkeLinklogStoreResponse updateLinkeLinklogStoreWithOptions(UpdateLinkeLinklogStoreRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinklogStore", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinklogStoreResponse());
    }

    public UpdateLinkeLinklogStoreResponse updateLinkeLinklogStore(UpdateLinkeLinklogStoreRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinklogStoreWithOptions(request, runtime);
    }

    public UpdateLinkeLinktAdmincustomfieldResponse updateLinkeLinktAdmincustomfieldWithOptions(UpdateLinkeLinktAdmincustomfieldRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktAdmincustomfield", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktAdmincustomfieldResponse());
    }

    public UpdateLinkeLinktAdmincustomfieldResponse updateLinkeLinktAdmincustomfield(UpdateLinkeLinktAdmincustomfieldRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktAdmincustomfieldWithOptions(request, runtime);
    }

    public UpdateLinkeLinktAdmintemplateResponse updateLinkeLinktAdmintemplateWithOptions(UpdateLinkeLinktAdmintemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktAdmintemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktAdmintemplateResponse());
    }

    public UpdateLinkeLinktAdmintemplateResponse updateLinkeLinktAdmintemplate(UpdateLinkeLinktAdmintemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktAdmintemplateWithOptions(request, runtime);
    }

    public UpdateLinkeLinktCustomfieldResponse updateLinkeLinktCustomfieldWithOptions(UpdateLinkeLinktCustomfieldRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktCustomfield", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktCustomfieldResponse());
    }

    public UpdateLinkeLinktCustomfieldResponse updateLinkeLinktCustomfield(UpdateLinkeLinktCustomfieldRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktCustomfieldWithOptions(request, runtime);
    }

    public UpdateLinkeLinktIterationResponse updateLinkeLinktIterationWithOptions(UpdateLinkeLinktIterationRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktIteration", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktIterationResponse());
    }

    public UpdateLinkeLinktIterationResponse updateLinkeLinktIteration(UpdateLinkeLinktIterationRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktIterationWithOptions(request, runtime);
    }

    public UpdateLinkeLinktIterationmeetingResponse updateLinkeLinktIterationmeetingWithOptions(UpdateLinkeLinktIterationmeetingRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktIterationmeeting", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktIterationmeetingResponse());
    }

    public UpdateLinkeLinktIterationmeetingResponse updateLinkeLinktIterationmeeting(UpdateLinkeLinktIterationmeetingRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktIterationmeetingWithOptions(request, runtime);
    }

    public UpdateLinkeLinktMilestoneResponse updateLinkeLinktMilestoneWithOptions(UpdateLinkeLinktMilestoneRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktMilestone", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktMilestoneResponse());
    }

    public UpdateLinkeLinktMilestoneResponse updateLinkeLinktMilestone(UpdateLinkeLinktMilestoneRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktMilestoneWithOptions(request, runtime);
    }

    public UpdateLinkeLinktMilestonestatusResponse updateLinkeLinktMilestonestatusWithOptions(UpdateLinkeLinktMilestonestatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktMilestonestatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktMilestonestatusResponse());
    }

    public UpdateLinkeLinktMilestonestatusResponse updateLinkeLinktMilestonestatus(UpdateLinkeLinktMilestonestatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktMilestonestatusWithOptions(request, runtime);
    }

    public UpdateLinkeLinktModuleResponse updateLinkeLinktModuleWithOptions(UpdateLinkeLinktModuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktModule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktModuleResponse());
    }

    public UpdateLinkeLinktModuleResponse updateLinkeLinktModule(UpdateLinkeLinktModuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktModuleWithOptions(request, runtime);
    }

    public UpdateLinkeLinktProjectResponse updateLinkeLinktProjectWithOptions(UpdateLinkeLinktProjectRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktProject", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktProjectResponse());
    }

    public UpdateLinkeLinktProjectResponse updateLinkeLinktProject(UpdateLinkeLinktProjectRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktProjectWithOptions(request, runtime);
    }

    public UpdateLinkeLinktRiskResponse updateLinkeLinktRiskWithOptions(UpdateLinkeLinktRiskRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktRisk", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktRiskResponse());
    }

    public UpdateLinkeLinktRiskResponse updateLinkeLinktRisk(UpdateLinkeLinktRiskRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktRiskWithOptions(request, runtime);
    }

    public UpdateLinkeLinktRiskpositionResponse updateLinkeLinktRiskpositionWithOptions(UpdateLinkeLinktRiskpositionRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktRiskposition", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktRiskpositionResponse());
    }

    public UpdateLinkeLinktRiskpositionResponse updateLinkeLinktRiskposition(UpdateLinkeLinktRiskpositionRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktRiskpositionWithOptions(request, runtime);
    }

    public UpdateLinkeLinktStatusResponse updateLinkeLinktStatusWithOptions(UpdateLinkeLinktStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktStatusResponse());
    }

    public UpdateLinkeLinktStatusResponse updateLinkeLinktStatus(UpdateLinkeLinktStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktStatusWithOptions(request, runtime);
    }

    public UpdateLinkeLinktTagResponse updateLinkeLinktTagWithOptions(UpdateLinkeLinktTagRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktTag", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktTagResponse());
    }

    public UpdateLinkeLinktTagResponse updateLinkeLinktTag(UpdateLinkeLinktTagRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktTagWithOptions(request, runtime);
    }

    public UpdateLinkeLinktTemplateResponse updateLinkeLinktTemplateWithOptions(UpdateLinkeLinktTemplateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktTemplate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktTemplateResponse());
    }

    public UpdateLinkeLinktTemplateResponse updateLinkeLinktTemplate(UpdateLinkeLinktTemplateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktTemplateWithOptions(request, runtime);
    }

    public UpdateLinkeLinktTemplatefieldrequiredResponse updateLinkeLinktTemplatefieldrequiredWithOptions(UpdateLinkeLinktTemplatefieldrequiredRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktTemplatefieldrequired", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktTemplatefieldrequiredResponse());
    }

    public UpdateLinkeLinktTemplatefieldrequiredResponse updateLinkeLinktTemplatefieldrequired(UpdateLinkeLinktTemplatefieldrequiredRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktTemplatefieldrequiredWithOptions(request, runtime);
    }

    public UpdateLinkeLinktWorkflowstatusResponse updateLinkeLinktWorkflowstatusWithOptions(UpdateLinkeLinktWorkflowstatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktWorkflowstatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktWorkflowstatusResponse());
    }

    public UpdateLinkeLinktWorkflowstatusResponse updateLinkeLinktWorkflowstatus(UpdateLinkeLinktWorkflowstatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktWorkflowstatusWithOptions(request, runtime);
    }

    public UpdateLinkeLinktWorkitemResponse updateLinkeLinktWorkitemWithOptions(UpdateLinkeLinktWorkitemRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktWorkitem", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktWorkitemResponse());
    }

    public UpdateLinkeLinktWorkitemResponse updateLinkeLinktWorkitem(UpdateLinkeLinktWorkitemRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktWorkitemWithOptions(request, runtime);
    }

    public UpdateLinkeLinktWorkitemsResponse updateLinkeLinktWorkitemsWithOptions(UpdateLinkeLinktWorkitemsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktWorkitems", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktWorkitemsResponse());
    }

    public UpdateLinkeLinktWorkitemsResponse updateLinkeLinktWorkitems(UpdateLinkeLinktWorkitemsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktWorkitemsWithOptions(request, runtime);
    }

    public UpdateLinkeLinktWorkitemstampResponse updateLinkeLinktWorkitemstampWithOptions(UpdateLinkeLinktWorkitemstampRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateLinkeLinktWorkitemstamp", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateLinkeLinktWorkitemstampResponse());
    }

    public UpdateLinkeLinktWorkitemstampResponse updateLinkeLinktWorkitemstamp(UpdateLinkeLinktWorkitemstampRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateLinkeLinktWorkitemstampWithOptions(request, runtime);
    }

    public UpdateMqSofamqGroupResponse updateMqSofamqGroupWithOptions(UpdateMqSofamqGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMqSofamqGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMqSofamqGroupResponse());
    }

    public UpdateMqSofamqGroupResponse updateMqSofamqGroup(UpdateMqSofamqGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMqSofamqGroupWithOptions(request, runtime);
    }

    public UpdateMqSofamqGroupRemarkResponse updateMqSofamqGroupRemarkWithOptions(UpdateMqSofamqGroupRemarkRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMqSofamqGroupRemark", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMqSofamqGroupRemarkResponse());
    }

    public UpdateMqSofamqGroupRemarkResponse updateMqSofamqGroupRemark(UpdateMqSofamqGroupRemarkRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMqSofamqGroupRemarkWithOptions(request, runtime);
    }

    public UpdateMqSofamqRouterResponse updateMqSofamqRouterWithOptions(UpdateMqSofamqRouterRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMqSofamqRouter", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMqSofamqRouterResponse());
    }

    public UpdateMqSofamqRouterResponse updateMqSofamqRouter(UpdateMqSofamqRouterRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMqSofamqRouterWithOptions(request, runtime);
    }

    public UpdateMqSofamqTopicResponse updateMqSofamqTopicWithOptions(UpdateMqSofamqTopicRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMqSofamqTopic", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMqSofamqTopicResponse());
    }

    public UpdateMqSofamqTopicResponse updateMqSofamqTopic(UpdateMqSofamqTopicRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMqSofamqTopicWithOptions(request, runtime);
    }

    public UpdateMqSofamqTopicRemarkResponse updateMqSofamqTopicRemarkWithOptions(UpdateMqSofamqTopicRemarkRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMqSofamqTopicRemark", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMqSofamqTopicRemarkResponse());
    }

    public UpdateMqSofamqTopicRemarkResponse updateMqSofamqTopicRemark(UpdateMqSofamqTopicRemarkRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMqSofamqTopicRemarkWithOptions(request, runtime);
    }

    public UpdateMqSofamqWarnResponse updateMqSofamqWarnWithOptions(UpdateMqSofamqWarnRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMqSofamqWarn", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMqSofamqWarnResponse());
    }

    public UpdateMqSofamqWarnResponse updateMqSofamqWarn(UpdateMqSofamqWarnRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMqSofamqWarnWithOptions(request, runtime);
    }

    public UpdateMsConfigAttributesResponse updateMsConfigAttributesWithOptions(UpdateMsConfigAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsConfigAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsConfigAttributesResponse());
    }

    public UpdateMsConfigAttributesResponse updateMsConfigAttributes(UpdateMsConfigAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsConfigAttributesWithOptions(request, runtime);
    }

    public UpdateMsConfigResourcesResponse updateMsConfigResourcesWithOptions(UpdateMsConfigResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsConfigResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsConfigResourcesResponse());
    }

    public UpdateMsConfigResourcesResponse updateMsConfigResources(UpdateMsConfigResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsConfigResourcesWithOptions(request, runtime);
    }

    public UpdateMSDdcsAttributesResponse updateMSDdcsAttributesWithOptions(UpdateMSDdcsAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMSDdcsAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMSDdcsAttributesResponse());
    }

    public UpdateMSDdcsAttributesResponse updateMSDdcsAttributes(UpdateMSDdcsAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMSDdcsAttributesWithOptions(request, runtime);
    }

    public UpdateMSDdcsResourcesResponse updateMSDdcsResourcesWithOptions(UpdateMSDdcsResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMSDdcsResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMSDdcsResourcesResponse());
    }

    public UpdateMSDdcsResourcesResponse updateMSDdcsResources(UpdateMSDdcsResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMSDdcsResourcesWithOptions(request, runtime);
    }

    public UpdateMSDdsJobResponse updateMSDdsJobWithOptions(UpdateMSDdsJobRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMSDdsJob", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMSDdsJobResponse());
    }

    public UpdateMSDdsJobResponse updateMSDdsJob(UpdateMSDdsJobRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMSDdsJobWithOptions(request, runtime);
    }

    public UpdateMSDdsJobStatusResponse updateMSDdsJobStatusWithOptions(UpdateMSDdsJobStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMSDdsJobStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMSDdsJobStatusResponse());
    }

    public UpdateMSDdsJobStatusResponse updateMSDdsJobStatus(UpdateMSDdsJobStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMSDdsJobStatusWithOptions(request, runtime);
    }

    public UpdateMsDrmAttributesResponse updateMsDrmAttributesWithOptions(UpdateMsDrmAttributesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsDrmAttributes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsDrmAttributesResponse());
    }

    public UpdateMsDrmAttributesResponse updateMsDrmAttributes(UpdateMsDrmAttributesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsDrmAttributesWithOptions(request, runtime);
    }

    public UpdateMsDrmDrmResourceTplResponse updateMsDrmDrmResourceTplWithOptions(UpdateMsDrmDrmResourceTplRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsDrmDrmResourceTpl", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsDrmDrmResourceTplResponse());
    }

    public UpdateMsDrmDrmResourceTplResponse updateMsDrmDrmResourceTpl(UpdateMsDrmDrmResourceTplRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsDrmDrmResourceTplWithOptions(request, runtime);
    }

    public UpdateMsDrmResourcesResponse updateMsDrmResourcesWithOptions(UpdateMsDrmResourcesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsDrmResources", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsDrmResourcesResponse());
    }

    public UpdateMsDrmResourcesResponse updateMsDrmResources(UpdateMsDrmResourcesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsDrmResourcesWithOptions(request, runtime);
    }

    public UpdateMsGuardianAppsResponse updateMsGuardianAppsWithOptions(UpdateMsGuardianAppsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsGuardianApps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsGuardianAppsResponse());
    }

    public UpdateMsGuardianAppsResponse updateMsGuardianApps(UpdateMsGuardianAppsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsGuardianAppsWithOptions(request, runtime);
    }

    public UpdateMsGuardianGrayRuleStatusResponse updateMsGuardianGrayRuleStatusWithOptions(UpdateMsGuardianGrayRuleStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsGuardianGrayRuleStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsGuardianGrayRuleStatusResponse());
    }

    public UpdateMsGuardianGrayRuleStatusResponse updateMsGuardianGrayRuleStatus(UpdateMsGuardianGrayRuleStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsGuardianGrayRuleStatusWithOptions(request, runtime);
    }

    public UpdateMsGuardianRulesResponse updateMsGuardianRulesWithOptions(UpdateMsGuardianRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsGuardianRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsGuardianRulesResponse());
    }

    public UpdateMsGuardianRulesResponse updateMsGuardianRules(UpdateMsGuardianRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsGuardianRulesWithOptions(request, runtime);
    }

    public UpdateMsGuardianRuleStatusResponse updateMsGuardianRuleStatusWithOptions(UpdateMsGuardianRuleStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsGuardianRuleStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsGuardianRuleStatusResponse());
    }

    public UpdateMsGuardianRuleStatusResponse updateMsGuardianRuleStatus(UpdateMsGuardianRuleStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsGuardianRuleStatusWithOptions(request, runtime);
    }

    public UpdateMsSgAuthRulesResponse updateMsSgAuthRulesWithOptions(UpdateMsSgAuthRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsSgAuthRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsSgAuthRulesResponse());
    }

    public UpdateMsSgAuthRulesResponse updateMsSgAuthRules(UpdateMsSgAuthRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsSgAuthRulesWithOptions(request, runtime);
    }

    public UpdateMsSgCircuitBreakerRuleResponse updateMsSgCircuitBreakerRuleWithOptions(UpdateMsSgCircuitBreakerRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsSgCircuitBreakerRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsSgCircuitBreakerRuleResponse());
    }

    public UpdateMsSgCircuitBreakerRuleResponse updateMsSgCircuitBreakerRule(UpdateMsSgCircuitBreakerRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsSgCircuitBreakerRuleWithOptions(request, runtime);
    }

    public UpdateMsSgDowngradesResponse updateMsSgDowngradesWithOptions(UpdateMsSgDowngradesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsSgDowngrades", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsSgDowngradesResponse());
    }

    public UpdateMsSgDowngradesResponse updateMsSgDowngrades(UpdateMsSgDowngradesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsSgDowngradesWithOptions(request, runtime);
    }

    public UpdateMsSgFaultInjectRuleResponse updateMsSgFaultInjectRuleWithOptions(UpdateMsSgFaultInjectRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsSgFaultInjectRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsSgFaultInjectRuleResponse());
    }

    public UpdateMsSgFaultInjectRuleResponse updateMsSgFaultInjectRule(UpdateMsSgFaultInjectRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsSgFaultInjectRuleWithOptions(request, runtime);
    }

    public UpdateMsSgFaultInjectRuleStatusResponse updateMsSgFaultInjectRuleStatusWithOptions(UpdateMsSgFaultInjectRuleStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsSgFaultInjectRuleStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsSgFaultInjectRuleStatusResponse());
    }

    public UpdateMsSgFaultInjectRuleStatusResponse updateMsSgFaultInjectRuleStatus(UpdateMsSgFaultInjectRuleStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsSgFaultInjectRuleStatusWithOptions(request, runtime);
    }

    public UpdateMsSgFaultToleranceResponse updateMsSgFaultToleranceWithOptions(UpdateMsSgFaultToleranceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsSgFaultTolerance", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsSgFaultToleranceResponse());
    }

    public UpdateMsSgFaultToleranceResponse updateMsSgFaultTolerance(UpdateMsSgFaultToleranceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsSgFaultToleranceWithOptions(request, runtime);
    }

    public UpdateMsSgListAuthRulesResponse updateMsSgListAuthRulesWithOptions(UpdateMsSgListAuthRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsSgListAuthRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsSgListAuthRulesResponse());
    }

    public UpdateMsSgListAuthRulesResponse updateMsSgListAuthRules(UpdateMsSgListAuthRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsSgListAuthRulesWithOptions(request, runtime);
    }

    public UpdateMsSgRouterRuleGroupsResponse updateMsSgRouterRuleGroupsWithOptions(UpdateMsSgRouterRuleGroupsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsSgRouterRuleGroups", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsSgRouterRuleGroupsResponse());
    }

    public UpdateMsSgRouterRuleGroupsResponse updateMsSgRouterRuleGroups(UpdateMsSgRouterRuleGroupsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsSgRouterRuleGroupsWithOptions(request, runtime);
    }

    public UpdateMsSgRouterRuleGroupStatusResponse updateMsSgRouterRuleGroupStatusWithOptions(UpdateMsSgRouterRuleGroupStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsSgRouterRuleGroupStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsSgRouterRuleGroupStatusResponse());
    }

    public UpdateMsSgRouterRuleGroupStatusResponse updateMsSgRouterRuleGroupStatus(UpdateMsSgRouterRuleGroupStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsSgRouterRuleGroupStatusWithOptions(request, runtime);
    }

    public UpdateMsSgServiceRateLimitRulesResponse updateMsSgServiceRateLimitRulesWithOptions(UpdateMsSgServiceRateLimitRulesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsSgServiceRateLimitRules", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsSgServiceRateLimitRulesResponse());
    }

    public UpdateMsSgServiceRateLimitRulesResponse updateMsSgServiceRateLimitRules(UpdateMsSgServiceRateLimitRulesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsSgServiceRateLimitRulesWithOptions(request, runtime);
    }

    public UpdateMsSgServiceRateLimitRuleStatusResponse updateMsSgServiceRateLimitRuleStatusWithOptions(UpdateMsSgServiceRateLimitRuleStatusRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsSgServiceRateLimitRuleStatus", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsSgServiceRateLimitRuleStatusResponse());
    }

    public UpdateMsSgServiceRateLimitRuleStatusResponse updateMsSgServiceRateLimitRuleStatus(UpdateMsSgServiceRateLimitRuleStatusRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsSgServiceRateLimitRuleStatusWithOptions(request, runtime);
    }

    public UpdateMsTransparentProxyConfigResponse updateMsTransparentProxyConfigWithOptions(UpdateMsTransparentProxyConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsTransparentProxyConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsTransparentProxyConfigResponse());
    }

    public UpdateMsTransparentProxyConfigResponse updateMsTransparentProxyConfig(UpdateMsTransparentProxyConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsTransparentProxyConfigWithOptions(request, runtime);
    }

    public UpdateMsTransparentProxyProtocolConfigResponse updateMsTransparentProxyProtocolConfigWithOptions(UpdateMsTransparentProxyProtocolConfigRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateMsTransparentProxyProtocolConfig", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateMsTransparentProxyProtocolConfigResponse());
    }

    public UpdateMsTransparentProxyProtocolConfigResponse updateMsTransparentProxyProtocolConfig(UpdateMsTransparentProxyProtocolConfigRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateMsTransparentProxyProtocolConfigWithOptions(request, runtime);
    }

    public UpdateODPDbnodesResponse updateODPDbnodesWithOptions(UpdateODPDbnodesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateODPDbnodes", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateODPDbnodesResponse());
    }

    public UpdateODPDbnodesResponse updateODPDbnodes(UpdateODPDbnodesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateODPDbnodesWithOptions(request, runtime);
    }

    public UpdateODPInstancesResponse updateODPInstancesWithOptions(UpdateODPInstancesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateODPInstances", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateODPInstancesResponse());
    }

    public UpdateODPInstancesResponse updateODPInstances(UpdateODPInstancesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateODPInstancesWithOptions(request, runtime);
    }

    public UpdateODPInstancesUsersResponse updateODPInstancesUsersWithOptions(UpdateODPInstancesUsersRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateODPInstancesUsers", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateODPInstancesUsersResponse());
    }

    public UpdateODPInstancesUsersResponse updateODPInstancesUsers(UpdateODPInstancesUsersRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateODPInstancesUsersWithOptions(request, runtime);
    }

    public UpdateODPSchemasResponse updateODPSchemasWithOptions(UpdateODPSchemasRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateODPSchemas", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateODPSchemasResponse());
    }

    public UpdateODPSchemasResponse updateODPSchemas(UpdateODPSchemasRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateODPSchemasWithOptions(request, runtime);
    }

    public UpdateODPSchemasConnPropsResponse updateODPSchemasConnPropsWithOptions(UpdateODPSchemasConnPropsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateODPSchemasConnProps", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateODPSchemasConnPropsResponse());
    }

    public UpdateODPSchemasConnPropsResponse updateODPSchemasConnProps(UpdateODPSchemasConnPropsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateODPSchemasConnPropsWithOptions(request, runtime);
    }

    public UpdateODPSchemasInterceptorsResponse updateODPSchemasInterceptorsWithOptions(UpdateODPSchemasInterceptorsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateODPSchemasInterceptors", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateODPSchemasInterceptorsResponse());
    }

    public UpdateODPSchemasInterceptorsResponse updateODPSchemasInterceptors(UpdateODPSchemasInterceptorsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateODPSchemasInterceptorsWithOptions(request, runtime);
    }

    public UpdateODPSchemasLogicTablesResponse updateODPSchemasLogicTablesWithOptions(UpdateODPSchemasLogicTablesRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateODPSchemasLogicTables", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateODPSchemasLogicTablesResponse());
    }

    public UpdateODPSchemasLogicTablesResponse updateODPSchemasLogicTables(UpdateODPSchemasLogicTablesRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateODPSchemasLogicTablesWithOptions(request, runtime);
    }

    public UpdateODPSchemasPhysicalSchemaAuthInfosResponse updateODPSchemasPhysicalSchemaAuthInfosWithOptions(UpdateODPSchemasPhysicalSchemaAuthInfosRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateODPSchemasPhysicalSchemaAuthInfos", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateODPSchemasPhysicalSchemaAuthInfosResponse());
    }

    public UpdateODPSchemasPhysicalSchemaAuthInfosResponse updateODPSchemasPhysicalSchemaAuthInfos(UpdateODPSchemasPhysicalSchemaAuthInfosRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateODPSchemasPhysicalSchemaAuthInfosWithOptions(request, runtime);
    }

    public UpdateRmsAlertRuleResponse updateRmsAlertRuleWithOptions(UpdateRmsAlertRuleRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateRmsAlertRule", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateRmsAlertRuleResponse());
    }

    public UpdateRmsAlertRuleResponse updateRmsAlertRule(UpdateRmsAlertRuleRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateRmsAlertRuleWithOptions(request, runtime);
    }

    public UpdateRmsAlertrulePauseResponse updateRmsAlertrulePauseWithOptions(UpdateRmsAlertrulePauseRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateRmsAlertrulePause", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateRmsAlertrulePauseResponse());
    }

    public UpdateRmsAlertrulePauseResponse updateRmsAlertrulePause(UpdateRmsAlertrulePauseRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateRmsAlertrulePauseWithOptions(request, runtime);
    }

    public UpdateRmsAlertRuleSubscribeResponse updateRmsAlertRuleSubscribeWithOptions(UpdateRmsAlertRuleSubscribeRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateRmsAlertRuleSubscribe", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateRmsAlertRuleSubscribeResponse());
    }

    public UpdateRmsAlertRuleSubscribeResponse updateRmsAlertRuleSubscribe(UpdateRmsAlertRuleSubscribeRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateRmsAlertRuleSubscribeWithOptions(request, runtime);
    }

    public UpdateRmsResourcegroupResponse updateRmsResourcegroupWithOptions(UpdateRmsResourcegroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateRmsResourcegroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateRmsResourcegroupResponse());
    }

    public UpdateRmsResourcegroupResponse updateRmsResourcegroup(UpdateRmsResourcegroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateRmsResourcegroupWithOptions(request, runtime);
    }

    public UpdateTSJobResponse updateTSJobWithOptions(UpdateTSJobRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateTSJob", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateTSJobResponse());
    }

    public UpdateTSJobResponse updateTSJob(UpdateTSJobRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateTSJobWithOptions(request, runtime);
    }

    public UpdateTSJobGroupResponse updateTSJobGroupWithOptions(UpdateTSJobGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateTSJobGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateTSJobGroupResponse());
    }

    public UpdateTSJobGroupResponse updateTSJobGroup(UpdateTSJobGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateTSJobGroupWithOptions(request, runtime);
    }

    public UpdateTSTopologyShardingParallelCountResponse updateTSTopologyShardingParallelCountWithOptions(UpdateTSTopologyShardingParallelCountRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateTSTopologyShardingParallelCount", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateTSTopologyShardingParallelCountResponse());
    }

    public UpdateTSTopologyShardingParallelCountResponse updateTSTopologyShardingParallelCount(UpdateTSTopologyShardingParallelCountRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateTSTopologyShardingParallelCountWithOptions(request, runtime);
    }

    public UpdateTSTriggerInstanceLimitRateResponse updateTSTriggerInstanceLimitRateWithOptions(UpdateTSTriggerInstanceLimitRateRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateTSTriggerInstanceLimitRate", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateTSTriggerInstanceLimitRateResponse());
    }

    public UpdateTSTriggerInstanceLimitRateResponse updateTSTriggerInstanceLimitRate(UpdateTSTriggerInstanceLimitRateRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateTSTriggerInstanceLimitRateWithOptions(request, runtime);
    }

    public UpdateWorkspaceResponse updateWorkspaceWithOptions(UpdateWorkspaceRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UpdateWorkspace", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UpdateWorkspaceResponse());
    }

    public UpdateWorkspaceResponse updateWorkspace(UpdateWorkspaceRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.updateWorkspaceWithOptions(request, runtime);
    }

    public UploadFinishBuildpackResponse uploadFinishBuildpackWithOptions(UploadFinishBuildpackRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UploadFinishBuildpack", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UploadFinishBuildpackResponse());
    }

    public UploadFinishBuildpackResponse uploadFinishBuildpack(UploadFinishBuildpackRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.uploadFinishBuildpackWithOptions(request, runtime);
    }

    public UploadHasInspectJarofjavapluginResponse uploadHasInspectJarofjavapluginWithOptions(UploadHasInspectJarofjavapluginRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UploadHasInspectJarofjavaplugin", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UploadHasInspectJarofjavapluginResponse());
    }

    public UploadHasInspectJarofjavapluginResponse uploadHasInspectJarofjavaplugin(UploadHasInspectJarofjavapluginRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.uploadHasInspectJarofjavapluginWithOptions(request, runtime);
    }

    public UploadHelmChartResponse uploadHelmChartWithOptions(UploadHelmChartRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UploadHelmChart", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UploadHelmChartResponse());
    }

    public UploadHelmChartResponse uploadHelmChart(UploadHelmChartRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.uploadHelmChartWithOptions(request, runtime);
    }

    public UploadLinkeantcodeAntcodeNamespaceprojectuploadsResponse uploadLinkeantcodeAntcodeNamespaceprojectuploadsWithOptions(UploadLinkeantcodeAntcodeNamespaceprojectuploadsRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UploadLinkeantcodeAntcodeNamespaceprojectuploads", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UploadLinkeantcodeAntcodeNamespaceprojectuploadsResponse());
    }

    public UploadLinkeantcodeAntcodeNamespaceprojectuploadsResponse uploadLinkeantcodeAntcodeNamespaceprojectuploads(UploadLinkeantcodeAntcodeNamespaceprojectuploadsRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.uploadLinkeantcodeAntcodeNamespaceprojectuploadsWithOptions(request, runtime);
    }

    public UploadLinkeLinkaInternalsinglecoverageResponse uploadLinkeLinkaInternalsinglecoverageWithOptions(UploadLinkeLinkaInternalsinglecoverageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UploadLinkeLinkaInternalsinglecoverage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UploadLinkeLinkaInternalsinglecoverageResponse());
    }

    public UploadLinkeLinkaInternalsinglecoverageResponse uploadLinkeLinkaInternalsinglecoverage(UploadLinkeLinkaInternalsinglecoverageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.uploadLinkeLinkaInternalsinglecoverageWithOptions(request, runtime);
    }

    public UploadLinkeLinkaSinglecoverageResponse uploadLinkeLinkaSinglecoverageWithOptions(UploadLinkeLinkaSinglecoverageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UploadLinkeLinkaSinglecoverage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UploadLinkeLinkaSinglecoverageResponse());
    }

    public UploadLinkeLinkaSinglecoverageResponse uploadLinkeLinkaSinglecoverage(UploadLinkeLinkaSinglecoverageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.uploadLinkeLinkaSinglecoverageWithOptions(request, runtime);
    }

    public UploadLinkeLinkaTaskcoverageResponse uploadLinkeLinkaTaskcoverageWithOptions(UploadLinkeLinkaTaskcoverageRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UploadLinkeLinkaTaskcoverage", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UploadLinkeLinkaTaskcoverageResponse());
    }

    public UploadLinkeLinkaTaskcoverageResponse uploadLinkeLinkaTaskcoverage(UploadLinkeLinkaTaskcoverageRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.uploadLinkeLinkaTaskcoverageWithOptions(request, runtime);
    }

    public UploadLinkeLinktAttachmentResponse uploadLinkeLinktAttachmentWithOptions(UploadLinkeLinktAttachmentRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("UploadLinkeLinktAttachment", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new UploadLinkeLinktAttachmentResponse());
    }

    public UploadLinkeLinktAttachmentResponse uploadLinkeLinktAttachment(UploadLinkeLinktAttachmentRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.uploadLinkeLinktAttachmentWithOptions(request, runtime);
    }

    public VerifyDWSConfigVpcResponse verifyDWSConfigVpcWithOptions(VerifyDWSConfigVpcRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("VerifyDWSConfigVpc", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new VerifyDWSConfigVpcResponse());
    }

    public VerifyDWSConfigVpcResponse verifyDWSConfigVpc(VerifyDWSConfigVpcRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.verifyDWSConfigVpcWithOptions(request, runtime);
    }

    public VerifyDWSDscfgResponse verifyDWSDscfgWithOptions(VerifyDWSDscfgRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("VerifyDWSDscfg", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new VerifyDWSDscfgResponse());
    }

    public VerifyDWSDscfgResponse verifyDWSDscfg(VerifyDWSDscfgRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.verifyDWSDscfgWithOptions(request, runtime);
    }

    public VerifyGWApiApiGroupResponse verifyGWApiApiGroupWithOptions(VerifyGWApiApiGroupRequest request, RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        OpenApiRequest req = OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.teautil.Common.toMap(request))
        ));
        return TeaModel.toModel(this.doRPCRequest("VerifyGWApiApiGroup", "2019-08-15", "HTTPS", "POST", "AK", "json", req, runtime), new VerifyGWApiApiGroupResponse());
    }

    public VerifyGWApiApiGroupResponse verifyGWApiApiGroup(VerifyGWApiApiGroupRequest request) throws Exception {
        RuntimeOptions runtime = new RuntimeOptions();
        return this.verifyGWApiApiGroupWithOptions(request, runtime);
    }
}
