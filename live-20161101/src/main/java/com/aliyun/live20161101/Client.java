// This file is auto-generated, don't edit it. Thanks.
package com.aliyun.live20161101;

import com.aliyun.tea.*;
import com.aliyun.live20161101.models.*;

public class Client extends com.aliyun.teaopenapi.Client {

    public Client(com.aliyun.teaopenapi.models.Config config) throws Exception {
        super(config);
        this._endpointRule = "regional";
        this._endpointMap = TeaConverter.buildMap(
            new TeaPair("cn-qingdao", "live.aliyuncs.com"),
            new TeaPair("cn-beijing", "live.aliyuncs.com"),
            new TeaPair("cn-hangzhou", "live.aliyuncs.com"),
            new TeaPair("cn-shanghai", "live.aliyuncs.com"),
            new TeaPair("cn-shenzhen", "live.aliyuncs.com"),
            new TeaPair("ap-southeast-1", "live.aliyuncs.com"),
            new TeaPair("ap-southeast-5", "live.aliyuncs.com"),
            new TeaPair("ap-northeast-1", "live.aliyuncs.com"),
            new TeaPair("eu-central-1", "live.aliyuncs.com"),
            new TeaPair("ap-south-1", "live.aliyuncs.com"),
            new TeaPair("ap-northeast-2-pop", "live.aliyuncs.com"),
            new TeaPair("ap-southeast-2", "live.aliyuncs.com"),
            new TeaPair("ap-southeast-3", "live.aliyuncs.com"),
            new TeaPair("cn-beijing-finance-1", "live.aliyuncs.com"),
            new TeaPair("cn-beijing-finance-pop", "live.aliyuncs.com"),
            new TeaPair("cn-beijing-gov-1", "live.aliyuncs.com"),
            new TeaPair("cn-beijing-nu16-b01", "live.aliyuncs.com"),
            new TeaPair("cn-chengdu", "live.aliyuncs.com"),
            new TeaPair("cn-edge-1", "live.aliyuncs.com"),
            new TeaPair("cn-fujian", "live.aliyuncs.com"),
            new TeaPair("cn-haidian-cm12-c01", "live.aliyuncs.com"),
            new TeaPair("cn-hangzhou-bj-b01", "live.aliyuncs.com"),
            new TeaPair("cn-hangzhou-finance", "live.aliyuncs.com"),
            new TeaPair("cn-hangzhou-internal-prod-1", "live.aliyuncs.com"),
            new TeaPair("cn-hangzhou-internal-test-1", "live.aliyuncs.com"),
            new TeaPair("cn-hangzhou-internal-test-2", "live.aliyuncs.com"),
            new TeaPair("cn-hangzhou-internal-test-3", "live.aliyuncs.com"),
            new TeaPair("cn-hangzhou-test-306", "live.aliyuncs.com"),
            new TeaPair("cn-hongkong", "live.aliyuncs.com"),
            new TeaPair("cn-hongkong-finance-pop", "live.aliyuncs.com"),
            new TeaPair("cn-huhehaote", "live.aliyuncs.com"),
            new TeaPair("cn-huhehaote-nebula-1", "live.aliyuncs.com"),
            new TeaPair("cn-north-2-gov-1", "live.aliyuncs.com"),
            new TeaPair("cn-qingdao-nebula", "live.aliyuncs.com"),
            new TeaPair("cn-shanghai-et15-b01", "live.aliyuncs.com"),
            new TeaPair("cn-shanghai-et2-b01", "live.aliyuncs.com"),
            new TeaPair("cn-shanghai-finance-1", "live.aliyuncs.com"),
            new TeaPair("cn-shanghai-inner", "live.aliyuncs.com"),
            new TeaPair("cn-shanghai-internal-test-1", "live.aliyuncs.com"),
            new TeaPair("cn-shenzhen-finance-1", "live.aliyuncs.com"),
            new TeaPair("cn-shenzhen-inner", "live.aliyuncs.com"),
            new TeaPair("cn-shenzhen-st4-d01", "live.aliyuncs.com"),
            new TeaPair("cn-shenzhen-su18-b01", "live.aliyuncs.com"),
            new TeaPair("cn-wuhan", "live.aliyuncs.com"),
            new TeaPair("cn-wulanchabu", "live.aliyuncs.com"),
            new TeaPair("cn-yushanfang", "live.aliyuncs.com"),
            new TeaPair("cn-zhangbei", "live.aliyuncs.com"),
            new TeaPair("cn-zhangbei-na61-b01", "live.aliyuncs.com"),
            new TeaPair("cn-zhangjiakou", "live.aliyuncs.com"),
            new TeaPair("cn-zhangjiakou-na62-a01", "live.aliyuncs.com"),
            new TeaPair("cn-zhengzhou-nebula-1", "live.aliyuncs.com"),
            new TeaPair("eu-west-1", "live.aliyuncs.com"),
            new TeaPair("eu-west-1-oxs", "live.aliyuncs.com"),
            new TeaPair("me-east-1", "live.aliyuncs.com"),
            new TeaPair("rus-west-1-pop", "live.aliyuncs.com"),
            new TeaPair("us-east-1", "live.aliyuncs.com"),
            new TeaPair("us-west-1", "live.aliyuncs.com")
        );
        this.checkConfig(config);
        this._endpoint = this.getEndpoint("live", _regionId, _endpointRule, _network, _suffix, _endpointMap, _endpoint);
    }


    public String getEndpoint(String productId, String regionId, String endpointRule, String network, String suffix, java.util.Map<String, String> endpointMap, String endpoint) throws Exception {
        if (!com.aliyun.teautil.Common.empty(endpoint)) {
            return endpoint;
        }

        if (!com.aliyun.teautil.Common.isUnset(endpointMap) && !com.aliyun.teautil.Common.empty(endpointMap.get(regionId))) {
            return endpointMap.get(regionId);
        }

        return com.aliyun.endpointutil.Client.getEndpointRules(productId, regionId, endpointRule, network, suffix);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to add a component to a production studio, you must first create the production studio and learn about the production studio layouts. You can call this operation to add three types of components: image, text, and subtitle. For information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a component to a production studio.</p>
     * 
     * @param request AddCasterComponentRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddCasterComponentResponse
     */
    public AddCasterComponentResponse addCasterComponentWithOptions(AddCasterComponentRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.captionLayerContent)) {
            query.put("CaptionLayerContent", request.captionLayerContent);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.componentLayer)) {
            query.put("ComponentLayer", request.componentLayer);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.componentName)) {
            query.put("ComponentName", request.componentName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.componentType)) {
            query.put("ComponentType", request.componentType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.effect)) {
            query.put("Effect", request.effect);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.htmlLayerContent)) {
            query.put("HtmlLayerContent", request.htmlLayerContent);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.imageLayerContent)) {
            query.put("ImageLayerContent", request.imageLayerContent);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layerOrder)) {
            query.put("LayerOrder", request.layerOrder);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.locationId)) {
            query.put("LocationId", request.locationId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.textLayerContent)) {
            query.put("TextLayerContent", request.textLayerContent);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddCasterComponent"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddCasterComponentResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to add a component to a production studio, you must first create the production studio and learn about the production studio layouts. You can call this operation to add three types of components: image, text, and subtitle. For information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a component to a production studio.</p>
     * 
     * @param request AddCasterComponentRequest
     * @return AddCasterComponentResponse
     */
    public AddCasterComponentResponse addCasterComponent(AddCasterComponentRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addCasterComponentWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>To call this operation, you must obtain the production studio ID in advance. The production studio ID is generated after the production studio is created.</p>
     * <ul>
     * <li>If the production studio was created by calling the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation, check the value of the response parameter CasterId to obtain the ID.</li>
     * <li>If the production studio was created by using the ApsaraVideo Live console, obtain the ID on the <strong>Production Studio Management</strong> page. To go to the page, log on to the <strong>ApsaraVideo Live console</strong> and click <strong>Production Studios</strong> in the left-side navigation pane.<blockquote>
     * <p> You can find the ID of the production studio in the Instance ID/Name column.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds an episode to a production studio.</p>
     * 
     * @param request AddCasterEpisodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddCasterEpisodeResponse
     */
    public AddCasterEpisodeResponse addCasterEpisodeWithOptions(AddCasterEpisodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.componentId)) {
            query.put("ComponentId", request.componentId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.episodeName)) {
            query.put("EpisodeName", request.episodeName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.episodeType)) {
            query.put("EpisodeType", request.episodeType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceId)) {
            query.put("ResourceId", request.resourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.switchType)) {
            query.put("SwitchType", request.switchType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddCasterEpisode"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddCasterEpisodeResponse());
    }

    /**
     * <b>description</b> :
     * <p>To call this operation, you must obtain the production studio ID in advance. The production studio ID is generated after the production studio is created.</p>
     * <ul>
     * <li>If the production studio was created by calling the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation, check the value of the response parameter CasterId to obtain the ID.</li>
     * <li>If the production studio was created by using the ApsaraVideo Live console, obtain the ID on the <strong>Production Studio Management</strong> page. To go to the page, log on to the <strong>ApsaraVideo Live console</strong> and click <strong>Production Studios</strong> in the left-side navigation pane.<blockquote>
     * <p> You can find the ID of the production studio in the Instance ID/Name column.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds an episode to a production studio.</p>
     * 
     * @param request AddCasterEpisodeRequest
     * @return AddCasterEpisodeResponse
     */
    public AddCasterEpisodeResponse addCasterEpisode(AddCasterEpisodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addCasterEpisodeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You need to create a production studio and obtain the production studio configurations before you call this operation to create an episode list in the production studio. For information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds an episode list to a production studio.</p>
     * 
     * @param request AddCasterEpisodeGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddCasterEpisodeGroupResponse
     */
    public AddCasterEpisodeGroupResponse addCasterEpisodeGroupWithOptions(AddCasterEpisodeGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.callbackUrl)) {
            query.put("CallbackUrl", request.callbackUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.clientToken)) {
            query.put("ClientToken", request.clientToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.item)) {
            query.put("Item", request.item);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.repeatNum)) {
            query.put("RepeatNum", request.repeatNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sideOutputUrl)) {
            query.put("SideOutputUrl", request.sideOutputUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddCasterEpisodeGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddCasterEpisodeGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>You need to create a production studio and obtain the production studio configurations before you call this operation to create an episode list in the production studio. For information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds an episode list to a production studio.</p>
     * 
     * @param request AddCasterEpisodeGroupRequest
     * @return AddCasterEpisodeGroupResponse
     */
    public AddCasterEpisodeGroupResponse addCasterEpisodeGroup(AddCasterEpisodeGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addCasterEpisodeGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You need to create a production studio and add an episode list to the production studio before you call this operation to add information about the episode list in the production studio. For information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds information about an episode list in a production studio.</p>
     * 
     * @param request AddCasterEpisodeGroupContentRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddCasterEpisodeGroupContentResponse
     */
    public AddCasterEpisodeGroupContentResponse addCasterEpisodeGroupContentWithOptions(AddCasterEpisodeGroupContentRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.clientToken)) {
            query.put("ClientToken", request.clientToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.content)) {
            query.put("Content", request.content);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddCasterEpisodeGroupContent"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddCasterEpisodeGroupContentResponse());
    }

    /**
     * <b>description</b> :
     * <p>You need to create a production studio and add an episode list to the production studio before you call this operation to add information about the episode list in the production studio. For information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds information about an episode list in a production studio.</p>
     * 
     * @param request AddCasterEpisodeGroupContentRequest
     * @return AddCasterEpisodeGroupContentResponse
     */
    public AddCasterEpisodeGroupContentResponse addCasterEpisodeGroupContent(AddCasterEpisodeGroupContentRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addCasterEpisodeGroupContentWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>First, create a director desk and add video resources to the director desk, then call this interface to add the director desk layout. To create a director desk using the API, refer to <a href="https://help.aliyun.com/document_detail/69338.html">Create Director Desk</a>.</p>
     * <h2>QPS Limitation</h2>
     * <p>The per-user QPS limit for this interface is 10 times/second. Exceeding this limit will result in API calls being throttled, which may impact your business operations. Please use the API reasonably. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limitation</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a layout for a production studio.</p>
     * 
     * @param request AddCasterLayoutRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddCasterLayoutResponse
     */
    public AddCasterLayoutResponse addCasterLayoutWithOptions(AddCasterLayoutRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.audioLayer)) {
            query.put("AudioLayer", request.audioLayer);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.blendList)) {
            query.put("BlendList", request.blendList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mixList)) {
            query.put("MixList", request.mixList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.videoLayer)) {
            query.put("VideoLayer", request.videoLayer);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddCasterLayout"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddCasterLayoutResponse());
    }

    /**
     * <b>description</b> :
     * <p>First, create a director desk and add video resources to the director desk, then call this interface to add the director desk layout. To create a director desk using the API, refer to <a href="https://help.aliyun.com/document_detail/69338.html">Create Director Desk</a>.</p>
     * <h2>QPS Limitation</h2>
     * <p>The per-user QPS limit for this interface is 10 times/second. Exceeding this limit will result in API calls being throttled, which may impact your business operations. Please use the API reasonably. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limitation</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a layout for a production studio.</p>
     * 
     * @param request AddCasterLayoutRequest
     * @return AddCasterLayoutResponse
     */
    public AddCasterLayoutResponse addCasterLayout(AddCasterLayoutRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addCasterLayoutWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Create a production studio, add input sources to the production studio, and then call this operation to add the episode list for carousel playback in the production studio. This operation supports videos and components as episodes. For information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds the episode list for carousel playback in a production studio.</p>
     * 
     * @param request AddCasterProgramRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddCasterProgramResponse
     */
    public AddCasterProgramResponse addCasterProgramWithOptions(AddCasterProgramRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.episode)) {
            query.put("Episode", request.episode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddCasterProgram"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddCasterProgramResponse());
    }

    /**
     * <b>description</b> :
     * <p>Create a production studio, add input sources to the production studio, and then call this operation to add the episode list for carousel playback in the production studio. This operation supports videos and components as episodes. For information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds the episode list for carousel playback in a production studio.</p>
     * 
     * @param request AddCasterProgramRequest
     * @return AddCasterProgramResponse
     */
    public AddCasterProgramResponse addCasterProgram(AddCasterProgramRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addCasterProgramWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>Create a production studio, and then call this operation to add a video source to the production studio. The number of video sources is limited by the number of input channels of the production studio. For information about how to create a production studio by calling an API operation, see <a href="https://help.aliyun.com/document_detail/69338.html">CreateCaster</a>.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds an input source to a production studio. The number of input sources is limited by the number of input channels of the production studio.</p>
     * 
     * @param request AddCasterVideoResourceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddCasterVideoResourceResponse
     */
    public AddCasterVideoResourceResponse addCasterVideoResourceWithOptions(AddCasterVideoResourceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.beginOffset)) {
            query.put("BeginOffset", request.beginOffset);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endOffset)) {
            query.put("EndOffset", request.endOffset);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fixedDelayDuration)) {
            query.put("FixedDelayDuration", request.fixedDelayDuration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.imageId)) {
            query.put("ImageId", request.imageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.imageUrl)) {
            query.put("ImageUrl", request.imageUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.liveStreamUrl)) {
            query.put("LiveStreamUrl", request.liveStreamUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.locationId)) {
            query.put("LocationId", request.locationId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.materialId)) {
            query.put("MaterialId", request.materialId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ptsCallbackInterval)) {
            query.put("PtsCallbackInterval", request.ptsCallbackInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.repeatNum)) {
            query.put("RepeatNum", request.repeatNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceName)) {
            query.put("ResourceName", request.resourceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.vodUrl)) {
            query.put("VodUrl", request.vodUrl);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddCasterVideoResource"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddCasterVideoResourceResponse());
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>Create a production studio, and then call this operation to add a video source to the production studio. The number of video sources is limited by the number of input channels of the production studio. For information about how to create a production studio by calling an API operation, see <a href="https://help.aliyun.com/document_detail/69338.html">CreateCaster</a>.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds an input source to a production studio. The number of input sources is limited by the number of input channels of the production studio.</p>
     * 
     * @param request AddCasterVideoResourceRequest
     * @return AddCasterVideoResourceResponse
     */
    public AddCasterVideoResourceResponse addCasterVideoResource(AddCasterVideoResourceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addCasterVideoResourceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation supports the following types of custom transcoding templates:</p>
     * <ul>
     * <li>h264: H.264</li>
     * <li>h264-nbhd: H.264 Narrowband HD™</li>
     * <li>h265: H.265</li>
     * <li>h265-nbhd: H.265 Narrowband HD™</li>
     * <li>audio: audio-only</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a custom transcoding configuration for a streaming domain.</p>
     * 
     * @param request AddCustomLiveStreamTranscodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddCustomLiveStreamTranscodeResponse
     */
    public AddCustomLiveStreamTranscodeResponse addCustomLiveStreamTranscodeWithOptions(AddCustomLiveStreamTranscodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioBitrate)) {
            query.put("AudioBitrate", request.audioBitrate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioChannelNum)) {
            query.put("AudioChannelNum", request.audioChannelNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioCodec)) {
            query.put("AudioCodec", request.audioCodec);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioProfile)) {
            query.put("AudioProfile", request.audioProfile);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioRate)) {
            query.put("AudioRate", request.audioRate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.bitrateWithSource)) {
            query.put("BitrateWithSource", request.bitrateWithSource);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.encryptParameters)) {
            query.put("EncryptParameters", request.encryptParameters);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.extWithSource)) {
            query.put("ExtWithSource", request.extWithSource);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.FPS)) {
            query.put("FPS", request.FPS);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fpsWithSource)) {
            query.put("FpsWithSource", request.fpsWithSource);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.gop)) {
            query.put("Gop", request.gop);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.height)) {
            query.put("Height", request.height);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.kmsKeyExpireInterval)) {
            query.put("KmsKeyExpireInterval", request.kmsKeyExpireInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.kmsKeyID)) {
            query.put("KmsKeyID", request.kmsKeyID);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.kmsUID)) {
            query.put("KmsUID", request.kmsUID);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.lazy)) {
            query.put("Lazy", request.lazy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.profile)) {
            query.put("Profile", request.profile);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resWithSource)) {
            query.put("ResWithSource", request.resWithSource);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.template)) {
            query.put("Template", request.template);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateType)) {
            query.put("TemplateType", request.templateType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.videoBitrate)) {
            query.put("VideoBitrate", request.videoBitrate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.width)) {
            query.put("Width", request.width);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddCustomLiveStreamTranscode"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddCustomLiveStreamTranscodeResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation supports the following types of custom transcoding templates:</p>
     * <ul>
     * <li>h264: H.264</li>
     * <li>h264-nbhd: H.264 Narrowband HD™</li>
     * <li>h265: H.265</li>
     * <li>h265-nbhd: H.265 Narrowband HD™</li>
     * <li>audio: audio-only</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a custom transcoding configuration for a streaming domain.</p>
     * 
     * @param request AddCustomLiveStreamTranscodeRequest
     * @return AddCustomLiveStreamTranscodeResponse
     */
    public AddCustomLiveStreamTranscodeResponse addCustomLiveStreamTranscode(AddCustomLiveStreamTranscodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addCustomLiveStreamTranscodeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  After you call the <a href="https://help.aliyun.com/document_detail/2848222.html">AddLiveAISubtitle</a> operation to add a subtitle template, you can call this operation to create a subtitle rule for the template.</p>
     * <ul>
     * <li>You must add &quot;_Subtitle template name&quot; after the stream name in the streaming URL to play the subtitle stream.<ul>
     * <li>RTMP: rtmp://example.aliyundoc.com/app/stream_{Subtitle template name}?auth_key={Access token}</li>
     * <li>FLV: <a href="http://example.aliyundoc.com/app/stream_%7BSubtitle">http://example.aliyundoc.com/app/stream_{Subtitle</a> template name}.flv?auth_key={Access token}</li>
     * <li>M3U8: <a href="http://example.aliyundoc.com/app/stream_%7BSubtitle">http://example.aliyundoc.com/app/stream_{Subtitle</a> template name}.m3u8?auth_key={Access token}<blockquote>
     * <p> The live subtitles feature is in invitational preview. You can add up to 300 subtitle templates.</p>
     * </blockquote>
     * </li>
     * </ul>
     * </li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a subtitle rule.</p>
     * 
     * @param request AddLiveAIProduceRulesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveAIProduceRulesResponse
     */
    public AddLiveAIProduceRulesResponse addLiveAIProduceRulesWithOptions(AddLiveAIProduceRulesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.isLazy)) {
            query.put("IsLazy", request.isLazy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.liveTemplate)) {
            query.put("LiveTemplate", request.liveTemplate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.studioName)) {
            query.put("StudioName", request.studioName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subtitleName)) {
            query.put("SubtitleName", request.subtitleName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.suffix)) {
            query.put("Suffix", request.suffix);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveAIProduceRules"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveAIProduceRulesResponse());
    }

    /**
     * <b>description</b> :
     * <p>  After you call the <a href="https://help.aliyun.com/document_detail/2848222.html">AddLiveAISubtitle</a> operation to add a subtitle template, you can call this operation to create a subtitle rule for the template.</p>
     * <ul>
     * <li>You must add &quot;_Subtitle template name&quot; after the stream name in the streaming URL to play the subtitle stream.<ul>
     * <li>RTMP: rtmp://example.aliyundoc.com/app/stream_{Subtitle template name}?auth_key={Access token}</li>
     * <li>FLV: <a href="http://example.aliyundoc.com/app/stream_%7BSubtitle">http://example.aliyundoc.com/app/stream_{Subtitle</a> template name}.flv?auth_key={Access token}</li>
     * <li>M3U8: <a href="http://example.aliyundoc.com/app/stream_%7BSubtitle">http://example.aliyundoc.com/app/stream_{Subtitle</a> template name}.m3u8?auth_key={Access token}<blockquote>
     * <p> The live subtitles feature is in invitational preview. You can add up to 300 subtitle templates.</p>
     * </blockquote>
     * </li>
     * </ul>
     * </li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a subtitle rule.</p>
     * 
     * @param request AddLiveAIProduceRulesRequest
     * @return AddLiveAIProduceRulesResponse
     */
    public AddLiveAIProduceRulesResponse addLiveAIProduceRules(AddLiveAIProduceRulesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveAIProduceRulesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Instructions</h2>
     * <ul>
     * <li>This interface supports adding live caption template configurations, with templates configurable to describe caption content, layout, and more. </li>
     * <li>After adding caption templates, you also need to call the <a href="https://help.aliyun.com/document_detail/2799676.html">AddLiveAIProduceRules</a> interface to add caption rules. Restarting the stream will then enable captions in the broadcast. </li>
     * <li>Real-time captions are currently supported in Beijing, Shanghai, Singapore, Indonesia, and Saudi regions.<blockquote>
     * <p>Notice: The real-time caption feature is currently in beta testing. Each user can add up to 300 caption templates.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2>QPS Limit</h2>
     * <p>The QPS limit for this interface per user is 60 requests/second. Exceeding this limit will result in API throttling, which may impact your services. Please use judiciously. For more information, refer to <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limitations</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a subtitle template.</p>
     * 
     * @param tmpReq AddLiveAISubtitleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveAISubtitleResponse
     */
    public AddLiveAISubtitleResponse addLiveAISubtitleWithOptions(AddLiveAISubtitleRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        AddLiveAISubtitleShrinkRequest request = new AddLiveAISubtitleShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.positionNormalized)) {
            request.positionNormalizedShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.positionNormalized, "PositionNormalized", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.bgColor)) {
            query.put("BgColor", request.bgColor);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.bgWidthNormalized)) {
            query.put("BgWidthNormalized", request.bgWidthNormalized);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.borderWidthNormalized)) {
            query.put("BorderWidthNormalized", request.borderWidthNormalized);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.copyFrom)) {
            query.put("CopyFrom", request.copyFrom);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dstLanguage)) {
            query.put("DstLanguage", request.dstLanguage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fontColor)) {
            query.put("FontColor", request.fontColor);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fontName)) {
            query.put("FontName", request.fontName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fontSizeNormalized)) {
            query.put("FontSizeNormalized", request.fontSizeNormalized);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.height)) {
            query.put("Height", request.height);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.maxLines)) {
            query.put("MaxLines", request.maxLines);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.positionNormalizedShrink)) {
            query.put("PositionNormalized", request.positionNormalizedShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.showSourceLan)) {
            query.put("ShowSourceLan", request.showSourceLan);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.srcLanguage)) {
            query.put("SrcLanguage", request.srcLanguage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subtitleName)) {
            query.put("SubtitleName", request.subtitleName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.width)) {
            query.put("Width", request.width);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.wordPerLine)) {
            query.put("WordPerLine", request.wordPerLine);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveAISubtitle"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveAISubtitleResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Instructions</h2>
     * <ul>
     * <li>This interface supports adding live caption template configurations, with templates configurable to describe caption content, layout, and more. </li>
     * <li>After adding caption templates, you also need to call the <a href="https://help.aliyun.com/document_detail/2799676.html">AddLiveAIProduceRules</a> interface to add caption rules. Restarting the stream will then enable captions in the broadcast. </li>
     * <li>Real-time captions are currently supported in Beijing, Shanghai, Singapore, Indonesia, and Saudi regions.<blockquote>
     * <p>Notice: The real-time caption feature is currently in beta testing. Each user can add up to 300 caption templates.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2>QPS Limit</h2>
     * <p>The QPS limit for this interface per user is 60 requests/second. Exceeding this limit will result in API throttling, which may impact your services. Please use judiciously. For more information, refer to <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limitations</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a subtitle template.</p>
     * 
     * @param request AddLiveAISubtitleRequest
     * @return AddLiveAISubtitleResponse
     */
    public AddLiveAISubtitleResponse addLiveAISubtitle(AddLiveAISubtitleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveAISubtitleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>The live stream recording feature allows you to record a live stream and stores the recordings in a specified location. You can view the recordings whenever you want to. Recordings that are stored in OSS support multiple formats, such as Transport Stream (TS), MP4, Flash Video (FLV), and Common Media Application Format (CMAF). You can use different recording policies, including automatic recording, on-demand recording, and manual recording. By calling this operation, you can configure the recording template. For more information about live stream recording, see <a href="https://help.aliyun.com/document_detail/199357.html">Live stream recording</a>.
     * A configuration is identified by the DomainName, AppName, and StreamName parameters all together. If you try to call this operation to add a configuration that has the same DomainName, AppName, and StreamName parameters as an existing configuration, an error indicating that the configuration already exists is returned.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configure APP recording, with output saved to OSS.</p>
     * 
     * @param request AddLiveAppRecordConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveAppRecordConfigResponse
     */
    public AddLiveAppRecordConfigResponse addLiveAppRecordConfigWithOptions(AddLiveAppRecordConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.delayTime)) {
            query.put("DelayTime", request.delayTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.onDemand)) {
            query.put("OnDemand", request.onDemand);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossBucket)) {
            query.put("OssBucket", request.ossBucket);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossEndpoint)) {
            query.put("OssEndpoint", request.ossEndpoint);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.recordFormat)) {
            query.put("RecordFormat", request.recordFormat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transcodeRecordFormat)) {
            query.put("TranscodeRecordFormat", request.transcodeRecordFormat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transcodeTemplates)) {
            query.put("TranscodeTemplates", request.transcodeTemplates);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveAppRecordConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveAppRecordConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>The live stream recording feature allows you to record a live stream and stores the recordings in a specified location. You can view the recordings whenever you want to. Recordings that are stored in OSS support multiple formats, such as Transport Stream (TS), MP4, Flash Video (FLV), and Common Media Application Format (CMAF). You can use different recording policies, including automatic recording, on-demand recording, and manual recording. By calling this operation, you can configure the recording template. For more information about live stream recording, see <a href="https://help.aliyun.com/document_detail/199357.html">Live stream recording</a>.
     * A configuration is identified by the DomainName, AppName, and StreamName parameters all together. If you try to call this operation to add a configuration that has the same DomainName, AppName, and StreamName parameters as an existing configuration, an error indicating that the configuration already exists is returned.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configure APP recording, with output saved to OSS.</p>
     * 
     * @param request AddLiveAppRecordConfigRequest
     * @return AddLiveAppRecordConfigResponse
     */
    public AddLiveAppRecordConfigResponse addLiveAppRecordConfig(AddLiveAppRecordConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveAppRecordConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you fully understand the billing method and pricing of live stream snapshots in ApsaraVideo Live. For more information, see <a href="https://help.aliyun.com/document_detail/195286.html">Billing of live stream snapshots</a>.</p>
     * <ul>
     * <li>Make sure that Object Storage Service (OSS) is activated and a specific bucket is created. This way, ApsaraVideo Live can store live stream snapshots in the bucket. For more information, see <a href="https://help.aliyun.com/document_detail/84932.html">Configure OSS</a>.</li>
     * <li>If you store snapshots in OSS, storage fees are generated. For more information, see <a href="https://help.aliyun.com/document_detail/173534.html">Storage fees</a>.</li>
     * <li>The OSS bucket must reside in the same region as the live center of the streaming domain. Cross-region snapshot capture is not supported.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures the snapshot feature for a streaming domain. The captured snapshots are stored in Object Storage Service (OSS). The configuration takes effect after you restart stream ingest.</p>
     * 
     * @param request AddLiveAppSnapshotConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveAppSnapshotConfigResponse
     */
    public AddLiveAppSnapshotConfigResponse addLiveAppSnapshotConfigWithOptions(AddLiveAppSnapshotConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.callback)) {
            query.put("Callback", request.callback);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossBucket)) {
            query.put("OssBucket", request.ossBucket);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossEndpoint)) {
            query.put("OssEndpoint", request.ossEndpoint);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.overwriteOssObject)) {
            query.put("OverwriteOssObject", request.overwriteOssObject);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sequenceOssObject)) {
            query.put("SequenceOssObject", request.sequenceOssObject);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.timeInterval)) {
            query.put("TimeInterval", request.timeInterval);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveAppSnapshotConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveAppSnapshotConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you fully understand the billing method and pricing of live stream snapshots in ApsaraVideo Live. For more information, see <a href="https://help.aliyun.com/document_detail/195286.html">Billing of live stream snapshots</a>.</p>
     * <ul>
     * <li>Make sure that Object Storage Service (OSS) is activated and a specific bucket is created. This way, ApsaraVideo Live can store live stream snapshots in the bucket. For more information, see <a href="https://help.aliyun.com/document_detail/84932.html">Configure OSS</a>.</li>
     * <li>If you store snapshots in OSS, storage fees are generated. For more information, see <a href="https://help.aliyun.com/document_detail/173534.html">Storage fees</a>.</li>
     * <li>The OSS bucket must reside in the same region as the live center of the streaming domain. Cross-region snapshot capture is not supported.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures the snapshot feature for a streaming domain. The captured snapshots are stored in Object Storage Service (OSS). The configuration takes effect after you restart stream ingest.</p>
     * 
     * @param request AddLiveAppSnapshotConfigRequest
     * @return AddLiveAppSnapshotConfigResponse
     */
    public AddLiveAppSnapshotConfigResponse addLiveAppSnapshotConfig(AddLiveAppSnapshotConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveAppSnapshotConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The content moderation feature detects undesirable sensitive content in the audio from live streams and returns callbacks to notify you of the violations. Then, you can manually review the content and take actions accordingly.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds an audio moderation configuration.</p>
     * 
     * @param request AddLiveAudioAuditConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveAudioAuditConfigResponse
     */
    public AddLiveAudioAuditConfigResponse addLiveAudioAuditConfigWithOptions(AddLiveAudioAuditConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.bizType)) {
            query.put("BizType", request.bizType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossBucket)) {
            query.put("OssBucket", request.ossBucket);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossEndpoint)) {
            query.put("OssEndpoint", request.ossEndpoint);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossObject)) {
            query.put("OssObject", request.ossObject);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveAudioAuditConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveAudioAuditConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The content moderation feature detects undesirable sensitive content in the audio from live streams and returns callbacks to notify you of the violations. Then, you can manually review the content and take actions accordingly.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds an audio moderation configuration.</p>
     * 
     * @param request AddLiveAudioAuditConfigRequest
     * @return AddLiveAudioAuditConfigResponse
     */
    public AddLiveAudioAuditConfigResponse addLiveAudioAuditConfig(AddLiveAudioAuditConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveAudioAuditConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The content moderation feature returns the audio moderation results based on the configured callback template.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures callbacks for audio moderation results.</p>
     * 
     * @param request AddLiveAudioAuditNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveAudioAuditNotifyConfigResponse
     */
    public AddLiveAudioAuditNotifyConfigResponse addLiveAudioAuditNotifyConfigWithOptions(AddLiveAudioAuditNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.callback)) {
            query.put("Callback", request.callback);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.callbackTemplate)) {
            query.put("CallbackTemplate", request.callbackTemplate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveAudioAuditNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveAudioAuditNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The content moderation feature returns the audio moderation results based on the configured callback template.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures callbacks for audio moderation results.</p>
     * 
     * @param request AddLiveAudioAuditNotifyConfigRequest
     * @return AddLiveAudioAuditNotifyConfigResponse
     */
    public AddLiveAudioAuditNotifyConfigResponse addLiveAudioAuditNotifyConfig(AddLiveAudioAuditNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveAudioAuditNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a configuration of live center stream relay.</p>
     * 
     * @param request AddLiveCenterTransferRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveCenterTransferResponse
     */
    public AddLiveCenterTransferResponse addLiveCenterTransferWithOptions(AddLiveCenterTransferRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dstUrl)) {
            query.put("DstUrl", request.dstUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transferArgs)) {
            query.put("TransferArgs", request.transferArgs);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveCenterTransfer"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveCenterTransferResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a configuration of live center stream relay.</p>
     * 
     * @param request AddLiveCenterTransferRequest
     * @return AddLiveCenterTransferResponse
     */
    public AddLiveCenterTransferResponse addLiveCenterTransfer(AddLiveCenterTransferRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveCenterTransferWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The automated review feature sends notifications about violations to the callback URL in real time. Then, you can manually review the content and take actions accordingly.</p>
     * <ul>
     * <li>Only some live centers support the automated review feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures callbacks for video moderation results. As a result, a callback URL that is used to receive the callback notifications is added.</p>
     * 
     * @param request AddLiveDetectNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveDetectNotifyConfigResponse
     */
    public AddLiveDetectNotifyConfigResponse addLiveDetectNotifyConfigWithOptions(AddLiveDetectNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyUrl)) {
            query.put("NotifyUrl", request.notifyUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveDetectNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveDetectNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The automated review feature sends notifications about violations to the callback URL in real time. Then, you can manually review the content and take actions accordingly.</p>
     * <ul>
     * <li>Only some live centers support the automated review feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures callbacks for video moderation results. As a result, a callback URL that is used to receive the callback notifications is added.</p>
     * 
     * @param request AddLiveDetectNotifyConfigRequest
     * @return AddLiveDetectNotifyConfigResponse
     */
    public AddLiveDetectNotifyConfigResponse addLiveDetectNotifyConfig(AddLiveDetectNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveDetectNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You must activate ApsaraVideo Live before you add a domain name. For more information, see <a href="https://help.aliyun.com/document_detail/195292.html">Activate ApsaraVideo Live</a>.</p>
     * <ul>
     * <li>ApsaraVideo Live verifies the ownership of a new domain name that you add. After the verification is passed, the domain name is added to ApsaraVideo Live. ApsaraVideo Live allows you to use a Domain Name System (DNS) record or a verification file to verify the ownership of a domain name. For more information, see <a href="https://help.aliyun.com/document_detail/184466.html">Verify the ownership of a domain name</a>.</li>
     * <li>To use ApsaraVideo Live to ingest and play streams, you must add an ingest domain and a streaming domain. You can add only one domain name at a time.</li>
     * <li>After you add a domain name, you must configure a CNAME record for the domain name. For more information, see <a href="https://help.aliyun.com/document_detail/84929.html">Add a CNAME record</a>.</li>
     * <li>After you add an ingest domain and a streaming domain, you must associate the streaming domain with the ingest domain. For more information, see <a href="https://help.aliyun.com/document_detail/199338.html">Associate a streaming domain with an ingest domain</a>.<blockquote>
     * <p> From February 19, 2019, domain names that are added by calling the AddLiveDomain operation do not support live center ingest. Domain names that are added by using Alibaba Cloud CDN also do not support live center ingest. When you call the AddLiveDomain operation, you can set the LiveDomainType parameter to liveEdge to add an ingest domain that uses edge ingest or set the LiveDomainType parameter to liveVideo to add a streaming domain. You can associate a streaming domain with an ingest domain by calling the AddLiveDomainMapping operation. Domain names added before February 19, 2019, for which live center ingest was configured, are not affected.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a domain name to ApsaraVideo Live. This operation allows you to add only one domain name at a time.</p>
     * 
     * @param request AddLiveDomainRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveDomainResponse
     */
    public AddLiveDomainResponse addLiveDomainWithOptions(AddLiveDomainRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.checkUrl)) {
            query.put("CheckUrl", request.checkUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.liveDomainType)) {
            query.put("LiveDomainType", request.liveDomainType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerAccount)) {
            query.put("OwnerAccount", request.ownerAccount);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.region)) {
            query.put("Region", request.region);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scope)) {
            query.put("Scope", request.scope);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tag)) {
            query.put("Tag", request.tag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topLevelDomain)) {
            query.put("TopLevelDomain", request.topLevelDomain);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveDomain"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveDomainResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You must activate ApsaraVideo Live before you add a domain name. For more information, see <a href="https://help.aliyun.com/document_detail/195292.html">Activate ApsaraVideo Live</a>.</p>
     * <ul>
     * <li>ApsaraVideo Live verifies the ownership of a new domain name that you add. After the verification is passed, the domain name is added to ApsaraVideo Live. ApsaraVideo Live allows you to use a Domain Name System (DNS) record or a verification file to verify the ownership of a domain name. For more information, see <a href="https://help.aliyun.com/document_detail/184466.html">Verify the ownership of a domain name</a>.</li>
     * <li>To use ApsaraVideo Live to ingest and play streams, you must add an ingest domain and a streaming domain. You can add only one domain name at a time.</li>
     * <li>After you add a domain name, you must configure a CNAME record for the domain name. For more information, see <a href="https://help.aliyun.com/document_detail/84929.html">Add a CNAME record</a>.</li>
     * <li>After you add an ingest domain and a streaming domain, you must associate the streaming domain with the ingest domain. For more information, see <a href="https://help.aliyun.com/document_detail/199338.html">Associate a streaming domain with an ingest domain</a>.<blockquote>
     * <p> From February 19, 2019, domain names that are added by calling the AddLiveDomain operation do not support live center ingest. Domain names that are added by using Alibaba Cloud CDN also do not support live center ingest. When you call the AddLiveDomain operation, you can set the LiveDomainType parameter to liveEdge to add an ingest domain that uses edge ingest or set the LiveDomainType parameter to liveVideo to add a streaming domain. You can associate a streaming domain with an ingest domain by calling the AddLiveDomainMapping operation. Domain names added before February 19, 2019, for which live center ingest was configured, are not affected.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a domain name to ApsaraVideo Live. This operation allows you to add only one domain name at a time.</p>
     * 
     * @param request AddLiveDomainRequest
     * @return AddLiveDomainResponse
     */
    public AddLiveDomainResponse addLiveDomain(AddLiveDomainRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveDomainWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Call the <a href="https://help.aliyun.com/document_detail/88327.html">AddLiveDomain</a> operation to add a streaming domain and an ingest domain, and then call this operation to create the mapping between the two domain names.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates the mapping between a streaming domain and an ingest domain.</p>
     * 
     * @param request AddLiveDomainMappingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveDomainMappingResponse
     */
    public AddLiveDomainMappingResponse addLiveDomainMappingWithOptions(AddLiveDomainMappingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pullDomain)) {
            query.put("PullDomain", request.pullDomain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pushDomain)) {
            query.put("PushDomain", request.pushDomain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveDomainMapping"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveDomainMappingResponse());
    }

    /**
     * <b>description</b> :
     * <p>Call the <a href="https://help.aliyun.com/document_detail/88327.html">AddLiveDomain</a> operation to add a streaming domain and an ingest domain, and then call this operation to create the mapping between the two domain names.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates the mapping between a streaming domain and an ingest domain.</p>
     * 
     * @param request AddLiveDomainMappingRequest
     * @return AddLiveDomainMappingResponse
     */
    public AddLiveDomainMappingResponse addLiveDomainMapping(AddLiveDomainMappingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveDomainMappingWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/88327.html">AddLiveDomain</a> operation to add a main streaming domain and a sub-streaming domain and then call this operation to map the sub-streaming domain to the main streaming domain.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Maps a sub-streaming domain to a main streaming domain.</p>
     * 
     * @param request AddLiveDomainPlayMappingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveDomainPlayMappingResponse
     */
    public AddLiveDomainPlayMappingResponse addLiveDomainPlayMappingWithOptions(AddLiveDomainPlayMappingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.playDomain)) {
            query.put("PlayDomain", request.playDomain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pullDomain)) {
            query.put("PullDomain", request.pullDomain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveDomainPlayMapping"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveDomainPlayMappingResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/88327.html">AddLiveDomain</a> operation to add a main streaming domain and a sub-streaming domain and then call this operation to map the sub-streaming domain to the main streaming domain.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Maps a sub-streaming domain to a main streaming domain.</p>
     * 
     * @param request AddLiveDomainPlayMappingRequest
     * @return AddLiveDomainPlayMappingResponse
     */
    public AddLiveDomainPlayMappingResponse addLiveDomainPlayMapping(AddLiveDomainPlayMappingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveDomainPlayMappingWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Mutes one or more users.</p>
     * 
     * @param tmpReq AddLiveMessageGroupBandRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveMessageGroupBandResponse
     */
    public AddLiveMessageGroupBandResponse addLiveMessageGroupBandWithOptions(AddLiveMessageGroupBandRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        AddLiveMessageGroupBandShrinkRequest request = new AddLiveMessageGroupBandShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.bannedUsers)) {
            request.bannedUsersShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.bannedUsers, "BannedUsers", "simple");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.bannedUsersShrink)) {
            query.put("BannedUsers", request.bannedUsersShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveMessageGroupBand"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveMessageGroupBandResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Mutes one or more users.</p>
     * 
     * @param request AddLiveMessageGroupBandRequest
     * @return AddLiveMessageGroupBandResponse
     */
    public AddLiveMessageGroupBandResponse addLiveMessageGroupBand(AddLiveMessageGroupBandRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveMessageGroupBandWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The first time you configure encapsulation for a domain name, domain acceleration is automatically configured and takes effect in 3 to 5 minutes.</p>
     * <ul>
     * <li>If the streaming domain resides in a region outside China, including Singapore, Germany (Frankfurt), Japan (Tokyo), and Indonesia (Jakarta), you may encounter high latency issues. We recommend that you test and verify whether the settings meet expectations.</li>
     * <li>You can call this operation to add a live stream encapsulation configuration. The configuration takes effect only after you re-ingest the stream.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 300 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a live stream encapsulation configuration.</p>
     * 
     * @param request AddLivePackageConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLivePackageConfigResponse
     */
    public AddLivePackageConfigResponse addLivePackageConfigWithOptions(AddLivePackageConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ignoreTranscode)) {
            query.put("IgnoreTranscode", request.ignoreTranscode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.partDuration)) {
            query.put("PartDuration", request.partDuration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.protocol)) {
            query.put("Protocol", request.protocol);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.segmentDuration)) {
            query.put("SegmentDuration", request.segmentDuration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.segmentNum)) {
            query.put("SegmentNum", request.segmentNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLivePackageConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLivePackageConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The first time you configure encapsulation for a domain name, domain acceleration is automatically configured and takes effect in 3 to 5 minutes.</p>
     * <ul>
     * <li>If the streaming domain resides in a region outside China, including Singapore, Germany (Frankfurt), Japan (Tokyo), and Indonesia (Jakarta), you may encounter high latency issues. We recommend that you test and verify whether the settings meet expectations.</li>
     * <li>You can call this operation to add a live stream encapsulation configuration. The configuration takes effect only after you re-ingest the stream.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 300 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a live stream encapsulation configuration.</p>
     * 
     * @param request AddLivePackageConfigRequest
     * @return AddLivePackageConfigResponse
     */
    public AddLivePackageConfigResponse addLivePackageConfig(AddLivePackageConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLivePackageConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you fully understand the billing method and pricing of stream pulling in ApsaraVideo Live. For more information, see <a href="https://help.aliyun.com/document_detail/195284.html">Billing of standard streaming</a>.</p>
     * <ul>
     * <li>Stream pulling refers to the process of pulling live streams from third-party streaming URLs to a live center of ApsaraVideo Live for CDN acceleration.</li>
     * <li>You can call this operation only for regular stream pulling. That is, you can specify the start time and end time to pull live streams.</li>
     * <li>Regular stream pulling and triggered stream pulling are supported in the ApsaraVideo Live console. For more information, see <a href="https://help.aliyun.com/document_detail/199452.html">Configure stream pulling</a>.</li>
     * <li>You can specify custom values for the AppName and StreamName parameters. Streaming URLs that are generated vary based on different values of the AppName and StreamName parameters. You can use the <a href="https://help.aliyun.com/document_detail/197400.html">URL generator</a> to generate a streaming URL.</li>
     * <li>A configuration is identified by the DomainName, AppName, and StreamName parameters all together. If you try to call this operation to add a configuration that has the same DomainName, AppName, and StreamName parameters as an existing configuration, an error indicating that the configuration already exists is returned.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a stream pulling configuration for a live stream, which includes parameters such as the origin URL, start time, and end time.</p>
     * 
     * @param request AddLivePullStreamInfoConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLivePullStreamInfoConfigResponse
     */
    public AddLivePullStreamInfoConfigResponse addLivePullStreamInfoConfigWithOptions(AddLivePullStreamInfoConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceUrl)) {
            query.put("SourceUrl", request.sourceUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLivePullStreamInfoConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLivePullStreamInfoConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you fully understand the billing method and pricing of stream pulling in ApsaraVideo Live. For more information, see <a href="https://help.aliyun.com/document_detail/195284.html">Billing of standard streaming</a>.</p>
     * <ul>
     * <li>Stream pulling refers to the process of pulling live streams from third-party streaming URLs to a live center of ApsaraVideo Live for CDN acceleration.</li>
     * <li>You can call this operation only for regular stream pulling. That is, you can specify the start time and end time to pull live streams.</li>
     * <li>Regular stream pulling and triggered stream pulling are supported in the ApsaraVideo Live console. For more information, see <a href="https://help.aliyun.com/document_detail/199452.html">Configure stream pulling</a>.</li>
     * <li>You can specify custom values for the AppName and StreamName parameters. Streaming URLs that are generated vary based on different values of the AppName and StreamName parameters. You can use the <a href="https://help.aliyun.com/document_detail/197400.html">URL generator</a> to generate a streaming URL.</li>
     * <li>A configuration is identified by the DomainName, AppName, and StreamName parameters all together. If you try to call this operation to add a configuration that has the same DomainName, AppName, and StreamName parameters as an existing configuration, an error indicating that the configuration already exists is returned.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a stream pulling configuration for a live stream, which includes parameters such as the origin URL, start time, and end time.</p>
     * 
     * @param request AddLivePullStreamInfoConfigRequest
     * @return AddLivePullStreamInfoConfigResponse
     */
    public AddLivePullStreamInfoConfigResponse addLivePullStreamInfoConfig(AddLivePullStreamInfoConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLivePullStreamInfoConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to configure recording callbacks for a domain name, you can query whether the domain name already has recording callbacks configured. For more information, see <a href="https://help.aliyun.com/document_detail/2847893.html">DescribeLiveRecordNotifyConfig</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures recording callbacks for a domain name.</p>
     * 
     * @param request AddLiveRecordNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveRecordNotifyConfigResponse
     */
    public AddLiveRecordNotifyConfigResponse addLiveRecordNotifyConfigWithOptions(AddLiveRecordNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.needStatusNotify)) {
            query.put("NeedStatusNotify", request.needStatusNotify);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyUrl)) {
            query.put("NotifyUrl", request.notifyUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.onDemandUrl)) {
            query.put("OnDemandUrl", request.onDemandUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveRecordNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveRecordNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to configure recording callbacks for a domain name, you can query whether the domain name already has recording callbacks configured. For more information, see <a href="https://help.aliyun.com/document_detail/2847893.html">DescribeLiveRecordNotifyConfig</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures recording callbacks for a domain name.</p>
     * 
     * @param request AddLiveRecordNotifyConfigRequest
     * @return AddLiveRecordNotifyConfigResponse
     */
    public AddLiveRecordNotifyConfigResponse addLiveRecordNotifyConfig(AddLiveRecordNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveRecordNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to configure the Live-to-VOD feature to store recordings in the media library of ApsaraVideo VOD.</p>
     * <blockquote>
     * <p> You cannot configure the Live-to-VOD feature by using a Finance Cloud account.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a Live-to-VOD configuration to store recordings in the media library of ApsaraVideo VOD.</p>
     * 
     * @param request AddLiveRecordVodConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveRecordVodConfigResponse
     */
    public AddLiveRecordVodConfigResponse addLiveRecordVodConfigWithOptions(AddLiveRecordVodConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.autoCompose)) {
            query.put("AutoCompose", request.autoCompose);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.composeVodTranscodeGroupId)) {
            query.put("ComposeVodTranscodeGroupId", request.composeVodTranscodeGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.cycleDuration)) {
            query.put("CycleDuration", request.cycleDuration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.onDemand)) {
            query.put("OnDemand", request.onDemand);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.storageLocation)) {
            query.put("StorageLocation", request.storageLocation);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.vodTranscodeGroupId)) {
            query.put("VodTranscodeGroupId", request.vodTranscodeGroupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveRecordVodConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveRecordVodConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to configure the Live-to-VOD feature to store recordings in the media library of ApsaraVideo VOD.</p>
     * <blockquote>
     * <p> You cannot configure the Live-to-VOD feature by using a Finance Cloud account.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a Live-to-VOD configuration to store recordings in the media library of ApsaraVideo VOD.</p>
     * 
     * @param request AddLiveRecordVodConfigRequest
     * @return AddLiveRecordVodConfigResponse
     */
    public AddLiveRecordVodConfigResponse addLiveRecordVodConfig(AddLiveRecordVodConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveRecordVodConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <ul>
     * <li>The live streaming audit function identifies and reviews违规sensitive content at the domain and App level, and promptly notifies users of such violations via callbacks. Users can then review the content and take appropriate actions.</li>
     * <li>Currently, only some live streaming centers support intelligent auditing. For a list of live streaming centers that support this feature, please refer to <a href="https://help.aliyun.com/document_detail/193730.html">Service Regions</a>.</li>
     * </ul>
     * <h2>QPS Limitation</h2>
     * <p>The QPS limit for this API per user is 30 requests/second. Exceeding this limit will result in API throttling, which may impact your services. Please use the API judiciously. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limitations</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a video moderation configuration for live streams in an application under a domain name.</p>
     * 
     * @param request AddLiveSnapshotDetectPornConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveSnapshotDetectPornConfigResponse
     */
    public AddLiveSnapshotDetectPornConfigResponse addLiveSnapshotDetectPornConfigWithOptions(AddLiveSnapshotDetectPornConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossBucket)) {
            query.put("OssBucket", request.ossBucket);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossEndpoint)) {
            query.put("OssEndpoint", request.ossEndpoint);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossObject)) {
            query.put("OssObject", request.ossObject);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scene)) {
            query.put("Scene", request.scene);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveSnapshotDetectPornConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveSnapshotDetectPornConfigResponse());
    }

    /**
     * <b>description</b> :
     * <ul>
     * <li>The live streaming audit function identifies and reviews违规sensitive content at the domain and App level, and promptly notifies users of such violations via callbacks. Users can then review the content and take appropriate actions.</li>
     * <li>Currently, only some live streaming centers support intelligent auditing. For a list of live streaming centers that support this feature, please refer to <a href="https://help.aliyun.com/document_detail/193730.html">Service Regions</a>.</li>
     * </ul>
     * <h2>QPS Limitation</h2>
     * <p>The QPS limit for this API per user is 30 requests/second. Exceeding this limit will result in API throttling, which may impact your services. Please use the API judiciously. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limitations</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a video moderation configuration for live streams in an application under a domain name.</p>
     * 
     * @param request AddLiveSnapshotDetectPornConfigRequest
     * @return AddLiveSnapshotDetectPornConfigResponse
     */
    public AddLiveSnapshotDetectPornConfigResponse addLiveSnapshotDetectPornConfig(AddLiveSnapshotDetectPornConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveSnapshotDetectPornConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h3>QPS Limit</h3>
     * <p>The QPS limit for this API per user is 30 times/second. Exceeding this limit will result in API calls being throttled, which may impact your business operations. Please use the API reasonably. For more information, please refer to <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limitation</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures snapshot callbacks.</p>
     * 
     * @param request AddLiveSnapshotNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveSnapshotNotifyConfigResponse
     */
    public AddLiveSnapshotNotifyConfigResponse addLiveSnapshotNotifyConfigWithOptions(AddLiveSnapshotNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyAuthKey)) {
            query.put("NotifyAuthKey", request.notifyAuthKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyReqAuth)) {
            query.put("NotifyReqAuth", request.notifyReqAuth);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyUrl)) {
            query.put("NotifyUrl", request.notifyUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveSnapshotNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveSnapshotNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h3>QPS Limit</h3>
     * <p>The QPS limit for this API per user is 30 times/second. Exceeding this limit will result in API calls being throttled, which may impact your business operations. Please use the API reasonably. For more information, please refer to <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limitation</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures snapshot callbacks.</p>
     * 
     * @param request AddLiveSnapshotNotifyConfigRequest
     * @return AddLiveSnapshotNotifyConfigResponse
     */
    public AddLiveSnapshotNotifyConfigResponse addLiveSnapshotNotifyConfig(AddLiveSnapshotNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveSnapshotNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Invoke AddLiveStreamMerge to add primary and backup stream merging configuration.</p>
     * 
     * @param request AddLiveStreamMergeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveStreamMergeResponse
     */
    public AddLiveStreamMergeResponse addLiveStreamMergeWithOptions(AddLiveStreamMergeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.inAppName1)) {
            query.put("InAppName1", request.inAppName1);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.inAppName2)) {
            query.put("InAppName2", request.inAppName2);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.inStreamName1)) {
            query.put("InStreamName1", request.inStreamName1);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.inStreamName2)) {
            query.put("InStreamName2", request.inStreamName2);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.protocol)) {
            query.put("Protocol", request.protocol);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveStreamMerge"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveStreamMergeResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Invoke AddLiveStreamMerge to add primary and backup stream merging configuration.</p>
     * 
     * @param request AddLiveStreamMergeRequest
     * @return AddLiveStreamMergeResponse
     */
    public AddLiveStreamMergeResponse addLiveStreamMerge(AddLiveStreamMergeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveStreamMergeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You must obtain the customer master key (CMK) in Key Management Service (KMS) before you call this operation to add transcoding configurations. Only standard transcoding templates and Narrowband HD™ transcoding templates are supported for this operation.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds transcoding configurations for a streaming domain.</p>
     * 
     * @param request AddLiveStreamTranscodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveStreamTranscodeResponse
     */
    public AddLiveStreamTranscodeResponse addLiveStreamTranscodeWithOptions(AddLiveStreamTranscodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.encryptParameters)) {
            query.put("EncryptParameters", request.encryptParameters);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.lazy)) {
            query.put("Lazy", request.lazy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.template)) {
            query.put("Template", request.template);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveStreamTranscode"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveStreamTranscodeResponse());
    }

    /**
     * <b>description</b> :
     * <p>You must obtain the customer master key (CMK) in Key Management Service (KMS) before you call this operation to add transcoding configurations. Only standard transcoding templates and Narrowband HD™ transcoding templates are supported for this operation.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds transcoding configurations for a streaming domain.</p>
     * 
     * @param request AddLiveStreamTranscodeRequest
     * @return AddLiveStreamTranscodeResponse
     */
    public AddLiveStreamTranscodeResponse addLiveStreamTranscode(AddLiveStreamTranscodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveStreamTranscodeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to create a watermark template and configure information such as the watermark content and layout in the template.</p>
     * <ul>
     * <li>After you create a watermark template, you must also call the <a href="https://help.aliyun.com/document_detail/2848100.html">AddLiveStreamWatermarkRule</a> operation to add a watermark rule. A live stream in progress can contain the watermark only after the stream is re-ingested.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a watermark template.</p>
     * 
     * @param request AddLiveStreamWatermarkRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveStreamWatermarkResponse
     */
    public AddLiveStreamWatermarkResponse addLiveStreamWatermarkWithOptions(AddLiveStreamWatermarkRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.height)) {
            query.put("Height", request.height);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.offsetCorner)) {
            query.put("OffsetCorner", request.offsetCorner);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pictureUrl)) {
            query.put("PictureUrl", request.pictureUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.refHeight)) {
            query.put("RefHeight", request.refHeight);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.refWidth)) {
            query.put("RefWidth", request.refWidth);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transparency)) {
            query.put("Transparency", request.transparency);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.XOffset)) {
            query.put("XOffset", request.XOffset);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.YOffset)) {
            query.put("YOffset", request.YOffset);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveStreamWatermark"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveStreamWatermarkResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to create a watermark template and configure information such as the watermark content and layout in the template.</p>
     * <ul>
     * <li>After you create a watermark template, you must also call the <a href="https://help.aliyun.com/document_detail/2848100.html">AddLiveStreamWatermarkRule</a> operation to add a watermark rule. A live stream in progress can contain the watermark only after the stream is re-ingested.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a watermark template.</p>
     * 
     * @param request AddLiveStreamWatermarkRequest
     * @return AddLiveStreamWatermarkResponse
     */
    public AddLiveStreamWatermarkResponse addLiveStreamWatermark(AddLiveStreamWatermarkRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveStreamWatermarkWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>After calling the <a href="https://help.aliyun.com/document_detail/469416.html">AddLiveStreamWatermark</a> API to add a watermark template, you can use this interface to add watermark rules. </p>
     * <h2>QPS Limit</h2>
     * <p> The QPS limit for this interface per user is 60 times/second. Exceeding the limit will result in API calls being throttled, which may impact your business. Please use it reasonably. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limit</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a watermark rule.</p>
     * 
     * @param request AddLiveStreamWatermarkRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddLiveStreamWatermarkRuleResponse
     */
    public AddLiveStreamWatermarkRuleResponse addLiveStreamWatermarkRuleWithOptions(AddLiveStreamWatermarkRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.stream)) {
            query.put("Stream", request.stream);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateId)) {
            query.put("TemplateId", request.templateId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddLiveStreamWatermarkRule"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddLiveStreamWatermarkRuleResponse());
    }

    /**
     * <b>description</b> :
     * <p>After calling the <a href="https://help.aliyun.com/document_detail/469416.html">AddLiveStreamWatermark</a> API to add a watermark template, you can use this interface to add watermark rules. </p>
     * <h2>QPS Limit</h2>
     * <p> The QPS limit for this interface per user is 60 times/second. Exceeding the limit will result in API calls being throttled, which may impact your business. Please use it reasonably. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limit</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a watermark rule.</p>
     * 
     * @param request AddLiveStreamWatermarkRuleRequest
     * @return AddLiveStreamWatermarkRuleResponse
     */
    public AddLiveStreamWatermarkRuleResponse addLiveStreamWatermarkRule(AddLiveStreamWatermarkRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addLiveStreamWatermarkRuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Create a production studio, add a layout and components to the production studio, and then call this operation to add episodes. If no episode list exists in the production studio, this operation creates an episode list for the production studio. For more information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds episodes to an episode list.</p>
     * 
     * @param request AddPlaylistItemsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddPlaylistItemsResponse
     */
    public AddPlaylistItemsResponse addPlaylistItemsWithOptions(AddPlaylistItemsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programConfig)) {
            query.put("ProgramConfig", request.programConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programId)) {
            query.put("ProgramId", request.programId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programItems)) {
            query.put("ProgramItems", request.programItems);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddPlaylistItems"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddPlaylistItemsResponse());
    }

    /**
     * <b>description</b> :
     * <p>Create a production studio, add a layout and components to the production studio, and then call this operation to add episodes. If no episode list exists in the production studio, this operation creates an episode list for the production studio. For more information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds episodes to an episode list.</p>
     * 
     * @param request AddPlaylistItemsRequest
     * @return AddPlaylistItemsResponse
     */
    public AddPlaylistItemsResponse addPlaylistItems(AddPlaylistItemsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addPlaylistItemsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to add an RTS transcoding configuration. This operation supports four template types: h264, h264-nbhd, h264-origin, and audio.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a Real-Time Streaming (RTS) transcoding configuration for a streaming domain.</p>
     * 
     * @param request AddRtsLiveStreamTranscodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddRtsLiveStreamTranscodeResponse
     */
    public AddRtsLiveStreamTranscodeResponse addRtsLiveStreamTranscodeWithOptions(AddRtsLiveStreamTranscodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioBitrate)) {
            query.put("AudioBitrate", request.audioBitrate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioChannelNum)) {
            query.put("AudioChannelNum", request.audioChannelNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioCodec)) {
            query.put("AudioCodec", request.audioCodec);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioProfile)) {
            query.put("AudioProfile", request.audioProfile);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioRate)) {
            query.put("AudioRate", request.audioRate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deleteBframes)) {
            query.put("DeleteBframes", request.deleteBframes);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.FPS)) {
            query.put("FPS", request.FPS);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.gop)) {
            query.put("Gop", request.gop);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.height)) {
            query.put("Height", request.height);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.lazy)) {
            query.put("Lazy", request.lazy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.opus)) {
            query.put("Opus", request.opus);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.profile)) {
            query.put("Profile", request.profile);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.template)) {
            query.put("Template", request.template);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateType)) {
            query.put("TemplateType", request.templateType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.videoBitrate)) {
            query.put("VideoBitrate", request.videoBitrate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.width)) {
            query.put("Width", request.width);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddRtsLiveStreamTranscode"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddRtsLiveStreamTranscodeResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to add an RTS transcoding configuration. This operation supports four template types: h264, h264-nbhd, h264-origin, and audio.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a Real-Time Streaming (RTS) transcoding configuration for a streaming domain.</p>
     * 
     * @param request AddRtsLiveStreamTranscodeRequest
     * @return AddRtsLiveStreamTranscodeResponse
     */
    public AddRtsLiveStreamTranscodeResponse addRtsLiveStreamTranscode(AddRtsLiveStreamTranscodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addRtsLiveStreamTranscodeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You must create a production studio in the new playlist mode and add media resources to the production studio before you can call this operation. For information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.
     * You can add up to 1,000 episodes to an episode list.</p>
     * <blockquote>
     * </blockquote>
     * <ul>
     * <li>When you select media resources from ApsaraVideo VOD, we recommend that you select resources that are stored in hosted OSS buckets. Resources stored in non-hosted OSS buckets have a validity period. Pay attention to the validity if you select resources that are stored in non-hosted OSS buckets.</li>
     * <li>When you add media resources to a production studio, we recommend that you select resources from ApsaraVideo Live and ApsaraVideo VOD. If you add a third-party stream by specifying a streaming URL, there is a possibility that the stream fails to be played. You must pay attention to the quality and validity of the third-party stream.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds an episode to an episode list.</p>
     * 
     * @param request AddShowIntoShowListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddShowIntoShowListResponse
     */
    public AddShowIntoShowListResponse addShowIntoShowListWithOptions(AddShowIntoShowListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.duration)) {
            query.put("Duration", request.duration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.liveInputType)) {
            query.put("LiveInputType", request.liveInputType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.repeatTimes)) {
            query.put("RepeatTimes", request.repeatTimes);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceId)) {
            query.put("ResourceId", request.resourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceType)) {
            query.put("ResourceType", request.resourceType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceUrl)) {
            query.put("ResourceUrl", request.resourceUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.showName)) {
            query.put("ShowName", request.showName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.spot)) {
            query.put("Spot", request.spot);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.isBatchMode)) {
            query.put("isBatchMode", request.isBatchMode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.showList)) {
            query.put("showList", request.showList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddShowIntoShowList"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddShowIntoShowListResponse());
    }

    /**
     * <b>description</b> :
     * <p>You must create a production studio in the new playlist mode and add media resources to the production studio before you can call this operation. For information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.
     * You can add up to 1,000 episodes to an episode list.</p>
     * <blockquote>
     * </blockquote>
     * <ul>
     * <li>When you select media resources from ApsaraVideo VOD, we recommend that you select resources that are stored in hosted OSS buckets. Resources stored in non-hosted OSS buckets have a validity period. Pay attention to the validity if you select resources that are stored in non-hosted OSS buckets.</li>
     * <li>When you add media resources to a production studio, we recommend that you select resources from ApsaraVideo Live and ApsaraVideo VOD. If you add a third-party stream by specifying a streaming URL, there is a possibility that the stream fails to be played. You must pay attention to the quality and validity of the third-party stream.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds an episode to an episode list.</p>
     * 
     * @param request AddShowIntoShowListRequest
     * @return AddShowIntoShowListResponse
     */
    public AddShowIntoShowListResponse addShowIntoShowList(AddShowIntoShowListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addShowIntoShowListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to configure a common layout or a studio layout for a virtual studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures a layout for a virtual studio.</p>
     * 
     * @param request AddStudioLayoutRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddStudioLayoutResponse
     */
    public AddStudioLayoutResponse addStudioLayoutWithOptions(AddStudioLayoutRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.bgImageConfig)) {
            query.put("BgImageConfig", request.bgImageConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.commonConfig)) {
            query.put("CommonConfig", request.commonConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layerOrderConfigList)) {
            query.put("LayerOrderConfigList", request.layerOrderConfigList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layoutName)) {
            query.put("LayoutName", request.layoutName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layoutType)) {
            query.put("LayoutType", request.layoutType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mediaInputConfigList)) {
            query.put("MediaInputConfigList", request.mediaInputConfigList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.screenInputConfigList)) {
            query.put("ScreenInputConfigList", request.screenInputConfigList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddStudioLayout"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddStudioLayoutResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to configure a common layout or a studio layout for a virtual studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures a layout for a virtual studio.</p>
     * 
     * @param request AddStudioLayoutRequest
     * @return AddStudioLayoutResponse
     */
    public AddStudioLayoutResponse addStudioLayout(AddStudioLayoutRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addStudioLayoutWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the streaming domain, and then call this operation to insert SEI to the transcoded streams. Make sure that the stream name is the name of the source stream. This way, the SEI is inserted to all the transcoded streams.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Inserts supplemental enhancement information (SEI) to transcoded streams.</p>
     * 
     * @param request AddTrancodeSEIRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddTrancodeSEIResponse
     */
    public AddTrancodeSEIResponse addTrancodeSEIWithOptions(AddTrancodeSEIRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.delay)) {
            query.put("Delay", request.delay);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pattern)) {
            query.put("Pattern", request.pattern);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.repeat)) {
            query.put("Repeat", request.repeat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.text)) {
            query.put("Text", request.text);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddTrancodeSEI"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddTrancodeSEIResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the streaming domain, and then call this operation to insert SEI to the transcoded streams. Make sure that the stream name is the name of the source stream. This way, the SEI is inserted to all the transcoded streams.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Inserts supplemental enhancement information (SEI) to transcoded streams.</p>
     * 
     * @param request AddTrancodeSEIRequest
     * @return AddTrancodeSEIResponse
     */
    public AddTrancodeSEIResponse addTrancodeSEI(AddTrancodeSEIRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addTrancodeSEIWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Mutes a group.</p>
     * 
     * @param tmpReq BanLiveMessageGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BanLiveMessageGroupResponse
     */
    public BanLiveMessageGroupResponse banLiveMessageGroupWithOptions(BanLiveMessageGroupRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        BanLiveMessageGroupShrinkRequest request = new BanLiveMessageGroupShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.exceptUsers)) {
            request.exceptUsersShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.exceptUsers, "ExceptUsers", "simple");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.exceptUsersShrink)) {
            query.put("ExceptUsers", request.exceptUsersShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BanLiveMessageGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BanLiveMessageGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Mutes a group.</p>
     * 
     * @param request BanLiveMessageGroupRequest
     * @return BanLiveMessageGroupResponse
     */
    public BanLiveMessageGroupResponse banLiveMessageGroup(BanLiveMessageGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.banLiveMessageGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the domain names for which you want to delete the configurations, and then call this operation to delete the configurations of these domain domains at a time.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configurations of multiple domain names at a time.</p>
     * 
     * @param request BatchDeleteLiveDomainConfigsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchDeleteLiveDomainConfigsResponse
     */
    public BatchDeleteLiveDomainConfigsResponse batchDeleteLiveDomainConfigsWithOptions(BatchDeleteLiveDomainConfigsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainNames)) {
            query.put("DomainNames", request.domainNames);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.functionNames)) {
            query.put("FunctionNames", request.functionNames);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerAccount)) {
            query.put("OwnerAccount", request.ownerAccount);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchDeleteLiveDomainConfigs"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchDeleteLiveDomainConfigsResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the domain names for which you want to delete the configurations, and then call this operation to delete the configurations of these domain domains at a time.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configurations of multiple domain names at a time.</p>
     * 
     * @param request BatchDeleteLiveDomainConfigsRequest
     * @return BatchDeleteLiveDomainConfigsResponse
     */
    public BatchDeleteLiveDomainConfigsResponse batchDeleteLiveDomainConfigs(BatchDeleteLiveDomainConfigsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchDeleteLiveDomainConfigsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>You can query whether up to 20 users are online at a time.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>根据一个或多个用户uid查询用户是否在线</p>
     * 
     * @param request BatchGetOnlineUsersRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchGetOnlineUsersResponse
     */
    public BatchGetOnlineUsersResponse batchGetOnlineUsersWithOptions(BatchGetOnlineUsersRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userIds)) {
            body.put("UserIds", request.userIds);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchGetOnlineUsers"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchGetOnlineUsersResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>You can query whether up to 20 users are online at a time.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>根据一个或多个用户uid查询用户是否在线</p>
     * 
     * @param request BatchGetOnlineUsersRequest
     * @return BatchGetOnlineUsersResponse
     */
    public BatchGetOnlineUsersResponse batchGetOnlineUsers(BatchGetOnlineUsersRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchGetOnlineUsersWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the domain names that you want to configure, and then call this operation to configure the domain names in batches.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures multiple domain names at a time.</p>
     * 
     * @param request BatchSetLiveDomainConfigsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchSetLiveDomainConfigsResponse
     */
    public BatchSetLiveDomainConfigsResponse batchSetLiveDomainConfigsWithOptions(BatchSetLiveDomainConfigsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainNames)) {
            query.put("DomainNames", request.domainNames);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.functions)) {
            query.put("Functions", request.functions);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerAccount)) {
            query.put("OwnerAccount", request.ownerAccount);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchSetLiveDomainConfigs"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchSetLiveDomainConfigsResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the domain names that you want to configure, and then call this operation to configure the domain names in batches.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures multiple domain names at a time.</p>
     * 
     * @param request BatchSetLiveDomainConfigsRequest
     * @return BatchSetLiveDomainConfigsResponse
     */
    public BatchSetLiveDomainConfigsResponse batchSetLiveDomainConfigs(BatchSetLiveDomainConfigsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchSetLiveDomainConfigsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS限制</h2>
     * <p>本接口的单用户QPS限制为100次/秒。超过限制，API调用会被限流，这可能会影响您的业务，请合理调用。更多信息，请参见<a href="https://help.aliyun.com/document_detail/343507.html">QPS限制</a>。</p>
     * 
     * <b>summary</b> : 
     * <p>Unmutes a message group.</p>
     * 
     * @param request CancelMuteAllGroupUserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CancelMuteAllGroupUserResponse
     */
    public CancelMuteAllGroupUserResponse cancelMuteAllGroupUserWithOptions(CancelMuteAllGroupUserRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.broadCastType)) {
            body.put("BroadCastType", request.broadCastType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.operatorUserId)) {
            body.put("OperatorUserId", request.operatorUserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CancelMuteAllGroupUser"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CancelMuteAllGroupUserResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS限制</h2>
     * <p>本接口的单用户QPS限制为100次/秒。超过限制，API调用会被限流，这可能会影响您的业务，请合理调用。更多信息，请参见<a href="https://help.aliyun.com/document_detail/343507.html">QPS限制</a>。</p>
     * 
     * <b>summary</b> : 
     * <p>Unmutes a message group.</p>
     * 
     * @param request CancelMuteAllGroupUserRequest
     * @return CancelMuteAllGroupUserResponse
     */
    public CancelMuteAllGroupUserResponse cancelMuteAllGroupUser(CancelMuteAllGroupUserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.cancelMuteAllGroupUserWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Unmutes members in a message group.</p>
     * 
     * @param tmpReq CancelMuteGroupUserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CancelMuteGroupUserResponse
     */
    public CancelMuteGroupUserResponse cancelMuteGroupUserWithOptions(CancelMuteGroupUserRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        CancelMuteGroupUserShrinkRequest request = new CancelMuteGroupUserShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.cancelMuteUserList)) {
            request.cancelMuteUserListShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.cancelMuteUserList, "CancelMuteUserList", "simple");
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.broadCastType)) {
            body.put("BroadCastType", request.broadCastType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.cancelMuteUserListShrink)) {
            body.put("CancelMuteUserList", request.cancelMuteUserListShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.operatorUserId)) {
            body.put("OperatorUserId", request.operatorUserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CancelMuteGroupUser"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CancelMuteGroupUserResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Unmutes members in a message group.</p>
     * 
     * @param request CancelMuteGroupUserRequest
     * @return CancelMuteGroupUserResponse
     */
    public CancelMuteGroupUserResponse cancelMuteGroupUser(CancelMuteGroupUserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.cancelMuteGroupUserWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Changes the resource group to which a domain name belongs. In this case, you move the domain name from the original resource group to another resource group.</p>
     * 
     * @param request ChangeLiveDomainResourceGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ChangeLiveDomainResourceGroupResponse
     */
    public ChangeLiveDomainResourceGroupResponse changeLiveDomainResourceGroupWithOptions(ChangeLiveDomainResourceGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.newResourceGroupId)) {
            query.put("NewResourceGroupId", request.newResourceGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ChangeLiveDomainResourceGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ChangeLiveDomainResourceGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Changes the resource group to which a domain name belongs. In this case, you move the domain name from the original resource group to another resource group.</p>
     * 
     * @param request ChangeLiveDomainResourceGroupRequest
     * @return ChangeLiveDomainResourceGroupResponse
     */
    public ChangeLiveDomainResourceGroupResponse changeLiveDomainResourceGroup(ChangeLiveDomainResourceGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.changeLiveDomainResourceGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries whether a user is in an interactive messaging group.</p>
     * 
     * @param tmpReq CheckLiveMessageUsersInGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CheckLiveMessageUsersInGroupResponse
     */
    public CheckLiveMessageUsersInGroupResponse checkLiveMessageUsersInGroupWithOptions(CheckLiveMessageUsersInGroupRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        CheckLiveMessageUsersInGroupShrinkRequest request = new CheckLiveMessageUsersInGroupShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.userIds)) {
            request.userIdsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.userIds, "UserIds", "simple");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userIdsShrink)) {
            query.put("UserIds", request.userIdsShrink);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CheckLiveMessageUsersInGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CheckLiveMessageUsersInGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries whether a user is in an interactive messaging group.</p>
     * 
     * @param request CheckLiveMessageUsersInGroupRequest
     * @return CheckLiveMessageUsersInGroupResponse
     */
    public CheckLiveMessageUsersInGroupResponse checkLiveMessageUsersInGroup(CheckLiveMessageUsersInGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.checkLiveMessageUsersInGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries whether one or more specified users are online.</p>
     * 
     * @param tmpReq CheckLiveMessageUsersOnlineRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CheckLiveMessageUsersOnlineResponse
     */
    public CheckLiveMessageUsersOnlineResponse checkLiveMessageUsersOnlineWithOptions(CheckLiveMessageUsersOnlineRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        CheckLiveMessageUsersOnlineShrinkRequest request = new CheckLiveMessageUsersOnlineShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.userIds)) {
            request.userIdsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.userIds, "UserIds", "simple");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userIdsShrink)) {
            query.put("UserIds", request.userIdsShrink);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CheckLiveMessageUsersOnline"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CheckLiveMessageUsersOnlineResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries whether one or more specified users are online.</p>
     * 
     * @param request CheckLiveMessageUsersOnlineRequest
     * @return CheckLiveMessageUsersOnlineResponse
     */
    public CheckLiveMessageUsersOnlineResponse checkLiveMessageUsersOnline(CheckLiveMessageUsersOnlineRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.checkLiveMessageUsersOnlineWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the streaming domain, and then call this operation to disable time shifting for the streaming domain or an application or a live stream under the streaming domain.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Disables time shifting for a domain name, or an application or a live stream under the domain name.</p>
     * 
     * @param request CloseLiveShiftRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CloseLiveShiftResponse
     */
    public CloseLiveShiftResponse closeLiveShiftWithOptions(CloseLiveShiftRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CloseLiveShift"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CloseLiveShiftResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the streaming domain, and then call this operation to disable time shifting for the streaming domain or an application or a live stream under the streaming domain.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Disables time shifting for a domain name, or an application or a live stream under the domain name.</p>
     * 
     * @param request CloseLiveShiftRequest
     * @return CloseLiveShiftResponse
     */
    public CloseLiveShiftResponse closeLiveShift(CloseLiveShiftRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.closeLiveShiftWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to duplicate a production studio. This way, a new, identical production studio is created.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Duplicates a production studio.</p>
     * 
     * @param request CopyCasterRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CopyCasterResponse
     */
    public CopyCasterResponse copyCasterWithOptions(CopyCasterRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterName)) {
            query.put("CasterName", request.casterName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.clientToken)) {
            query.put("ClientToken", request.clientToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.srcCasterId)) {
            query.put("SrcCasterId", request.srcCasterId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CopyCaster"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CopyCasterResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to duplicate a production studio. This way, a new, identical production studio is created.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Duplicates a production studio.</p>
     * 
     * @param request CopyCasterRequest
     * @return CopyCasterResponse
     */
    public CopyCasterResponse copyCaster(CopyCasterRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.copyCasterWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Streaming fees and transcoding fees are calculated based on the corresponding output resolutions and durations. For more information, see <a href="https://help.aliyun.com/document_detail/64531.html">Billing of production studios</a>.</p>
     * <ul>
     * <li>You can call this operation to apply the configuration of a source scene to a destination scene. This operation takes effect only if the source scene is a PVW scene and the destination scene is a PGM scene. A PVW scene is a preview scene, and a PGM scene is a program scene.</li>
     * <li>The PVW scene and PGM scene must be in the same production studio.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Applies the configuration of a PVW scene to a PGM scene.</p>
     * 
     * @param request CopyCasterSceneConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CopyCasterSceneConfigResponse
     */
    public CopyCasterSceneConfigResponse copyCasterSceneConfigWithOptions(CopyCasterSceneConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fromSceneId)) {
            query.put("FromSceneId", request.fromSceneId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.toSceneId)) {
            query.put("ToSceneId", request.toSceneId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CopyCasterSceneConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CopyCasterSceneConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Streaming fees and transcoding fees are calculated based on the corresponding output resolutions and durations. For more information, see <a href="https://help.aliyun.com/document_detail/64531.html">Billing of production studios</a>.</p>
     * <ul>
     * <li>You can call this operation to apply the configuration of a source scene to a destination scene. This operation takes effect only if the source scene is a PVW scene and the destination scene is a PGM scene. A PVW scene is a preview scene, and a PGM scene is a program scene.</li>
     * <li>The PVW scene and PGM scene must be in the same production studio.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Applies the configuration of a PVW scene to a PGM scene.</p>
     * 
     * @param request CopyCasterSceneConfigRequest
     * @return CopyCasterSceneConfigResponse
     */
    public CopyCasterSceneConfigResponse copyCasterSceneConfig(CopyCasterSceneConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.copyCasterSceneConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You must enable the production studio feature before you can call this operation to create a production studio. For more information, see <a href="https://help.aliyun.com/document_detail/60361.html">Enable the production studio feature</a>.
     * You can call this operation to create production studios in general mode or playlist mode. Production studios in playlist mode can be used for carousel playback.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a production studio.</p>
     * 
     * @param request CreateCasterRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateCasterResponse
     */
    public CreateCasterResponse createCasterWithOptions(CreateCasterRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterName)) {
            query.put("CasterName", request.casterName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterTemplate)) {
            query.put("CasterTemplate", request.casterTemplate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.chargeType)) {
            query.put("ChargeType", request.chargeType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.clientToken)) {
            query.put("ClientToken", request.clientToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.expireTime)) {
            query.put("ExpireTime", request.expireTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.normType)) {
            query.put("NormType", request.normType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.purchaseTime)) {
            query.put("PurchaseTime", request.purchaseTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tag)) {
            query.put("Tag", request.tag);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateCaster"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateCasterResponse());
    }

    /**
     * <b>description</b> :
     * <p>You must enable the production studio feature before you can call this operation to create a production studio. For more information, see <a href="https://help.aliyun.com/document_detail/60361.html">Enable the production studio feature</a>.
     * You can call this operation to create production studios in general mode or playlist mode. Production studios in playlist mode can be used for carousel playback.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a production studio.</p>
     * 
     * @param request CreateCasterRequest
     * @return CreateCasterResponse
     */
    public CreateCasterResponse createCaster(CreateCasterRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createCasterWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>After you call this operation to create a custom template, record the template name. When you call the <a href="https://help.aliyun.com/document_detail/2848087.html">CreateMixStream</a> operation to create a stream mixing task, you can set the MixStreamTemplate parameter to the name of the custom template. This way, you can use the custom template for stream mixing.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a custom stream mixing template.</p>
     * 
     * @param request CreateCustomTemplateRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateCustomTemplateResponse
     */
    public CreateCustomTemplateResponse createCustomTemplateWithOptions(CreateCustomTemplateRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.customTemplate)) {
            query.put("CustomTemplate", request.customTemplate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.template)) {
            query.put("Template", request.template);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateCustomTemplate"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateCustomTemplateResponse());
    }

    /**
     * <b>description</b> :
     * <p>After you call this operation to create a custom template, record the template name. When you call the <a href="https://help.aliyun.com/document_detail/2848087.html">CreateMixStream</a> operation to create a stream mixing task, you can set the MixStreamTemplate parameter to the name of the custom template. This way, you can use the custom template for stream mixing.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a custom stream mixing template.</p>
     * 
     * @param request CreateCustomTemplateRequest
     * @return CreateCustomTemplateResponse
     */
    public CreateCustomTemplateResponse createCustomTemplate(CreateCustomTemplateRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createCustomTemplateWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to create an edge transcoding task.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates an edge transcoding task.</p>
     * 
     * @param request CreateEdgeTranscodeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateEdgeTranscodeJobResponse
     */
    public CreateEdgeTranscodeJobResponse createEdgeTranscodeJobWithOptions(CreateEdgeTranscodeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.clusterId)) {
            query.put("ClusterId", request.clusterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamInput)) {
            query.put("StreamInput", request.streamInput);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamOutput)) {
            query.put("StreamOutput", request.streamOutput);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateId)) {
            query.put("TemplateId", request.templateId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateEdgeTranscodeJob"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateEdgeTranscodeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to create an edge transcoding task.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates an edge transcoding task.</p>
     * 
     * @param request CreateEdgeTranscodeJobRequest
     * @return CreateEdgeTranscodeJobResponse
     */
    public CreateEdgeTranscodeJobResponse createEdgeTranscodeJob(CreateEdgeTranscodeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createEdgeTranscodeJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create a callback to subscribe to channel or user events. When you create a callback, you can configure parameters such as the callback URL and event type.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a callback to subscribe to channel or user events.</p>
     * 
     * @param request CreateEventSubRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateEventSubResponse
     */
    public CreateEventSubResponse createEventSubWithOptions(CreateEventSubRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.callbackUrl)) {
            query.put("CallbackUrl", request.callbackUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.events)) {
            query.put("Events", request.events);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.users)) {
            query.put("Users", request.users);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateEventSub"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateEventSubResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create a callback to subscribe to channel or user events. When you create a callback, you can configure parameters such as the callback URL and event type.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a callback to subscribe to channel or user events.</p>
     * 
     * @param request CreateEventSubRequest
     * @return CreateEventSubResponse
     */
    public CreateEventSubResponse createEventSub(CreateEventSubRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createEventSubWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <blockquote>
     * <p> The lightweight virtual studio feature is in invitational preview. You can add up to 300 virtual studio templates.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a lightweight virtual studio template.</p>
     * 
     * @param tmpReq CreateLiveAIStudioRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateLiveAIStudioResponse
     */
    public CreateLiveAIStudioResponse createLiveAIStudioWithOptions(CreateLiveAIStudioRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        CreateLiveAIStudioShrinkRequest request = new CreateLiveAIStudioShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.mattingLayout)) {
            request.mattingLayoutShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.mattingLayout, "MattingLayout", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.mediaLayout)) {
            request.mediaLayoutShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.mediaLayout, "MediaLayout", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.backgroundResourceId)) {
            query.put("BackgroundResourceId", request.backgroundResourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.backgroundResourceUrl)) {
            query.put("BackgroundResourceUrl", request.backgroundResourceUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.backgroundType)) {
            query.put("BackgroundType", request.backgroundType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.height)) {
            query.put("Height", request.height);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mattingLayoutShrink)) {
            query.put("MattingLayout", request.mattingLayoutShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mattingType)) {
            query.put("MattingType", request.mattingType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mediaLayoutShrink)) {
            query.put("MediaLayout", request.mediaLayoutShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mediaResourceId)) {
            query.put("MediaResourceId", request.mediaResourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mediaResourceUrl)) {
            query.put("MediaResourceUrl", request.mediaResourceUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mediaType)) {
            query.put("MediaType", request.mediaType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.studioName)) {
            query.put("StudioName", request.studioName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.width)) {
            query.put("Width", request.width);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateLiveAIStudio"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateLiveAIStudioResponse());
    }

    /**
     * <b>description</b> :
     * <blockquote>
     * <p> The lightweight virtual studio feature is in invitational preview. You can add up to 300 virtual studio templates.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a lightweight virtual studio template.</p>
     * 
     * @param request CreateLiveAIStudioRequest
     * @return CreateLiveAIStudioResponse
     */
    public CreateLiveAIStudioResponse createLiveAIStudio(CreateLiveAIStudioRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createLiveAIStudioWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Stream delay is different from latency caused by streaming protocols. Stream delay is a feature that allows you to delay the playback of a live stream that is processed in the cloud.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a stream delay configuration.</p>
     * 
     * @param request CreateLiveDelayConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateLiveDelayConfigResponse
     */
    public CreateLiveDelayConfigResponse createLiveDelayConfigWithOptions(CreateLiveDelayConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.delayTime)) {
            query.put("DelayTime", request.delayTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.stream)) {
            query.put("Stream", request.stream);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskTriggerMode)) {
            query.put("TaskTriggerMode", request.taskTriggerMode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateLiveDelayConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateLiveDelayConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>Stream delay is different from latency caused by streaming protocols. Stream delay is a feature that allows you to delay the playback of a live stream that is processed in the cloud.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Adds a stream delay configuration.</p>
     * 
     * @param request CreateLiveDelayConfigRequest
     * @return CreateLiveDelayConfigResponse
     */
    public CreateLiveDelayConfigResponse createLiveDelayConfig(CreateLiveDelayConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createLiveDelayConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  When you call other operations to manage the interactive messaging application, you must specify the same data center in which the application is created.</p>
     * <ul>
     * <li>You can create up to 300 interactive messaging applications in an Alibaba Cloud account.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates an interactive messaging application.</p>
     * 
     * @param request CreateLiveMessageAppRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateLiveMessageAppResponse
     */
    public CreateLiveMessageAppResponse createLiveMessageAppWithOptions(CreateLiveMessageAppRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.auditType)) {
            query.put("AuditType", request.auditType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.auditUrl)) {
            query.put("AuditUrl", request.auditUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.eventCallbackUrl)) {
            query.put("EventCallbackUrl", request.eventCallbackUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.msgLifeCycle)) {
            query.put("MsgLifeCycle", request.msgLifeCycle);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateLiveMessageApp"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateLiveMessageAppResponse());
    }

    /**
     * <b>description</b> :
     * <p>  When you call other operations to manage the interactive messaging application, you must specify the same data center in which the application is created.</p>
     * <ul>
     * <li>You can create up to 300 interactive messaging applications in an Alibaba Cloud account.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates an interactive messaging application.</p>
     * 
     * @param request CreateLiveMessageAppRequest
     * @return CreateLiveMessageAppResponse
     */
    public CreateLiveMessageAppResponse createLiveMessageApp(CreateLiveMessageAppRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createLiveMessageAppWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848162.html">CreateLiveMessageApp</a> operation to create an interactive messaging application.</p>
     * <ul>
     * <li>You can create up to 5,000 interactive messaging groups in an interactive messaging application.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates an interactive messaging group.</p>
     * 
     * @param tmpReq CreateLiveMessageGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateLiveMessageGroupResponse
     */
    public CreateLiveMessageGroupResponse createLiveMessageGroupWithOptions(CreateLiveMessageGroupRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        CreateLiveMessageGroupShrinkRequest request = new CreateLiveMessageGroupShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.administrators)) {
            request.administratorsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.administrators, "Administrators", "simple");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.administratorsShrink)) {
            query.put("Administrators", request.administratorsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.creatorId)) {
            query.put("CreatorId", request.creatorId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupInfo)) {
            query.put("GroupInfo", request.groupInfo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupName)) {
            query.put("GroupName", request.groupName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateLiveMessageGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateLiveMessageGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848162.html">CreateLiveMessageApp</a> operation to create an interactive messaging application.</p>
     * <ul>
     * <li>You can create up to 5,000 interactive messaging groups in an interactive messaging application.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates an interactive messaging group.</p>
     * 
     * @param request CreateLiveMessageGroupRequest
     * @return CreateLiveMessageGroupResponse
     */
    public CreateLiveMessageGroupResponse createLiveMessageGroup(CreateLiveMessageGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createLiveMessageGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to create a GA instance and bind it to an acceleration circuit. The granularity is at the stream level. You need to specify the access points where the acceleration circuit starts and ends.</p>
     * <ul>
     * <li>The settings take effect only if the value of AppName and the value of StreamName are the same as the application name and stream name that are specified in the streaming URL.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a Global Accelerator (GA) instance and binds it to an acceleration circuit.</p>
     * 
     * @param request CreateLivePrivateLineRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateLivePrivateLineResponse
     */
    public CreateLivePrivateLineResponse createLivePrivateLineWithOptions(CreateLivePrivateLineRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.accelerationArea)) {
            query.put("AccelerationArea", request.accelerationArea);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.accelerationType)) {
            query.put("AccelerationType", request.accelerationType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.maxBandwidth)) {
            query.put("MaxBandwidth", request.maxBandwidth);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.reuse)) {
            query.put("Reuse", request.reuse);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.videoCenter)) {
            query.put("VideoCenter", request.videoCenter);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateLivePrivateLine"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateLivePrivateLineResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to create a GA instance and bind it to an acceleration circuit. The granularity is at the stream level. You need to specify the access points where the acceleration circuit starts and ends.</p>
     * <ul>
     * <li>The settings take effect only if the value of AppName and the value of StreamName are the same as the application name and stream name that are specified in the streaming URL.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a Global Accelerator (GA) instance and binds it to an acceleration circuit.</p>
     * 
     * @param request CreateLivePrivateLineRequest
     * @return CreateLivePrivateLineResponse
     */
    public CreateLivePrivateLineResponse createLivePrivateLine(CreateLivePrivateLineRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createLivePrivateLineWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <blockquote>
     * <p> The pulled-stream relay feature is in public preview. You can use it free of charge. After the public preview ends, fees will be charged. The specific end time will be announced.</p>
     * </blockquote>
     * <ul>
     * <li>You can call this operation to create a pulled-stream relay task.</li>
     * <li>The pulled source can be a live stream or video-on-demand (VOD) resources.</li>
     * <li>After a task is created, it starts at the specified start time and ends at the specified end time. A task that ends is automatically deleted.</li>
     * <li>Make sure that the destination URL specified in the task is not used by another task. Otherwise, conflicts occur and stream ingest fails.</li>
     * <li>The events for pulled-stream relay callbacks include state changes of a pulled-stream relay task and exit of a pulled-stream relay task. For more information, see <a href="https://help.aliyun.com/document_detail/2846768.html">Pulled-stream relay callbacks</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a pulled-stream relay task.</p>
     * 
     * @param tmpReq CreateLivePullToPushRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateLivePullToPushResponse
     */
    public CreateLivePullToPushResponse createLivePullToPushWithOptions(CreateLivePullToPushRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        CreateLivePullToPushShrinkRequest request = new CreateLivePullToPushShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.sourceUrls)) {
            request.sourceUrlsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.sourceUrls, "SourceUrls", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.callbackUrl)) {
            query.put("CallbackUrl", request.callbackUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dstUrl)) {
            query.put("DstUrl", request.dstUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fileIndex)) {
            query.put("FileIndex", request.fileIndex);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.offset)) {
            query.put("Offset", request.offset);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.region)) {
            query.put("Region", request.region);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.repeatNumber)) {
            query.put("RepeatNumber", request.repeatNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.retryCount)) {
            query.put("RetryCount", request.retryCount);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.retryInterval)) {
            query.put("RetryInterval", request.retryInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceProtocol)) {
            query.put("SourceProtocol", request.sourceProtocol);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceType)) {
            query.put("SourceType", request.sourceType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceUrlsShrink)) {
            query.put("SourceUrls", request.sourceUrlsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskName)) {
            query.put("TaskName", request.taskName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateLivePullToPush"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateLivePullToPushResponse());
    }

    /**
     * <b>description</b> :
     * <blockquote>
     * <p> The pulled-stream relay feature is in public preview. You can use it free of charge. After the public preview ends, fees will be charged. The specific end time will be announced.</p>
     * </blockquote>
     * <ul>
     * <li>You can call this operation to create a pulled-stream relay task.</li>
     * <li>The pulled source can be a live stream or video-on-demand (VOD) resources.</li>
     * <li>After a task is created, it starts at the specified start time and ends at the specified end time. A task that ends is automatically deleted.</li>
     * <li>Make sure that the destination URL specified in the task is not used by another task. Otherwise, conflicts occur and stream ingest fails.</li>
     * <li>The events for pulled-stream relay callbacks include state changes of a pulled-stream relay task and exit of a pulled-stream relay task. For more information, see <a href="https://help.aliyun.com/document_detail/2846768.html">Pulled-stream relay callbacks</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a pulled-stream relay task.</p>
     * 
     * @param request CreateLivePullToPushRequest
     * @return CreateLivePullToPushResponse
     */
    public CreateLivePullToPushResponse createLivePullToPush(CreateLivePullToPushRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createLivePullToPushWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>Obtain the streaming domain, and then call this operation to configure real-time log delivery for the streaming domain.
     * This operation is applicable to only streaming domains. If you want to configure real-time log delivery for an ingest domain, <a href="https://workorder-intl.console.aliyun.com/?spm=5176.12818093.nav-right.dticket.6cb216d07otFWR#/ticket/createIndex">submit a ticket</a>.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures real-time log delivery for a domain name.</p>
     * 
     * @param request CreateLiveRealTimeLogDeliveryRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateLiveRealTimeLogDeliveryResponse
     */
    public CreateLiveRealTimeLogDeliveryResponse createLiveRealTimeLogDeliveryWithOptions(CreateLiveRealTimeLogDeliveryRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateLiveRealTimeLogDelivery"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateLiveRealTimeLogDeliveryResponse());
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>Obtain the streaming domain, and then call this operation to configure real-time log delivery for the streaming domain.
     * This operation is applicable to only streaming domains. If you want to configure real-time log delivery for an ingest domain, <a href="https://workorder-intl.console.aliyun.com/?spm=5176.12818093.nav-right.dticket.6cb216d07otFWR#/ticket/createIndex">submit a ticket</a>.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures real-time log delivery for a domain name.</p>
     * 
     * @param request CreateLiveRealTimeLogDeliveryRequest
     * @return CreateLiveRealTimeLogDeliveryResponse
     */
    public CreateLiveRealTimeLogDeliveryResponse createLiveRealTimeLogDelivery(CreateLiveRealTimeLogDeliveryRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createLiveRealTimeLogDeliveryWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create a monitoring session. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a monitoring session.</p>
     * 
     * @param request CreateLiveStreamMonitorRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateLiveStreamMonitorResponse
     */
    public CreateLiveStreamMonitorResponse createLiveStreamMonitorWithOptions(CreateLiveStreamMonitorRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.callbackUrl)) {
            query.put("CallbackUrl", request.callbackUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dingTalkWebHookUrl)) {
            query.put("DingTalkWebHookUrl", request.dingTalkWebHookUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.inputList)) {
            query.put("InputList", request.inputList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.monitorConfig)) {
            query.put("MonitorConfig", request.monitorConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.monitorName)) {
            query.put("MonitorName", request.monitorName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.outputTemplate)) {
            query.put("OutputTemplate", request.outputTemplate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.stream)) {
            query.put("Stream", request.stream);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateLiveStreamMonitor"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateLiveStreamMonitorResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create a monitoring session. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a monitoring session.</p>
     * 
     * @param request CreateLiveStreamMonitorRequest
     * @return CreateLiveStreamMonitorResponse
     */
    public CreateLiveStreamMonitorResponse createLiveStreamMonitor(CreateLiveStreamMonitorRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createLiveStreamMonitorWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You must have configured Object Storage Service (OSS) before you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/84932.html">Configure OSS</a>. ApsaraVideo Live allows you to record a live stream in the M3U8 format and store the M3U8 file in OSS. You can edit the TS segments that are included in the stored M3U8 file in real time.</p>
     * <blockquote>
     * </blockquote>
     * <ul>
     * <li>You can create an index file only after a live stream is ingested. If no live stream is available within the specified time range or the name of the specified live stream is invalid, the index file fails to be created.</li>
     * <li>The time range that is specified by the StartTime and EndTime parameters must be the duration of at least one TS segment. The default duration of a TS segment is 30 seconds.</li>
     * <li>ApsaraVideo Live stores the information about TS segments for only three months. You can create M3U8 index files only for the recordings of the last three months.</li>
     * <li>OSS stores TS segments for a time period that is specified by the storage configuration in OSS. For more information, see <a href="https://help.aliyun.com/document_detail/31904.html">Configure lifecycle rules</a>.</li>
     * <li>ApsaraVideo Live stores the information about M3U8 index files for six months. You can query the information about only the M3U8 index files that were created in the last six months.</li>
     * <li>OSS stores M3U8 index files for a time period that is specified by the storage configuration in OSS.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 45 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates an M3U8 index file for a recording in a specified time period.</p>
     * 
     * @param request CreateLiveStreamRecordIndexFilesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateLiveStreamRecordIndexFilesResponse
     */
    public CreateLiveStreamRecordIndexFilesResponse createLiveStreamRecordIndexFilesWithOptions(CreateLiveStreamRecordIndexFilesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTimeIncluded)) {
            query.put("EndTimeIncluded", request.endTimeIncluded);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossBucket)) {
            query.put("OssBucket", request.ossBucket);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossEndpoint)) {
            query.put("OssEndpoint", request.ossEndpoint);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossObject)) {
            query.put("OssObject", request.ossObject);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateLiveStreamRecordIndexFiles"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateLiveStreamRecordIndexFilesResponse());
    }

    /**
     * <b>description</b> :
     * <p>You must have configured Object Storage Service (OSS) before you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/84932.html">Configure OSS</a>. ApsaraVideo Live allows you to record a live stream in the M3U8 format and store the M3U8 file in OSS. You can edit the TS segments that are included in the stored M3U8 file in real time.</p>
     * <blockquote>
     * </blockquote>
     * <ul>
     * <li>You can create an index file only after a live stream is ingested. If no live stream is available within the specified time range or the name of the specified live stream is invalid, the index file fails to be created.</li>
     * <li>The time range that is specified by the StartTime and EndTime parameters must be the duration of at least one TS segment. The default duration of a TS segment is 30 seconds.</li>
     * <li>ApsaraVideo Live stores the information about TS segments for only three months. You can create M3U8 index files only for the recordings of the last three months.</li>
     * <li>OSS stores TS segments for a time period that is specified by the storage configuration in OSS. For more information, see <a href="https://help.aliyun.com/document_detail/31904.html">Configure lifecycle rules</a>.</li>
     * <li>ApsaraVideo Live stores the information about M3U8 index files for six months. You can query the information about only the M3U8 index files that were created in the last six months.</li>
     * <li>OSS stores M3U8 index files for a time period that is specified by the storage configuration in OSS.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 45 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates an M3U8 index file for a recording in a specified time period.</p>
     * 
     * @param request CreateLiveStreamRecordIndexFilesRequest
     * @return CreateLiveStreamRecordIndexFilesResponse
     */
    public CreateLiveStreamRecordIndexFilesResponse createLiveStreamRecordIndexFiles(CreateLiveStreamRecordIndexFilesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createLiveStreamRecordIndexFilesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates an interactive messaging application.</p>
     * 
     * @param tmpReq CreateMessageAppRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateMessageAppResponse
     */
    public CreateMessageAppResponse createMessageAppWithOptions(CreateMessageAppRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        CreateMessageAppShrinkRequest request = new CreateMessageAppShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.appConfig)) {
            request.appConfigShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.appConfig, "AppConfig", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.extension)) {
            request.extensionShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.extension, "Extension", "json");
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appConfigShrink)) {
            body.put("AppConfig", request.appConfigShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            body.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.extensionShrink)) {
            body.put("Extension", request.extensionShrink);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateMessageApp"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateMessageAppResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates an interactive messaging application.</p>
     * 
     * @param request CreateMessageAppRequest
     * @return CreateMessageAppResponse
     */
    public CreateMessageAppResponse createMessageApp(CreateMessageAppRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createMessageAppWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a message group.</p>
     * 
     * @param tmpReq CreateMessageGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateMessageGroupResponse
     */
    public CreateMessageGroupResponse createMessageGroupWithOptions(CreateMessageGroupRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        CreateMessageGroupShrinkRequest request = new CreateMessageGroupShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.extension)) {
            request.extensionShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.extension, "Extension", "json");
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.creatorId)) {
            body.put("CreatorId", request.creatorId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.extensionShrink)) {
            body.put("Extension", request.extensionShrink);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateMessageGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateMessageGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a message group.</p>
     * 
     * @param request CreateMessageGroupRequest
     * @return CreateMessageGroupResponse
     */
    public CreateMessageGroupResponse createMessageGroup(CreateMessageGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createMessageGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create a stream mixing task. This operation supports preset layouts and custom layouts.
     * If you have any questions or suggestions about the use of the stream mixing feature, you are welcome to search the group ID 34935990 in DingTalk to join the developer group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a stream mixing task.</p>
     * 
     * @param request CreateMixStreamRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateMixStreamResponse
     */
    public CreateMixStreamResponse createMixStreamWithOptions(CreateMixStreamRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.callbackConfig)) {
            query.put("CallbackConfig", request.callbackConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.inputStreamList)) {
            query.put("InputStreamList", request.inputStreamList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layoutId)) {
            query.put("LayoutId", request.layoutId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.outputConfig)) {
            query.put("OutputConfig", request.outputConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateMixStream"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateMixStreamResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create a stream mixing task. This operation supports preset layouts and custom layouts.
     * If you have any questions or suggestions about the use of the stream mixing feature, you are welcome to search the group ID 34935990 in DingTalk to join the developer group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a stream mixing task.</p>
     * 
     * @param request CreateMixStreamRequest
     * @return CreateMixStreamResponse
     */
    public CreateMixStreamResponse createMixStream(CreateMixStreamRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createMixStreamWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>创建房间whip协议推流地址</p>
     * 
     * @param request CreateRTCWhipStreamAddressRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateRTCWhipStreamAddressResponse
     */
    public CreateRTCWhipStreamAddressResponse createRTCWhipStreamAddressWithOptions(CreateRTCWhipStreamAddressRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.clientToken)) {
            query.put("ClientToken", request.clientToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.displayName)) {
            query.put("DisplayName", request.displayName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.expireTime)) {
            query.put("ExpireTime", request.expireTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userId)) {
            query.put("UserId", request.userId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateRTCWhipStreamAddress"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateRTCWhipStreamAddressResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>创建房间whip协议推流地址</p>
     * 
     * @param request CreateRTCWhipStreamAddressRequest
     * @return CreateRTCWhipStreamAddressResponse
     */
    public CreateRTCWhipStreamAddressResponse createRTCWhipStreamAddress(CreateRTCWhipStreamAddressRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createRTCWhipStreamAddressWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h3><a href="#"></a>Usage notes</h3>
     * <p>To use the interactive streaming feature, you must use ApsaraVideo Real-time Communication (ARTC) SDK to join a channel and ingest streams over Real-Time Communication (RTC). In specific scenarios, you can ingest streams over Real-Time Messaging Protocol (RTMP) by using tools such as Open Broadcaster Software (OBS). Then, ApsaraVideo Live automatically converts the RTMP streams to RTC streams and distributes the RTC streams to viewers. You can call this operation to generate an ingest URL in the RTMP format. After you ingest RTMP streams, ApsaraVideo Live automatically converts the streams to RTC streams. Do not call this operation if you require only regular live streaming. To quickly ingest RTMP streams and start live streaming, see <a href="https://help.aliyun.com/document_detail/198676.html">Get started with ApsaraVideo Live</a>.</p>
     * <h2><a href="#"></a>Procedure</h2>
     * <ol>
     * <li>Call this operation to generate an ingest URL in the RTMP format.</li>
     * <li>Ingest a stream by using the ingest URL. Other users in the channel can watch the stream.</li>
     * <li>Stop ingesting the stream. Other users in the channel see that the user who ingested the stream leaves the channel.<blockquote>
     * </blockquote>
     * </li>
     * </ol>
     * <ul>
     * <li>You can repeat Steps 2 and 3 within the validity period of the ingest URL.</li>
     * <li>We recommend that you call the <a href="https://help.aliyun.com/document_detail/610801.html">DescribeChannelParticipants</a> operation to query online users in the channel at regular intervals. This way, you can check whether the user who ingests the stream is still in the channel. If the user who ingests the stream is not in the channel, the stream may be interrupted. In this case, we recommend that you stop ingesting the stream and perform Step 2.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a Real-Time Messaging Protocol (RTMP) ingest URL for a channel.</p>
     * 
     * @param request CreateRoomRealTimeStreamAddressRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateRoomRealTimeStreamAddressResponse
     */
    public CreateRoomRealTimeStreamAddressResponse createRoomRealTimeStreamAddressWithOptions(CreateRoomRealTimeStreamAddressRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateRoomRealTimeStreamAddress"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateRoomRealTimeStreamAddressResponse());
    }

    /**
     * <b>description</b> :
     * <h3><a href="#"></a>Usage notes</h3>
     * <p>To use the interactive streaming feature, you must use ApsaraVideo Real-time Communication (ARTC) SDK to join a channel and ingest streams over Real-Time Communication (RTC). In specific scenarios, you can ingest streams over Real-Time Messaging Protocol (RTMP) by using tools such as Open Broadcaster Software (OBS). Then, ApsaraVideo Live automatically converts the RTMP streams to RTC streams and distributes the RTC streams to viewers. You can call this operation to generate an ingest URL in the RTMP format. After you ingest RTMP streams, ApsaraVideo Live automatically converts the streams to RTC streams. Do not call this operation if you require only regular live streaming. To quickly ingest RTMP streams and start live streaming, see <a href="https://help.aliyun.com/document_detail/198676.html">Get started with ApsaraVideo Live</a>.</p>
     * <h2><a href="#"></a>Procedure</h2>
     * <ol>
     * <li>Call this operation to generate an ingest URL in the RTMP format.</li>
     * <li>Ingest a stream by using the ingest URL. Other users in the channel can watch the stream.</li>
     * <li>Stop ingesting the stream. Other users in the channel see that the user who ingested the stream leaves the channel.<blockquote>
     * </blockquote>
     * </li>
     * </ol>
     * <ul>
     * <li>You can repeat Steps 2 and 3 within the validity period of the ingest URL.</li>
     * <li>We recommend that you call the <a href="https://help.aliyun.com/document_detail/610801.html">DescribeChannelParticipants</a> operation to query online users in the channel at regular intervals. This way, you can check whether the user who ingests the stream is still in the channel. If the user who ingests the stream is not in the channel, the stream may be interrupted. In this case, we recommend that you stop ingesting the stream and perform Step 2.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a Real-Time Messaging Protocol (RTMP) ingest URL for a channel.</p>
     * 
     * @param request CreateRoomRealTimeStreamAddressRequest
     * @return CreateRoomRealTimeStreamAddressResponse
     */
    public CreateRoomRealTimeStreamAddressResponse createRoomRealTimeStreamAddress(CreateRoomRealTimeStreamAddressRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createRoomRealTimeStreamAddressWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create a live subtitle task that transcribes audio in a live stream to text in real time.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a live subtitle task to transcribe an audio stream to text in real time.</p>
     * 
     * @param request CreateRtcAsrTaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateRtcAsrTaskResponse
     */
    public CreateRtcAsrTaskResponse createRtcAsrTaskWithOptions(CreateRtcAsrTaskRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.authKey)) {
            query.put("AuthKey", request.authKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.autoTerminateDelay)) {
            query.put("AutoTerminateDelay", request.autoTerminateDelay);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.autoTerminateEnabled)) {
            query.put("AutoTerminateEnabled", request.autoTerminateEnabled);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.callbackURL)) {
            query.put("CallbackURL", request.callbackURL);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelID)) {
            query.put("ChannelID", request.channelID);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.language)) {
            query.put("Language", request.language);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mode)) {
            query.put("Mode", request.mode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.reportInterval)) {
            query.put("ReportInterval", request.reportInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.rtcUserId)) {
            query.put("RtcUserId", request.rtcUserId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.SDKAppID)) {
            query.put("SDKAppID", request.SDKAppID);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamURL)) {
            query.put("StreamURL", request.streamURL);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetLanguages)) {
            query.put("TargetLanguages", request.targetLanguages);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.translateEnabled)) {
            query.put("TranslateEnabled", request.translateEnabled);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateRtcAsrTask"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateRtcAsrTaskResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create a live subtitle task that transcribes audio in a live stream to text in real time.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a live subtitle task to transcribe an audio stream to text in real time.</p>
     * 
     * @param request CreateRtcAsrTaskRequest
     * @return CreateRtcAsrTaskResponse
     */
    public CreateRtcAsrTaskResponse createRtcAsrTask(CreateRtcAsrTaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createRtcAsrTaskWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create a subscription to mixed-stream relay events. You can configure parameters such as the callback URL, application to which you want to subscribe, and channel information when you create a subscription.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a subscription to mixed-stream relay events.</p>
     * 
     * @param request CreateRtcMPUEventSubRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateRtcMPUEventSubResponse
     */
    public CreateRtcMPUEventSubResponse createRtcMPUEventSubWithOptions(CreateRtcMPUEventSubRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.callbackUrl)) {
            query.put("CallbackUrl", request.callbackUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelIds)) {
            query.put("ChannelIds", request.channelIds);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateRtcMPUEventSub"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateRtcMPUEventSubResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create a subscription to mixed-stream relay events. You can configure parameters such as the callback URL, application to which you want to subscribe, and channel information when you create a subscription.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a subscription to mixed-stream relay events.</p>
     * 
     * @param request CreateRtcMPUEventSubRequest
     * @return CreateRtcMPUEventSubResponse
     */
    public CreateRtcMPUEventSubResponse createRtcMPUEventSub(CreateRtcMPUEventSubRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createRtcMPUEventSubWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can delete only production studios that are closed.</p>
     * <ul>
     * <li>When a production studio is deleted, the scenes, components, and layouts of the production studio are also deleted.</li>
     * <li>You cannot recover a deleted production studio.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a production studio.</p>
     * 
     * @param request DeleteCasterRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteCasterResponse
     */
    public DeleteCasterResponse deleteCasterWithOptions(DeleteCasterRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteCaster"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteCasterResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can delete only production studios that are closed.</p>
     * <ul>
     * <li>When a production studio is deleted, the scenes, components, and layouts of the production studio are also deleted.</li>
     * <li>You cannot recover a deleted production studio.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a production studio.</p>
     * 
     * @param request DeleteCasterRequest
     * @return DeleteCasterResponse
     */
    public DeleteCasterResponse deleteCaster(DeleteCasterRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteCasterWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to delete a component in the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a component in a production studio.</p>
     * 
     * @param request DeleteCasterComponentRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteCasterComponentResponse
     */
    public DeleteCasterComponentResponse deleteCasterComponentWithOptions(DeleteCasterComponentRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.componentId)) {
            query.put("ComponentId", request.componentId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteCasterComponent"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteCasterComponentResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to delete a component in the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a component in a production studio.</p>
     * 
     * @param request DeleteCasterComponentRequest
     * @return DeleteCasterComponentResponse
     */
    public DeleteCasterComponentResponse deleteCasterComponent(DeleteCasterComponentRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteCasterComponentWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to delete an episode in a production studio, you must obtain the ID of the production studio and the ID of the episode.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an episode in a production studio.</p>
     * 
     * @param request DeleteCasterEpisodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteCasterEpisodeResponse
     */
    public DeleteCasterEpisodeResponse deleteCasterEpisodeWithOptions(DeleteCasterEpisodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.episodeId)) {
            query.put("EpisodeId", request.episodeId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteCasterEpisode"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteCasterEpisodeResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to delete an episode in a production studio, you must obtain the ID of the production studio and the ID of the episode.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an episode in a production studio.</p>
     * 
     * @param request DeleteCasterEpisodeRequest
     * @return DeleteCasterEpisodeResponse
     */
    public DeleteCasterEpisodeResponse deleteCasterEpisode(DeleteCasterEpisodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteCasterEpisodeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to delete an episode list in a production studio, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848071.html">AddCasterEpisodeGroup</a> operation to add the episode list in the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an episode list in a production studio.</p>
     * 
     * @param request DeleteCasterEpisodeGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteCasterEpisodeGroupResponse
     */
    public DeleteCasterEpisodeGroupResponse deleteCasterEpisodeGroupWithOptions(DeleteCasterEpisodeGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programId)) {
            query.put("ProgramId", request.programId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteCasterEpisodeGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteCasterEpisodeGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to delete an episode list in a production studio, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848071.html">AddCasterEpisodeGroup</a> operation to add the episode list in the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an episode list in a production studio.</p>
     * 
     * @param request DeleteCasterEpisodeGroupRequest
     * @return DeleteCasterEpisodeGroupResponse
     */
    public DeleteCasterEpisodeGroupResponse deleteCasterEpisodeGroup(DeleteCasterEpisodeGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteCasterEpisodeGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/69338.html">CreateCaster</a> operation to create a production studio and then call this operation to delete a layout in the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a layout in a production studio.</p>
     * 
     * @param request DeleteCasterLayoutRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteCasterLayoutResponse
     */
    public DeleteCasterLayoutResponse deleteCasterLayoutWithOptions(DeleteCasterLayoutRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layoutId)) {
            query.put("LayoutId", request.layoutId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteCasterLayout"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteCasterLayoutResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/69338.html">CreateCaster</a> operation to create a production studio and then call this operation to delete a layout in the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a layout in a production studio.</p>
     * 
     * @param request DeleteCasterLayoutRequest
     * @return DeleteCasterLayoutResponse
     */
    public DeleteCasterLayoutResponse deleteCasterLayout(DeleteCasterLayoutRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteCasterLayoutWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to delete the episode list for carousel playback in the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the episode list for carousel playback in a production studio.</p>
     * 
     * @param request DeleteCasterProgramRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteCasterProgramResponse
     */
    public DeleteCasterProgramResponse deleteCasterProgramWithOptions(DeleteCasterProgramRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteCasterProgram"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteCasterProgramResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to delete the episode list for carousel playback in the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the episode list for carousel playback in a production studio.</p>
     * 
     * @param request DeleteCasterProgramRequest
     * @return DeleteCasterProgramResponse
     */
    public DeleteCasterProgramResponse deleteCasterProgram(DeleteCasterProgramRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteCasterProgramWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete the settings of a scene, such as the component setting, layout setting, or both of them.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the settings of a scene.</p>
     * 
     * @param request DeleteCasterSceneConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteCasterSceneConfigResponse
     */
    public DeleteCasterSceneConfigResponse deleteCasterSceneConfigWithOptions(DeleteCasterSceneConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sceneId)) {
            query.put("SceneId", request.sceneId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteCasterSceneConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteCasterSceneConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete the settings of a scene, such as the component setting, layout setting, or both of them.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the settings of a scene.</p>
     * 
     * @param request DeleteCasterSceneConfigRequest
     * @return DeleteCasterSceneConfigResponse
     */
    public DeleteCasterSceneConfigResponse deleteCasterSceneConfig(DeleteCasterSceneConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteCasterSceneConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to remove an input source from a production studio, make sure that you have called the <a href="https://help.aliyun.com/document_detail/69338.html">CreateCaster</a> operation to create the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Removes an input source from a production studio.</p>
     * 
     * @param request DeleteCasterVideoResourceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteCasterVideoResourceResponse
     */
    public DeleteCasterVideoResourceResponse deleteCasterVideoResourceWithOptions(DeleteCasterVideoResourceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceId)) {
            query.put("ResourceId", request.resourceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteCasterVideoResource"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteCasterVideoResourceResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to remove an input source from a production studio, make sure that you have called the <a href="https://help.aliyun.com/document_detail/69338.html">CreateCaster</a> operation to create the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Removes an input source from a production studio.</p>
     * 
     * @param request DeleteCasterVideoResourceRequest
     * @return DeleteCasterVideoResourceResponse
     */
    public DeleteCasterVideoResourceResponse deleteCasterVideoResource(DeleteCasterVideoResourceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteCasterVideoResourceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a channel.</p>
     * 
     * @param request DeleteChannelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteChannelResponse
     */
    public DeleteChannelResponse deleteChannelWithOptions(DeleteChannelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteChannel"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteChannelResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a channel.</p>
     * 
     * @param request DeleteChannelRequest
     * @return DeleteChannelResponse
     */
    public DeleteChannelResponse deleteChannel(DeleteChannelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteChannelWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the name of the custom stream mixing template that you want to delete, and then call this operation to delete the template.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a custom stream mixing template.</p>
     * 
     * @param request DeleteCustomTemplateRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteCustomTemplateResponse
     */
    public DeleteCustomTemplateResponse deleteCustomTemplateWithOptions(DeleteCustomTemplateRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.template)) {
            query.put("Template", request.template);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteCustomTemplate"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteCustomTemplateResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the name of the custom stream mixing template that you want to delete, and then call this operation to delete the template.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a custom stream mixing template.</p>
     * 
     * @param request DeleteCustomTemplateRequest
     * @return DeleteCustomTemplateResponse
     */
    public DeleteCustomTemplateResponse deleteCustomTemplate(DeleteCustomTemplateRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteCustomTemplateWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to delete an edge transcoding task.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an edge transcoding task.</p>
     * 
     * @param request DeleteEdgeTranscodeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteEdgeTranscodeJobResponse
     */
    public DeleteEdgeTranscodeJobResponse deleteEdgeTranscodeJobWithOptions(DeleteEdgeTranscodeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.clusterId)) {
            query.put("ClusterId", request.clusterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteEdgeTranscodeJob"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteEdgeTranscodeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to delete an edge transcoding task.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an edge transcoding task.</p>
     * 
     * @param request DeleteEdgeTranscodeJobRequest
     * @return DeleteEdgeTranscodeJobResponse
     */
    public DeleteEdgeTranscodeJobResponse deleteEdgeTranscodeJob(DeleteEdgeTranscodeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteEdgeTranscodeJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848209.html">CreateEventSubscribe</a> operation to create a callback that is used to subscribe to channel or user events.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a callback that is used to subscribe to channel or user events.</p>
     * 
     * @param request DeleteEventSubRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteEventSubResponse
     */
    public DeleteEventSubResponse deleteEventSubWithOptions(DeleteEventSubRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subscribeId)) {
            query.put("SubscribeId", request.subscribeId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteEventSub"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteEventSubResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848209.html">CreateEventSubscribe</a> operation to create a callback that is used to subscribe to channel or user events.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a callback that is used to subscribe to channel or user events.</p>
     * 
     * @param request DeleteEventSubRequest
     * @return DeleteEventSubResponse
     */
    public DeleteEventSubResponse deleteEventSub(DeleteEventSubRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteEventSubWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete a specified subtitle rule.</p>
     * <blockquote>
     * <p> The live subtitles feature is in invitational preview. You can add up to 300 subtitle templates.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a subtitle rule.</p>
     * 
     * @param request DeleteLiveAIProduceRulesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveAIProduceRulesResponse
     */
    public DeleteLiveAIProduceRulesResponse deleteLiveAIProduceRulesWithOptions(DeleteLiveAIProduceRulesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.rulesId)) {
            query.put("RulesId", request.rulesId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.suffixName)) {
            query.put("SuffixName", request.suffixName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveAIProduceRules"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveAIProduceRulesResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete a specified subtitle rule.</p>
     * <blockquote>
     * <p> The live subtitles feature is in invitational preview. You can add up to 300 subtitle templates.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a subtitle rule.</p>
     * 
     * @param request DeleteLiveAIProduceRulesRequest
     * @return DeleteLiveAIProduceRulesResponse
     */
    public DeleteLiveAIProduceRulesResponse deleteLiveAIProduceRules(DeleteLiveAIProduceRulesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveAIProduceRulesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>To delete a virtual studio template, you must first unbind the rules. Otherwise, an error occurs.</p>
     * <blockquote>
     * <p> The lightweight virtual studio feature is in invitational preview. You can add up to 300 virtual studio templates.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Deletes a virtual studio template.</p>
     * 
     * @param request DeleteLiveAIStudioRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveAIStudioResponse
     */
    public DeleteLiveAIStudioResponse deleteLiveAIStudioWithOptions(DeleteLiveAIStudioRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.studioId)) {
            query.put("StudioId", request.studioId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveAIStudio"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveAIStudioResponse());
    }

    /**
     * <b>description</b> :
     * <p>To delete a virtual studio template, you must first unbind the rules. Otherwise, an error occurs.</p>
     * <blockquote>
     * <p> The lightweight virtual studio feature is in invitational preview. You can add up to 300 virtual studio templates.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Deletes a virtual studio template.</p>
     * 
     * @param request DeleteLiveAIStudioRequest
     * @return DeleteLiveAIStudioResponse
     */
    public DeleteLiveAIStudioResponse deleteLiveAIStudio(DeleteLiveAIStudioRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveAIStudioWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete a specified subtitle template for live streaming.</p>
     * <blockquote>
     * <p> The live subtitles feature is in invitational preview. You can add up to 300 subtitle templates.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a specified subtitle template.</p>
     * 
     * @param request DeleteLiveAISubtitleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveAISubtitleResponse
     */
    public DeleteLiveAISubtitleResponse deleteLiveAISubtitleWithOptions(DeleteLiveAISubtitleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subtitleId)) {
            query.put("SubtitleId", request.subtitleId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subtitleName)) {
            query.put("SubtitleName", request.subtitleName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveAISubtitle"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveAISubtitleResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete a specified subtitle template for live streaming.</p>
     * <blockquote>
     * <p> The live subtitles feature is in invitational preview. You can add up to 300 subtitle templates.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a specified subtitle template.</p>
     * 
     * @param request DeleteLiveAISubtitleRequest
     * @return DeleteLiveAISubtitleResponse
     */
    public DeleteLiveAISubtitleResponse deleteLiveAISubtitle(DeleteLiveAISubtitleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveAISubtitleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to delete a recording configuration at the application level.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a recording configuration at the application level.</p>
     * 
     * @param request DeleteLiveAppRecordConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveAppRecordConfigResponse
     */
    public DeleteLiveAppRecordConfigResponse deleteLiveAppRecordConfigWithOptions(DeleteLiveAppRecordConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveAppRecordConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveAppRecordConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to delete a recording configuration at the application level.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a recording configuration at the application level.</p>
     * 
     * @param request DeleteLiveAppRecordConfigRequest
     * @return DeleteLiveAppRecordConfigResponse
     */
    public DeleteLiveAppRecordConfigResponse deleteLiveAppRecordConfig(DeleteLiveAppRecordConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveAppRecordConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete the snapshot configuration for live streams in an application. The deletion takes effect after you restart stream ingest.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the snapshot configuration for live streams in an application. The deletion takes effect after you restart stream ingest.</p>
     * 
     * @param request DeleteLiveAppSnapshotConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveAppSnapshotConfigResponse
     */
    public DeleteLiveAppSnapshotConfigResponse deleteLiveAppSnapshotConfigWithOptions(DeleteLiveAppSnapshotConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveAppSnapshotConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveAppSnapshotConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete the snapshot configuration for live streams in an application. The deletion takes effect after you restart stream ingest.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the snapshot configuration for live streams in an application. The deletion takes effect after you restart stream ingest.</p>
     * 
     * @param request DeleteLiveAppSnapshotConfigRequest
     * @return DeleteLiveAppSnapshotConfigResponse
     */
    public DeleteLiveAppSnapshotConfigResponse deleteLiveAppSnapshotConfig(DeleteLiveAppSnapshotConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveAppSnapshotConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to delete an audio moderation configuration.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an audio moderation configuration.</p>
     * 
     * @param request DeleteLiveAudioAuditConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveAudioAuditConfigResponse
     */
    public DeleteLiveAudioAuditConfigResponse deleteLiveAudioAuditConfigWithOptions(DeleteLiveAudioAuditConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveAudioAuditConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveAudioAuditConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to delete an audio moderation configuration.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an audio moderation configuration.</p>
     * 
     * @param request DeleteLiveAudioAuditConfigRequest
     * @return DeleteLiveAudioAuditConfigResponse
     */
    public DeleteLiveAudioAuditConfigResponse deleteLiveAudioAuditConfig(DeleteLiveAudioAuditConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveAudioAuditConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to delete the configuration of callbacks for audio moderation results.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configuration of callbacks for audio moderation results.</p>
     * 
     * @param request DeleteLiveAudioAuditNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveAudioAuditNotifyConfigResponse
     */
    public DeleteLiveAudioAuditNotifyConfigResponse deleteLiveAudioAuditNotifyConfigWithOptions(DeleteLiveAudioAuditNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveAudioAuditNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveAudioAuditNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to delete the configuration of callbacks for audio moderation results.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configuration of callbacks for audio moderation results.</p>
     * 
     * @param request DeleteLiveAudioAuditNotifyConfigRequest
     * @return DeleteLiveAudioAuditNotifyConfigResponse
     */
    public DeleteLiveAudioAuditNotifyConfigResponse deleteLiveAudioAuditNotifyConfig(DeleteLiveAudioAuditNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveAudioAuditNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a configuration of live center stream relay.</p>
     * 
     * @param request DeleteLiveCenterTransferRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveCenterTransferResponse
     */
    public DeleteLiveCenterTransferResponse deleteLiveCenterTransferWithOptions(DeleteLiveCenterTransferRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dstUrl)) {
            query.put("DstUrl", request.dstUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveCenterTransfer"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveCenterTransferResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a configuration of live center stream relay.</p>
     * 
     * @param request DeleteLiveCenterTransferRequest
     * @return DeleteLiveCenterTransferResponse
     */
    public DeleteLiveCenterTransferResponse deleteLiveCenterTransfer(DeleteLiveCenterTransferRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveCenterTransferWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a stream delay configuration.</p>
     * 
     * @param request DeleteLiveDelayConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveDelayConfigResponse
     */
    public DeleteLiveDelayConfigResponse deleteLiveDelayConfigWithOptions(DeleteLiveDelayConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.stream)) {
            query.put("Stream", request.stream);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveDelayConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveDelayConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a stream delay configuration.</p>
     * 
     * @param request DeleteLiveDelayConfigRequest
     * @return DeleteLiveDelayConfigResponse
     */
    public DeleteLiveDelayConfigResponse deleteLiveDelayConfig(DeleteLiveDelayConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveDelayConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <ul>
     * <li>Obtain the main streaming domain, and then call this operation to delete the configuration of callbacks for video moderation results.</li>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configuration of callbacks for video moderation results.</p>
     * 
     * @param request DeleteLiveDetectNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveDetectNotifyConfigResponse
     */
    public DeleteLiveDetectNotifyConfigResponse deleteLiveDetectNotifyConfigWithOptions(DeleteLiveDetectNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveDetectNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveDetectNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <ul>
     * <li>Obtain the main streaming domain, and then call this operation to delete the configuration of callbacks for video moderation results.</li>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configuration of callbacks for video moderation results.</p>
     * 
     * @param request DeleteLiveDetectNotifyConfigRequest
     * @return DeleteLiveDetectNotifyConfigResponse
     */
    public DeleteLiveDetectNotifyConfigResponse deleteLiveDetectNotifyConfig(DeleteLiveDetectNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveDetectNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  After you successfully call the DeleteLiveDomain operation, all records of the specified domain name are deleted. Exercise caution when you perform this operation.</p>
     * <ul>
     * <li>We recommend that you restore to an A record for the domain name at the DNS provider before you remove the domain name. Otherwise, the domain name may become inaccessible. If your domain name is registered with Alibaba Cloud, log on to the <a href="https://account.aliyun.com/login/login.htm?oauth_callback=https%3A%2F%2Fdns.console.aliyun.com%2F%3Fspm%3Da2c4g.11186623.0.0.3cda841fcvk7Qs%5C&lang=zh">Alibaba Cloud DNS console</a> and navigate to the <strong>Domain Name Resolution</strong> page. Find the domain name and then click <strong>DNS Settings</strong> in the Actions column. On the page that appears, change the CNAME record to an A record. If your domain name is registered with another DNS provider, configure similar settings on the platform of that DNS provider.</li>
     * <li>If you want to only suspend the use of the domain name, we recommend that you call the <a href="https://help.aliyun.com/document_detail/88329.html">StopLiveDomain</a> operation.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Removes a domain name from ApsaraVideo Live.</p>
     * 
     * @param request DeleteLiveDomainRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveDomainResponse
     */
    public DeleteLiveDomainResponse deleteLiveDomainWithOptions(DeleteLiveDomainRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerAccount)) {
            query.put("OwnerAccount", request.ownerAccount);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveDomain"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveDomainResponse());
    }

    /**
     * <b>description</b> :
     * <p>  After you successfully call the DeleteLiveDomain operation, all records of the specified domain name are deleted. Exercise caution when you perform this operation.</p>
     * <ul>
     * <li>We recommend that you restore to an A record for the domain name at the DNS provider before you remove the domain name. Otherwise, the domain name may become inaccessible. If your domain name is registered with Alibaba Cloud, log on to the <a href="https://account.aliyun.com/login/login.htm?oauth_callback=https%3A%2F%2Fdns.console.aliyun.com%2F%3Fspm%3Da2c4g.11186623.0.0.3cda841fcvk7Qs%5C&lang=zh">Alibaba Cloud DNS console</a> and navigate to the <strong>Domain Name Resolution</strong> page. Find the domain name and then click <strong>DNS Settings</strong> in the Actions column. On the page that appears, change the CNAME record to an A record. If your domain name is registered with another DNS provider, configure similar settings on the platform of that DNS provider.</li>
     * <li>If you want to only suspend the use of the domain name, we recommend that you call the <a href="https://help.aliyun.com/document_detail/88329.html">StopLiveDomain</a> operation.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Removes a domain name from ApsaraVideo Live.</p>
     * 
     * @param request DeleteLiveDomainRequest
     * @return DeleteLiveDomainResponse
     */
    public DeleteLiveDomainResponse deleteLiveDomain(DeleteLiveDomainRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveDomainWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Make sure that the streaming domain has been mapped to the ingest domain before you call this operation to delete the mapping. For more information about how to map a streaming domain to an ingest domain, see <a href="https://help.aliyun.com/document_detail/88782.html">AddLiveDomainMapping</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the mapping between a streaming domain and an ingest domain.</p>
     * 
     * @param request DeleteLiveDomainMappingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveDomainMappingResponse
     */
    public DeleteLiveDomainMappingResponse deleteLiveDomainMappingWithOptions(DeleteLiveDomainMappingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pullDomain)) {
            query.put("PullDomain", request.pullDomain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pushDomain)) {
            query.put("PushDomain", request.pushDomain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveDomainMapping"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveDomainMappingResponse());
    }

    /**
     * <b>description</b> :
     * <p>Make sure that the streaming domain has been mapped to the ingest domain before you call this operation to delete the mapping. For more information about how to map a streaming domain to an ingest domain, see <a href="https://help.aliyun.com/document_detail/88782.html">AddLiveDomainMapping</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the mapping between a streaming domain and an ingest domain.</p>
     * 
     * @param request DeleteLiveDomainMappingRequest
     * @return DeleteLiveDomainMappingResponse
     */
    public DeleteLiveDomainMappingResponse deleteLiveDomainMapping(DeleteLiveDomainMappingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveDomainMappingWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that the mapping between the main streaming domain and the sub-streaming domain is created. For more information about how to call an operation to create the mapping between a main streaming domain and a sub-streaming domain, see <a href="https://help.aliyun.com/document_detail/173091.html">AddLiveDomainPlayMapping</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the mapping between a main streaming domain and a sub-streaming domain.</p>
     * 
     * @param request DeleteLiveDomainPlayMappingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveDomainPlayMappingResponse
     */
    public DeleteLiveDomainPlayMappingResponse deleteLiveDomainPlayMappingWithOptions(DeleteLiveDomainPlayMappingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.playDomain)) {
            query.put("PlayDomain", request.playDomain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pullDomain)) {
            query.put("PullDomain", request.pullDomain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveDomainPlayMapping"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveDomainPlayMappingResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that the mapping between the main streaming domain and the sub-streaming domain is created. For more information about how to call an operation to create the mapping between a main streaming domain and a sub-streaming domain, see <a href="https://help.aliyun.com/document_detail/173091.html">AddLiveDomainPlayMapping</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the mapping between a main streaming domain and a sub-streaming domain.</p>
     * 
     * @param request DeleteLiveDomainPlayMappingRequest
     * @return DeleteLiveDomainPlayMappingResponse
     */
    public DeleteLiveDomainPlayMappingResponse deleteLiveDomainPlayMapping(DeleteLiveDomainPlayMappingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveDomainPlayMappingWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the DeleteLiveEdgeTransfer operation to delete the configuration of edge stream relay for a specific domain name. Ingested streams that are already relayed based on the configuration are not affected. The following table describes the scenarios in which edge stream relay takes effect or not.</p>
     * <table>
     * <thead>
     * <tr>
     * <th>Scenario</th>
     * <th>Analysis</th>
     * <th>Result</th>
     * </tr>
     * </thead>
     * <tbody><tr>
     * <td>1\. You ingest a stream after you call the SetLiveEdgeTransfer operation to configure edge stream relay. Then, you call the DeleteLiveEdgeTransfer operation to delete the configuration.</td>
     * <td>The configuration of edge stream relay is available when you ingest the stream.</td>
     * <td>The ingested stream is not affected, and stream relay is not interrupted.</td>
     * </tr>
     * <tr>
     * <td>2\. You call the DeleteLiveEdgeTransfer operation to delete the configuration of edge stream relay after you ingest a stream. Then, you disconnect and resume the ingested stream.</td>
     * <td>The configuration of edge stream relay is not available after you resume the ingested stream.</td>
     * <td>Edge stream relay does not take effect.</td>
     * </tr>
     * <tr>
     * <td>3\. You call the DeleteLiveEdgeTransfer operation before you ingest a stream.</td>
     * <td>The configuration of edge stream relay is not available.</td>
     * <td>Edge stream relay does not take effect.</td>
     * </tr>
     * </tbody></table>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configuration of edge stream relay.</p>
     * 
     * @param request DeleteLiveEdgeTransferRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveEdgeTransferResponse
     */
    public DeleteLiveEdgeTransferResponse deleteLiveEdgeTransferWithOptions(DeleteLiveEdgeTransferRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveEdgeTransfer"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveEdgeTransferResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the DeleteLiveEdgeTransfer operation to delete the configuration of edge stream relay for a specific domain name. Ingested streams that are already relayed based on the configuration are not affected. The following table describes the scenarios in which edge stream relay takes effect or not.</p>
     * <table>
     * <thead>
     * <tr>
     * <th>Scenario</th>
     * <th>Analysis</th>
     * <th>Result</th>
     * </tr>
     * </thead>
     * <tbody><tr>
     * <td>1\. You ingest a stream after you call the SetLiveEdgeTransfer operation to configure edge stream relay. Then, you call the DeleteLiveEdgeTransfer operation to delete the configuration.</td>
     * <td>The configuration of edge stream relay is available when you ingest the stream.</td>
     * <td>The ingested stream is not affected, and stream relay is not interrupted.</td>
     * </tr>
     * <tr>
     * <td>2\. You call the DeleteLiveEdgeTransfer operation to delete the configuration of edge stream relay after you ingest a stream. Then, you disconnect and resume the ingested stream.</td>
     * <td>The configuration of edge stream relay is not available after you resume the ingested stream.</td>
     * <td>Edge stream relay does not take effect.</td>
     * </tr>
     * <tr>
     * <td>3\. You call the DeleteLiveEdgeTransfer operation before you ingest a stream.</td>
     * <td>The configuration of edge stream relay is not available.</td>
     * <td>Edge stream relay does not take effect.</td>
     * </tr>
     * </tbody></table>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configuration of edge stream relay.</p>
     * 
     * @param request DeleteLiveEdgeTransferRequest
     * @return DeleteLiveEdgeTransferResponse
     */
    public DeleteLiveEdgeTransferResponse deleteLiveEdgeTransfer(DeleteLiveEdgeTransferRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveEdgeTransferWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation is application to triggered stream pulling. You can call this operation to delete a configuration of triggered stream pulling. If you set the AppName parameter to ali_all_app, configurations of triggered stream pulling for all applications under the domain name are deleted.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a configuration of triggered stream pulling.</p>
     * 
     * @param request DeleteLiveLazyPullStreamInfoConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveLazyPullStreamInfoConfigResponse
     */
    public DeleteLiveLazyPullStreamInfoConfigResponse deleteLiveLazyPullStreamInfoConfigWithOptions(DeleteLiveLazyPullStreamInfoConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveLazyPullStreamInfoConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveLazyPullStreamInfoConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation is application to triggered stream pulling. You can call this operation to delete a configuration of triggered stream pulling. If you set the AppName parameter to ali_all_app, configurations of triggered stream pulling for all applications under the domain name are deleted.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a configuration of triggered stream pulling.</p>
     * 
     * @param request DeleteLiveLazyPullStreamInfoConfigRequest
     * @return DeleteLiveLazyPullStreamInfoConfigResponse
     */
    public DeleteLiveLazyPullStreamInfoConfigResponse deleteLiveLazyPullStreamInfoConfig(DeleteLiveLazyPullStreamInfoConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveLazyPullStreamInfoConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <ul>
     * <li>After you delete an interactive messaging group, it is no longer available. Every user in the group is notified that the group is closed.</li>
     * <li>After you delete an interactive messaging group, messages in the group are retained for 30 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an interactive messaging group.</p>
     * 
     * @param request DeleteLiveMessageGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveMessageGroupResponse
     */
    public DeleteLiveMessageGroupResponse deleteLiveMessageGroupWithOptions(DeleteLiveMessageGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.operatorId)) {
            query.put("OperatorId", request.operatorId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveMessageGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveMessageGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <ul>
     * <li>After you delete an interactive messaging group, it is no longer available. Every user in the group is notified that the group is closed.</li>
     * <li>After you delete an interactive messaging group, messages in the group are retained for 30 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an interactive messaging group.</p>
     * 
     * @param request DeleteLiveMessageGroupRequest
     * @return DeleteLiveMessageGroupResponse
     */
    public DeleteLiveMessageGroupResponse deleteLiveMessageGroup(DeleteLiveMessageGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveMessageGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a message that was sent to an interactive messaging group.</p>
     * 
     * @param request DeleteLiveMessageGroupMessageRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveMessageGroupMessageResponse
     */
    public DeleteLiveMessageGroupMessageResponse deleteLiveMessageGroupMessageWithOptions(DeleteLiveMessageGroupMessageRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deleterId)) {
            query.put("DeleterId", request.deleterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deleterInfo)) {
            query.put("DeleterInfo", request.deleterInfo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.messageId)) {
            query.put("MessageId", request.messageId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveMessageGroupMessage"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveMessageGroupMessageResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a message that was sent to an interactive messaging group.</p>
     * 
     * @param request DeleteLiveMessageGroupMessageRequest
     * @return DeleteLiveMessageGroupMessageResponse
     */
    public DeleteLiveMessageGroupMessageResponse deleteLiveMessageGroupMessage(DeleteLiveMessageGroupMessageRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveMessageGroupMessageWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a message that is sent to a user.</p>
     * 
     * @param request DeleteLiveMessageUserMessageRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveMessageUserMessageResponse
     */
    public DeleteLiveMessageUserMessageResponse deleteLiveMessageUserMessageWithOptions(DeleteLiveMessageUserMessageRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deleterId)) {
            query.put("DeleterId", request.deleterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deleterInfo)) {
            query.put("DeleterInfo", request.deleterInfo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.messageId)) {
            query.put("MessageId", request.messageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.receiverId)) {
            query.put("ReceiverId", request.receiverId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveMessageUserMessage"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveMessageUserMessageResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a message that is sent to a user.</p>
     * 
     * @param request DeleteLiveMessageUserMessageRequest
     * @return DeleteLiveMessageUserMessageResponse
     */
    public DeleteLiveMessageUserMessageResponse deleteLiveMessageUserMessage(DeleteLiveMessageUserMessageRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveMessageUserMessageWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete a live stream encapsulation configuration. The deletion takes effect after you re-ingest the stream.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 300 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * @param request DeleteLivePackageConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLivePackageConfigResponse
     */
    public DeleteLivePackageConfigResponse deleteLivePackageConfigWithOptions(DeleteLivePackageConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLivePackageConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLivePackageConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete a live stream encapsulation configuration. The deletion takes effect after you re-ingest the stream.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 300 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * @param request DeleteLivePackageConfigRequest
     * @return DeleteLivePackageConfigResponse
     */
    public DeleteLivePackageConfigResponse deleteLivePackageConfig(DeleteLivePackageConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLivePackageConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>After you unbind a GA instance from an acceleration circuit, your stream ingest and streaming are no longer accelerated by the GA instance. The GA instance still exists. If you want to release the GA instance, delete it in the GA console.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Unbinds a Global Accelerator (GA) instance from an acceleration circuit.</p>
     * 
     * @param request DeleteLivePrivateLineRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLivePrivateLineResponse
     */
    public DeleteLivePrivateLineResponse deleteLivePrivateLineWithOptions(DeleteLivePrivateLineRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.accelerationType)) {
            query.put("AccelerationType", request.accelerationType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLivePrivateLine"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLivePrivateLineResponse());
    }

    /**
     * <b>description</b> :
     * <p>After you unbind a GA instance from an acceleration circuit, your stream ingest and streaming are no longer accelerated by the GA instance. The GA instance still exists. If you want to release the GA instance, delete it in the GA console.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Unbinds a Global Accelerator (GA) instance from an acceleration circuit.</p>
     * 
     * @param request DeleteLivePrivateLineRequest
     * @return DeleteLivePrivateLineResponse
     */
    public DeleteLivePrivateLineResponse deleteLivePrivateLine(DeleteLivePrivateLineRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLivePrivateLineWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation is applicable to regular stream pulling. You can call this operation to delete a configuration of regular stream pulling.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a stream pulling configuration.</p>
     * 
     * @param request DeleteLivePullStreamInfoConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLivePullStreamInfoConfigResponse
     */
    public DeleteLivePullStreamInfoConfigResponse deleteLivePullStreamInfoConfigWithOptions(DeleteLivePullStreamInfoConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLivePullStreamInfoConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLivePullStreamInfoConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation is applicable to regular stream pulling. You can call this operation to delete a configuration of regular stream pulling.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a stream pulling configuration.</p>
     * 
     * @param request DeleteLivePullStreamInfoConfigRequest
     * @return DeleteLivePullStreamInfoConfigResponse
     */
    public DeleteLivePullStreamInfoConfigResponse deleteLivePullStreamInfoConfig(DeleteLivePullStreamInfoConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLivePullStreamInfoConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to delete a pulled-stream relay task.</p>
     * <ul>
     * <li>If you delete a running task, the task is immediately stopped and cannot be restarted.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a pulled-stream relay task.</p>
     * 
     * @param request DeleteLivePullToPushRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLivePullToPushResponse
     */
    public DeleteLivePullToPushResponse deleteLivePullToPushWithOptions(DeleteLivePullToPushRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLivePullToPush"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLivePullToPushResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to delete a pulled-stream relay task.</p>
     * <ul>
     * <li>If you delete a running task, the task is immediately stopped and cannot be restarted.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a pulled-stream relay task.</p>
     * 
     * @param request DeleteLivePullToPushRequest
     * @return DeleteLivePullToPushResponse
     */
    public DeleteLivePullToPushResponse deleteLivePullToPush(DeleteLivePullToPushRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLivePullToPushWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to delete the Logstore that is specified by a configuration of real-time log delivery. Make sure that all parameters meet the requirements when you call this operation.</p>
     * <ul>
     * <li>You can call the <a href="https://help.aliyun.com/document_detail/2848121.html">DescribeLiveDomainRealtimeLogDelivery</a> operation to query the Project, Logstore, and Region parameters.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the Logstore that is specified by a configuration of real-time log delivery.</p>
     * 
     * @param request DeleteLiveRealTimeLogLogstoreRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveRealTimeLogLogstoreResponse
     */
    public DeleteLiveRealTimeLogLogstoreResponse deleteLiveRealTimeLogLogstoreWithOptions(DeleteLiveRealTimeLogLogstoreRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveRealTimeLogLogstore"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveRealTimeLogLogstoreResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to delete the Logstore that is specified by a configuration of real-time log delivery. Make sure that all parameters meet the requirements when you call this operation.</p>
     * <ul>
     * <li>You can call the <a href="https://help.aliyun.com/document_detail/2848121.html">DescribeLiveDomainRealtimeLogDelivery</a> operation to query the Project, Logstore, and Region parameters.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the Logstore that is specified by a configuration of real-time log delivery.</p>
     * 
     * @param request DeleteLiveRealTimeLogLogstoreRequest
     * @return DeleteLiveRealTimeLogLogstoreResponse
     */
    public DeleteLiveRealTimeLogLogstoreResponse deleteLiveRealTimeLogLogstore(DeleteLiveRealTimeLogLogstoreRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveRealTimeLogLogstoreWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <ul>
     * <li><ul>
     * <li>This operation is applicable to only streaming domains. If you want to configure real-tome log delivery for an ingest domain, <a href="https://workorder-intl.console.aliyun.com/?spm=5176.12818093.nav-right.dticket.6cb216d07otFWR#/ticket/createIndex">submit a ticket</a>.</li>
     * </ul>
     * </li>
     * <li>You can call the <a href="https://help.aliyun.com/document_detail/2848121.html">DescribeLiveDomainRealtimeLogDelivery</a> to query the Project, Logstore, and Region parameters.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configurations of real-time log delivery for one or more domain names.</p>
     * 
     * @param request DeleteLiveRealtimeLogDeliveryRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveRealtimeLogDeliveryResponse
     */
    public DeleteLiveRealtimeLogDeliveryResponse deleteLiveRealtimeLogDeliveryWithOptions(DeleteLiveRealtimeLogDeliveryRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveRealtimeLogDelivery"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveRealtimeLogDeliveryResponse());
    }

    /**
     * <b>description</b> :
     * <ul>
     * <li><ul>
     * <li>This operation is applicable to only streaming domains. If you want to configure real-tome log delivery for an ingest domain, <a href="https://workorder-intl.console.aliyun.com/?spm=5176.12818093.nav-right.dticket.6cb216d07otFWR#/ticket/createIndex">submit a ticket</a>.</li>
     * </ul>
     * </li>
     * <li>You can call the <a href="https://help.aliyun.com/document_detail/2848121.html">DescribeLiveDomainRealtimeLogDelivery</a> to query the Project, Logstore, and Region parameters.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configurations of real-time log delivery for one or more domain names.</p>
     * 
     * @param request DeleteLiveRealtimeLogDeliveryRequest
     * @return DeleteLiveRealtimeLogDeliveryResponse
     */
    public DeleteLiveRealtimeLogDeliveryResponse deleteLiveRealtimeLogDelivery(DeleteLiveRealtimeLogDeliveryRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveRealtimeLogDeliveryWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to delete the configuration of callbacks for live stream recording under the main streaming domain.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configuration of callbacks for live stream recording under a domain name.</p>
     * 
     * @param request DeleteLiveRecordNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveRecordNotifyConfigResponse
     */
    public DeleteLiveRecordNotifyConfigResponse deleteLiveRecordNotifyConfigWithOptions(DeleteLiveRecordNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveRecordNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveRecordNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to delete the configuration of callbacks for live stream recording under the main streaming domain.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configuration of callbacks for live stream recording under a domain name.</p>
     * 
     * @param request DeleteLiveRecordNotifyConfigRequest
     * @return DeleteLiveRecordNotifyConfigResponse
     */
    public DeleteLiveRecordNotifyConfigResponse deleteLiveRecordNotifyConfig(DeleteLiveRecordNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveRecordNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to delete a Live-to-VOD configuration.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a Live-to-VOD configuration.</p>
     * 
     * @param request DeleteLiveRecordVodConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveRecordVodConfigResponse
     */
    public DeleteLiveRecordVodConfigResponse deleteLiveRecordVodConfigWithOptions(DeleteLiveRecordVodConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveRecordVodConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveRecordVodConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to delete a Live-to-VOD configuration.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a Live-to-VOD configuration.</p>
     * 
     * @param request DeleteLiveRecordVodConfigRequest
     * @return DeleteLiveRecordVodConfigResponse
     */
    public DeleteLiveRecordVodConfigResponse deleteLiveRecordVodConfig(DeleteLiveRecordVodConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveRecordVodConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to delete a video moderation configuration.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a video moderation configuration.</p>
     * 
     * @param request DeleteLiveSnapshotDetectPornConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveSnapshotDetectPornConfigResponse
     */
    public DeleteLiveSnapshotDetectPornConfigResponse deleteLiveSnapshotDetectPornConfigWithOptions(DeleteLiveSnapshotDetectPornConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveSnapshotDetectPornConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveSnapshotDetectPornConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to delete a video moderation configuration.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a video moderation configuration.</p>
     * 
     * @param request DeleteLiveSnapshotDetectPornConfigRequest
     * @return DeleteLiveSnapshotDetectPornConfigResponse
     */
    public DeleteLiveSnapshotDetectPornConfigResponse deleteLiveSnapshotDetectPornConfig(DeleteLiveSnapshotDetectPornConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveSnapshotDetectPornConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configuration of snapshot callbacks.</p>
     * 
     * @param request DeleteLiveSnapshotNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveSnapshotNotifyConfigResponse
     */
    public DeleteLiveSnapshotNotifyConfigResponse deleteLiveSnapshotNotifyConfigWithOptions(DeleteLiveSnapshotNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveSnapshotNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveSnapshotNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configuration of snapshot callbacks.</p>
     * 
     * @param request DeleteLiveSnapshotNotifyConfigRequest
     * @return DeleteLiveSnapshotNotifyConfigResponse
     */
    public DeleteLiveSnapshotNotifyConfigResponse deleteLiveSnapshotNotifyConfig(DeleteLiveSnapshotNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveSnapshotNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>Before you call this operation to delete a domain configuration in the canary release environment, you can call the <a href="https://help.aliyun.com/document_detail/297374.html">DescribeLiveDomainStagingConfig</a> operation to obtain the configuration ID.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes domain configurations in the canary release environment.</p>
     * 
     * @param request DeleteLiveSpecificStagingConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveSpecificStagingConfigResponse
     */
    public DeleteLiveSpecificStagingConfigResponse deleteLiveSpecificStagingConfigWithOptions(DeleteLiveSpecificStagingConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.configId)) {
            query.put("ConfigId", request.configId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveSpecificStagingConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveSpecificStagingConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>Before you call this operation to delete a domain configuration in the canary release environment, you can call the <a href="https://help.aliyun.com/document_detail/297374.html">DescribeLiveDomainStagingConfig</a> operation to obtain the configuration ID.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes domain configurations in the canary release environment.</p>
     * 
     * @param request DeleteLiveSpecificStagingConfigRequest
     * @return DeleteLiveSpecificStagingConfigResponse
     */
    public DeleteLiveSpecificStagingConfigResponse deleteLiveSpecificStagingConfig(DeleteLiveSpecificStagingConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveSpecificStagingConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete a configuration of stream-level region blocking.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a configuration of stream-level region blocking.</p>
     * 
     * @param request DeleteLiveStreamBlockRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveStreamBlockResponse
     */
    public DeleteLiveStreamBlockResponse deleteLiveStreamBlockWithOptions(DeleteLiveStreamBlockRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveStreamBlock"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveStreamBlockResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete a configuration of stream-level region blocking.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a configuration of stream-level region blocking.</p>
     * 
     * @param request DeleteLiveStreamBlockRequest
     * @return DeleteLiveStreamBlockResponse
     */
    public DeleteLiveStreamBlockResponse deleteLiveStreamBlock(DeleteLiveStreamBlockRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveStreamBlockWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an active mixed stream.</p>
     * 
     * @param request DeleteLiveStreamMergeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveStreamMergeResponse
     */
    public DeleteLiveStreamMergeResponse deleteLiveStreamMergeWithOptions(DeleteLiveStreamMergeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveStreamMerge"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveStreamMergeResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an active mixed stream.</p>
     * 
     * @param request DeleteLiveStreamMergeRequest
     * @return DeleteLiveStreamMergeResponse
     */
    public DeleteLiveStreamMergeResponse deleteLiveStreamMerge(DeleteLiveStreamMergeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveStreamMergeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, obtain the monitoring session ID from the response parameter <strong>MonitorId</strong> of the <a href="https://help.aliyun.com/document_detail/2848129.html">CreateLiveStreamMonitor</a> operation.</p>
     * <blockquote>
     * <p> You cannot delete a monitoring session that is in the started state. If you try to delete it, a 400 error is reported.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a monitoring session.</p>
     * 
     * @param request DeleteLiveStreamMonitorRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveStreamMonitorResponse
     */
    public DeleteLiveStreamMonitorResponse deleteLiveStreamMonitorWithOptions(DeleteLiveStreamMonitorRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.monitorId)) {
            query.put("MonitorId", request.monitorId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveStreamMonitor"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveStreamMonitorResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, obtain the monitoring session ID from the response parameter <strong>MonitorId</strong> of the <a href="https://help.aliyun.com/document_detail/2848129.html">CreateLiveStreamMonitor</a> operation.</p>
     * <blockquote>
     * <p> You cannot delete a monitoring session that is in the started state. If you try to delete it, a 400 error is reported.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a monitoring session.</p>
     * 
     * @param request DeleteLiveStreamMonitorRequest
     * @return DeleteLiveStreamMonitorResponse
     */
    public DeleteLiveStreamMonitorResponse deleteLiveStreamMonitor(DeleteLiveStreamMonitorRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveStreamMonitorWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes live stream recordings.</p>
     * 
     * @param request DeleteLiveStreamRecordIndexFilesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveStreamRecordIndexFilesResponse
     */
    public DeleteLiveStreamRecordIndexFilesResponse deleteLiveStreamRecordIndexFilesWithOptions(DeleteLiveStreamRecordIndexFilesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.recordId)) {
            query.put("RecordId", request.recordId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.removeFile)) {
            query.put("RemoveFile", request.removeFile);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveStreamRecordIndexFiles"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveStreamRecordIndexFilesResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes live stream recordings.</p>
     * 
     * @param request DeleteLiveStreamRecordIndexFilesRequest
     * @return DeleteLiveStreamRecordIndexFilesResponse
     */
    public DeleteLiveStreamRecordIndexFilesResponse deleteLiveStreamRecordIndexFiles(DeleteLiveStreamRecordIndexFilesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveStreamRecordIndexFilesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Standard transcoding templates, Narrowband HD™ transcoding templates, and custom transcoding templates are supported for this operation.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a transcoding configuration.</p>
     * 
     * @param request DeleteLiveStreamTranscodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveStreamTranscodeResponse
     */
    public DeleteLiveStreamTranscodeResponse deleteLiveStreamTranscodeWithOptions(DeleteLiveStreamTranscodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.template)) {
            query.put("Template", request.template);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveStreamTranscode"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveStreamTranscodeResponse());
    }

    /**
     * <b>description</b> :
     * <p>Standard transcoding templates, Narrowband HD™ transcoding templates, and custom transcoding templates are supported for this operation.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a transcoding configuration.</p>
     * 
     * @param request DeleteLiveStreamTranscodeRequest
     * @return DeleteLiveStreamTranscodeResponse
     */
    public DeleteLiveStreamTranscodeResponse deleteLiveStreamTranscode(DeleteLiveStreamTranscodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveStreamTranscodeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This interface supports deleting the watermark template with the specified TemplateId for live streaming. </p>
     * <h2>QPS Limitation</h2>
     * <p> The per-user QPS limit for this interface is 60 times/second. Exceeding this limit will result in API throttling, which may impact your business operations. Please use it reasonably. For more information, please refer to <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limitation</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a specified watermark template.</p>
     * 
     * @param request DeleteLiveStreamWatermarkRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveStreamWatermarkResponse
     */
    public DeleteLiveStreamWatermarkResponse deleteLiveStreamWatermarkWithOptions(DeleteLiveStreamWatermarkRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateId)) {
            query.put("TemplateId", request.templateId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveStreamWatermark"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveStreamWatermarkResponse());
    }

    /**
     * <b>description</b> :
     * <p>This interface supports deleting the watermark template with the specified TemplateId for live streaming. </p>
     * <h2>QPS Limitation</h2>
     * <p> The per-user QPS limit for this interface is 60 times/second. Exceeding this limit will result in API throttling, which may impact your business operations. Please use it reasonably. For more information, please refer to <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limitation</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a specified watermark template.</p>
     * 
     * @param request DeleteLiveStreamWatermarkRequest
     * @return DeleteLiveStreamWatermarkResponse
     */
    public DeleteLiveStreamWatermarkResponse deleteLiveStreamWatermark(DeleteLiveStreamWatermarkRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveStreamWatermarkWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete a watermark rule with a specified ID.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a watermark rule.</p>
     * 
     * @param request DeleteLiveStreamWatermarkRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveStreamWatermarkRuleResponse
     */
    public DeleteLiveStreamWatermarkRuleResponse deleteLiveStreamWatermarkRuleWithOptions(DeleteLiveStreamWatermarkRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.stream)) {
            query.put("Stream", request.stream);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveStreamWatermarkRule"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveStreamWatermarkRuleResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete a watermark rule with a specified ID.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a watermark rule.</p>
     * 
     * @param request DeleteLiveStreamWatermarkRuleRequest
     * @return DeleteLiveStreamWatermarkRuleResponse
     */
    public DeleteLiveStreamWatermarkRuleResponse deleteLiveStreamWatermarkRule(DeleteLiveStreamWatermarkRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveStreamWatermarkRuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the ingest domain, and then call this operation to delete the callback configuration for stream ingest under the ingest domain.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the callback configuration for stream ingest under an ingest domain.</p>
     * 
     * @param request DeleteLiveStreamsNotifyUrlConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteLiveStreamsNotifyUrlConfigResponse
     */
    public DeleteLiveStreamsNotifyUrlConfigResponse deleteLiveStreamsNotifyUrlConfigWithOptions(DeleteLiveStreamsNotifyUrlConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteLiveStreamsNotifyUrlConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteLiveStreamsNotifyUrlConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the ingest domain, and then call this operation to delete the callback configuration for stream ingest under the ingest domain.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the callback configuration for stream ingest under an ingest domain.</p>
     * 
     * @param request DeleteLiveStreamsNotifyUrlConfigRequest
     * @return DeleteLiveStreamsNotifyUrlConfigResponse
     */
    public DeleteLiveStreamsNotifyUrlConfigResponse deleteLiveStreamsNotifyUrlConfig(DeleteLiveStreamsNotifyUrlConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteLiveStreamsNotifyUrlConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an interactive messaging application.</p>
     * 
     * @param request DeleteMessageAppRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteMessageAppResponse
     */
    public DeleteMessageAppResponse deleteMessageAppWithOptions(DeleteMessageAppRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteMessageApp"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteMessageAppResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an interactive messaging application.</p>
     * 
     * @param request DeleteMessageAppRequest
     * @return DeleteMessageAppResponse
     */
    public DeleteMessageAppResponse deleteMessageApp(DeleteMessageAppRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteMessageAppWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848087.html">CreateMixStream</a> operation to create a stream mixing task and then call this operation to delete the stream mixing task. If you no longer need a mixed stream, be sure to delete it. Mixed streams that are not deleted are continuously ingested.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a stream mixing task.</p>
     * 
     * @param request DeleteMixStreamRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteMixStreamResponse
     */
    public DeleteMixStreamResponse deleteMixStreamWithOptions(DeleteMixStreamRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mixStreamId)) {
            query.put("MixStreamId", request.mixStreamId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteMixStream"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteMixStreamResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848087.html">CreateMixStream</a> operation to create a stream mixing task and then call this operation to delete the stream mixing task. If you no longer need a mixed stream, be sure to delete it. Mixed streams that are not deleted are continuously ingested.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a stream mixing task.</p>
     * 
     * @param request DeleteMixStreamRequest
     * @return DeleteMixStreamResponse
     */
    public DeleteMixStreamResponse deleteMixStream(DeleteMixStreamRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteMixStreamWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to delete an episode list, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848078.html">AddPlaylistItems</a> operation to create the episode list.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an episode list.</p>
     * 
     * @param request DeletePlaylistRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeletePlaylistResponse
     */
    public DeletePlaylistResponse deletePlaylistWithOptions(DeletePlaylistRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programId)) {
            query.put("ProgramId", request.programId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeletePlaylist"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeletePlaylistResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to delete an episode list, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848078.html">AddPlaylistItems</a> operation to create the episode list.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes an episode list.</p>
     * 
     * @param request DeletePlaylistRequest
     * @return DeletePlaylistResponse
     */
    public DeletePlaylistResponse deletePlaylist(DeletePlaylistRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deletePlaylistWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to remove an episode, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848078.html">AddPlaylistItems</a> operation to add the episode.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Removes episodes from an episode list.</p>
     * 
     * @param request DeletePlaylistItemsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeletePlaylistItemsResponse
     */
    public DeletePlaylistItemsResponse deletePlaylistItemsWithOptions(DeletePlaylistItemsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programId)) {
            query.put("ProgramId", request.programId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programItemIds)) {
            query.put("ProgramItemIds", request.programItemIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeletePlaylistItems"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeletePlaylistItemsResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to remove an episode, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848078.html">AddPlaylistItems</a> operation to add the episode.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Removes episodes from an episode list.</p>
     * 
     * @param request DeletePlaylistItemsRequest
     * @return DeletePlaylistItemsResponse
     */
    public DeletePlaylistItemsResponse deletePlaylistItems(DeletePlaylistItemsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deletePlaylistItemsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a live subtitle task.</p>
     * 
     * @param request DeleteRtcAsrTaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteRtcAsrTaskResponse
     */
    public DeleteRtcAsrTaskResponse deleteRtcAsrTaskWithOptions(DeleteRtcAsrTaskRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteRtcAsrTask"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteRtcAsrTaskResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a live subtitle task.</p>
     * 
     * @param request DeleteRtcAsrTaskRequest
     * @return DeleteRtcAsrTaskResponse
     */
    public DeleteRtcAsrTaskResponse deleteRtcAsrTask(DeleteRtcAsrTaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteRtcAsrTaskWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to delete a subscription to mixed-stream relay events.</p>
     * <ul>
     * <li>Before you call this operation, make sure that you have called the CreateRtcMPUEventSub operation to create the subscription.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a subscription to mixed-stream relay events.</p>
     * 
     * @param request DeleteRtcMPUEventSubRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteRtcMPUEventSubResponse
     */
    public DeleteRtcMPUEventSubResponse deleteRtcMPUEventSubWithOptions(DeleteRtcMPUEventSubRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteRtcMPUEventSub"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteRtcMPUEventSubResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to delete a subscription to mixed-stream relay events.</p>
     * <ul>
     * <li>Before you call this operation, make sure that you have called the CreateRtcMPUEventSub operation to create the subscription.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a subscription to mixed-stream relay events.</p>
     * 
     * @param request DeleteRtcMPUEventSubRequest
     * @return DeleteRtcMPUEventSubResponse
     */
    public DeleteRtcMPUEventSubResponse deleteRtcMPUEventSub(DeleteRtcMPUEventSubRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteRtcMPUEventSubWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete the configuration of authentication for snapshot callbacks for a main streaming domain. For an ongoing live stream, the deletion takes effect after you re-ingest the stream. Snapshot callbacks for the stream are no longer authenticated.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configuration of authentication for snapshot callbacks.</p>
     * 
     * @param request DeleteSnapshotCallbackAuthRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteSnapshotCallbackAuthResponse
     */
    public DeleteSnapshotCallbackAuthResponse deleteSnapshotCallbackAuthWithOptions(DeleteSnapshotCallbackAuthRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteSnapshotCallbackAuth"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteSnapshotCallbackAuthResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete the configuration of authentication for snapshot callbacks for a main streaming domain. For an ongoing live stream, the deletion takes effect after you re-ingest the stream. Snapshot callbacks for the stream are no longer authenticated.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes the configuration of authentication for snapshot callbacks.</p>
     * 
     * @param request DeleteSnapshotCallbackAuthRequest
     * @return DeleteSnapshotCallbackAuthResponse
     */
    public DeleteSnapshotCallbackAuthResponse deleteSnapshotCallbackAuth(DeleteSnapshotCallbackAuthRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteSnapshotCallbackAuthWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can delete only snapshots that were captured in the last year.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes snapshots.</p>
     * 
     * @param request DeleteSnapshotFilesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteSnapshotFilesResponse
     */
    public DeleteSnapshotFilesResponse deleteSnapshotFilesWithOptions(DeleteSnapshotFilesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.createTimestampList)) {
            query.put("CreateTimestampList", request.createTimestampList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.removeFile)) {
            query.put("RemoveFile", request.removeFile);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteSnapshotFiles"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteSnapshotFilesResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can delete only snapshots that were captured in the last year.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes snapshots.</p>
     * 
     * @param request DeleteSnapshotFilesRequest
     * @return DeleteSnapshotFilesResponse
     */
    public DeleteSnapshotFilesResponse deleteSnapshotFiles(DeleteSnapshotFilesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteSnapshotFilesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete a layout in a virtual studio. You can delete only one layout in a call.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a layout in a virtual studio.</p>
     * 
     * @param request DeleteStudioLayoutRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteStudioLayoutResponse
     */
    public DeleteStudioLayoutResponse deleteStudioLayoutWithOptions(DeleteStudioLayoutRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layoutId)) {
            query.put("LayoutId", request.layoutId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteStudioLayout"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteStudioLayoutResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to delete a layout in a virtual studio. You can delete only one layout in a call.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Deletes a layout in a virtual studio.</p>
     * 
     * @param request DeleteStudioLayoutRequest
     * @return DeleteStudioLayoutResponse
     */
    public DeleteStudioLayoutResponse deleteStudioLayout(DeleteStudioLayoutRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteStudioLayoutWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query scheduled tasks that are used to start and stop playing an episode list at specified points in time. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries scheduled tasks that are used to start and stop playing an episode list at specified points in time.</p>
     * 
     * @param request DescribeAutoShowListTasksRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeAutoShowListTasksResponse
     */
    public DescribeAutoShowListTasksResponse describeAutoShowListTasksWithOptions(DescribeAutoShowListTasksRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeAutoShowListTasks"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeAutoShowListTasksResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query scheduled tasks that are used to start and stop playing an episode list at specified points in time. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries scheduled tasks that are used to start and stop playing an episode list at specified points in time.</p>
     * 
     * @param request DescribeAutoShowListTasksRequest
     * @return DescribeAutoShowListTasksResponse
     */
    public DescribeAutoShowListTasksResponse describeAutoShowListTasks(DescribeAutoShowListTasksRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeAutoShowListTasksWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to query the channels of the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the channels of a production studio.</p>
     * 
     * @param request DescribeCasterChannelsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeCasterChannelsResponse
     */
    public DescribeCasterChannelsResponse describeCasterChannelsWithOptions(DescribeCasterChannelsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeCasterChannels"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeCasterChannelsResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to query the channels of the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the channels of a production studio.</p>
     * 
     * @param request DescribeCasterChannelsRequest
     * @return DescribeCasterChannelsResponse
     */
    public DescribeCasterChannelsResponse describeCasterChannels(DescribeCasterChannelsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeCasterChannelsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848030.html">AddCasterComponent</a> operation to add components to a production studio and then call this operation to query the components of the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the components of a production studio.</p>
     * 
     * @param request DescribeCasterComponentsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeCasterComponentsResponse
     */
    public DescribeCasterComponentsResponse describeCasterComponentsWithOptions(DescribeCasterComponentsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.componentId)) {
            query.put("ComponentId", request.componentId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeCasterComponents"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeCasterComponentsResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848030.html">AddCasterComponent</a> operation to add components to a production studio and then call this operation to query the components of the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the components of a production studio.</p>
     * 
     * @param request DescribeCasterComponentsRequest
     * @return DescribeCasterComponentsResponse
     */
    public DescribeCasterComponentsResponse describeCasterComponents(DescribeCasterComponentsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeCasterComponentsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to query the configurations of the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configurations of a production studio.</p>
     * 
     * @param request DescribeCasterConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeCasterConfigResponse
     */
    public DescribeCasterConfigResponse describeCasterConfigWithOptions(DescribeCasterConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeCasterConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeCasterConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to query the configurations of the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configurations of a production studio.</p>
     * 
     * @param request DescribeCasterConfigRequest
     * @return DescribeCasterConfigResponse
     */
    public DescribeCasterConfigResponse describeCasterConfig(DescribeCasterConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeCasterConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query layouts of a production studio. If no layout ID is specified, the operation returns all layouts of the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries a specified layout or all layouts of a production studio.</p>
     * 
     * @param request DescribeCasterLayoutsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeCasterLayoutsResponse
     */
    public DescribeCasterLayoutsResponse describeCasterLayoutsWithOptions(DescribeCasterLayoutsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layoutId)) {
            query.put("LayoutId", request.layoutId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeCasterLayouts"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeCasterLayoutsResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query layouts of a production studio. If no layout ID is specified, the operation returns all layouts of the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries a specified layout or all layouts of a production studio.</p>
     * 
     * @param request DescribeCasterLayoutsRequest
     * @return DescribeCasterLayoutsResponse
     */
    public DescribeCasterLayoutsResponse describeCasterLayouts(DescribeCasterLayoutsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeCasterLayoutsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query episodes in the episode list for carousel playback. The supported types of episodes include video resource and component.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about the episode list for carousel playback in a production studio.</p>
     * 
     * @param request DescribeCasterProgramRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeCasterProgramResponse
     */
    public DescribeCasterProgramResponse describeCasterProgramWithOptions(DescribeCasterProgramRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.episodeId)) {
            query.put("EpisodeId", request.episodeId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.episodeType)) {
            query.put("EpisodeType", request.episodeType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            query.put("Status", request.status);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeCasterProgram"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeCasterProgramResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query episodes in the episode list for carousel playback. The supported types of episodes include video resource and component.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about the episode list for carousel playback in a production studio.</p>
     * 
     * @param request DescribeCasterProgramRequest
     * @return DescribeCasterProgramResponse
     */
    public DescribeCasterProgramResponse describeCasterProgram(DescribeCasterProgramRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeCasterProgramWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/69338.html">CreateCaster</a> operation to create a production studio and then call this operation to query the audio configurations of a scene in the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the audio configurations of a scene.</p>
     * 
     * @param request DescribeCasterSceneAudioRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeCasterSceneAudioResponse
     */
    public DescribeCasterSceneAudioResponse describeCasterSceneAudioWithOptions(DescribeCasterSceneAudioRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sceneId)) {
            query.put("SceneId", request.sceneId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeCasterSceneAudio"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeCasterSceneAudioResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/69338.html">CreateCaster</a> operation to create a production studio and then call this operation to query the audio configurations of a scene in the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the audio configurations of a scene.</p>
     * 
     * @param request DescribeCasterSceneAudioRequest
     * @return DescribeCasterSceneAudioResponse
     */
    public DescribeCasterSceneAudioResponse describeCasterSceneAudio(DescribeCasterSceneAudioRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeCasterSceneAudioWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/69338.html">CreateCaster</a> operation to create a production studio and then call this operation to query the scenes of the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the scenes of a production studio.</p>
     * 
     * @param request DescribeCasterScenesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeCasterScenesResponse
     */
    public DescribeCasterScenesResponse describeCasterScenesWithOptions(DescribeCasterScenesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sceneId)) {
            query.put("SceneId", request.sceneId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeCasterScenes"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeCasterScenesResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/69338.html">CreateCaster</a> operation to create a production studio and then call this operation to query the scenes of the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the scenes of a production studio.</p>
     * 
     * @param request DescribeCasterScenesRequest
     * @return DescribeCasterScenesResponse
     */
    public DescribeCasterScenesResponse describeCasterScenes(DescribeCasterScenesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeCasterScenesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You must create a production studio before calling this operation to query the information.</p>
     * <h2>QPS limit</h2>
     * <p>A single user can perform a maximum of 15 queries per second (QPS). Throttling is triggered when the number of calls per second exceeds the QPS limit. The throttling may affect your business. Thus, we recommend that you observe the QPS limit on this operation. For more information about what a single user means and the QPS details, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live#topic-2136805">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the streaming URLs of a production studio.</p>
     * 
     * @param request DescribeCasterStreamUrlRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeCasterStreamUrlResponse
     */
    public DescribeCasterStreamUrlResponse describeCasterStreamUrlWithOptions(DescribeCasterStreamUrlRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeCasterStreamUrl"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeCasterStreamUrlResponse());
    }

    /**
     * <b>description</b> :
     * <p>You must create a production studio before calling this operation to query the information.</p>
     * <h2>QPS limit</h2>
     * <p>A single user can perform a maximum of 15 queries per second (QPS). Throttling is triggered when the number of calls per second exceeds the QPS limit. The throttling may affect your business. Thus, we recommend that you observe the QPS limit on this operation. For more information about what a single user means and the QPS details, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live#topic-2136805">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the streaming URLs of a production studio.</p>
     * 
     * @param request DescribeCasterStreamUrlRequest
     * @return DescribeCasterStreamUrlResponse
     */
    public DescribeCasterStreamUrlResponse describeCasterStreamUrl(DescribeCasterStreamUrlRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeCasterStreamUrlWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to query the input sources of the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the input sources of a production studio.</p>
     * 
     * @param request DescribeCasterVideoResourcesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeCasterVideoResourcesResponse
     */
    public DescribeCasterVideoResourcesResponse describeCasterVideoResourcesWithOptions(DescribeCasterVideoResourcesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeCasterVideoResources"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeCasterVideoResourcesResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to query the input sources of the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the input sources of a production studio.</p>
     * 
     * @param request DescribeCasterVideoResourcesRequest
     * @return DescribeCasterVideoResourcesResponse
     */
    public DescribeCasterVideoResourcesResponse describeCasterVideoResources(DescribeCasterVideoResourcesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeCasterVideoResourcesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848012.html">CreateCaster</a> operation to create a production studio and then call this operation to query the production studio list. The status of a production studio can be idle or streaming.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the list of production studios.</p>
     * 
     * @param request DescribeCastersRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeCastersResponse
     */
    public DescribeCastersResponse describeCastersWithOptions(DescribeCastersRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterName)) {
            query.put("CasterName", request.casterName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.chargeType)) {
            query.put("ChargeType", request.chargeType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.normType)) {
            query.put("NormType", request.normType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.orderByModifyAsc)) {
            query.put("OrderByModifyAsc", request.orderByModifyAsc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            query.put("Status", request.status);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tag)) {
            query.put("Tag", request.tag);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeCasters"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeCastersResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848012.html">CreateCaster</a> operation to create a production studio and then call this operation to query the production studio list. The status of a production studio can be idle or streaming.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the list of production studios.</p>
     * 
     * @param request DescribeCastersRequest
     * @return DescribeCastersResponse
     */
    public DescribeCastersResponse describeCasters(DescribeCastersRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeCastersWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query online users in a channel. The returned result does not include details about the users.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries online users in a channel.</p>
     * 
     * @param request DescribeChannelParticipantsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeChannelParticipantsResponse
     */
    public DescribeChannelParticipantsResponse describeChannelParticipantsWithOptions(DescribeChannelParticipantsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.order)) {
            query.put("Order", request.order);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeChannelParticipants"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeChannelParticipantsResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query online users in a channel. The returned result does not include details about the users.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries online users in a channel.</p>
     * 
     * @param request DescribeChannelParticipantsRequest
     * @return DescribeChannelParticipantsResponse
     */
    public DescribeChannelParticipantsResponse describeChannelParticipants(DescribeChannelParticipantsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeChannelParticipantsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query information about online users in a channel, such as the total number of users during live streaming.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of online users in a channel.</p>
     * 
     * @param request DescribeChannelUsersRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeChannelUsersResponse
     */
    public DescribeChannelUsersResponse describeChannelUsersWithOptions(DescribeChannelUsersRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeChannelUsers"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeChannelUsersResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query information about online users in a channel, such as the total number of users during live streaming.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of online users in a channel.</p>
     * 
     * @param request DescribeChannelUsersRequest
     * @return DescribeChannelUsersResponse
     */
    public DescribeChannelUsersResponse describeChannelUsers(DescribeChannelUsersRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeChannelUsersWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can query the resource usage data of up to 100 domain names at a time. Separate multiple domain names with commas (,). If you do not specify the DomainName parameter, the resource usage data of all domain names within your Alibaba Cloud account is returned.</p>
     * <ul>
     * <li>The resource usage data includes network traffic that is measured in bytes, bandwidth that is measured in bit/s, and the number of requests.</li>
     * <li>If you do not specify the Interval parameter, you can query the resource usage data in the last 12 months that spans a period of up to 31 days per call. If you specify a time range of 1 to 3 days in a call, the time interval between the entries that are returned is 1 hour. If you specify a time range of more than 3 days in a call, the time interval between the entries that are returned is 1 day.</li>
     * <li>The following table describes the maximum time range per query, the time period within which historical data is available, and the data delay if you specify the Interval parameter.<table>
     * <thead>
     * <tr>
     * <th>Time granularity</th>
     * <th>Maximum time range per query</th>
     * <th>Historical data available</th>
     * <th>Data delay</th>
     * </tr>
     * </thead>
     * <tbody><tr>
     * <td>5 minutes</td>
     * <td>3 days</td>
     * <td>93 days</td>
     * <td>15 minutes</td>
     * </tr>
     * <tr>
     * <td>1 hour</td>
     * <td>31 days</td>
     * <td>186 days</td>
     * <td>4 hours</td>
     * </tr>
     * <tr>
     * <td>1 day</td>
     * <td>90 days</td>
     * <td>366 days</td>
     * <td>04:00 on the next day</td>
     * </tr>
     * </tbody></table>
     * </li>
     * </ul>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the resource usage data of specific domain names in a specified billable region.</p>
     * 
     * @param request DescribeDomainUsageDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeDomainUsageDataResponse
     */
    public DescribeDomainUsageDataResponse describeDomainUsageDataWithOptions(DescribeDomainUsageDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.area)) {
            query.put("Area", request.area);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataProtocol)) {
            query.put("DataProtocol", request.dataProtocol);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.field)) {
            query.put("Field", request.field);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeDomainUsageData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeDomainUsageDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can query the resource usage data of up to 100 domain names at a time. Separate multiple domain names with commas (,). If you do not specify the DomainName parameter, the resource usage data of all domain names within your Alibaba Cloud account is returned.</p>
     * <ul>
     * <li>The resource usage data includes network traffic that is measured in bytes, bandwidth that is measured in bit/s, and the number of requests.</li>
     * <li>If you do not specify the Interval parameter, you can query the resource usage data in the last 12 months that spans a period of up to 31 days per call. If you specify a time range of 1 to 3 days in a call, the time interval between the entries that are returned is 1 hour. If you specify a time range of more than 3 days in a call, the time interval between the entries that are returned is 1 day.</li>
     * <li>The following table describes the maximum time range per query, the time period within which historical data is available, and the data delay if you specify the Interval parameter.<table>
     * <thead>
     * <tr>
     * <th>Time granularity</th>
     * <th>Maximum time range per query</th>
     * <th>Historical data available</th>
     * <th>Data delay</th>
     * </tr>
     * </thead>
     * <tbody><tr>
     * <td>5 minutes</td>
     * <td>3 days</td>
     * <td>93 days</td>
     * <td>15 minutes</td>
     * </tr>
     * <tr>
     * <td>1 hour</td>
     * <td>31 days</td>
     * <td>186 days</td>
     * <td>4 hours</td>
     * </tr>
     * <tr>
     * <td>1 day</td>
     * <td>90 days</td>
     * <td>366 days</td>
     * <td>04:00 on the next day</td>
     * </tr>
     * </tbody></table>
     * </li>
     * </ul>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the resource usage data of specific domain names in a specified billable region.</p>
     * 
     * @param request DescribeDomainUsageDataRequest
     * @return DescribeDomainUsageDataResponse
     */
    public DescribeDomainUsageDataResponse describeDomainUsageData(DescribeDomainUsageDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeDomainUsageDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to obtain domain integrity.</p>
     * <h2><a href="#qps-"></a>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Obtains domain integrity.</p>
     * 
     * @param request DescribeDomainWithIntegrityRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeDomainWithIntegrityResponse
     */
    public DescribeDomainWithIntegrityResponse describeDomainWithIntegrityWithOptions(DescribeDomainWithIntegrityRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeDomainWithIntegrity"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeDomainWithIntegrityResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to obtain domain integrity.</p>
     * <h2><a href="#qps-"></a>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Obtains domain integrity.</p>
     * 
     * @param request DescribeDomainWithIntegrityRequest
     * @return DescribeDomainWithIntegrityResponse
     */
    public DescribeDomainWithIntegrityResponse describeDomainWithIntegrity(DescribeDomainWithIntegrityRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeDomainWithIntegrityWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the information about HTTP Live Streaming (HLS) streams, such as the number of online users and bandwidth.</p>
     * <ul>
     * <li>The number of online users for an HLS stream is counted based on the universally unique identifiers (UUIDs) of users that are placed after the M3U8 URL.</li>
     * <li>You can query the data of up to 100 domain names in a single request. If the DomainName parameter is left empty, the data of all domain names under the account is queried.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about HTTP Live Streaming (HLS) streams, such as the number of online users and bandwidth.</p>
     * 
     * @param request DescribeHlsLiveStreamRealTimeBpsDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeHlsLiveStreamRealTimeBpsDataResponse
     */
    public DescribeHlsLiveStreamRealTimeBpsDataResponse describeHlsLiveStreamRealTimeBpsDataWithOptions(DescribeHlsLiveStreamRealTimeBpsDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeHlsLiveStreamRealTimeBpsData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeHlsLiveStreamRealTimeBpsDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the information about HTTP Live Streaming (HLS) streams, such as the number of online users and bandwidth.</p>
     * <ul>
     * <li>The number of online users for an HLS stream is counted based on the universally unique identifiers (UUIDs) of users that are placed after the M3U8 URL.</li>
     * <li>You can query the data of up to 100 domain names in a single request. If the DomainName parameter is left empty, the data of all domain names under the account is queried.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about HTTP Live Streaming (HLS) streams, such as the number of online users and bandwidth.</p>
     * 
     * @param request DescribeHlsLiveStreamRealTimeBpsDataRequest
     * @return DescribeHlsLiveStreamRealTimeBpsDataResponse
     */
    public DescribeHlsLiveStreamRealTimeBpsDataResponse describeHlsLiveStreamRealTimeBpsData(DescribeHlsLiveStreamRealTimeBpsDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeHlsLiveStreamRealTimeBpsDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query subtitle rules. Make sure that the parameter settings meet the requirements.</p>
     * <blockquote>
     * <p> The live subtitles feature is in invitational preview. You can add up to 300 subtitle templates.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries subtitle rules.</p>
     * 
     * @param request DescribeLiveAIProduceRulesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveAIProduceRulesResponse
     */
    public DescribeLiveAIProduceRulesResponse describeLiveAIProduceRulesWithOptions(DescribeLiveAIProduceRulesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.rulesId)) {
            query.put("RulesId", request.rulesId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.suffixName)) {
            query.put("SuffixName", request.suffixName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveAIProduceRules"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveAIProduceRulesResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query subtitle rules. Make sure that the parameter settings meet the requirements.</p>
     * <blockquote>
     * <p> The live subtitles feature is in invitational preview. You can add up to 300 subtitle templates.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries subtitle rules.</p>
     * 
     * @param request DescribeLiveAIProduceRulesRequest
     * @return DescribeLiveAIProduceRulesResponse
     */
    public DescribeLiveAIProduceRulesResponse describeLiveAIProduceRules(DescribeLiveAIProduceRulesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveAIProduceRulesWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Queries the virtual studio templates within your Alibaba Cloud account.</p>
     * 
     * @param request DescribeLiveAIStudioRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveAIStudioResponse
     */
    public DescribeLiveAIStudioResponse describeLiveAIStudioWithOptions(DescribeLiveAIStudioRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.studioId)) {
            query.put("StudioId", request.studioId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.studioName)) {
            query.put("StudioName", request.studioName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveAIStudio"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveAIStudioResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Queries the virtual studio templates within your Alibaba Cloud account.</p>
     * 
     * @param request DescribeLiveAIStudioRequest
     * @return DescribeLiveAIStudioResponse
     */
    public DescribeLiveAIStudioResponse describeLiveAIStudio(DescribeLiveAIStudioRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveAIStudioWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This interface supports querying the list of subtitle template information with specified pagination parameters. Ensure that the parameter settings meet the requirements when calling.</p>
     * <blockquote>
     * <p>Notice: The real-time subtitle function is currently in the beta testing phase, and each user can add up to 300 subtitle templates. </p>
     * </blockquote>
     * <h2>QPS Limit</h2>
     * <p>The QPS limit for this interface per user is 60 times/second. Exceeding this limit will result in API calls being throttled, which may impact your business operations. Please use it reasonably. For more information, refer to <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limitation</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries subtitle templates.</p>
     * 
     * @param request DescribeLiveAISubtitleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveAISubtitleResponse
     */
    public DescribeLiveAISubtitleResponse describeLiveAISubtitleWithOptions(DescribeLiveAISubtitleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.isDefault)) {
            query.put("IsDefault", request.isDefault);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subtitleId)) {
            query.put("SubtitleId", request.subtitleId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subtitleName)) {
            query.put("SubtitleName", request.subtitleName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveAISubtitle"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveAISubtitleResponse());
    }

    /**
     * <b>description</b> :
     * <p>This interface supports querying the list of subtitle template information with specified pagination parameters. Ensure that the parameter settings meet the requirements when calling.</p>
     * <blockquote>
     * <p>Notice: The real-time subtitle function is currently in the beta testing phase, and each user can add up to 300 subtitle templates. </p>
     * </blockquote>
     * <h2>QPS Limit</h2>
     * <p>The QPS limit for this interface per user is 60 times/second. Exceeding this limit will result in API calls being throttled, which may impact your business operations. Please use it reasonably. For more information, refer to <a href="https://help.aliyun.com/document_detail/343507.html">QPS Limitation</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries subtitle templates.</p>
     * 
     * @param request DescribeLiveAISubtitleRequest
     * @return DescribeLiveAISubtitleResponse
     */
    public DescribeLiveAISubtitleResponse describeLiveAISubtitle(DescribeLiveAISubtitleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveAISubtitleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to query audio moderation configurations.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries audio moderation configurations.</p>
     * 
     * @param request DescribeLiveAudioAuditConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveAudioAuditConfigResponse
     */
    public DescribeLiveAudioAuditConfigResponse describeLiveAudioAuditConfigWithOptions(DescribeLiveAudioAuditConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveAudioAuditConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveAudioAuditConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to query audio moderation configurations.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries audio moderation configurations.</p>
     * 
     * @param request DescribeLiveAudioAuditConfigRequest
     * @return DescribeLiveAudioAuditConfigResponse
     */
    public DescribeLiveAudioAuditConfigResponse describeLiveAudioAuditConfig(DescribeLiveAudioAuditConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveAudioAuditConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to query the configuration of callbacks for audio moderation results.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configuration of callbacks for audio moderation results.</p>
     * 
     * @param request DescribeLiveAudioAuditNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveAudioAuditNotifyConfigResponse
     */
    public DescribeLiveAudioAuditNotifyConfigResponse describeLiveAudioAuditNotifyConfigWithOptions(DescribeLiveAudioAuditNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveAudioAuditNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveAudioAuditNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to query the configuration of callbacks for audio moderation results.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configuration of callbacks for audio moderation results.</p>
     * 
     * @param request DescribeLiveAudioAuditNotifyConfigRequest
     * @return DescribeLiveAudioAuditNotifyConfigResponse
     */
    public DescribeLiveAudioAuditNotifyConfigResponse describeLiveAudioAuditNotifyConfig(DescribeLiveAudioAuditNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveAudioAuditNotifyConfigWithOptions(request, runtime);
    }

    /**
     * @param request DescribeLiveCdnDiagnoseInfoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveCdnDiagnoseInfoResponse
     */
    public DescribeLiveCdnDiagnoseInfoResponse describeLiveCdnDiagnoseInfoWithOptions(DescribeLiveCdnDiagnoseInfoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("app", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("endTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.intervalType)) {
            query.put("intervalType", request.intervalType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.phase)) {
            query.put("phase", request.phase);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.requestType)) {
            query.put("requestType", request.requestType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("startTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("streamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamSuffix)) {
            query.put("streamSuffix", request.streamSuffix);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveCdnDiagnoseInfo"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveCdnDiagnoseInfoResponse());
    }

    /**
     * @param request DescribeLiveCdnDiagnoseInfoRequest
     * @return DescribeLiveCdnDiagnoseInfoResponse
     */
    public DescribeLiveCdnDiagnoseInfoResponse describeLiveCdnDiagnoseInfo(DescribeLiveCdnDiagnoseInfoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveCdnDiagnoseInfoWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>The time granularity for the returned data is 5 seconds. The maximum time range to query is 3 hours. You can query data in the last 30 days.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the audio and video frame rates and bitrates of a stream in a live center.</p>
     * 
     * @param request DescribeLiveCenterStreamRateDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveCenterStreamRateDataResponse
     */
    public DescribeLiveCenterStreamRateDataResponse describeLiveCenterStreamRateDataWithOptions(DescribeLiveCenterStreamRateDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveCenterStreamRateData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveCenterStreamRateDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>The time granularity for the returned data is 5 seconds. The maximum time range to query is 3 hours. You can query data in the last 30 days.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the audio and video frame rates and bitrates of a stream in a live center.</p>
     * 
     * @param request DescribeLiveCenterStreamRateDataRequest
     * @return DescribeLiveCenterStreamRateDataResponse
     */
    public DescribeLiveCenterStreamRateDataResponse describeLiveCenterStreamRateData(DescribeLiveCenterStreamRateDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveCenterStreamRateDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about a configuration of live center stream relay.</p>
     * 
     * @param request DescribeLiveCenterTransferRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveCenterTransferResponse
     */
    public DescribeLiveCenterTransferResponse describeLiveCenterTransferWithOptions(DescribeLiveCenterTransferRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dstUrl)) {
            query.put("DstUrl", request.dstUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveCenterTransfer"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveCenterTransferResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about a configuration of live center stream relay.</p>
     * 
     * @param request DescribeLiveCenterTransferRequest
     * @return DescribeLiveCenterTransferResponse
     */
    public DescribeLiveCenterTransferResponse describeLiveCenterTransfer(DescribeLiveCenterTransferRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveCenterTransferWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can obtain the certificate name on the <a href="https://help.aliyun.com/document_detail/2584962.html">Certificates</a> page of the ApsaraVideo Live console and then call this operation to query the certificate details.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of a certificate.</p>
     * 
     * @param request DescribeLiveCertificateDetailRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveCertificateDetailResponse
     */
    public DescribeLiveCertificateDetailResponse describeLiveCertificateDetailWithOptions(DescribeLiveCertificateDetailRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.certName)) {
            query.put("CertName", request.certName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveCertificateDetail"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveCertificateDetailResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can obtain the certificate name on the <a href="https://help.aliyun.com/document_detail/2584962.html">Certificates</a> page of the ApsaraVideo Live console and then call this operation to query the certificate details.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of a certificate.</p>
     * 
     * @param request DescribeLiveCertificateDetailRequest
     * @return DescribeLiveCertificateDetailResponse
     */
    public DescribeLiveCertificateDetailResponse describeLiveCertificateDetail(DescribeLiveCertificateDetailRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveCertificateDetailWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>If you specify one or more domain names in the request, the certificates of the domain names are returned. If you do not specify a domain name in the request, all certificates within your Alibaba Cloud account are returned.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the certificates of one or more specified domain names or all certificates within your Alibaba Cloud account.</p>
     * 
     * @param request DescribeLiveCertificateListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveCertificateListResponse
     */
    public DescribeLiveCertificateListResponse describeLiveCertificateListWithOptions(DescribeLiveCertificateListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveCertificateList"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveCertificateListResponse());
    }

    /**
     * <b>description</b> :
     * <p>If you specify one or more domain names in the request, the certificates of the domain names are returned. If you do not specify a domain name in the request, all certificates within your Alibaba Cloud account are returned.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the certificates of one or more specified domain names or all certificates within your Alibaba Cloud account.</p>
     * 
     * @param request DescribeLiveCertificateListRequest
     * @return DescribeLiveCertificateListResponse
     */
    public DescribeLiveCertificateListResponse describeLiveCertificateList(DescribeLiveCertificateListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveCertificateListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about a stream delay configuration.</p>
     * 
     * @param request DescribeLiveDelayConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDelayConfigResponse
     */
    public DescribeLiveDelayConfigResponse describeLiveDelayConfigWithOptions(DescribeLiveDelayConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.stream)) {
            query.put("Stream", request.stream);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDelayConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDelayConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about a stream delay configuration.</p>
     * 
     * @param request DescribeLiveDelayConfigRequest
     * @return DescribeLiveDelayConfigResponse
     */
    public DescribeLiveDelayConfigResponse describeLiveDelayConfig(DescribeLiveDelayConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDelayConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query your stream delay usage data. The default time granularity is 1 hour.</p>
     * <ul>
     * <li>The maximum time range for a query is 31 days.</li>
     * <li>The minimum time granularity for a query is 1 hour.</li>
     * <li>You can query the data in the last 31 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the stream delay usage data.</p>
     * 
     * @param request DescribeLiveDelayedStreamingUsageRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDelayedStreamingUsageResponse
     */
    public DescribeLiveDelayedStreamingUsageResponse describeLiveDelayedStreamingUsageWithOptions(DescribeLiveDelayedStreamingUsageRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.region)) {
            query.put("Region", request.region);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.splitBy)) {
            query.put("SplitBy", request.splitBy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDelayedStreamingUsage"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDelayedStreamingUsageResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query your stream delay usage data. The default time granularity is 1 hour.</p>
     * <ul>
     * <li>The maximum time range for a query is 31 days.</li>
     * <li>The minimum time granularity for a query is 1 hour.</li>
     * <li>You can query the data in the last 31 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the stream delay usage data.</p>
     * 
     * @param request DescribeLiveDelayedStreamingUsageRequest
     * @return DescribeLiveDelayedStreamingUsageResponse
     */
    public DescribeLiveDelayedStreamingUsageResponse describeLiveDelayedStreamingUsage(DescribeLiveDelayedStreamingUsageRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDelayedStreamingUsageWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to query the configuration of callbacks for video moderation results.</p>
     * <ul>
     * <li>Only some live centers support the automated review feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configuration of callbacks for video moderation results.</p>
     * 
     * @param request DescribeLiveDetectNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDetectNotifyConfigResponse
     */
    public DescribeLiveDetectNotifyConfigResponse describeLiveDetectNotifyConfigWithOptions(DescribeLiveDetectNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDetectNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDetectNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to query the configuration of callbacks for video moderation results.</p>
     * <ul>
     * <li>Only some live centers support the automated review feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configuration of callbacks for video moderation results.</p>
     * 
     * @param request DescribeLiveDetectNotifyConfigRequest
     * @return DescribeLiveDetectNotifyConfigResponse
     */
    public DescribeLiveDetectNotifyConfigResponse describeLiveDetectNotifyConfig(DescribeLiveDetectNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDetectNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The minimum data granularity is 5 minutes. If you do not specify the <code>StartTime</code> parameter, data in the last 24 hours is queried.</p>
     * <ul>
     * <li>You can query data in the last 90 days.</li>
     * <li>You can call this operation to query the bandwidth at each interval.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the usage data of content moderation.</p>
     * 
     * @param request DescribeLiveDetectPornDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDetectPornDataResponse
     */
    public DescribeLiveDetectPornDataResponse describeLiveDetectPornDataWithOptions(DescribeLiveDetectPornDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fee)) {
            query.put("Fee", request.fee);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.region)) {
            query.put("Region", request.region);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scene)) {
            query.put("Scene", request.scene);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.splitBy)) {
            query.put("SplitBy", request.splitBy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.stream)) {
            query.put("Stream", request.stream);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDetectPornData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDetectPornDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The minimum data granularity is 5 minutes. If you do not specify the <code>StartTime</code> parameter, data in the last 24 hours is queried.</p>
     * <ul>
     * <li>You can query data in the last 90 days.</li>
     * <li>You can call this operation to query the bandwidth at each interval.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the usage data of content moderation.</p>
     * 
     * @param request DescribeLiveDetectPornDataRequest
     * @return DescribeLiveDetectPornDataResponse
     */
    public DescribeLiveDetectPornDataResponse describeLiveDetectPornData(DescribeLiveDetectPornDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDetectPornDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can specify both the StartTime and EndTime parameters to query the data in the specified period of time. If you do not specify the StartTime and EndTime parameters, the data of the last hour is queried by default.</p>
     * <ul>
     * <li>If you specify only the StartTime parameter but not the EndTime parameter, the data of the hour following the specified start time is queried.</li>
     * <li>If you specify only the EndTime parameter but not the StartTime parameter, the data of the hour preceding the specified end time is queried.</li>
     * <li>You can query the data in the last 90 days.</li>
     * <li>This operation is used to monitor data. The data returned by this operation cannot be used as a reference to calculate resource usage for billing.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the bandwidth data for one or more streaming domains.</p>
     * 
     * @param request DescribeLiveDomainBpsDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainBpsDataResponse
     */
    public DescribeLiveDomainBpsDataResponse describeLiveDomainBpsDataWithOptions(DescribeLiveDomainBpsDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ispNameEn)) {
            query.put("IspNameEn", request.ispNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.locationNameEn)) {
            query.put("LocationNameEn", request.locationNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainBpsData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainBpsDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can specify both the StartTime and EndTime parameters to query the data in the specified period of time. If you do not specify the StartTime and EndTime parameters, the data of the last hour is queried by default.</p>
     * <ul>
     * <li>If you specify only the StartTime parameter but not the EndTime parameter, the data of the hour following the specified start time is queried.</li>
     * <li>If you specify only the EndTime parameter but not the StartTime parameter, the data of the hour preceding the specified end time is queried.</li>
     * <li>You can query the data in the last 90 days.</li>
     * <li>This operation is used to monitor data. The data returned by this operation cannot be used as a reference to calculate resource usage for billing.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the bandwidth data for one or more streaming domains.</p>
     * 
     * @param request DescribeLiveDomainBpsDataRequest
     * @return DescribeLiveDomainBpsDataResponse
     */
    public DescribeLiveDomainBpsDataResponse describeLiveDomainBpsData(DescribeLiveDomainBpsDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainBpsDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can query data in the last 90 days. You can specify up to 500 domain names. Separate multiple domain names with commas (,). The data of multiple domain names is aggregated and returned. The following section describes the time granularities of the data entries returned depending on the time range specified by the <strong>StartTime</strong> and <strong>EndTime</strong> parameters:</p>
     * <ul>
     * <li>If the time range is smaller than or equal to 3 days, the time granularity is 5 minutes.</li>
     * <li>If the time range is larger than 3 days but smaller than or equal to 31 days, the time granularity is 1 hour.</li>
     * <li>If the time range is larger than 31 days, the time granularity is 1 day.<blockquote>
     * <p> If neither the <strong>StartTime</strong> nor the <strong>EndTime</strong> parameter is specified, the data of the last 24 hours is returned.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the bandwidth and traffic data by protocol for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainBpsDataByLayerRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainBpsDataByLayerResponse
     */
    public DescribeLiveDomainBpsDataByLayerResponse describeLiveDomainBpsDataByLayerWithOptions(DescribeLiveDomainBpsDataByLayerRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ispNameEn)) {
            query.put("IspNameEn", request.ispNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layer)) {
            query.put("Layer", request.layer);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.locationNameEn)) {
            query.put("LocationNameEn", request.locationNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainBpsDataByLayer"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainBpsDataByLayerResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can query data in the last 90 days. You can specify up to 500 domain names. Separate multiple domain names with commas (,). The data of multiple domain names is aggregated and returned. The following section describes the time granularities of the data entries returned depending on the time range specified by the <strong>StartTime</strong> and <strong>EndTime</strong> parameters:</p>
     * <ul>
     * <li>If the time range is smaller than or equal to 3 days, the time granularity is 5 minutes.</li>
     * <li>If the time range is larger than 3 days but smaller than or equal to 31 days, the time granularity is 1 hour.</li>
     * <li>If the time range is larger than 31 days, the time granularity is 1 day.<blockquote>
     * <p> If neither the <strong>StartTime</strong> nor the <strong>EndTime</strong> parameter is specified, the data of the last 24 hours is returned.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the bandwidth and traffic data by protocol for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainBpsDataByLayerRequest
     * @return DescribeLiveDomainBpsDataByLayerResponse
     */
    public DescribeLiveDomainBpsDataByLayerResponse describeLiveDomainBpsDataByLayer(DescribeLiveDomainBpsDataByLayerRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainBpsDataByLayerWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the accelerated domain names that match a certificate.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the accelerated domain names that match a certificate.</p>
     * 
     * @param request DescribeLiveDomainByCertificateRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainByCertificateResponse
     */
    public DescribeLiveDomainByCertificateResponse describeLiveDomainByCertificateWithOptions(DescribeLiveDomainByCertificateRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.SSLPub)) {
            query.put("SSLPub", request.SSLPub);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.SSLStatus)) {
            query.put("SSLStatus", request.SSLStatus);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainByCertificate"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainByCertificateResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the accelerated domain names that match a certificate.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the accelerated domain names that match a certificate.</p>
     * 
     * @param request DescribeLiveDomainByCertificateRequest
     * @return DescribeLiveDomainByCertificateResponse
     */
    public DescribeLiveDomainByCertificateResponse describeLiveDomainByCertificate(DescribeLiveDomainByCertificateRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainByCertificateWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain a domain name, and then call this operation to query certificate information about the domain name.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries certificate information about a domain name.</p>
     * 
     * @param request DescribeLiveDomainCertificateInfoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainCertificateInfoResponse
     */
    public DescribeLiveDomainCertificateInfoResponse describeLiveDomainCertificateInfoWithOptions(DescribeLiveDomainCertificateInfoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainCertificateInfo"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainCertificateInfoResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain a domain name, and then call this operation to query certificate information about the domain name.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries certificate information about a domain name.</p>
     * 
     * @param request DescribeLiveDomainCertificateInfoRequest
     * @return DescribeLiveDomainCertificateInfoResponse
     */
    public DescribeLiveDomainCertificateInfoResponse describeLiveDomainCertificateInfo(DescribeLiveDomainCertificateInfoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainCertificateInfoWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query multiple configurations at a time.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries one or more configurations of a domain name.</p>
     * 
     * @param request DescribeLiveDomainConfigsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainConfigsResponse
     */
    public DescribeLiveDomainConfigsResponse describeLiveDomainConfigsWithOptions(DescribeLiveDomainConfigsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.functionNames)) {
            query.put("FunctionNames", request.functionNames);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainConfigs"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainConfigsResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query multiple configurations at a time.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries one or more configurations of a domain name.</p>
     * 
     * @param request DescribeLiveDomainConfigsRequest
     * @return DescribeLiveDomainConfigsResponse
     */
    public DescribeLiveDomainConfigsResponse describeLiveDomainConfigs(DescribeLiveDomainConfigsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainConfigsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>You can call this operation to query the basic information about an ingest domain or a streaming domain. If you want to query a newly added domain name, wait a few minutes until the configuration of the domain name is completed in ApsaraVideo Live.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the basic information about a domain name.</p>
     * 
     * @param request DescribeLiveDomainDetailRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainDetailResponse
     */
    public DescribeLiveDomainDetailResponse describeLiveDomainDetailWithOptions(DescribeLiveDomainDetailRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainDetail"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainDetailResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>You can call this operation to query the basic information about an ingest domain or a streaming domain. If you want to query a newly added domain name, wait a few minutes until the configuration of the domain name is completed in ApsaraVideo Live.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the basic information about a domain name.</p>
     * 
     * @param request DescribeLiveDomainDetailRequest
     * @return DescribeLiveDomainDetailResponse
     */
    public DescribeLiveDomainDetailResponse describeLiveDomainDetail(DescribeLiveDomainDetailRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainDetailWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>直播离线日志查询地址</p>
     * 
     * @param request DescribeLiveDomainEdgeLogRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainEdgeLogResponse
     */
    public DescribeLiveDomainEdgeLogResponse describeLiveDomainEdgeLogWithOptions(DescribeLiveDomainEdgeLogRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainEdgeLog"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainEdgeLogResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>直播离线日志查询地址</p>
     * 
     * @param request DescribeLiveDomainEdgeLogRequest
     * @return DescribeLiveDomainEdgeLogResponse
     */
    public DescribeLiveDomainEdgeLogResponse describeLiveDomainEdgeLog(DescribeLiveDomainEdgeLogRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainEdgeLogWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the real-time bitrates and frame rates of live streams, which helps you evaluate the stream ingest quality. A delay exists in data collection and statistics. We recommend that you query the data of more than 5 minutes ago.</p>
     * <blockquote>
     * <p> Use this operation to replace the deprecated DescribeLiveStreamsFrameRateAndBitRateData operation.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the frame rates and bitrates of all live streams under an ingest domain.</p>
     * 
     * @param request DescribeLiveDomainFrameRateAndBitRateDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainFrameRateAndBitRateDataResponse
     */
    public DescribeLiveDomainFrameRateAndBitRateDataResponse describeLiveDomainFrameRateAndBitRateDataWithOptions(DescribeLiveDomainFrameRateAndBitRateDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.queryTime)) {
            query.put("QueryTime", request.queryTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainFrameRateAndBitRateData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainFrameRateAndBitRateDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the real-time bitrates and frame rates of live streams, which helps you evaluate the stream ingest quality. A delay exists in data collection and statistics. We recommend that you query the data of more than 5 minutes ago.</p>
     * <blockquote>
     * <p> Use this operation to replace the deprecated DescribeLiveStreamsFrameRateAndBitRateData operation.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the frame rates and bitrates of all live streams under an ingest domain.</p>
     * 
     * @param request DescribeLiveDomainFrameRateAndBitRateDataRequest
     * @return DescribeLiveDomainFrameRateAndBitRateDataResponse
     */
    public DescribeLiveDomainFrameRateAndBitRateDataResponse describeLiveDomainFrameRateAndBitRateData(DescribeLiveDomainFrameRateAndBitRateDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainFrameRateAndBitRateDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation applies only to main streaming domains.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the maximum numbers of ingested and transcoded streams for a streaming domain.</p>
     * 
     * @param request DescribeLiveDomainLimitRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainLimitResponse
     */
    public DescribeLiveDomainLimitResponse describeLiveDomainLimitWithOptions(DescribeLiveDomainLimitRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainLimit"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainLimitResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation applies only to main streaming domains.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the maximum numbers of ingested and transcoded streams for a streaming domain.</p>
     * 
     * @param request DescribeLiveDomainLimitRequest
     * @return DescribeLiveDomainLimitResponse
     */
    public DescribeLiveDomainLimitResponse describeLiveDomainLimit(DescribeLiveDomainLimitRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainLimitWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the offline logs of a single domain name.</p>
     * <ul>
     * <li>The StartTime and EndTime parameters are optional. You can specify both the parameters to query logs that are generated within the specified time period.</li>
     * <li>If you do not specify the StartTime and EndTime parameters, logs that are generated in the last 24 hours are queried by default.</li>
     * </ul>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the address from which you can download the raw access logs of a domain name.</p>
     * 
     * @param request DescribeLiveDomainLogRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainLogResponse
     */
    public DescribeLiveDomainLogResponse describeLiveDomainLogWithOptions(DescribeLiveDomainLogRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainLog"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainLogResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the offline logs of a single domain name.</p>
     * <ul>
     * <li>The StartTime and EndTime parameters are optional. You can specify both the parameters to query logs that are generated within the specified time period.</li>
     * <li>If you do not specify the StartTime and EndTime parameters, logs that are generated in the last 24 hours are queried by default.</li>
     * </ul>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the address from which you can download the raw access logs of a domain name.</p>
     * 
     * @param request DescribeLiveDomainLogRequest
     * @return DescribeLiveDomainLogResponse
     */
    public DescribeLiveDomainLogResponse describeLiveDomainLog(DescribeLiveDomainLogRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainLogWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>直播离线日志扩展接口(大客定制)</p>
     * 
     * @param request DescribeLiveDomainLogExTtlRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainLogExTtlResponse
     */
    public DescribeLiveDomainLogExTtlResponse describeLiveDomainLogExTtlWithOptions(DescribeLiveDomainLogExTtlRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainLogExTtl"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainLogExTtlResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>直播离线日志扩展接口(大客定制)</p>
     * 
     * @param request DescribeLiveDomainLogExTtlRequest
     * @return DescribeLiveDomainLogExTtlResponse
     */
    public DescribeLiveDomainLogExTtlResponse describeLiveDomainLogExTtl(DescribeLiveDomainLogExTtlRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainLogExTtlWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the ingest domain, main streaming domain, or sub-streaming domain, and then call this operation to query the mappings of the domain name.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 500 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the mappings of an ingest domain, a main streaming domain, or a sub-streaming domain.</p>
     * 
     * @param request DescribeLiveDomainMappingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainMappingResponse
     */
    public DescribeLiveDomainMappingResponse describeLiveDomainMappingWithOptions(DescribeLiveDomainMappingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainMapping"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainMappingResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the ingest domain, main streaming domain, or sub-streaming domain, and then call this operation to query the mappings of the domain name.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 500 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the mappings of an ingest domain, a main streaming domain, or a sub-streaming domain.</p>
     * 
     * @param request DescribeLiveDomainMappingRequest
     * @return DescribeLiveDomainMappingResponse
     */
    public DescribeLiveDomainMappingResponse describeLiveDomainMapping(DescribeLiveDomainMappingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainMappingWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can specify one or more domain names. Separate multiple domain names with commas (,).</p>
     * <ul>
     * <li>You can query data in the last 90 days.</li>
     * <li>The data is queried by hour or day.</li>
     * <li>The maximum time range for a query is 31 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the live monitoring usage data for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainMonitoringUsageDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainMonitoringUsageDataResponse
     */
    public DescribeLiveDomainMonitoringUsageDataResponse describeLiveDomainMonitoringUsageDataWithOptions(DescribeLiveDomainMonitoringUsageDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.region)) {
            query.put("Region", request.region);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.splitBy)) {
            query.put("SplitBy", request.splitBy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainMonitoringUsageData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainMonitoringUsageDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can specify one or more domain names. Separate multiple domain names with commas (,).</p>
     * <ul>
     * <li>You can query data in the last 90 days.</li>
     * <li>The data is queried by hour or day.</li>
     * <li>The maximum time range for a query is 31 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the live monitoring usage data for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainMonitoringUsageDataRequest
     * @return DescribeLiveDomainMonitoringUsageDataResponse
     */
    public DescribeLiveDomainMonitoringUsageDataResponse describeLiveDomainMonitoringUsageData(DescribeLiveDomainMonitoringUsageDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainMonitoringUsageDataWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Queries the configuration status of dual-stream disaster recovery.</p>
     * 
     * @param request DescribeLiveDomainMultiStreamConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainMultiStreamConfigResponse
     */
    public DescribeLiveDomainMultiStreamConfigResponse describeLiveDomainMultiStreamConfigWithOptions(DescribeLiveDomainMultiStreamConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainMultiStreamConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainMultiStreamConfigResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Queries the configuration status of dual-stream disaster recovery.</p>
     * 
     * @param request DescribeLiveDomainMultiStreamConfigRequest
     * @return DescribeLiveDomainMultiStreamConfigResponse
     */
    public DescribeLiveDomainMultiStreamConfigResponse describeLiveDomainMultiStreamConfig(DescribeLiveDomainMultiStreamConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainMultiStreamConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to collect statistics on the number of online users for only Flash Video (FLV), Real-Time Streaming (RTS), and Real-Time Messaging Protocol (RTMP) streams, but not HTTP Live Streaming (HLS) streams. A delay exists in data collection and statistics. We recommend that you query the data of more than 5 minutes ago.</p>
     * <blockquote>
     * <p> Use this operation to replace the deprecated DescribeLiveStreamOnlineUserNum operation.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 200 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the number of online users at a specified point in time for all live streams under a specified domain name.</p>
     * 
     * @param request DescribeLiveDomainOnlineUserNumRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainOnlineUserNumResponse
     */
    public DescribeLiveDomainOnlineUserNumResponse describeLiveDomainOnlineUserNumWithOptions(DescribeLiveDomainOnlineUserNumRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.queryTime)) {
            query.put("QueryTime", request.queryTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainOnlineUserNum"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainOnlineUserNumResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to collect statistics on the number of online users for only Flash Video (FLV), Real-Time Streaming (RTS), and Real-Time Messaging Protocol (RTMP) streams, but not HTTP Live Streaming (HLS) streams. A delay exists in data collection and statistics. We recommend that you query the data of more than 5 minutes ago.</p>
     * <blockquote>
     * <p> Use this operation to replace the deprecated DescribeLiveStreamOnlineUserNum operation.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 200 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the number of online users at a specified point in time for all live streams under a specified domain name.</p>
     * 
     * @param request DescribeLiveDomainOnlineUserNumRequest
     * @return DescribeLiveDomainOnlineUserNumResponse
     */
    public DescribeLiveDomainOnlineUserNumResponse describeLiveDomainOnlineUserNum(DescribeLiveDomainOnlineUserNumRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainOnlineUserNumWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  This operation is used to monitor data. The returned data cannot be used as a reference to calculate resource usage for billing.</p>
     * <ul>
     * <li>You can query data within the previous 90 days.</li>
     * <li>The data is delayed for 3 to 5 minutes.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the HTTP status codes that are returned within a specified period of time under an ingest domain.</p>
     * 
     * @param request DescribeLiveDomainPublishErrorCodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainPublishErrorCodeResponse
     */
    public DescribeLiveDomainPublishErrorCodeResponse describeLiveDomainPublishErrorCodeWithOptions(DescribeLiveDomainPublishErrorCodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainPublishErrorCode"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainPublishErrorCodeResponse());
    }

    /**
     * <b>description</b> :
     * <p>  This operation is used to monitor data. The returned data cannot be used as a reference to calculate resource usage for billing.</p>
     * <ul>
     * <li>You can query data within the previous 90 days.</li>
     * <li>The data is delayed for 3 to 5 minutes.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the HTTP status codes that are returned within a specified period of time under an ingest domain.</p>
     * 
     * @param request DescribeLiveDomainPublishErrorCodeRequest
     * @return DescribeLiveDomainPublishErrorCodeResponse
     */
    public DescribeLiveDomainPublishErrorCodeResponse describeLiveDomainPublishErrorCode(DescribeLiveDomainPublishErrorCodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainPublishErrorCodeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The bandwidth unit is bit/s.</p>
     * <ul>
     * <li>You can specify multiple domain names by separating them with commas (,).</li>
     * <li>If you do not specify the StartTime or EndTime parameter, the data of the last 24 hours is queried. You can specify both the StartTime and EndTime parameters to query the data of a specific time range.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the bandwidth data for one or more ingest domains.</p>
     * 
     * @param request DescribeLiveDomainPushBpsDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainPushBpsDataResponse
     */
    public DescribeLiveDomainPushBpsDataResponse describeLiveDomainPushBpsDataWithOptions(DescribeLiveDomainPushBpsDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ispNameEn)) {
            query.put("IspNameEn", request.ispNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.locationNameEn)) {
            query.put("LocationNameEn", request.locationNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainPushBpsData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainPushBpsDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The bandwidth unit is bit/s.</p>
     * <ul>
     * <li>You can specify multiple domain names by separating them with commas (,).</li>
     * <li>If you do not specify the StartTime or EndTime parameter, the data of the last 24 hours is queried. You can specify both the StartTime and EndTime parameters to query the data of a specific time range.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the bandwidth data for one or more ingest domains.</p>
     * 
     * @param request DescribeLiveDomainPushBpsDataRequest
     * @return DescribeLiveDomainPushBpsDataResponse
     */
    public DescribeLiveDomainPushBpsDataResponse describeLiveDomainPushBpsData(DescribeLiveDomainPushBpsDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainPushBpsDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The traffic unit is bytes.</p>
     * <ul>
     * <li>You can specify multiple domain names by separating them with commas (,).</li>
     * <li>If you do not specify the StartTime or EndTime parameter, the data of the last 24 hours is queried. You can specify both the StartTime and EndTime parameters to query the data of a specific time range.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the network traffic data for one or more ingest domains.</p>
     * 
     * @param request DescribeLiveDomainPushTrafficDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainPushTrafficDataResponse
     */
    public DescribeLiveDomainPushTrafficDataResponse describeLiveDomainPushTrafficDataWithOptions(DescribeLiveDomainPushTrafficDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ispNameEn)) {
            query.put("IspNameEn", request.ispNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.locationNameEn)) {
            query.put("LocationNameEn", request.locationNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainPushTrafficData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainPushTrafficDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The traffic unit is bytes.</p>
     * <ul>
     * <li>You can specify multiple domain names by separating them with commas (,).</li>
     * <li>If you do not specify the StartTime or EndTime parameter, the data of the last 24 hours is queried. You can specify both the StartTime and EndTime parameters to query the data of a specific time range.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the network traffic data for one or more ingest domains.</p>
     * 
     * @param request DescribeLiveDomainPushTrafficDataRequest
     * @return DescribeLiveDomainPushTrafficDataResponse
     */
    public DescribeLiveDomainPushTrafficDataResponse describeLiveDomainPushTrafficData(DescribeLiveDomainPushTrafficDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainPushTrafficDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the geographical distribution of viewers, the visitor ranking of a streaming domain, and the number of independent requests from IP addresses under a streaming domain within a specified time period.</p>
     * <ul>
     * <li>If you do not specify the StartTime or EndTime parameter, the data of the last 24 hours is queried. You can specify both the StartTime and EndTime parameters to query the data of a specific time range.</li>
     * <li>You can specify only one streaming domain in each request.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the data of page views (PVs) and unique visitors (UVs) of a streaming domain.</p>
     * 
     * @param request DescribeLiveDomainPvUvDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainPvUvDataResponse
     */
    public DescribeLiveDomainPvUvDataResponse describeLiveDomainPvUvDataWithOptions(DescribeLiveDomainPvUvDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainPvUvData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainPvUvDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the geographical distribution of viewers, the visitor ranking of a streaming domain, and the number of independent requests from IP addresses under a streaming domain within a specified time period.</p>
     * <ul>
     * <li>If you do not specify the StartTime or EndTime parameter, the data of the last 24 hours is queried. You can specify both the StartTime and EndTime parameters to query the data of a specific time range.</li>
     * <li>You can specify only one streaming domain in each request.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the data of page views (PVs) and unique visitors (UVs) of a streaming domain.</p>
     * 
     * @param request DescribeLiveDomainPvUvDataRequest
     * @return DescribeLiveDomainPvUvDataResponse
     */
    public DescribeLiveDomainPvUvDataResponse describeLiveDomainPvUvData(DescribeLiveDomainPvUvDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainPvUvDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the bandwidth usage of one or more specified domain names.</p>
     * <ul>
     * <li>You can query data in the last seven days. The time range that is specified by the StartTime and EndTime parameters cannot exceed 24 hours for a query.</li>
     * <li>If you specify neither the StartTime parameter nor the EndTime parameter, the data of the last hour is returned.</li>
     * <li>This operation is used to monitor data. The data returned by this operation cannot be used as a reference to calculate resource usage for billing.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the bandwidth data that is collected every minute for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainRealTimeBpsDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainRealTimeBpsDataResponse
     */
    public DescribeLiveDomainRealTimeBpsDataResponse describeLiveDomainRealTimeBpsDataWithOptions(DescribeLiveDomainRealTimeBpsDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainRealTimeBpsData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainRealTimeBpsDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the bandwidth usage of one or more specified domain names.</p>
     * <ul>
     * <li>You can query data in the last seven days. The time range that is specified by the StartTime and EndTime parameters cannot exceed 24 hours for a query.</li>
     * <li>If you specify neither the StartTime parameter nor the EndTime parameter, the data of the last hour is returned.</li>
     * <li>This operation is used to monitor data. The data returned by this operation cannot be used as a reference to calculate resource usage for billing.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the bandwidth data that is collected every minute for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainRealTimeBpsDataRequest
     * @return DescribeLiveDomainRealTimeBpsDataResponse
     */
    public DescribeLiveDomainRealTimeBpsDataResponse describeLiveDomainRealTimeBpsData(DescribeLiveDomainRealTimeBpsDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainRealTimeBpsDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>The following table describes the time granularities supported by this operation.</p>
     * <table>
     * <thead>
     * <tr>
     * <th>Time granularity</th>
     * <th>Maximum time range per query</th>
     * <th>Historical data available</th>
     * <th>Data delay</th>
     * </tr>
     * </thead>
     * <tbody><tr>
     * <td>1 minute</td>
     * <td>1 hour</td>
     * <td>7 days</td>
     * <td>5 minutes</td>
     * </tr>
     * <tr>
     * <td>5 minutes</td>
     * <td>3 days</td>
     * <td>93 days</td>
     * <td>15 minutes</td>
     * </tr>
     * <tr>
     * <td>1 hour</td>
     * <td>31 days</td>
     * <td>186 days</td>
     * <td>Usually 4 hours</td>
     * </tr>
     * <tr>
     * <td>1 day</td>
     * <td>Unlimited</td>
     * <td>366 days</td>
     * <td>After 04:00 on the next day</td>
     * </tr>
     * </tbody></table>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the proportions of HTTP status codes returned for one or more domain names. Data is collected every minute.</p>
     * 
     * @param request DescribeLiveDomainRealTimeHttpCodeDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainRealTimeHttpCodeDataResponse
     */
    public DescribeLiveDomainRealTimeHttpCodeDataResponse describeLiveDomainRealTimeHttpCodeDataWithOptions(DescribeLiveDomainRealTimeHttpCodeDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ispNameEn)) {
            query.put("IspNameEn", request.ispNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.locationNameEn)) {
            query.put("LocationNameEn", request.locationNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainRealTimeHttpCodeData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainRealTimeHttpCodeDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>The following table describes the time granularities supported by this operation.</p>
     * <table>
     * <thead>
     * <tr>
     * <th>Time granularity</th>
     * <th>Maximum time range per query</th>
     * <th>Historical data available</th>
     * <th>Data delay</th>
     * </tr>
     * </thead>
     * <tbody><tr>
     * <td>1 minute</td>
     * <td>1 hour</td>
     * <td>7 days</td>
     * <td>5 minutes</td>
     * </tr>
     * <tr>
     * <td>5 minutes</td>
     * <td>3 days</td>
     * <td>93 days</td>
     * <td>15 minutes</td>
     * </tr>
     * <tr>
     * <td>1 hour</td>
     * <td>31 days</td>
     * <td>186 days</td>
     * <td>Usually 4 hours</td>
     * </tr>
     * <tr>
     * <td>1 day</td>
     * <td>Unlimited</td>
     * <td>366 days</td>
     * <td>After 04:00 on the next day</td>
     * </tr>
     * </tbody></table>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the proportions of HTTP status codes returned for one or more domain names. Data is collected every minute.</p>
     * 
     * @param request DescribeLiveDomainRealTimeHttpCodeDataRequest
     * @return DescribeLiveDomainRealTimeHttpCodeDataResponse
     */
    public DescribeLiveDomainRealTimeHttpCodeDataResponse describeLiveDomainRealTimeHttpCodeData(DescribeLiveDomainRealTimeHttpCodeDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainRealTimeHttpCodeDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the real-time traffic in a region for an Internet service provider (ISP) within a specified period of time under one or more streaming domains.</p>
     * <ul>
     * <li>If you do not specify the StartTime parameter or the EndTime parameter, the data of the last hour is returned. You can specify both the StartTime and EndTime parameters to query the data of a specific time range.</li>
     * <li>This operation is used to monitor data. The data returned by this operation cannot be used as a reference to calculate resource usage for billing.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>This operation does not have a queries per second (QPS) limit on a single user. You can call this operation based on your business requirements.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the network traffic data that is collected in real time for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainRealTimeTrafficDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainRealTimeTrafficDataResponse
     */
    public DescribeLiveDomainRealTimeTrafficDataResponse describeLiveDomainRealTimeTrafficDataWithOptions(DescribeLiveDomainRealTimeTrafficDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ispNameEn)) {
            query.put("IspNameEn", request.ispNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.locationNameEn)) {
            query.put("LocationNameEn", request.locationNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainRealTimeTrafficData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainRealTimeTrafficDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the real-time traffic in a region for an Internet service provider (ISP) within a specified period of time under one or more streaming domains.</p>
     * <ul>
     * <li>If you do not specify the StartTime parameter or the EndTime parameter, the data of the last hour is returned. You can specify both the StartTime and EndTime parameters to query the data of a specific time range.</li>
     * <li>This operation is used to monitor data. The data returned by this operation cannot be used as a reference to calculate resource usage for billing.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>This operation does not have a queries per second (QPS) limit on a single user. You can call this operation based on your business requirements.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the network traffic data that is collected in real time for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainRealTimeTrafficDataRequest
     * @return DescribeLiveDomainRealTimeTrafficDataResponse
     */
    public DescribeLiveDomainRealTimeTrafficDataResponse describeLiveDomainRealTimeTrafficData(DescribeLiveDomainRealTimeTrafficDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainRealTimeTrafficDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the status of real-time log delivery for a domain name. Make sure that the parameter settings meet the requirements.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about real-time log delivery for a domain name.</p>
     * 
     * @param request DescribeLiveDomainRealtimeLogDeliveryRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainRealtimeLogDeliveryResponse
     */
    public DescribeLiveDomainRealtimeLogDeliveryResponse describeLiveDomainRealtimeLogDeliveryWithOptions(DescribeLiveDomainRealtimeLogDeliveryRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainRealtimeLogDelivery"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainRealtimeLogDeliveryResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the status of real-time log delivery for a domain name. Make sure that the parameter settings meet the requirements.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about real-time log delivery for a domain name.</p>
     * 
     * @param request DescribeLiveDomainRealtimeLogDeliveryRequest
     * @return DescribeLiveDomainRealtimeLogDeliveryResponse
     */
    public DescribeLiveDomainRealtimeLogDeliveryResponse describeLiveDomainRealtimeLogDelivery(DescribeLiveDomainRealtimeLogDeliveryRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainRealtimeLogDeliveryWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the number of concurrent recording channels on each day and event tracking data at different time intervals. This way, you can measure the peak number of concurrent recording channels on each day or month.</p>
     * <ul>
     * <li>The number of time shifting channels is not included in the number of recording channels.</li>
     * <li>You can query data by domain name or query data for multiple domain names at a time. If you specify multiple domain names, separate them with commas (,).</li>
     * <li>If you set the data granularity to 1 minute, the maximum time range to query is 24 hours. You can query data in the last 60 days.</li>
     * <li>If you set the data granularity to 1 hour, the maximum time range to query is 31 days. You can query data in the last 180 days.</li>
     * <li>If you set the data granularity to 1 day, the maximum time range to query is 90 days. You can query data in the last 366 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the numbers of live recording channels and container format conversions.</p>
     * 
     * @param request DescribeLiveDomainRecordUsageDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainRecordUsageDataResponse
     */
    public DescribeLiveDomainRecordUsageDataResponse describeLiveDomainRecordUsageDataWithOptions(DescribeLiveDomainRecordUsageDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.region)) {
            query.put("Region", request.region);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.splitBy)) {
            query.put("SplitBy", request.splitBy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainRecordUsageData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainRecordUsageDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the number of concurrent recording channels on each day and event tracking data at different time intervals. This way, you can measure the peak number of concurrent recording channels on each day or month.</p>
     * <ul>
     * <li>The number of time shifting channels is not included in the number of recording channels.</li>
     * <li>You can query data by domain name or query data for multiple domain names at a time. If you specify multiple domain names, separate them with commas (,).</li>
     * <li>If you set the data granularity to 1 minute, the maximum time range to query is 24 hours. You can query data in the last 60 days.</li>
     * <li>If you set the data granularity to 1 hour, the maximum time range to query is 31 days. You can query data in the last 180 days.</li>
     * <li>If you set the data granularity to 1 day, the maximum time range to query is 90 days. You can query data in the last 366 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the numbers of live recording channels and container format conversions.</p>
     * 
     * @param request DescribeLiveDomainRecordUsageDataRequest
     * @return DescribeLiveDomainRecordUsageDataResponse
     */
    public DescribeLiveDomainRecordUsageDataResponse describeLiveDomainRecordUsageData(DescribeLiveDomainRecordUsageDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainRecordUsageDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to collect statistics on the total number of snapshots on a day.</p>
     * <ul>
     * <li>You can query data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>This operation does not have a queries per second (QPS) limit on a single user. You can call this operation based on your business requirements.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the number of snapshots for one or more streaming domains.</p>
     * 
     * @param request DescribeLiveDomainSnapshotDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainSnapshotDataResponse
     */
    public DescribeLiveDomainSnapshotDataResponse describeLiveDomainSnapshotDataWithOptions(DescribeLiveDomainSnapshotDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainSnapshotData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainSnapshotDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to collect statistics on the total number of snapshots on a day.</p>
     * <ul>
     * <li>You can query data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>This operation does not have a queries per second (QPS) limit on a single user. You can call this operation based on your business requirements.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the number of snapshots for one or more streaming domains.</p>
     * 
     * @param request DescribeLiveDomainSnapshotDataRequest
     * @return DescribeLiveDomainSnapshotDataResponse
     */
    public DescribeLiveDomainSnapshotDataResponse describeLiveDomainSnapshotData(DescribeLiveDomainSnapshotDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainSnapshotDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>You can call this operation to query the feature configurations of an accelerated domain name in the canary release environment.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the feature configurations of an accelerated domain name in the canary release environment.</p>
     * 
     * @param request DescribeLiveDomainStagingConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainStagingConfigResponse
     */
    public DescribeLiveDomainStagingConfigResponse describeLiveDomainStagingConfigWithOptions(DescribeLiveDomainStagingConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.functionNames)) {
            query.put("FunctionNames", request.functionNames);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainStagingConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainStagingConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>You can call this operation to query the feature configurations of an accelerated domain name in the canary release environment.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the feature configurations of an accelerated domain name in the canary release environment.</p>
     * 
     * @param request DescribeLiveDomainStagingConfigRequest
     * @return DescribeLiveDomainStagingConfigResponse
     */
    public DescribeLiveDomainStagingConfigResponse describeLiveDomainStagingConfig(DescribeLiveDomainStagingConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainStagingConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to collect the transcoding usage data at each time interval.</p>
     * <ul>
     * <li>You can specify multiple domain names by separating them with commas (,).</li>
     * <li>You can query data in the last 90 days.</li>
     * <li>The time granularity of data is 1 hour or 1 day.</li>
     * <li>For information about the billing of different transcoding types and transcoding resolutions, see the description about billing of different transcoding specifications in transcoding bills in the <a href="https://help.aliyun.com/document_detail/90424.html">Billing of live stream transcoding</a> section of the ApsaraVideo Live pricing page.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the transcoding length for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainStreamTranscodeDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainStreamTranscodeDataResponse
     */
    public DescribeLiveDomainStreamTranscodeDataResponse describeLiveDomainStreamTranscodeDataWithOptions(DescribeLiveDomainStreamTranscodeDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.precision)) {
            query.put("Precision", request.precision);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.split)) {
            query.put("Split", request.split);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainStreamTranscodeData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainStreamTranscodeDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to collect the transcoding usage data at each time interval.</p>
     * <ul>
     * <li>You can specify multiple domain names by separating them with commas (,).</li>
     * <li>You can query data in the last 90 days.</li>
     * <li>The time granularity of data is 1 hour or 1 day.</li>
     * <li>For information about the billing of different transcoding types and transcoding resolutions, see the description about billing of different transcoding specifications in transcoding bills in the <a href="https://help.aliyun.com/document_detail/90424.html">Billing of live stream transcoding</a> section of the ApsaraVideo Live pricing page.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the transcoding length for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainStreamTranscodeDataRequest
     * @return DescribeLiveDomainStreamTranscodeDataResponse
     */
    public DescribeLiveDomainStreamTranscodeDataResponse describeLiveDomainStreamTranscodeData(DescribeLiveDomainStreamTranscodeDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainStreamTranscodeDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the time shifting usage data at each time interval.</p>
     * <ul>
     * <li>You can query data in the last 90 days.</li>
     * <li>The time interval is 1 hour.</li>
     * <li>The maximum time range for a query is 31 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the resource usage data of time shifting for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainTimeShiftDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainTimeShiftDataResponse
     */
    public DescribeLiveDomainTimeShiftDataResponse describeLiveDomainTimeShiftDataWithOptions(DescribeLiveDomainTimeShiftDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainTimeShiftData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainTimeShiftDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the time shifting usage data at each time interval.</p>
     * <ul>
     * <li>You can query data in the last 90 days.</li>
     * <li>The time interval is 1 hour.</li>
     * <li>The maximum time range for a query is 31 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the resource usage data of time shifting for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainTimeShiftDataRequest
     * @return DescribeLiveDomainTimeShiftDataResponse
     */
    public DescribeLiveDomainTimeShiftDataResponse describeLiveDomainTimeShiftData(DescribeLiveDomainTimeShiftDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainTimeShiftDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  If you do not specify the StartTime or EndTime parameter, the data of the last 24 hours is returned.</p>
     * <ul>
     * <li>This operation is used to monitor data. The data returned by this operation cannot be used as a reference to calculate resource usage for billing.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the network traffic data for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainTrafficDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainTrafficDataResponse
     */
    public DescribeLiveDomainTrafficDataResponse describeLiveDomainTrafficDataWithOptions(DescribeLiveDomainTrafficDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ispNameEn)) {
            query.put("IspNameEn", request.ispNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.locationNameEn)) {
            query.put("LocationNameEn", request.locationNameEn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainTrafficData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainTrafficDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  If you do not specify the StartTime or EndTime parameter, the data of the last 24 hours is returned.</p>
     * <ul>
     * <li>This operation is used to monitor data. The data returned by this operation cannot be used as a reference to calculate resource usage for billing.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the network traffic data for one or more domain names.</p>
     * 
     * @param request DescribeLiveDomainTrafficDataRequest
     * @return DescribeLiveDomainTrafficDataResponse
     */
    public DescribeLiveDomainTrafficDataResponse describeLiveDomainTrafficData(DescribeLiveDomainTrafficDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainTrafficDataWithOptions(request, runtime);
    }

    /**
     * @param request DescribeLiveDomainTranscodeParamsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDomainTranscodeParamsResponse
     */
    public DescribeLiveDomainTranscodeParamsResponse describeLiveDomainTranscodeParamsWithOptions(DescribeLiveDomainTranscodeParamsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("app", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pushdomain)) {
            query.put("pushdomain", request.pushdomain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateName)) {
            query.put("template_name", request.templateName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDomainTranscodeParams"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDomainTranscodeParamsResponse());
    }

    /**
     * @param request DescribeLiveDomainTranscodeParamsRequest
     * @return DescribeLiveDomainTranscodeParamsResponse
     */
    public DescribeLiveDomainTranscodeParamsResponse describeLiveDomainTranscodeParams(DescribeLiveDomainTranscodeParamsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDomainTranscodeParamsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h3><a href="#"></a>Usage notes</h3>
     * <ul>
     * <li>You can query data in the previous 90 days.</li>
     * <li>The maximum time range to query is 31 days.</li>
     * </ul>
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * @param request DescribeLiveDrmUsageDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveDrmUsageDataResponse
     */
    public DescribeLiveDrmUsageDataResponse describeLiveDrmUsageDataWithOptions(DescribeLiveDrmUsageDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.splitBy)) {
            query.put("SplitBy", request.splitBy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveDrmUsageData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveDrmUsageDataResponse());
    }

    /**
     * <b>description</b> :
     * <h3><a href="#"></a>Usage notes</h3>
     * <ul>
     * <li>You can query data in the previous 90 days.</li>
     * <li>The maximum time range to query is 31 days.</li>
     * </ul>
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * @param request DescribeLiveDrmUsageDataRequest
     * @return DescribeLiveDrmUsageDataResponse
     */
    public DescribeLiveDrmUsageDataResponse describeLiveDrmUsageData(DescribeLiveDrmUsageDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveDrmUsageDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the ingest domain, and then call this operation to query the configuration of edge stream relay.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configuration of edge stream relay.</p>
     * 
     * @param request DescribeLiveEdgeTransferRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveEdgeTransferResponse
     */
    public DescribeLiveEdgeTransferResponse describeLiveEdgeTransferWithOptions(DescribeLiveEdgeTransferRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveEdgeTransfer"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveEdgeTransferResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the ingest domain, and then call this operation to query the configuration of edge stream relay.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configuration of edge stream relay.</p>
     * 
     * @param request DescribeLiveEdgeTransferRequest
     * @return DescribeLiveEdgeTransferResponse
     */
    public DescribeLiveEdgeTransferResponse describeLiveEdgeTransfer(DescribeLiveEdgeTransferRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveEdgeTransferWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The maximum time range for a query is 31 days.</p>
     * <ul>
     * <li>The minimum time granularity for a query is 5 minutes.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the co-streaming usage data.</p>
     * 
     * @param request DescribeLiveGrtnDurationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveGrtnDurationResponse
     */
    public DescribeLiveGrtnDurationResponse describeLiveGrtnDurationWithOptions(DescribeLiveGrtnDurationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.area)) {
            query.put("Area", request.area);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveGrtnDuration"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveGrtnDurationResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The maximum time range for a query is 31 days.</p>
     * <ul>
     * <li>The minimum time granularity for a query is 5 minutes.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the co-streaming usage data.</p>
     * 
     * @param request DescribeLiveGrtnDurationRequest
     * @return DescribeLiveGrtnDurationResponse
     */
    public DescribeLiveGrtnDurationResponse describeLiveGrtnDuration(DescribeLiveGrtnDurationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveGrtnDurationWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the information about all certificates that you have configured.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about all certificates that you have configured.</p>
     * 
     * @param request DescribeLiveHttpsDomainListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveHttpsDomainListResponse
     */
    public DescribeLiveHttpsDomainListResponse describeLiveHttpsDomainListWithOptions(DescribeLiveHttpsDomainListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.keyword)) {
            query.put("Keyword", request.keyword);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveHttpsDomainList"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveHttpsDomainListResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the information about all certificates that you have configured.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about all certificates that you have configured.</p>
     * 
     * @param request DescribeLiveHttpsDomainListRequest
     * @return DescribeLiveHttpsDomainListResponse
     */
    public DescribeLiveHttpsDomainListResponse describeLiveHttpsDomainList(DescribeLiveHttpsDomainListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveHttpsDomainListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can query data in the last 30 days. The time range for a query cannot exceed 24 hours.</p>
     * <ul>
     * <li>The time granularity for a query is 5 minutes.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the metric data of ApsaraVideo Real-time Communication (ARTC).</p>
     * 
     * @param request DescribeLiveInteractionMetricDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveInteractionMetricDataResponse
     */
    public DescribeLiveInteractionMetricDataResponse describeLiveInteractionMetricDataWithOptions(DescribeLiveInteractionMetricDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.beginTs)) {
            query.put("BeginTs", request.beginTs);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTs)) {
            query.put("EndTs", request.endTs);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.metricType)) {
            query.put("MetricType", request.metricType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.os)) {
            query.put("Os", request.os);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.terminalType)) {
            query.put("TerminalType", request.terminalType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveInteractionMetricData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveInteractionMetricDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can query data in the last 30 days. The time range for a query cannot exceed 24 hours.</p>
     * <ul>
     * <li>The time granularity for a query is 5 minutes.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the metric data of ApsaraVideo Real-time Communication (ARTC).</p>
     * 
     * @param request DescribeLiveInteractionMetricDataRequest
     * @return DescribeLiveInteractionMetricDataResponse
     */
    public DescribeLiveInteractionMetricDataResponse describeLiveInteractionMetricData(DescribeLiveInteractionMetricDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveInteractionMetricDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Checks whether a specified IP address belongs to an Alibaba Cloud point of presence (POP).</p>
     * 
     * @param request DescribeLiveIpInfoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveIpInfoResponse
     */
    public DescribeLiveIpInfoResponse describeLiveIpInfoWithOptions(DescribeLiveIpInfoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.IP)) {
            query.put("IP", request.IP);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveIpInfo"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveIpInfoResponse());
    }

    /**
     * <b>description</b> :
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Checks whether a specified IP address belongs to an Alibaba Cloud point of presence (POP).</p>
     * 
     * @param request DescribeLiveIpInfoRequest
     * @return DescribeLiveIpInfoResponse
     */
    public DescribeLiveIpInfoResponse describeLiveIpInfo(DescribeLiveIpInfoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveIpInfoWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>This operation is applicable to regular stream pulling. You can call this operation to query the configurations of regular stream pulling for a domain name.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configurations of triggered stream pulling for a streaming domain.</p>
     * 
     * @param request DescribeLiveLazyPullStreamConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveLazyPullStreamConfigResponse
     */
    public DescribeLiveLazyPullStreamConfigResponse describeLiveLazyPullStreamConfigWithOptions(DescribeLiveLazyPullStreamConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveLazyPullStreamConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveLazyPullStreamConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>This operation is applicable to regular stream pulling. You can call this operation to query the configurations of regular stream pulling for a domain name.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configurations of triggered stream pulling for a streaming domain.</p>
     * 
     * @param request DescribeLiveLazyPullStreamConfigRequest
     * @return DescribeLiveLazyPullStreamConfigResponse
     */
    public DescribeLiveLazyPullStreamConfigResponse describeLiveLazyPullStreamConfig(DescribeLiveLazyPullStreamConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveLazyPullStreamConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Query Interactive Message App</p>
     * 
     * @param request DescribeLiveMessageAppRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveMessageAppResponse
     */
    public DescribeLiveMessageAppResponse describeLiveMessageAppWithOptions(DescribeLiveMessageAppRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveMessageApp"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveMessageAppResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Query Interactive Message App</p>
     * 
     * @param request DescribeLiveMessageAppRequest
     * @return DescribeLiveMessageAppResponse
     */
    public DescribeLiveMessageAppResponse describeLiveMessageApp(DescribeLiveMessageAppRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveMessageAppWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848162.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about an interactive messaging group.</p>
     * 
     * @param request DescribeLiveMessageGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveMessageGroupResponse
     */
    public DescribeLiveMessageGroupResponse describeLiveMessageGroupWithOptions(DescribeLiveMessageGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveMessageGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveMessageGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848162.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about an interactive messaging group.</p>
     * 
     * @param request DescribeLiveMessageGroupRequest
     * @return DescribeLiveMessageGroupResponse
     */
    public DescribeLiveMessageGroupResponse describeLiveMessageGroup(DescribeLiveMessageGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveMessageGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the mute status of users.</p>
     * 
     * @param request DescribeLiveMessageGroupBandRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveMessageGroupBandResponse
     */
    public DescribeLiveMessageGroupBandResponse describeLiveMessageGroupBandWithOptions(DescribeLiveMessageGroupBandRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveMessageGroupBand"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveMessageGroupBandResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the mute status of users.</p>
     * 
     * @param request DescribeLiveMessageGroupBandRequest
     * @return DescribeLiveMessageGroupBandResponse
     */
    public DescribeLiveMessageGroupBandResponse describeLiveMessageGroupBand(DescribeLiveMessageGroupBandRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveMessageGroupBandWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query live stream encapsulation configurations.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 300 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * @param request DescribeLivePackageConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLivePackageConfigResponse
     */
    public DescribeLivePackageConfigResponse describeLivePackageConfigWithOptions(DescribeLivePackageConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.order)) {
            query.put("Order", request.order);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLivePackageConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLivePackageConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query live stream encapsulation configurations.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 300 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * @param request DescribeLivePackageConfigRequest
     * @return DescribeLivePackageConfigResponse
     */
    public DescribeLivePackageConfigResponse describeLivePackageConfig(DescribeLivePackageConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLivePackageConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call the CreateLivePrivateLine operation, you can call this operation to query available acceleration regions, which are access points where acceleration circuits start.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries available access points where acceleration circuits start.</p>
     * 
     * @param request DescribeLivePrivateLineAreasRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLivePrivateLineAreasResponse
     */
    public DescribeLivePrivateLineAreasResponse describeLivePrivateLineAreasWithOptions(DescribeLivePrivateLineAreasRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLivePrivateLineAreas"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLivePrivateLineAreasResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call the CreateLivePrivateLine operation, you can call this operation to query available acceleration regions, which are access points where acceleration circuits start.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries available access points where acceleration circuits start.</p>
     * 
     * @param request DescribeLivePrivateLineAreasRequest
     * @return DescribeLivePrivateLineAreasResponse
     */
    public DescribeLivePrivateLineAreasResponse describeLivePrivateLineAreas(DescribeLivePrivateLineAreasRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLivePrivateLineAreasWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>If you set the IsGaInstance parameter to yes, the status of GA instances is queried. If you set the IsGaInstance parameter to no, the binding information between GA instances and acceleration circuits is queried.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the binding information between Global Accelerator (GA) instances and acceleration circuits.</p>
     * 
     * @param request DescribeLivePrivateLineAvailGARequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLivePrivateLineAvailGAResponse
     */
    public DescribeLivePrivateLineAvailGAResponse describeLivePrivateLineAvailGAWithOptions(DescribeLivePrivateLineAvailGARequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.accelerationArea)) {
            query.put("AccelerationArea", request.accelerationArea);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.isGaInstance)) {
            query.put("IsGaInstance", request.isGaInstance);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.videoCenter)) {
            query.put("VideoCenter", request.videoCenter);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLivePrivateLineAvailGA"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLivePrivateLineAvailGAResponse());
    }

    /**
     * <b>description</b> :
     * <p>If you set the IsGaInstance parameter to yes, the status of GA instances is queried. If you set the IsGaInstance parameter to no, the binding information between GA instances and acceleration circuits is queried.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the binding information between Global Accelerator (GA) instances and acceleration circuits.</p>
     * 
     * @param request DescribeLivePrivateLineAvailGARequest
     * @return DescribeLivePrivateLineAvailGAResponse
     */
    public DescribeLivePrivateLineAvailGAResponse describeLivePrivateLineAvailGA(DescribeLivePrivateLineAvailGARequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLivePrivateLineAvailGAWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>The minimum time granularity for a query is 1 hour. The maximum time range for a query is 31 days. You can query the production studio usage data in the last 90 days.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the production studio usage data.</p>
     * 
     * @param request DescribeLiveProducerUsageDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveProducerUsageDataResponse
     */
    public DescribeLiveProducerUsageDataResponse describeLiveProducerUsageDataWithOptions(DescribeLiveProducerUsageDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instance)) {
            query.put("Instance", request.instance);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.region)) {
            query.put("Region", request.region);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.splitBy)) {
            query.put("SplitBy", request.splitBy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("app", request.app);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveProducerUsageData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveProducerUsageDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>The minimum time granularity for a query is 1 hour. The maximum time range for a query is 31 days. You can query the production studio usage data in the last 90 days.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the production studio usage data.</p>
     * 
     * @param request DescribeLiveProducerUsageDataRequest
     * @return DescribeLiveProducerUsageDataResponse
     */
    public DescribeLiveProducerUsageDataResponse describeLiveProducerUsageData(DescribeLiveProducerUsageDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveProducerUsageDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>This operation is applicable to regular stream pulling. You can call this operation to query the regular stream pulling configurations for a domain name.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the stream pulling configurations for a domain name.</p>
     * 
     * @param request DescribeLivePullStreamConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLivePullStreamConfigResponse
     */
    public DescribeLivePullStreamConfigResponse describeLivePullStreamConfigWithOptions(DescribeLivePullStreamConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLivePullStreamConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLivePullStreamConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>This operation is applicable to regular stream pulling. You can call this operation to query the regular stream pulling configurations for a domain name.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the stream pulling configurations for a domain name.</p>
     * 
     * @param request DescribeLivePullStreamConfigRequest
     * @return DescribeLivePullStreamConfigResponse
     */
    public DescribeLivePullStreamConfigResponse describeLivePullStreamConfig(DescribeLivePullStreamConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLivePullStreamConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the information about a pulled-stream relay task.</p>
     * <ul>
     * <li>This operation allows you to query the configurations and status of a task with a specified ID.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries pulled-stream relay tasks.</p>
     * 
     * @param request DescribeLivePullToPushRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLivePullToPushResponse
     */
    public DescribeLivePullToPushResponse describeLivePullToPushWithOptions(DescribeLivePullToPushRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLivePullToPush"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLivePullToPushResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the information about a pulled-stream relay task.</p>
     * <ul>
     * <li>This operation allows you to query the configurations and status of a task with a specified ID.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries pulled-stream relay tasks.</p>
     * 
     * @param request DescribeLivePullToPushRequest
     * @return DescribeLivePullToPushResponse
     */
    public DescribeLivePullToPushResponse describeLivePullToPush(DescribeLivePullToPushRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLivePullToPushWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query pulled-stream relay tasks.</p>
     * <ul>
     * <li>You can query tasks by page. Fuzzy search is supported based on task IDs, task names, and destination URLs.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries pulled-stream relay tasks. Fuzzy match is supported.</p>
     * 
     * @param request DescribeLivePullToPushListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLivePullToPushListResponse
     */
    public DescribeLivePullToPushListResponse describeLivePullToPushListWithOptions(DescribeLivePullToPushListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLivePullToPushList"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLivePullToPushListResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query pulled-stream relay tasks.</p>
     * <ul>
     * <li>You can query tasks by page. Fuzzy search is supported based on task IDs, task names, and destination URLs.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries pulled-stream relay tasks. Fuzzy match is supported.</p>
     * 
     * @param request DescribeLivePullToPushListRequest
     * @return DescribeLivePullToPushListResponse
     */
    public DescribeLivePullToPushListResponse describeLivePullToPushList(DescribeLivePullToPushListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLivePullToPushListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The time granularity of the data is 1 hour.</p>
     * <ul>
     * <li>You can query data in the last 31 days.</li>
     * <li>If you do not specify the StartTime or EndTime parameter, the data of the last 24 hours is queried. You can specify both the StartTime and EndTime parameters to query the data of a specific time range.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the stream relay logs, which are available for download.</p>
     * 
     * @param request DescribeLivePushProxyLogRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLivePushProxyLogResponse
     */
    public DescribeLivePushProxyLogResponse describeLivePushProxyLogWithOptions(DescribeLivePushProxyLogRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLivePushProxyLog"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLivePushProxyLogResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The time granularity of the data is 1 hour.</p>
     * <ul>
     * <li>You can query data in the last 31 days.</li>
     * <li>If you do not specify the StartTime or EndTime parameter, the data of the last 24 hours is queried. You can specify both the StartTime and EndTime parameters to query the data of a specific time range.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the stream relay logs, which are available for download.</p>
     * 
     * @param request DescribeLivePushProxyLogRequest
     * @return DescribeLivePushProxyLogResponse
     */
    public DescribeLivePushProxyLogResponse describeLivePushProxyLog(DescribeLivePushProxyLogRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLivePushProxyLogWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the usage data of live center stream relay.</p>
     * <ul>
     * <li>The maximum time range for a query is 31 days.</li>
     * <li>The minimum time granularity for a query is 1 day.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the usage data of live center stream relay.</p>
     * 
     * @param request DescribeLivePushProxyUsageDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLivePushProxyUsageDataResponse
     */
    public DescribeLivePushProxyUsageDataResponse describeLivePushProxyUsageDataWithOptions(DescribeLivePushProxyUsageDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.region)) {
            query.put("Region", request.region);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.splitBy)) {
            query.put("SplitBy", request.splitBy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLivePushProxyUsageData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLivePushProxyUsageDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the usage data of live center stream relay.</p>
     * <ul>
     * <li>The maximum time range for a query is 31 days.</li>
     * <li>The minimum time granularity for a query is 1 day.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the usage data of live center stream relay.</p>
     * 
     * @param request DescribeLivePushProxyUsageDataRequest
     * @return DescribeLivePushProxyUsageDataResponse
     */
    public DescribeLivePushProxyUsageDataResponse describeLivePushProxyUsageData(DescribeLivePushProxyUsageDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLivePushProxyUsageDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can collect statistics on the number of real-time log deliveries. The number of failed real-time log deliveries and the number of successful real-time log deliveries are counted.</p>
     * <ul>
     * <li>You can query the data by UID.</li>
     * <li>You are charged for both successful and failed real-time log deliveries.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the number of real-time log deliveries.</p>
     * 
     * @param request DescribeLiveRealtimeDeliveryAccRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveRealtimeDeliveryAccResponse
     */
    public DescribeLiveRealtimeDeliveryAccResponse describeLiveRealtimeDeliveryAccWithOptions(DescribeLiveRealtimeDeliveryAccRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.logStore)) {
            query.put("LogStore", request.logStore);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.project)) {
            query.put("Project", request.project);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveRealtimeDeliveryAcc"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveRealtimeDeliveryAccResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can collect statistics on the number of real-time log deliveries. The number of failed real-time log deliveries and the number of successful real-time log deliveries are counted.</p>
     * <ul>
     * <li>You can query the data by UID.</li>
     * <li>You are charged for both successful and failed real-time log deliveries.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the number of real-time log deliveries.</p>
     * 
     * @param request DescribeLiveRealtimeDeliveryAccRequest
     * @return DescribeLiveRealtimeDeliveryAccResponse
     */
    public DescribeLiveRealtimeDeliveryAccResponse describeLiveRealtimeDeliveryAcc(DescribeLiveRealtimeDeliveryAccRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveRealtimeDeliveryAccWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the status of authorization for real-time log delivery.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the status of authorization for real-time log delivery.</p>
     * 
     * @param request DescribeLiveRealtimeLogAuthorizedRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveRealtimeLogAuthorizedResponse
     */
    public DescribeLiveRealtimeLogAuthorizedResponse describeLiveRealtimeLogAuthorizedWithOptions(DescribeLiveRealtimeLogAuthorizedRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveRealtimeLogAuthorized"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveRealtimeLogAuthorizedResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the status of authorization for real-time log delivery.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the status of authorization for real-time log delivery.</p>
     * 
     * @param request DescribeLiveRealtimeLogAuthorizedRequest
     * @return DescribeLiveRealtimeLogAuthorizedResponse
     */
    public DescribeLiveRealtimeLogAuthorizedResponse describeLiveRealtimeLogAuthorized(DescribeLiveRealtimeLogAuthorizedRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveRealtimeLogAuthorizedWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query the recording configurations of all applications under the main streaming domain.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries all recording configurations of an application for a streaming domain.</p>
     * 
     * @param request DescribeLiveRecordConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveRecordConfigResponse
     */
    public DescribeLiveRecordConfigResponse describeLiveRecordConfigWithOptions(DescribeLiveRecordConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.order)) {
            query.put("Order", request.order);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveRecordConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveRecordConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query the recording configurations of all applications under the main streaming domain.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries all recording configurations of an application for a streaming domain.</p>
     * 
     * @param request DescribeLiveRecordConfigRequest
     * @return DescribeLiveRecordConfigResponse
     */
    public DescribeLiveRecordConfigResponse describeLiveRecordConfig(DescribeLiveRecordConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveRecordConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query the configuration of callbacks for live stream recording under the domain name.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configuration of callbacks for live stream recording under a domain name.</p>
     * 
     * @param request DescribeLiveRecordNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveRecordNotifyConfigResponse
     */
    public DescribeLiveRecordNotifyConfigResponse describeLiveRecordNotifyConfigWithOptions(DescribeLiveRecordNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveRecordNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveRecordNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query the configuration of callbacks for live stream recording under the domain name.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configuration of callbacks for live stream recording under a domain name.</p>
     * 
     * @param request DescribeLiveRecordNotifyConfigRequest
     * @return DescribeLiveRecordNotifyConfigResponse
     */
    public DescribeLiveRecordNotifyConfigResponse describeLiveRecordNotifyConfig(DescribeLiveRecordNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveRecordNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the recording callback records that are stored in Object Storage Service (OSS).</p>
     * 
     * @param request DescribeLiveRecordNotifyRecordsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveRecordNotifyRecordsResponse
     */
    public DescribeLiveRecordNotifyRecordsResponse describeLiveRecordNotifyRecordsWithOptions(DescribeLiveRecordNotifyRecordsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            query.put("Status", request.status);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveRecordNotifyRecords"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveRecordNotifyRecordsResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the recording callback records that are stored in Object Storage Service (OSS).</p>
     * 
     * @param request DescribeLiveRecordNotifyRecordsRequest
     * @return DescribeLiveRecordNotifyRecordsResponse
     */
    public DescribeLiveRecordNotifyRecordsResponse describeLiveRecordNotifyRecords(DescribeLiveRecordNotifyRecordsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveRecordNotifyRecordsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>Obtain the streaming domain, and then call this operation to query the Live-to-VOD configurations.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries Live-to-VOD configurations.</p>
     * 
     * @param request DescribeLiveRecordVodConfigsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveRecordVodConfigsResponse
     */
    public DescribeLiveRecordVodConfigsResponse describeLiveRecordVodConfigsWithOptions(DescribeLiveRecordVodConfigsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveRecordVodConfigs"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveRecordVodConfigsResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>Obtain the streaming domain, and then call this operation to query the Live-to-VOD configurations.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries Live-to-VOD configurations.</p>
     * 
     * @param request DescribeLiveRecordVodConfigsRequest
     * @return DescribeLiveRecordVodConfigsResponse
     */
    public DescribeLiveRecordVodConfigsResponse describeLiveRecordVodConfigs(DescribeLiveRecordVodConfigsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveRecordVodConfigsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation is applicable to the streaming domains.</p>
     * <h2>QPS limit</h2>
     * <p>A single user can perform a maximum of 10 queries per second (QPS). Throttling is triggered when the number of calls per second exceeds the QPS limit. The throttling may affect your business. Thus, we recommend that you observe the QPS limit on this operation. For more information about what a single user means and the QPS details, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live#topic-2136805">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the time shifting configurations under a domain name.</p>
     * 
     * @param request DescribeLiveShiftConfigsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveShiftConfigsResponse
     */
    public DescribeLiveShiftConfigsResponse describeLiveShiftConfigsWithOptions(DescribeLiveShiftConfigsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveShiftConfigs"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveShiftConfigsResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation is applicable to the streaming domains.</p>
     * <h2>QPS limit</h2>
     * <p>A single user can perform a maximum of 10 queries per second (QPS). Throttling is triggered when the number of calls per second exceeds the QPS limit. The throttling may affect your business. Thus, we recommend that you observe the QPS limit on this operation. For more information about what a single user means and the QPS details, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live#topic-2136805">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the time shifting configurations under a domain name.</p>
     * 
     * @param request DescribeLiveShiftConfigsRequest
     * @return DescribeLiveShiftConfigsResponse
     */
    public DescribeLiveShiftConfigsResponse describeLiveShiftConfigs(DescribeLiveShiftConfigsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveShiftConfigsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query the snapshot configurations.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the snapshot configurations of a streaming domain.</p>
     * 
     * @param request DescribeLiveSnapshotConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveSnapshotConfigResponse
     */
    public DescribeLiveSnapshotConfigResponse describeLiveSnapshotConfigWithOptions(DescribeLiveSnapshotConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.order)) {
            query.put("Order", request.order);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveSnapshotConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveSnapshotConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query the snapshot configurations.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the snapshot configurations of a streaming domain.</p>
     * 
     * @param request DescribeLiveSnapshotConfigRequest
     * @return DescribeLiveSnapshotConfigResponse
     */
    public DescribeLiveSnapshotConfigResponse describeLiveSnapshotConfig(DescribeLiveSnapshotConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveSnapshotConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to query video moderation configurations. The configurations can be sorted in ascending or descending order.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries video moderation configurations.</p>
     * 
     * @param request DescribeLiveSnapshotDetectPornConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveSnapshotDetectPornConfigResponse
     */
    public DescribeLiveSnapshotDetectPornConfigResponse describeLiveSnapshotDetectPornConfigWithOptions(DescribeLiveSnapshotDetectPornConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.order)) {
            query.put("Order", request.order);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveSnapshotDetectPornConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveSnapshotDetectPornConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to query video moderation configurations. The configurations can be sorted in ascending or descending order.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries video moderation configurations.</p>
     * 
     * @param request DescribeLiveSnapshotDetectPornConfigRequest
     * @return DescribeLiveSnapshotDetectPornConfigResponse
     */
    public DescribeLiveSnapshotDetectPornConfigResponse describeLiveSnapshotDetectPornConfig(DescribeLiveSnapshotDetectPornConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveSnapshotDetectPornConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configuration of snapshot callbacks.</p>
     * 
     * @param request DescribeLiveSnapshotNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveSnapshotNotifyConfigResponse
     */
    public DescribeLiveSnapshotNotifyConfigResponse describeLiveSnapshotNotifyConfigWithOptions(DescribeLiveSnapshotNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveSnapshotNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveSnapshotNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configuration of snapshot callbacks.</p>
     * 
     * @param request DescribeLiveSnapshotNotifyConfigRequest
     * @return DescribeLiveSnapshotNotifyConfigResponse
     */
    public DescribeLiveSnapshotNotifyConfigResponse describeLiveSnapshotNotifyConfig(DescribeLiveSnapshotNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveSnapshotNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the authentication status of an active stream.</p>
     * 
     * @param request DescribeLiveStreamAuthCheckingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamAuthCheckingResponse
     */
    public DescribeLiveStreamAuthCheckingResponse describeLiveStreamAuthCheckingWithOptions(DescribeLiveStreamAuthCheckingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.url)) {
            query.put("Url", request.url);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamAuthChecking"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamAuthCheckingResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the authentication status of an active stream.</p>
     * 
     * @param request DescribeLiveStreamAuthCheckingRequest
     * @return DescribeLiveStreamAuthCheckingResponse
     */
    public DescribeLiveStreamAuthCheckingResponse describeLiveStreamAuthChecking(DescribeLiveStreamAuthCheckingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamAuthCheckingWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation allows you to query the frame rates and bitrates of an RTMP stream within a specified time period. You can call this operation to query historical data.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the frame rates and bitrates of a Real-Time Messaging Protocol (RTMP) stream within a specified time period. You can call this operation to query historical data.</p>
     * 
     * @param request DescribeLiveStreamBitRateDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamBitRateDataResponse
     */
    public DescribeLiveStreamBitRateDataResponse describeLiveStreamBitRateDataWithOptions(DescribeLiveStreamBitRateDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamBitRateData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamBitRateDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation allows you to query the frame rates and bitrates of an RTMP stream within a specified time period. You can call this operation to query historical data.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the frame rates and bitrates of a Real-Time Messaging Protocol (RTMP) stream within a specified time period. You can call this operation to query historical data.</p>
     * 
     * @param request DescribeLiveStreamBitRateDataRequest
     * @return DescribeLiveStreamBitRateDataResponse
     */
    public DescribeLiveStreamBitRateDataResponse describeLiveStreamBitRateData(DescribeLiveStreamBitRateDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamBitRateDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query the numbers of online source streams and transcoded streams. The streams that are returned by calling this operation are encoded in H.264 or H.265.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation once per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the numbers of online source streams and transcoded streams.</p>
     * 
     * @param request DescribeLiveStreamCountRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamCountResponse
     */
    public DescribeLiveStreamCountResponse describeLiveStreamCountWithOptions(DescribeLiveStreamCountRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamCount"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamCountResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query the numbers of online source streams and transcoded streams. The streams that are returned by calling this operation are encoded in H.264 or H.265.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation once per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the numbers of online source streams and transcoded streams.</p>
     * 
     * @param request DescribeLiveStreamCountRequest
     * @return DescribeLiveStreamCountResponse
     */
    public DescribeLiveStreamCountResponse describeLiveStreamCount(DescribeLiveStreamCountRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamCountWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the streaming domain, and then call this operation to query the live streaming latency.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the live streaming latency.</p>
     * 
     * @param request DescribeLiveStreamDelayConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamDelayConfigResponse
     */
    public DescribeLiveStreamDelayConfigResponse describeLiveStreamDelayConfigWithOptions(DescribeLiveStreamDelayConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamDelayConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamDelayConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the streaming domain, and then call this operation to query the live streaming latency.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the live streaming latency.</p>
     * 
     * @param request DescribeLiveStreamDelayConfigRequest
     * @return DescribeLiveStreamDelayConfigResponse
     */
    public DescribeLiveStreamDelayConfigResponse describeLiveStreamDelayConfig(DescribeLiveStreamDelayConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamDelayConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query a set of audio and video frame rates and bitrates of an RTMP stream within a specified time range.</p>
     * <ul>
     * <li>This operation is used to monitor data. The data returned by this operation cannot be used as a reference to calculate resource usage for billing.</li>
     * <li>You can query data in the last 90 days.</li>
     * <li>The data is delayed for 3 to 5 minutes.</li>
     * <li>The maximum time range that you can specify is 1 hour.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the audio and video frame rates and bitrates of a Real-Time Messaging Protocol (RTMP) stream.</p>
     * 
     * @param request DescribeLiveStreamDetailFrameRateAndBitRateDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamDetailFrameRateAndBitRateDataResponse
     */
    public DescribeLiveStreamDetailFrameRateAndBitRateDataResponse describeLiveStreamDetailFrameRateAndBitRateDataWithOptions(DescribeLiveStreamDetailFrameRateAndBitRateDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamDetailFrameRateAndBitRateData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamDetailFrameRateAndBitRateDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query a set of audio and video frame rates and bitrates of an RTMP stream within a specified time range.</p>
     * <ul>
     * <li>This operation is used to monitor data. The data returned by this operation cannot be used as a reference to calculate resource usage for billing.</li>
     * <li>You can query data in the last 90 days.</li>
     * <li>The data is delayed for 3 to 5 minutes.</li>
     * <li>The maximum time range that you can specify is 1 hour.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the audio and video frame rates and bitrates of a Real-Time Messaging Protocol (RTMP) stream.</p>
     * 
     * @param request DescribeLiveStreamDetailFrameRateAndBitRateDataRequest
     * @return DescribeLiveStreamDetailFrameRateAndBitRateDataResponse
     */
    public DescribeLiveStreamDetailFrameRateAndBitRateDataResponse describeLiveStreamDetailFrameRateAndBitRateData(DescribeLiveStreamDetailFrameRateAndBitRateDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamDetailFrameRateAndBitRateDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The data returned by this operation is delayed for an average of 2 to 5 minutes.</p>
     * <ul>
     * <li>This operation queries the number of historical online users for only Flash Video (FLV) and Real-Time Messaging Protocol (RTMP) streams.</li>
     * <li>This operation does not query the number of viewers that are watching transcoded streams.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the number of historical online users for a live stream.</p>
     * 
     * @param request DescribeLiveStreamHistoryUserNumRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamHistoryUserNumResponse
     */
    public DescribeLiveStreamHistoryUserNumResponse describeLiveStreamHistoryUserNumWithOptions(DescribeLiveStreamHistoryUserNumRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamHistoryUserNum"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamHistoryUserNumResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The data returned by this operation is delayed for an average of 2 to 5 minutes.</p>
     * <ul>
     * <li>This operation queries the number of historical online users for only Flash Video (FLV) and Real-Time Messaging Protocol (RTMP) streams.</li>
     * <li>This operation does not query the number of viewers that are watching transcoded streams.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the number of historical online users for a live stream.</p>
     * 
     * @param request DescribeLiveStreamHistoryUserNumRequest
     * @return DescribeLiveStreamHistoryUserNumResponse
     */
    public DescribeLiveStreamHistoryUserNumResponse describeLiveStreamHistoryUserNum(DescribeLiveStreamHistoryUserNumRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamHistoryUserNumWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Invoke DescribeLiveStreamMerge to query the primary-standby stream merging configuration.</p>
     * 
     * @param request DescribeLiveStreamMergeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamMergeResponse
     */
    public DescribeLiveStreamMergeResponse describeLiveStreamMergeWithOptions(DescribeLiveStreamMergeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.protocol)) {
            query.put("Protocol", request.protocol);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamMerge"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamMergeResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Invoke DescribeLiveStreamMerge to query the primary-standby stream merging configuration.</p>
     * 
     * @param request DescribeLiveStreamMergeRequest
     * @return DescribeLiveStreamMergeResponse
     */
    public DescribeLiveStreamMergeResponse describeLiveStreamMerge(DescribeLiveStreamMergeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamMergeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>If you call this operation to query the monitoring data of streams under a domain name for the first time, you must <a href="https://workorder-intl.console.aliyun.com/?spm=5176.12818093.nav-right.dticket.6cb216d07otFWR#/ticket/createIndex">submit a ticket</a> for backend configuration. Provide the following information in the ticket:</p>
     * <ul>
     * <li>The domain name that you want to query</li>
     * <li>The maximum number of concurrent streams under the domain name</li>
     * <li>The maximum number of concurrent online users in each stream</li>
     * <li>The protocols used for the client requests<blockquote>
     * <p> The review is expected to be completed within one business day after you submit the ticket.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2><a href="#"></a>Usage limits</h2>
     * <ul>
     * <li>By default, statistics on the number of viewers who watch streams over the HTTP Live Streaming (HLS) protocol cannot be collected.</li>
     * <li>You can specify only one domain name in each call.</li>
     * <li>The maximum time range to query is 24 hours.</li>
     * <li>The minimum data granularity to query is 1 minute.</li>
     * <li>You can query data in the last 31 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the monitoring data of streams for a specified domain name. Up to 5,000 rows of data can be returned per call.</p>
     * 
     * @param request DescribeLiveStreamMetricDetailDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamMetricDetailDataResponse
     */
    public DescribeLiveStreamMetricDetailDataResponse describeLiveStreamMetricDetailDataWithOptions(DescribeLiveStreamMetricDetailDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextPageToken)) {
            query.put("NextPageToken", request.nextPageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.protocol)) {
            query.put("Protocol", request.protocol);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamMetricDetailData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamMetricDetailDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>If you call this operation to query the monitoring data of streams under a domain name for the first time, you must <a href="https://workorder-intl.console.aliyun.com/?spm=5176.12818093.nav-right.dticket.6cb216d07otFWR#/ticket/createIndex">submit a ticket</a> for backend configuration. Provide the following information in the ticket:</p>
     * <ul>
     * <li>The domain name that you want to query</li>
     * <li>The maximum number of concurrent streams under the domain name</li>
     * <li>The maximum number of concurrent online users in each stream</li>
     * <li>The protocols used for the client requests<blockquote>
     * <p> The review is expected to be completed within one business day after you submit the ticket.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2><a href="#"></a>Usage limits</h2>
     * <ul>
     * <li>By default, statistics on the number of viewers who watch streams over the HTTP Live Streaming (HLS) protocol cannot be collected.</li>
     * <li>You can specify only one domain name in each call.</li>
     * <li>The maximum time range to query is 24 hours.</li>
     * <li>The minimum data granularity to query is 1 minute.</li>
     * <li>You can query data in the last 31 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the monitoring data of streams for a specified domain name. Up to 5,000 rows of data can be returned per call.</p>
     * 
     * @param request DescribeLiveStreamMetricDetailDataRequest
     * @return DescribeLiveStreamMetricDetailDataResponse
     */
    public DescribeLiveStreamMetricDetailDataResponse describeLiveStreamMetricDetailData(DescribeLiveStreamMetricDetailDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamMetricDetailDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p><a href="https://help.aliyun.com/document_detail/2848129.html">Create monitoring sessions</a> before you call this operation to query the monitoring session list. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the list of created monitoring sessions.</p>
     * 
     * @param request DescribeLiveStreamMonitorListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamMonitorListResponse
     */
    public DescribeLiveStreamMonitorListResponse describeLiveStreamMonitorListWithOptions(DescribeLiveStreamMonitorListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.monitorId)) {
            query.put("MonitorId", request.monitorId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.orderRule)) {
            query.put("OrderRule", request.orderRule);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            query.put("Status", request.status);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamMonitorList"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamMonitorListResponse());
    }

    /**
     * <b>description</b> :
     * <p><a href="https://help.aliyun.com/document_detail/2848129.html">Create monitoring sessions</a> before you call this operation to query the monitoring session list. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the list of created monitoring sessions.</p>
     * 
     * @param request DescribeLiveStreamMonitorListRequest
     * @return DescribeLiveStreamMonitorListResponse
     */
    public DescribeLiveStreamMonitorListResponse describeLiveStreamMonitorList(DescribeLiveStreamMonitorListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamMonitorListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query prefetch tasks in the last three days.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries prefetch tasks in the last three days.</p>
     * 
     * @param request DescribeLiveStreamPreloadTasksRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamPreloadTasksResponse
     */
    public DescribeLiveStreamPreloadTasksResponse describeLiveStreamPreloadTasksWithOptions(DescribeLiveStreamPreloadTasksRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.playUrl)) {
            query.put("PlayUrl", request.playUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            query.put("Status", request.status);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamPreloadTasks"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamPreloadTasksResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query prefetch tasks in the last three days.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries prefetch tasks in the last three days.</p>
     * 
     * @param request DescribeLiveStreamPreloadTasksRequest
     * @return DescribeLiveStreamPreloadTasksResponse
     */
    public DescribeLiveStreamPreloadTasksResponse describeLiveStreamPreloadTasks(DescribeLiveStreamPreloadTasksRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamPreloadTasksWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can query data of a single domain name in each request. If you specify multiple domain names, an error is returned.</p>
     * <ul>
     * <li>The maximum time range to query is 24 hours.</li>
     * <li>The minimum data granularity to query is 1 minute.</li>
     * <li>You can query data in the last 31 days.</li>
     * <li>This operation is used to monitor data. The data returned by this operation cannot be used as a reference to calculate resource usage for billing.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the stream ingest data of a specified domain name at the application level and the stream level.</p>
     * 
     * @param request DescribeLiveStreamPushMetricDetailDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamPushMetricDetailDataResponse
     */
    public DescribeLiveStreamPushMetricDetailDataResponse describeLiveStreamPushMetricDetailDataWithOptions(DescribeLiveStreamPushMetricDetailDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextPageToken)) {
            query.put("NextPageToken", request.nextPageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamPushMetricDetailData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamPushMetricDetailDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can query data of a single domain name in each request. If you specify multiple domain names, an error is returned.</p>
     * <ul>
     * <li>The maximum time range to query is 24 hours.</li>
     * <li>The minimum data granularity to query is 1 minute.</li>
     * <li>You can query data in the last 31 days.</li>
     * <li>This operation is used to monitor data. The data returned by this operation cannot be used as a reference to calculate resource usage for billing.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the stream ingest data of a specified domain name at the application level and the stream level.</p>
     * 
     * @param request DescribeLiveStreamPushMetricDetailDataRequest
     * @return DescribeLiveStreamPushMetricDetailDataResponse
     */
    public DescribeLiveStreamPushMetricDetailDataResponse describeLiveStreamPushMetricDetailData(DescribeLiveStreamPushMetricDetailDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamPushMetricDetailDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query the recordings of the live stream.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the recordings of a live stream.</p>
     * 
     * @param request DescribeLiveStreamRecordContentRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamRecordContentResponse
     */
    public DescribeLiveStreamRecordContentResponse describeLiveStreamRecordContentWithOptions(DescribeLiveStreamRecordContentRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamRecordContent"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamRecordContentResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query the recordings of the live stream.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the recordings of a live stream.</p>
     * 
     * @param request DescribeLiveStreamRecordContentRequest
     * @return DescribeLiveStreamRecordContentResponse
     */
    public DescribeLiveStreamRecordContentResponse describeLiveStreamRecordContent(DescribeLiveStreamRecordContentRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamRecordContentWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>ApsaraVideo Live stores the information about M3U8 index files for six months. You can query the information about only the M3U8 index files that were created in the last six months. OSS stores M3U8 index files for a time period that is specified by the storage configuration in OSS.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about an index file.</p>
     * 
     * @param request DescribeLiveStreamRecordIndexFileRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamRecordIndexFileResponse
     */
    public DescribeLiveStreamRecordIndexFileResponse describeLiveStreamRecordIndexFileWithOptions(DescribeLiveStreamRecordIndexFileRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.recordId)) {
            query.put("RecordId", request.recordId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamRecordIndexFile"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamRecordIndexFileResponse());
    }

    /**
     * <b>description</b> :
     * <p>ApsaraVideo Live stores the information about M3U8 index files for six months. You can query the information about only the M3U8 index files that were created in the last six months. OSS stores M3U8 index files for a time period that is specified by the storage configuration in OSS.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about an index file.</p>
     * 
     * @param request DescribeLiveStreamRecordIndexFileRequest
     * @return DescribeLiveStreamRecordIndexFileResponse
     */
    public DescribeLiveStreamRecordIndexFileResponse describeLiveStreamRecordIndexFile(DescribeLiveStreamRecordIndexFileRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamRecordIndexFileWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  ApsaraVideo Live stores the information about M3U8 index files for six months. You can query the information about only the M3U8 index files that were created in the last six months.</p>
     * <ul>
     * <li>OSS stores M3U8 index files for a time period that is specified by the storage configuration in OSS.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries all index files within a specific time period.</p>
     * 
     * @param request DescribeLiveStreamRecordIndexFilesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamRecordIndexFilesResponse
     */
    public DescribeLiveStreamRecordIndexFilesResponse describeLiveStreamRecordIndexFilesWithOptions(DescribeLiveStreamRecordIndexFilesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.order)) {
            query.put("Order", request.order);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamRecordIndexFiles"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamRecordIndexFilesResponse());
    }

    /**
     * <b>description</b> :
     * <p>  ApsaraVideo Live stores the information about M3U8 index files for six months. You can query the information about only the M3U8 index files that were created in the last six months.</p>
     * <ul>
     * <li>OSS stores M3U8 index files for a time period that is specified by the storage configuration in OSS.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries all index files within a specific time period.</p>
     * 
     * @param request DescribeLiveStreamRecordIndexFilesRequest
     * @return DescribeLiveStreamRecordIndexFilesResponse
     */
    public DescribeLiveStreamRecordIndexFilesResponse describeLiveStreamRecordIndexFiles(DescribeLiveStreamRecordIndexFilesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamRecordIndexFilesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can query only snapshots that were captured in the last year.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the snapshots that were captured within a specific time period.</p>
     * 
     * @param request DescribeLiveStreamSnapshotInfoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamSnapshotInfoResponse
     */
    public DescribeLiveStreamSnapshotInfoResponse describeLiveStreamSnapshotInfoWithOptions(DescribeLiveStreamSnapshotInfoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.limit)) {
            query.put("Limit", request.limit);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.order)) {
            query.put("Order", request.order);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamSnapshotInfo"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamSnapshotInfoResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can query only snapshots that were captured in the last year.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the snapshots that were captured within a specific time period.</p>
     * 
     * @param request DescribeLiveStreamSnapshotInfoRequest
     * @return DescribeLiveStreamSnapshotInfoResponse
     */
    public DescribeLiveStreamSnapshotInfoResponse describeLiveStreamSnapshotInfo(DescribeLiveStreamSnapshotInfoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamSnapshotInfoWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the streaming domain, and then call this operation to query the status of a stream in real time. If the stream is in the offline status, you can check the stream ingest callback to learn about the reason that causes the offline status. This operation does not provide detailed information.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the status of a stream in real time.</p>
     * 
     * @param request DescribeLiveStreamStateRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamStateResponse
     */
    public DescribeLiveStreamStateResponse describeLiveStreamStateWithOptions(DescribeLiveStreamStateRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamState"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamStateResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the streaming domain, and then call this operation to query the status of a stream in real time. If the stream is in the offline status, you can check the stream ingest callback to learn about the reason that causes the offline status. This operation does not provide detailed information.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the status of a stream in real time.</p>
     * 
     * @param request DescribeLiveStreamStateRequest
     * @return DescribeLiveStreamStateResponse
     */
    public DescribeLiveStreamStateResponse describeLiveStreamState(DescribeLiveStreamStateRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamStateWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query the transcoding configurations.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the transcoding configurations of a streaming domain.</p>
     * 
     * @param request DescribeLiveStreamTranscodeInfoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamTranscodeInfoResponse
     */
    public DescribeLiveStreamTranscodeInfoResponse describeLiveStreamTranscodeInfoWithOptions(DescribeLiveStreamTranscodeInfoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainTranscodeName)) {
            query.put("DomainTranscodeName", request.domainTranscodeName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamTranscodeInfo"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamTranscodeInfoResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to query the transcoding configurations.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the transcoding configurations of a streaming domain.</p>
     * 
     * @param request DescribeLiveStreamTranscodeInfoRequest
     * @return DescribeLiveStreamTranscodeInfoResponse
     */
    public DescribeLiveStreamTranscodeInfoResponse describeLiveStreamTranscodeInfo(DescribeLiveStreamTranscodeInfoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamTranscodeInfoWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The maximum time range for a query is 24 hours.</p>
     * <ul>
     * <li>The minimum time granularity for a query is 5 minutes.</li>
     * <li>You can query data in the last 31 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the transcoding data of a specified domain name at the application level and the stream level.</p>
     * 
     * @param request DescribeLiveStreamTranscodeMetricDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamTranscodeMetricDataResponse
     */
    public DescribeLiveStreamTranscodeMetricDataResponse describeLiveStreamTranscodeMetricDataWithOptions(DescribeLiveStreamTranscodeMetricDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextPageToken)) {
            query.put("NextPageToken", request.nextPageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamTranscodeMetricData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamTranscodeMetricDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The maximum time range for a query is 24 hours.</p>
     * <ul>
     * <li>The minimum time granularity for a query is 5 minutes.</li>
     * <li>You can query data in the last 31 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the transcoding data of a specified domain name at the application level and the stream level.</p>
     * 
     * @param request DescribeLiveStreamTranscodeMetricDataRequest
     * @return DescribeLiveStreamTranscodeMetricDataResponse
     */
    public DescribeLiveStreamTranscodeMetricDataResponse describeLiveStreamTranscodeMetricData(DescribeLiveStreamTranscodeMetricDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamTranscodeMetricDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the number of transcoded streams in real time.</p>
     * 
     * @param request DescribeLiveStreamTranscodeStreamNumRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamTranscodeStreamNumResponse
     */
    public DescribeLiveStreamTranscodeStreamNumResponse describeLiveStreamTranscodeStreamNumWithOptions(DescribeLiveStreamTranscodeStreamNumRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.splitType)) {
            query.put("SplitType", request.splitType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamTranscodeStreamNum"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamTranscodeStreamNumResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the number of transcoded streams in real time.</p>
     * 
     * @param request DescribeLiveStreamTranscodeStreamNumRequest
     * @return DescribeLiveStreamTranscodeStreamNumResponse
     */
    public DescribeLiveStreamTranscodeStreamNumResponse describeLiveStreamTranscodeStreamNum(DescribeLiveStreamTranscodeStreamNumRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamTranscodeStreamNumWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>When you call this operation, you can specify the PageNumber and PageSize parameters to view watermark rules on separate pages. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries watermark rules.</p>
     * 
     * @param request DescribeLiveStreamWatermarkRulesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamWatermarkRulesResponse
     */
    public DescribeLiveStreamWatermarkRulesResponse describeLiveStreamWatermarkRulesWithOptions(DescribeLiveStreamWatermarkRulesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamWatermarkRules"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamWatermarkRulesResponse());
    }

    /**
     * <b>description</b> :
     * <p>When you call this operation, you can specify the PageNumber and PageSize parameters to view watermark rules on separate pages. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries watermark rules.</p>
     * 
     * @param request DescribeLiveStreamWatermarkRulesRequest
     * @return DescribeLiveStreamWatermarkRulesResponse
     */
    public DescribeLiveStreamWatermarkRulesResponse describeLiveStreamWatermarkRules(DescribeLiveStreamWatermarkRulesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamWatermarkRulesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query watermark templates. You can use the PageNumber parameter to view results on separate pages. Make sure that you configure parameters properly when you call this operation.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries watermark templates.</p>
     * 
     * @param request DescribeLiveStreamWatermarksRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamWatermarksResponse
     */
    public DescribeLiveStreamWatermarksResponse describeLiveStreamWatermarksWithOptions(DescribeLiveStreamWatermarksRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.keyWord)) {
            query.put("KeyWord", request.keyWord);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamWatermarks"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamWatermarksResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query watermark templates. You can use the PageNumber parameter to view results on separate pages. Make sure that you configure parameters properly when you call this operation.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries watermark templates.</p>
     * 
     * @param request DescribeLiveStreamWatermarksRequest
     * @return DescribeLiveStreamWatermarksResponse
     */
    public DescribeLiveStreamWatermarksResponse describeLiveStreamWatermarks(DescribeLiveStreamWatermarksRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamWatermarksWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>The stream URLs refer to the URLs for playing in particular.</p>
     * <h2>QPS limit</h2>
     * <p>A single user can perform a maximum of 50 queries per second (QPS). Throttling is triggered when the number of calls per second exceeds the QPS limit. The throttling may affect your business. Thus, we recommend that you observe the QPS limit on this operation. For more information about what a single user means and the QPS details, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live#topic-2136805">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the blacklist of live stream URLs under a main streaming domain.</p>
     * 
     * @param request DescribeLiveStreamsBlockListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamsBlockListResponse
     */
    public DescribeLiveStreamsBlockListResponse describeLiveStreamsBlockListWithOptions(DescribeLiveStreamsBlockListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamsBlockList"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamsBlockListResponse());
    }

    /**
     * <b>description</b> :
     * <p>The stream URLs refer to the URLs for playing in particular.</p>
     * <h2>QPS limit</h2>
     * <p>A single user can perform a maximum of 50 queries per second (QPS). Throttling is triggered when the number of calls per second exceeds the QPS limit. The throttling may affect your business. Thus, we recommend that you observe the QPS limit on this operation. For more information about what a single user means and the QPS details, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live#topic-2136805">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the blacklist of live stream URLs under a main streaming domain.</p>
     * 
     * @param request DescribeLiveStreamsBlockListRequest
     * @return DescribeLiveStreamsBlockListResponse
     */
    public DescribeLiveStreamsBlockListResponse describeLiveStreamsBlockList(DescribeLiveStreamsBlockListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamsBlockListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the operation history of live streams under a domain name or in an application. The operations include all API operations that were called on live streams.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the operation history of live streams under a domain name or in an application.</p>
     * 
     * @param request DescribeLiveStreamsControlHistoryRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamsControlHistoryResponse
     */
    public DescribeLiveStreamsControlHistoryResponse describeLiveStreamsControlHistoryWithOptions(DescribeLiveStreamsControlHistoryRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamsControlHistory"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamsControlHistoryResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the operation history of live streams under a domain name or in an application. The operations include all API operations that were called on live streams.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the operation history of live streams under a domain name or in an application.</p>
     * 
     * @param request DescribeLiveStreamsControlHistoryRequest
     * @return DescribeLiveStreamsControlHistoryResponse
     */
    public DescribeLiveStreamsControlHistoryResponse describeLiveStreamsControlHistory(DescribeLiveStreamsControlHistoryRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamsControlHistoryWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries stream ingest callback records.</p>
     * 
     * @param request DescribeLiveStreamsNotifyRecordsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamsNotifyRecordsResponse
     */
    public DescribeLiveStreamsNotifyRecordsResponse describeLiveStreamsNotifyRecordsWithOptions(DescribeLiveStreamsNotifyRecordsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            query.put("Status", request.status);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamsNotifyRecords"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamsNotifyRecordsResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries stream ingest callback records.</p>
     * 
     * @param request DescribeLiveStreamsNotifyRecordsRequest
     * @return DescribeLiveStreamsNotifyRecordsResponse
     */
    public DescribeLiveStreamsNotifyRecordsResponse describeLiveStreamsNotifyRecords(DescribeLiveStreamsNotifyRecordsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamsNotifyRecordsWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Queries the callback configuration for stream ingest under an ingest domain.</p>
     * 
     * @param request DescribeLiveStreamsNotifyUrlConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamsNotifyUrlConfigResponse
     */
    public DescribeLiveStreamsNotifyUrlConfigResponse describeLiveStreamsNotifyUrlConfigWithOptions(DescribeLiveStreamsNotifyUrlConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamsNotifyUrlConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamsNotifyUrlConfigResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Queries the callback configuration for stream ingest under an ingest domain.</p>
     * 
     * @param request DescribeLiveStreamsNotifyUrlConfigRequest
     * @return DescribeLiveStreamsNotifyUrlConfigResponse
     */
    public DescribeLiveStreamsNotifyUrlConfigResponse describeLiveStreamsNotifyUrlConfig(DescribeLiveStreamsNotifyUrlConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamsNotifyUrlConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the following types of streams.</p>
     * <ul>
     * <li>all: all streams.</li>
     * <li>raw: source streams.</li>
     * <li>trans: transcoded streams.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about all active streams under a specified domain name or the active streams of an application under a specified domain name.</p>
     * 
     * @param request DescribeLiveStreamsOnlineListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamsOnlineListResponse
     */
    public DescribeLiveStreamsOnlineListResponse describeLiveStreamsOnlineListWithOptions(DescribeLiveStreamsOnlineListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.onlyStream)) {
            query.put("OnlyStream", request.onlyStream);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.queryType)) {
            query.put("QueryType", request.queryType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamType)) {
            query.put("StreamType", request.streamType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamsOnlineList"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamsOnlineListResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the following types of streams.</p>
     * <ul>
     * <li>all: all streams.</li>
     * <li>raw: source streams.</li>
     * <li>trans: transcoded streams.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about all active streams under a specified domain name or the active streams of an application under a specified domain name.</p>
     * 
     * @param request DescribeLiveStreamsOnlineListRequest
     * @return DescribeLiveStreamsOnlineListResponse
     */
    public DescribeLiveStreamsOnlineListResponse describeLiveStreamsOnlineList(DescribeLiveStreamsOnlineListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamsOnlineListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>This operation allows you to query streams in the last 30 days. The information of active streams during the queried period is returned. This operation supports the following sorting methods.</p>
     * <ul>
     * <li>stream_name_desc: sorts the entries in descending order by stream name.</li>
     * <li>stream_name_asc: sorts the entries in ascending order by stream name.</li>
     * <li>publish_time_desc: sorts the entries in descending order by stream ingest time.</li>
     * <li>publish_time_asc: sorts the entries in ascending order by stream ingest time.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 3 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the stream ingest records of a domain name or an application or stream under a domain name.</p>
     * 
     * @param request DescribeLiveStreamsPublishListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamsPublishListResponse
     */
    public DescribeLiveStreamsPublishListResponse describeLiveStreamsPublishListWithOptions(DescribeLiveStreamsPublishListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.orderBy)) {
            query.put("OrderBy", request.orderBy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.queryType)) {
            query.put("QueryType", request.queryType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamType)) {
            query.put("StreamType", request.streamType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamsPublishList"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamsPublishListResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>This operation allows you to query streams in the last 30 days. The information of active streams during the queried period is returned. This operation supports the following sorting methods.</p>
     * <ul>
     * <li>stream_name_desc: sorts the entries in descending order by stream name.</li>
     * <li>stream_name_asc: sorts the entries in ascending order by stream name.</li>
     * <li>publish_time_desc: sorts the entries in descending order by stream ingest time.</li>
     * <li>publish_time_asc: sorts the entries in ascending order by stream ingest time.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 3 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the stream ingest records of a domain name or an application or stream under a domain name.</p>
     * 
     * @param request DescribeLiveStreamsPublishListRequest
     * @return DescribeLiveStreamsPublishListResponse
     */
    public DescribeLiveStreamsPublishListResponse describeLiveStreamsPublishList(DescribeLiveStreamsPublishListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamsPublishListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The maximum time range for a query is 15 days.</p>
     * <ul>
     * <li>You can query data in the last 18 months.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the total number of live streams within a specified time range. Data is collected on a daily basis.</p>
     * 
     * @param request DescribeLiveStreamsTotalCountRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveStreamsTotalCountResponse
     */
    public DescribeLiveStreamsTotalCountResponse describeLiveStreamsTotalCountWithOptions(DescribeLiveStreamsTotalCountRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.typ)) {
            query.put("Typ", request.typ);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveStreamsTotalCount"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveStreamsTotalCountResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The maximum time range for a query is 15 days.</p>
     * <ul>
     * <li>You can query data in the last 18 months.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the total number of live streams within a specified time range. Data is collected on a daily basis.</p>
     * 
     * @param request DescribeLiveStreamsTotalCountRequest
     * @return DescribeLiveStreamsTotalCountResponse
     */
    public DescribeLiveStreamsTotalCountResponse describeLiveStreamsTotalCount(DescribeLiveStreamsTotalCountRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveStreamsTotalCountWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  If you do not specify the StartTime or EndTime parameter, data of the current month is queried by default. To query data within a specific time range, you must specify both the StartTime and EndTime parameters.</p>
     * <ul>
     * <li>You can query data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the top domain names ranked by traffic.</p>
     * 
     * @param request DescribeLiveTopDomainsByFlowRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveTopDomainsByFlowResponse
     */
    public DescribeLiveTopDomainsByFlowResponse describeLiveTopDomainsByFlowWithOptions(DescribeLiveTopDomainsByFlowRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.limit)) {
            query.put("Limit", request.limit);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveTopDomainsByFlow"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveTopDomainsByFlowResponse());
    }

    /**
     * <b>description</b> :
     * <p>  If you do not specify the StartTime or EndTime parameter, data of the current month is queried by default. To query data within a specific time range, you must specify both the StartTime and EndTime parameters.</p>
     * <ul>
     * <li>You can query data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the top domain names ranked by traffic.</p>
     * 
     * @param request DescribeLiveTopDomainsByFlowRequest
     * @return DescribeLiveTopDomainsByFlowResponse
     */
    public DescribeLiveTopDomainsByFlowResponse describeLiveTopDomainsByFlow(DescribeLiveTopDomainsByFlowRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveTopDomainsByFlowWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>获取直播指定域名的原始访问日志的下载地址</p>
     * 
     * @param request DescribeLiveTrafficDomainLogRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveTrafficDomainLogResponse
     */
    public DescribeLiveTrafficDomainLogResponse describeLiveTrafficDomainLogWithOptions(DescribeLiveTrafficDomainLogRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveTrafficDomainLog"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveTrafficDomainLogResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>获取直播指定域名的原始访问日志的下载地址</p>
     * 
     * @param request DescribeLiveTrafficDomainLogRequest
     * @return DescribeLiveTrafficDomainLogResponse
     */
    public DescribeLiveTrafficDomainLogResponse describeLiveTrafficDomainLog(DescribeLiveTrafficDomainLogRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveTrafficDomainLogWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h3>Usage notes</h3>
     * <ul>
     * <li>The maximum time range for a query is 24 hours. </li>
     * <li>The minimum time range for a query is 1 hour. </li>
     * <li>You can query data in the last 31 days.</li>
     * </ul>
     * <h3>QPS limit</h3>
     * <p>You can call this operation up to 10 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the audio and video data of an ingested stream within a specific period of time.</p>
     * 
     * @param request DescribeLiveUpVideoAudioInfoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveUpVideoAudioInfoResponse
     */
    public DescribeLiveUpVideoAudioInfoResponse describeLiveUpVideoAudioInfoWithOptions(DescribeLiveUpVideoAudioInfoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.stream)) {
            query.put("Stream", request.stream);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveUpVideoAudioInfo"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveUpVideoAudioInfoResponse());
    }

    /**
     * <b>description</b> :
     * <h3>Usage notes</h3>
     * <ul>
     * <li>The maximum time range for a query is 24 hours. </li>
     * <li>The minimum time range for a query is 1 hour. </li>
     * <li>You can query data in the last 31 days.</li>
     * </ul>
     * <h3>QPS limit</h3>
     * <p>You can call this operation up to 10 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the audio and video data of an ingested stream within a specific period of time.</p>
     * 
     * @param request DescribeLiveUpVideoAudioInfoRequest
     * @return DescribeLiveUpVideoAudioInfoResponse
     */
    public DescribeLiveUpVideoAudioInfoResponse describeLiveUpVideoAudioInfo(DescribeLiveUpVideoAudioInfoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveUpVideoAudioInfoWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to estimate resource usage of the current month based on the metering method that is specified on the first day of the month. You can call this operation to estimate resource usage of only the current month within your Alibaba Cloud account. The time range used for the estimation starts at 00:00 on the first day of the month and ends 2 hours earlier than the current time.</p>
     * <ul>
     * <li>Pay by monthly 95th percentile bandwidth: The top 5% values between the start time and end time are excluded. The highest value among the remaining values is the estimated value.</li>
     * <li>Pay by average daily peak bandwidth per month: Estimated value = Sum of daily peak bandwidth values/Number of days. The current day is excluded.</li>
     * <li>Pay by 4th peak bandwidth per month: The estimated value is the 4th peak bandwidth value between the start time and end time. If the time range is less than four days, the estimated value is 0.</li>
     * <li>Pay by average daily 95th percentile bandwidth per month: Estimated value = Sum of daily 95th percentile bandwidth values/Number of days. The current day is excluded.</li>
     * <li>Pay by 95th percentile bandwidth with 50% off from 00:00 to 08:00: The top 5% values between the start time and end time are excluded. The highest value among the remaining values is the estimated value.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation once per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the estimated bills of ApsaraVideo Live in your Alibaba Cloud account.</p>
     * 
     * @param request DescribeLiveUserBillPredictionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveUserBillPredictionResponse
     */
    public DescribeLiveUserBillPredictionResponse describeLiveUserBillPredictionWithOptions(DescribeLiveUserBillPredictionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveUserBillPrediction"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveUserBillPredictionResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to estimate resource usage of the current month based on the metering method that is specified on the first day of the month. You can call this operation to estimate resource usage of only the current month within your Alibaba Cloud account. The time range used for the estimation starts at 00:00 on the first day of the month and ends 2 hours earlier than the current time.</p>
     * <ul>
     * <li>Pay by monthly 95th percentile bandwidth: The top 5% values between the start time and end time are excluded. The highest value among the remaining values is the estimated value.</li>
     * <li>Pay by average daily peak bandwidth per month: Estimated value = Sum of daily peak bandwidth values/Number of days. The current day is excluded.</li>
     * <li>Pay by 4th peak bandwidth per month: The estimated value is the 4th peak bandwidth value between the start time and end time. If the time range is less than four days, the estimated value is 0.</li>
     * <li>Pay by average daily 95th percentile bandwidth per month: Estimated value = Sum of daily 95th percentile bandwidth values/Number of days. The current day is excluded.</li>
     * <li>Pay by 95th percentile bandwidth with 50% off from 00:00 to 08:00: The top 5% values between the start time and end time are excluded. The highest value among the remaining values is the estimated value.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation once per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the estimated bills of ApsaraVideo Live in your Alibaba Cloud account.</p>
     * 
     * @param request DescribeLiveUserBillPredictionRequest
     * @return DescribeLiveUserBillPredictionResponse
     */
    public DescribeLiveUserBillPredictionResponse describeLiveUserBillPrediction(DescribeLiveUserBillPredictionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveUserBillPredictionWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>You can call this operation to query all domain names of ApsaraVideo Live within your Alibaba Cloud account. The supported types of domain names are streaming domains and edge ingest domains.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries domain names of ApsaraVideo Live in your Alibaba Cloud account.</p>
     * 
     * @param request DescribeLiveUserDomainsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveUserDomainsResponse
     */
    public DescribeLiveUserDomainsResponse describeLiveUserDomainsWithOptions(DescribeLiveUserDomainsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainSearchType)) {
            query.put("DomainSearchType", request.domainSearchType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainStatus)) {
            query.put("DomainStatus", request.domainStatus);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.liveDomainType)) {
            query.put("LiveDomainType", request.liveDomainType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionName)) {
            query.put("RegionName", request.regionName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tag)) {
            query.put("Tag", request.tag);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveUserDomains"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveUserDomainsResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>You can call this operation to query all domain names of ApsaraVideo Live within your Alibaba Cloud account. The supported types of domain names are streaming domains and edge ingest domains.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries domain names of ApsaraVideo Live in your Alibaba Cloud account.</p>
     * 
     * @param request DescribeLiveUserDomainsRequest
     * @return DescribeLiveUserDomainsResponse
     */
    public DescribeLiveUserDomainsResponse describeLiveUserDomains(DescribeLiveUserDomainsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveUserDomainsWithOptions(request, runtime);
    }

    /**
     * @param request DescribeLiveUserTagsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveUserTagsResponse
     */
    public DescribeLiveUserTagsResponse describeLiveUserTagsWithOptions(DescribeLiveUserTagsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveUserTags"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveUserTagsResponse());
    }

    /**
     * @param request DescribeLiveUserTagsRequest
     * @return DescribeLiveUserTagsResponse
     */
    public DescribeLiveUserTagsResponse describeLiveUserTags(DescribeLiveUserTagsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveUserTagsWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>获取直播指定域名的原始访问日志的下载地址</p>
     * 
     * @param request DescribeLiveUserTrafficLogRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveUserTrafficLogResponse
     */
    public DescribeLiveUserTrafficLogResponse describeLiveUserTrafficLogWithOptions(DescribeLiveUserTrafficLogRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNumber)) {
            query.put("PageNumber", request.pageNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveUserTrafficLog"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveUserTrafficLogResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>获取直播指定域名的原始访问日志的下载地址</p>
     * 
     * @param request DescribeLiveUserTrafficLogRequest
     * @return DescribeLiveUserTrafficLogResponse
     */
    public DescribeLiveUserTrafficLogResponse describeLiveUserTrafficLog(DescribeLiveUserTrafficLogRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveUserTrafficLogWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <ul>
     * <li>You can call this operation to query the ownership verification content of a single domain name.</li>
     * <li>You can call this operation up to 30 times per second per account.</li>
     * <li>When you call this operation, you need to specify a domain name as a request parameter.</li>
     * <li>After a successful call, the verification content and request ID are returned, which can be used for subsequent operations.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the ownership verification content of a domain name.</p>
     * 
     * @param request DescribeLiveVerifyContentRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeLiveVerifyContentResponse
     */
    public DescribeLiveVerifyContentResponse describeLiveVerifyContentWithOptions(DescribeLiveVerifyContentRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeLiveVerifyContent"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeLiveVerifyContentResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <ul>
     * <li>You can call this operation to query the ownership verification content of a single domain name.</li>
     * <li>You can call this operation up to 30 times per second per account.</li>
     * <li>When you call this operation, you need to specify a domain name as a request parameter.</li>
     * <li>After a successful call, the verification content and request ID are returned, which can be used for subsequent operations.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the ownership verification content of a domain name.</p>
     * 
     * @param request DescribeLiveVerifyContentRequest
     * @return DescribeLiveVerifyContentResponse
     */
    public DescribeLiveVerifyContentResponse describeLiveVerifyContent(DescribeLiveVerifyContentRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeLiveVerifyContentWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <ul>
     * <li>The maximum time range for a query is 31 days.</li>
     * <li>The minimum time granularity for a query is 5 minutes.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>DescribeMeterLiveBypassDuration</p>
     * 
     * @param request DescribeMeterLiveBypassDurationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeMeterLiveBypassDurationResponse
     */
    public DescribeMeterLiveBypassDurationResponse describeMeterLiveBypassDurationWithOptions(DescribeMeterLiveBypassDurationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeMeterLiveBypassDuration"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeMeterLiveBypassDurationResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <ul>
     * <li>The maximum time range for a query is 31 days.</li>
     * <li>The minimum time granularity for a query is 5 minutes.</li>
     * <li>You can query the data in the last 90 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>DescribeMeterLiveBypassDuration</p>
     * 
     * @param request DescribeMeterLiveBypassDurationRequest
     * @return DescribeMeterLiveBypassDurationResponse
     */
    public DescribeMeterLiveBypassDurationResponse describeMeterLiveBypassDuration(DescribeMeterLiveBypassDurationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeMeterLiveBypassDurationWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848087.html">CreateMixStream</a> operation to create stream mixing tasks and then call this operation to query the list of stream mixing tasks.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries stream mixing tasks.</p>
     * 
     * @param request DescribeMixStreamListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeMixStreamListResponse
     */
    public DescribeMixStreamListResponse describeMixStreamListWithOptions(DescribeMixStreamListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mixStreamId)) {
            query.put("MixStreamId", request.mixStreamId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNo)) {
            query.put("PageNo", request.pageNo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeMixStreamList"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeMixStreamListResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848087.html">CreateMixStream</a> operation to create stream mixing tasks and then call this operation to query the list of stream mixing tasks.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries stream mixing tasks.</p>
     * 
     * @param request DescribeMixStreamListRequest
     * @return DescribeMixStreamListResponse
     */
    public DescribeMixStreamListResponse describeMixStreamList(DescribeMixStreamListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeMixStreamListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the information about the factors that cause latency of first frames within a specified period of time. You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see QPS limit.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about the factors that cause latency of first frames within a specified period of time.</p>
     * 
     * @param tmpReq DescribeRTSNativeSDKFirstFrameCostRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeRTSNativeSDKFirstFrameCostResponse
     */
    public DescribeRTSNativeSDKFirstFrameCostResponse describeRTSNativeSDKFirstFrameCostWithOptions(DescribeRTSNativeSDKFirstFrameCostRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        DescribeRTSNativeSDKFirstFrameCostShrinkRequest request = new DescribeRTSNativeSDKFirstFrameCostShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.domainNameList)) {
            request.domainNameListShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.domainNameList, "DomainNameList", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataInterval)) {
            query.put("DataInterval", request.dataInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainNameListShrink)) {
            query.put("DomainNameList", request.domainNameListShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeRTSNativeSDKFirstFrameCost"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeRTSNativeSDKFirstFrameCostResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the information about the factors that cause latency of first frames within a specified period of time. You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see QPS limit.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about the factors that cause latency of first frames within a specified period of time.</p>
     * 
     * @param request DescribeRTSNativeSDKFirstFrameCostRequest
     * @return DescribeRTSNativeSDKFirstFrameCostResponse
     */
    public DescribeRTSNativeSDKFirstFrameCostResponse describeRTSNativeSDKFirstFrameCost(DescribeRTSNativeSDKFirstFrameCostRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeRTSNativeSDKFirstFrameCostWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the average latency of first frames within a specified period of time. You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see QPS limit.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the average latency of first frames within a specified period of time.</p>
     * 
     * @param tmpReq DescribeRTSNativeSDKFirstFrameDelayRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeRTSNativeSDKFirstFrameDelayResponse
     */
    public DescribeRTSNativeSDKFirstFrameDelayResponse describeRTSNativeSDKFirstFrameDelayWithOptions(DescribeRTSNativeSDKFirstFrameDelayRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        DescribeRTSNativeSDKFirstFrameDelayShrinkRequest request = new DescribeRTSNativeSDKFirstFrameDelayShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.domainNameList)) {
            request.domainNameListShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.domainNameList, "DomainNameList", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataInterval)) {
            query.put("DataInterval", request.dataInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainNameListShrink)) {
            query.put("DomainNameList", request.domainNameListShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeRTSNativeSDKFirstFrameDelay"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeRTSNativeSDKFirstFrameDelayResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the average latency of first frames within a specified period of time. You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see QPS limit.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the average latency of first frames within a specified period of time.</p>
     * 
     * @param request DescribeRTSNativeSDKFirstFrameDelayRequest
     * @return DescribeRTSNativeSDKFirstFrameDelayResponse
     */
    public DescribeRTSNativeSDKFirstFrameDelayResponse describeRTSNativeSDKFirstFrameDelay(DescribeRTSNativeSDKFirstFrameDelayRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeRTSNativeSDKFirstFrameDelayWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the causes of playback failures that occurred within a specified period of time. The causes are returned in the form of status codes. You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see QPS limit.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the causes of playback failures that occurred within a specified period of time. The causes are returned in the form of status codes.</p>
     * 
     * @param tmpReq DescribeRTSNativeSDKPlayFailStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeRTSNativeSDKPlayFailStatusResponse
     */
    public DescribeRTSNativeSDKPlayFailStatusResponse describeRTSNativeSDKPlayFailStatusWithOptions(DescribeRTSNativeSDKPlayFailStatusRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        DescribeRTSNativeSDKPlayFailStatusShrinkRequest request = new DescribeRTSNativeSDKPlayFailStatusShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.domainNameList)) {
            request.domainNameListShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.domainNameList, "DomainNameList", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataInterval)) {
            query.put("DataInterval", request.dataInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainNameListShrink)) {
            query.put("DomainNameList", request.domainNameListShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeRTSNativeSDKPlayFailStatus"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeRTSNativeSDKPlayFailStatusResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the causes of playback failures that occurred within a specified period of time. The causes are returned in the form of status codes. You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see QPS limit.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the causes of playback failures that occurred within a specified period of time. The causes are returned in the form of status codes.</p>
     * 
     * @param request DescribeRTSNativeSDKPlayFailStatusRequest
     * @return DescribeRTSNativeSDKPlayFailStatusResponse
     */
    public DescribeRTSNativeSDKPlayFailStatusResponse describeRTSNativeSDKPlayFailStatus(DescribeRTSNativeSDKPlayFailStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeRTSNativeSDKPlayFailStatusWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can query the playback duration within a specified period of time. You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see QPS limit.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the playback duration within a specified period of time.</p>
     * 
     * @param tmpReq DescribeRTSNativeSDKPlayTimeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeRTSNativeSDKPlayTimeResponse
     */
    public DescribeRTSNativeSDKPlayTimeResponse describeRTSNativeSDKPlayTimeWithOptions(DescribeRTSNativeSDKPlayTimeRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        DescribeRTSNativeSDKPlayTimeShrinkRequest request = new DescribeRTSNativeSDKPlayTimeShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.domainNameList)) {
            request.domainNameListShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.domainNameList, "DomainNameList", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataInterval)) {
            query.put("DataInterval", request.dataInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainNameListShrink)) {
            query.put("DomainNameList", request.domainNameListShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeRTSNativeSDKPlayTime"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeRTSNativeSDKPlayTimeResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can query the playback duration within a specified period of time. You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see QPS limit.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the playback duration within a specified period of time.</p>
     * 
     * @param request DescribeRTSNativeSDKPlayTimeRequest
     * @return DescribeRTSNativeSDKPlayTimeResponse
     */
    public DescribeRTSNativeSDKPlayTimeResponse describeRTSNativeSDKPlayTime(DescribeRTSNativeSDKPlayTimeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeRTSNativeSDKPlayTimeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>QPS limit You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see QPS limit.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the total number of playbacks and the number of successful playbacks within a specified period of time.</p>
     * 
     * @param tmpReq DescribeRTSNativeSDKVvDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeRTSNativeSDKVvDataResponse
     */
    public DescribeRTSNativeSDKVvDataResponse describeRTSNativeSDKVvDataWithOptions(DescribeRTSNativeSDKVvDataRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        DescribeRTSNativeSDKVvDataShrinkRequest request = new DescribeRTSNativeSDKVvDataShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.domainNameList)) {
            request.domainNameListShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.domainNameList, "DomainNameList", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataInterval)) {
            query.put("DataInterval", request.dataInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainNameListShrink)) {
            query.put("DomainNameList", request.domainNameListShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeRTSNativeSDKVvData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeRTSNativeSDKVvDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>QPS limit You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see QPS limit.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the total number of playbacks and the number of successful playbacks within a specified period of time.</p>
     * 
     * @param request DescribeRTSNativeSDKVvDataRequest
     * @return DescribeRTSNativeSDKVvDataResponse
     */
    public DescribeRTSNativeSDKVvDataResponse describeRTSNativeSDKVvData(DescribeRTSNativeSDKVvDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeRTSNativeSDKVvDataWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>查询rtc云端录制文件与任务信息</p>
     * 
     * @param request DescribeRtcCloudRecordingFilesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeRtcCloudRecordingFilesResponse
     */
    public DescribeRtcCloudRecordingFilesResponse describeRtcCloudRecordingFilesWithOptions(DescribeRtcCloudRecordingFilesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeRtcCloudRecordingFiles"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeRtcCloudRecordingFilesResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>查询rtc云端录制文件与任务信息</p>
     * 
     * @param request DescribeRtcCloudRecordingFilesRequest
     * @return DescribeRtcCloudRecordingFilesResponse
     */
    public DescribeRtcCloudRecordingFilesResponse describeRtcCloudRecordingFiles(DescribeRtcCloudRecordingFilesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeRtcCloudRecordingFilesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h3>Usage notes</h3>
     * <ul>
     * <li>You can call this operation to query information about a subscription to mixed-stream relay events. </li>
     * <li>Before you call this operation, make sure that you have called the CreateRtcMPUEventSub operation to create the subscription.</li>
     * </ul>
     * <h3>QPS limit</h3>
     * <ul>
     * <li>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries information about a subscription to mixed-stream relay events.</p>
     * 
     * @param request DescribeRtcMPUEventSubRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeRtcMPUEventSubResponse
     */
    public DescribeRtcMPUEventSubResponse describeRtcMPUEventSubWithOptions(DescribeRtcMPUEventSubRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeRtcMPUEventSub"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeRtcMPUEventSubResponse());
    }

    /**
     * <b>description</b> :
     * <h3>Usage notes</h3>
     * <ul>
     * <li>You can call this operation to query information about a subscription to mixed-stream relay events. </li>
     * <li>Before you call this operation, make sure that you have called the CreateRtcMPUEventSub operation to create the subscription.</li>
     * </ul>
     * <h3>QPS limit</h3>
     * <ul>
     * <li>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries information about a subscription to mixed-stream relay events.</p>
     * 
     * @param request DescribeRtcMPUEventSubRequest
     * @return DescribeRtcMPUEventSubResponse
     */
    public DescribeRtcMPUEventSubResponse describeRtcMPUEventSub(DescribeRtcMPUEventSubRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeRtcMPUEventSubWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You cannot call this operation if the episode list is empty. For information about how to add episodes to the episode list, see <a href="https://help.aliyun.com/document_detail/2848051.html">AddShowIntoShowList</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of the episode list.</p>
     * 
     * @param request DescribeShowListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeShowListResponse
     */
    public DescribeShowListResponse describeShowListWithOptions(DescribeShowListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeShowList"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeShowListResponse());
    }

    /**
     * <b>description</b> :
     * <p>You cannot call this operation if the episode list is empty. For information about how to add episodes to the episode list, see <a href="https://help.aliyun.com/document_detail/2848051.html">AddShowIntoShowList</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of the episode list.</p>
     * 
     * @param request DescribeShowListRequest
     * @return DescribeShowListResponse
     */
    public DescribeShowListResponse describeShowList(DescribeShowListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeShowListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Queries configurations of stream-level region blocking.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries configurations of stream-level region blocking.</p>
     * 
     * @param request DescribeStreamLocationBlockRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeStreamLocationBlockResponse
     */
    public DescribeStreamLocationBlockResponse describeStreamLocationBlockWithOptions(DescribeStreamLocationBlockRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.blockType)) {
            query.put("BlockType", request.blockType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeStreamLocationBlock"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeStreamLocationBlockResponse());
    }

    /**
     * <b>description</b> :
     * <p>Queries configurations of stream-level region blocking.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries configurations of stream-level region blocking.</p>
     * 
     * @param request DescribeStreamLocationBlockRequest
     * @return DescribeStreamLocationBlockResponse
     */
    public DescribeStreamLocationBlockResponse describeStreamLocationBlock(DescribeStreamLocationBlockRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeStreamLocationBlockWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You must call the <a href="https://help.aliyun.com/document_detail/215388.html">AddStudioLayout</a> operation to configure layouts for a virtual studio before you call this operation to query layouts.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries one or more layouts of a virtual studio.</p>
     * 
     * @param request DescribeStudioLayoutsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeStudioLayoutsResponse
     */
    public DescribeStudioLayoutsResponse describeStudioLayoutsWithOptions(DescribeStudioLayoutsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layoutId)) {
            query.put("LayoutId", request.layoutId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeStudioLayouts"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeStudioLayoutsResponse());
    }

    /**
     * <b>description</b> :
     * <p>You must call the <a href="https://help.aliyun.com/document_detail/215388.html">AddStudioLayout</a> operation to configure layouts for a virtual studio before you call this operation to query layouts.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries one or more layouts of a virtual studio.</p>
     * 
     * @param request DescribeStudioLayoutsRequest
     * @return DescribeStudioLayoutsResponse
     */
    public DescribeStudioLayoutsResponse describeStudioLayouts(DescribeStudioLayoutsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeStudioLayoutsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the stream pulling information about a live stream of a headline.</p>
     * <h2><a href="#qps-"></a>QPS limits</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the stream pulling information about a live stream of a headline.</p>
     * 
     * @param request DescribeToutiaoLivePlayRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeToutiaoLivePlayResponse
     */
    public DescribeToutiaoLivePlayResponse describeToutiaoLivePlayWithOptions(DescribeToutiaoLivePlayRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.stream)) {
            query.put("Stream", request.stream);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeToutiaoLivePlay"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeToutiaoLivePlayResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the stream pulling information about a live stream of a headline.</p>
     * <h2><a href="#qps-"></a>QPS limits</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the stream pulling information about a live stream of a headline.</p>
     * 
     * @param request DescribeToutiaoLivePlayRequest
     * @return DescribeToutiaoLivePlayResponse
     */
    public DescribeToutiaoLivePlayResponse describeToutiaoLivePlay(DescribeToutiaoLivePlayRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeToutiaoLivePlayWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the ingest information of a specified live stream that is ingested to Toutiao.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the ingest information of a specified live stream that is ingested to Toutiao.</p>
     * 
     * @param request DescribeToutiaoLivePublishRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeToutiaoLivePublishResponse
     */
    public DescribeToutiaoLivePublishResponse describeToutiaoLivePublishWithOptions(DescribeToutiaoLivePublishRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.stream)) {
            query.put("Stream", request.stream);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeToutiaoLivePublish"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeToutiaoLivePublishResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the ingest information of a specified live stream that is ingested to Toutiao.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the ingest information of a specified live stream that is ingested to Toutiao.</p>
     * 
     * @param request DescribeToutiaoLivePublishRequest
     * @return DescribeToutiaoLivePublishResponse
     */
    public DescribeToutiaoLivePublishResponse describeToutiaoLivePublish(DescribeToutiaoLivePublishRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeToutiaoLivePublishWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>新增查询 uid 级别或域名app级别在线流</p>
     * 
     * @param request DescribeUidOnlineStreamsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeUidOnlineStreamsResponse
     */
    public DescribeUidOnlineStreamsResponse describeUidOnlineStreamsWithOptions(DescribeUidOnlineStreamsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeUidOnlineStreams"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeUidOnlineStreamsResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>新增查询 uid 级别或域名app级别在线流</p>
     * 
     * @param request DescribeUidOnlineStreamsRequest
     * @return DescribeUidOnlineStreamsResponse
     */
    public DescribeUidOnlineStreamsResponse describeUidOnlineStreams(DescribeUidOnlineStreamsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeUidOnlineStreamsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the daily peak inbound bandwidth.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the daily peak inbound bandwidth.</p>
     * 
     * @param request DescribeUpBpsPeakDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeUpBpsPeakDataResponse
     */
    public DescribeUpBpsPeakDataResponse describeUpBpsPeakDataWithOptions(DescribeUpBpsPeakDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainSwitch)) {
            query.put("DomainSwitch", request.domainSwitch);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeUpBpsPeakData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeUpBpsPeakDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the daily peak inbound bandwidth.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the daily peak inbound bandwidth.</p>
     * 
     * @param request DescribeUpBpsPeakDataRequest
     * @return DescribeUpBpsPeakDataResponse
     */
    public DescribeUpBpsPeakDataResponse describeUpBpsPeakData(DescribeUpBpsPeakDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeUpBpsPeakDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the daily peak inbound bandwidth of a leased line.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the daily peak inbound bandwidth of a leased line.</p>
     * 
     * @param request DescribeUpBpsPeakOfLineRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeUpBpsPeakOfLineResponse
     */
    public DescribeUpBpsPeakOfLineResponse describeUpBpsPeakOfLineWithOptions(DescribeUpBpsPeakOfLineRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainSwitch)) {
            query.put("DomainSwitch", request.domainSwitch);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.line)) {
            query.put("Line", request.line);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeUpBpsPeakOfLine"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeUpBpsPeakOfLineResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the daily peak inbound bandwidth of a leased line.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 5 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the daily peak inbound bandwidth of a leased line.</p>
     * 
     * @param request DescribeUpBpsPeakOfLineRequest
     * @return DescribeUpBpsPeakOfLineResponse
     */
    public DescribeUpBpsPeakOfLineResponse describeUpBpsPeakOfLine(DescribeUpBpsPeakOfLineRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeUpBpsPeakOfLineWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the daily peak number of concurrently ingested streams.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the daily peak number of concurrently ingested streams.</p>
     * 
     * @param request DescribeUpPeakPublishStreamDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DescribeUpPeakPublishStreamDataResponse
     */
    public DescribeUpPeakPublishStreamDataResponse describeUpPeakPublishStreamDataWithOptions(DescribeUpPeakPublishStreamDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainSwitch)) {
            query.put("DomainSwitch", request.domainSwitch);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DescribeUpPeakPublishStreamData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DescribeUpPeakPublishStreamDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the daily peak number of concurrently ingested streams.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the daily peak number of concurrently ingested streams.</p>
     * 
     * @param request DescribeUpPeakPublishStreamDataRequest
     * @return DescribeUpPeakPublishStreamDataResponse
     */
    public DescribeUpPeakPublishStreamDataResponse describeUpPeakPublishStreamData(DescribeUpPeakPublishStreamDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.describeUpPeakPublishStreamDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain a domain name for which real-time log delivery is enabled, and then call this operation to suspend real-time log delivery for the domain name.
     * This operation is applicable to only streaming domains. If you want to configure real-time log delivery for an ingest domain, <a href="https://workorder-intl.console.aliyun.com/?spm=5176.12818093.nav-right.dticket.6cb216d07otFWR#/ticket/createIndex">submit a ticket</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Suspends real-time log delivery for one or more domain names.</p>
     * 
     * @param request DisableLiveRealtimeLogDeliveryRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DisableLiveRealtimeLogDeliveryResponse
     */
    public DisableLiveRealtimeLogDeliveryResponse disableLiveRealtimeLogDeliveryWithOptions(DisableLiveRealtimeLogDeliveryRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DisableLiveRealtimeLogDelivery"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DisableLiveRealtimeLogDeliveryResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain a domain name for which real-time log delivery is enabled, and then call this operation to suspend real-time log delivery for the domain name.
     * This operation is applicable to only streaming domains. If you want to configure real-time log delivery for an ingest domain, <a href="https://workorder-intl.console.aliyun.com/?spm=5176.12818093.nav-right.dticket.6cb216d07otFWR#/ticket/createIndex">submit a ticket</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Suspends real-time log delivery for one or more domain names.</p>
     * 
     * @param request DisableLiveRealtimeLogDeliveryRequest
     * @return DisableLiveRealtimeLogDeliveryResponse
     */
    public DisableLiveRealtimeLogDeliveryResponse disableLiveRealtimeLogDelivery(DisableLiveRealtimeLogDeliveryRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.disableLiveRealtimeLogDeliveryWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Dynamically updating a watermark means replacing the watermark template ID during live streaming. Before you call this operation to update a watermark, you must prepare the watermark template ID that is used for replacement. The watermark template ID is specified by the <strong>TemplateId</strong> parameter of this operation. You can call the <a href="https://help.aliyun.com/document_detail/2848102.html">DescribeLiveStreamWatermarks</a> operation to obtain available watermark template IDs.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Dynamically updates a watermark.</p>
     * 
     * @param request DynamicUpdateWaterMarkStreamRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DynamicUpdateWaterMarkStreamRuleResponse
     */
    public DynamicUpdateWaterMarkStreamRuleResponse dynamicUpdateWaterMarkStreamRuleWithOptions(DynamicUpdateWaterMarkStreamRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.stream)) {
            query.put("Stream", request.stream);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateId)) {
            query.put("TemplateId", request.templateId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DynamicUpdateWaterMarkStreamRule"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DynamicUpdateWaterMarkStreamRuleResponse());
    }

    /**
     * <b>description</b> :
     * <p>Dynamically updating a watermark means replacing the watermark template ID during live streaming. Before you call this operation to update a watermark, you must prepare the watermark template ID that is used for replacement. The watermark template ID is specified by the <strong>TemplateId</strong> parameter of this operation. You can call the <a href="https://help.aliyun.com/document_detail/2848102.html">DescribeLiveStreamWatermarks</a> operation to obtain available watermark template IDs.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Dynamically updates a watermark.</p>
     * 
     * @param request DynamicUpdateWaterMarkStreamRuleRequest
     * @return DynamicUpdateWaterMarkStreamRuleResponse
     */
    public DynamicUpdateWaterMarkStreamRuleResponse dynamicUpdateWaterMarkStreamRule(DynamicUpdateWaterMarkStreamRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.dynamicUpdateWaterMarkStreamRuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to update all configurations of episodes in an episode list or replace the episodes.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Edits an episode list.</p>
     * 
     * @param request EditPlaylistRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return EditPlaylistResponse
     */
    public EditPlaylistResponse editPlaylistWithOptions(EditPlaylistRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programConfig)) {
            query.put("ProgramConfig", request.programConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programId)) {
            query.put("ProgramId", request.programId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programItems)) {
            query.put("ProgramItems", request.programItems);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "EditPlaylist"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new EditPlaylistResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to update all configurations of episodes in an episode list or replace the episodes.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Edits an episode list.</p>
     * 
     * @param request EditPlaylistRequest
     * @return EditPlaylistResponse
     */
    public EditPlaylistResponse editPlaylist(EditPlaylistRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.editPlaylistWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create an editing task by specifying the production studio ID and the episode ID. You will not receive a notification after the editing task is created. You can call the <a href="https://help.aliyun.com/document_detail/2848059.html">GetEditingJobInfo</a> operation to query the status of the editing task.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates an editing task.</p>
     * 
     * @param request EditShowAndReplaceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return EditShowAndReplaceResponse
     */
    public EditShowAndReplaceResponse editShowAndReplaceWithOptions(EditShowAndReplaceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.showId)) {
            query.put("ShowId", request.showId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.storageInfo)) {
            query.put("StorageInfo", request.storageInfo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userData)) {
            query.put("UserData", request.userData);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "EditShowAndReplace"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new EditShowAndReplaceResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create an editing task by specifying the production studio ID and the episode ID. You will not receive a notification after the editing task is created. You can call the <a href="https://help.aliyun.com/document_detail/2848059.html">GetEditingJobInfo</a> operation to query the status of the editing task.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates an editing task.</p>
     * 
     * @param request EditShowAndReplaceRequest
     * @return EditShowAndReplaceResponse
     */
    public EditShowAndReplaceResponse editShowAndReplace(EditShowAndReplaceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.editShowAndReplaceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to switch a specified scene to the standby resource. Only a PGM scene is supported.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Switches a scene to the standby resource in a production studio.</p>
     * 
     * @param request EffectCasterUrgentRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return EffectCasterUrgentResponse
     */
    public EffectCasterUrgentResponse effectCasterUrgentWithOptions(EffectCasterUrgentRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sceneId)) {
            query.put("SceneId", request.sceneId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "EffectCasterUrgent"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new EffectCasterUrgentResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to switch a specified scene to the standby resource. Only a PGM scene is supported.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Switches a scene to the standby resource in a production studio.</p>
     * 
     * @param request EffectCasterUrgentRequest
     * @return EffectCasterUrgentResponse
     */
    public EffectCasterUrgentResponse effectCasterUrgent(EffectCasterUrgentRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.effectCasterUrgentWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Make sure that the resource is referenced by the scene.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates the standby resource in a specified scene.</p>
     * 
     * @param request EffectCasterVideoResourceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return EffectCasterVideoResourceResponse
     */
    public EffectCasterVideoResourceResponse effectCasterVideoResourceWithOptions(EffectCasterVideoResourceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceId)) {
            query.put("ResourceId", request.resourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sceneId)) {
            query.put("SceneId", request.sceneId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "EffectCasterVideoResource"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new EffectCasterVideoResourceResponse());
    }

    /**
     * <b>description</b> :
     * <p>Make sure that the resource is referenced by the scene.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates the standby resource in a specified scene.</p>
     * 
     * @param request EffectCasterVideoResourceRequest
     * @return EffectCasterVideoResourceResponse
     */
    public EffectCasterVideoResourceResponse effectCasterVideoResource(EffectCasterVideoResourceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.effectCasterVideoResourceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>This operation is applicable to only streaming domains. If you want to configure real-time log delivery for an ingest domain, <a href="https://workorder-intl.console.aliyun.com/?spm=5176.12818093.nav-right.dticket.6cb216d07otFWR#/ticket/createIndex">submit a ticket</a>.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Enables real-time log delivery for one or more domain names.</p>
     * 
     * @param request EnableLiveRealtimeLogDeliveryRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return EnableLiveRealtimeLogDeliveryResponse
     */
    public EnableLiveRealtimeLogDeliveryResponse enableLiveRealtimeLogDeliveryWithOptions(EnableLiveRealtimeLogDeliveryRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "EnableLiveRealtimeLogDelivery"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new EnableLiveRealtimeLogDeliveryResponse());
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>This operation is applicable to only streaming domains. If you want to configure real-time log delivery for an ingest domain, <a href="https://workorder-intl.console.aliyun.com/?spm=5176.12818093.nav-right.dticket.6cb216d07otFWR#/ticket/createIndex">submit a ticket</a>.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Enables real-time log delivery for one or more domain names.</p>
     * 
     * @param request EnableLiveRealtimeLogDeliveryRequest
     * @return EnableLiveRealtimeLogDeliveryResponse
     */
    public EnableLiveRealtimeLogDeliveryResponse enableLiveRealtimeLogDelivery(EnableLiveRealtimeLogDeliveryRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.enableLiveRealtimeLogDeliveryWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to disable a live stream and specify the time when the live stream is resumed. If the time is not specified, you can call the <a href="https://help.aliyun.com/document_detail/2847831.html">ResumeLiveStream</a> operation to resume the live stream. This operation supports only the live streams ingested by streamers.</p>
     * <blockquote>
     * </blockquote>
     * <ul>
     * <li>This operation disables a live stream by adding the stream to the blacklist. You can disable up to 10,000 live streams. If the limit is reached, you cannot disable any more live streams. Pay attention to the number of live streams that are disabled. You can call the <a href="https://help.aliyun.com/document_detail/2847825.html">DescribeLiveStreamsBlockList</a> operation to query the number of live streams that are disabled.</li>
     * <li>An interrupted live stream is not added to the blacklist and does not occupy the quota.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Disables a live stream. You can specify the time when the live stream is resumed.</p>
     * 
     * @param request ForbidLiveStreamRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ForbidLiveStreamResponse
     */
    public ForbidLiveStreamResponse forbidLiveStreamWithOptions(ForbidLiveStreamRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.liveStreamType)) {
            query.put("LiveStreamType", request.liveStreamType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.oneshot)) {
            query.put("Oneshot", request.oneshot);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resumeTime)) {
            query.put("ResumeTime", request.resumeTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ForbidLiveStream"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ForbidLiveStreamResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to disable a live stream and specify the time when the live stream is resumed. If the time is not specified, you can call the <a href="https://help.aliyun.com/document_detail/2847831.html">ResumeLiveStream</a> operation to resume the live stream. This operation supports only the live streams ingested by streamers.</p>
     * <blockquote>
     * </blockquote>
     * <ul>
     * <li>This operation disables a live stream by adding the stream to the blacklist. You can disable up to 10,000 live streams. If the limit is reached, you cannot disable any more live streams. Pay attention to the number of live streams that are disabled. You can call the <a href="https://help.aliyun.com/document_detail/2847825.html">DescribeLiveStreamsBlockList</a> operation to query the number of live streams that are disabled.</li>
     * <li>An interrupted live stream is not added to the blacklist and does not occupy the quota.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Disables a live stream. You can specify the time when the live stream is resumed.</p>
     * 
     * @param request ForbidLiveStreamRequest
     * @return ForbidLiveStreamResponse
     */
    public ForbidLiveStreamResponse forbidLiveStream(ForbidLiveStreamRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.forbidLiveStreamWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query all custom stream mixing templates. A list of template names and template configurations is returned.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries all custom stream mixing templates.</p>
     * 
     * @param request GetAllCustomTemplatesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetAllCustomTemplatesResponse
     */
    public GetAllCustomTemplatesResponse getAllCustomTemplatesWithOptions(GetAllCustomTemplatesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userId)) {
            query.put("UserId", request.userId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetAllCustomTemplates"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetAllCustomTemplatesResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query all custom stream mixing templates. A list of template names and template configurations is returned.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries all custom stream mixing templates.</p>
     * 
     * @param request GetAllCustomTemplatesRequest
     * @return GetAllCustomTemplatesResponse
     */
    public GetAllCustomTemplatesResponse getAllCustomTemplates(GetAllCustomTemplatesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getAllCustomTemplatesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the name of the custom stream mixing template, and then call this operation to query the information about the template.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about a custom stream mixing template.</p>
     * 
     * @param request GetCustomTemplateRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetCustomTemplateResponse
     */
    public GetCustomTemplateResponse getCustomTemplateWithOptions(GetCustomTemplateRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.template)) {
            query.put("Template", request.template);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetCustomTemplate"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetCustomTemplateResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the name of the custom stream mixing template, and then call this operation to query the information about the template.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about a custom stream mixing template.</p>
     * 
     * @param request GetCustomTemplateRequest
     * @return GetCustomTemplateResponse
     */
    public GetCustomTemplateResponse getCustomTemplate(GetCustomTemplateRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getCustomTemplateWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>To call this operation, make sure that you have the permissions to access the edge transcoding feature.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of an edge transcoding task.</p>
     * 
     * @param request GetEdgeTranscodeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetEdgeTranscodeJobResponse
     */
    public GetEdgeTranscodeJobResponse getEdgeTranscodeJobWithOptions(GetEdgeTranscodeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.clusterId)) {
            query.put("ClusterId", request.clusterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetEdgeTranscodeJob"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetEdgeTranscodeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>To call this operation, make sure that you have the permissions to access the edge transcoding feature.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of an edge transcoding task.</p>
     * 
     * @param request GetEdgeTranscodeJobRequest
     * @return GetEdgeTranscodeJobResponse
     */
    public GetEdgeTranscodeJobResponse getEdgeTranscodeJob(GetEdgeTranscodeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getEdgeTranscodeJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the details of an edge transcoding template.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of an edge transcoding template.</p>
     * 
     * @param request GetEdgeTranscodeTemplateRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetEdgeTranscodeTemplateResponse
     */
    public GetEdgeTranscodeTemplateResponse getEdgeTranscodeTemplateWithOptions(GetEdgeTranscodeTemplateRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.clusterId)) {
            query.put("ClusterId", request.clusterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateId)) {
            query.put("TemplateId", request.templateId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetEdgeTranscodeTemplate"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetEdgeTranscodeTemplateResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the details of an edge transcoding template.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of an edge transcoding template.</p>
     * 
     * @param request GetEdgeTranscodeTemplateRequest
     * @return GetEdgeTranscodeTemplateResponse
     */
    public GetEdgeTranscodeTemplateResponse getEdgeTranscodeTemplate(GetEdgeTranscodeTemplateRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getEdgeTranscodeTemplateWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  When you call this operation, you can specify the CasterId and ShowId parameters to query the information about specific editing tasks. Make sure that the parameter settings meet the requirements.</p>
     * <ul>
     * <li>If you specify the ShowId parameter in the request, the information about the editing tasks for the specified episode is returned.</li>
     * <li>If you do not specify the ShowId parameter in the request, the information about the editing tasks for the entire episode list is returned.</li>
     * </ul>
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about editing tasks.</p>
     * 
     * @param request GetEditingJobInfoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetEditingJobInfoResponse
     */
    public GetEditingJobInfoResponse getEditingJobInfoWithOptions(GetEditingJobInfoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.showId)) {
            query.put("ShowId", request.showId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetEditingJobInfo"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetEditingJobInfoResponse());
    }

    /**
     * <b>description</b> :
     * <p>  When you call this operation, you can specify the CasterId and ShowId parameters to query the information about specific editing tasks. Make sure that the parameter settings meet the requirements.</p>
     * <ul>
     * <li>If you specify the ShowId parameter in the request, the information about the editing tasks for the specified episode is returned.</li>
     * <li>If you do not specify the ShowId parameter in the request, the information about the editing tasks for the entire episode list is returned.</li>
     * </ul>
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about editing tasks.</p>
     * 
     * @param request GetEditingJobInfoRequest
     * @return GetEditingJobInfoResponse
     */
    public GetEditingJobInfoResponse getEditingJobInfo(GetEditingJobInfoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getEditingJobInfoWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about a specified interactive messaging application.</p>
     * 
     * @param request GetMessageAppRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetMessageAppResponse
     */
    public GetMessageAppResponse getMessageAppWithOptions(GetMessageAppRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetMessageApp"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetMessageAppResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about a specified interactive messaging application.</p>
     * 
     * @param request GetMessageAppRequest
     * @return GetMessageAppResponse
     */
    public GetMessageAppResponse getMessageApp(GetMessageAppRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getMessageAppWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about a message group.</p>
     * 
     * @param request GetMessageGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetMessageGroupResponse
     */
    public GetMessageGroupResponse getMessageGroupWithOptions(GetMessageGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetMessageGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetMessageGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about a message group.</p>
     * 
     * @param request GetMessageGroupRequest
     * @return GetMessageGroupResponse
     */
    public GetMessageGroupResponse getMessageGroup(GetMessageGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getMessageGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>Obtain the user ID, device ID, and device type of the client, and then pass the information to the server. When you call this operation, the server obtains a token and returns the token to the client. Different users have different user IDs, and different devices have different device IDs.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Obtains a token that the client can use to establish a persistent connection over the LWP protocol and based on atomic capabilities.</p>
     * 
     * @param request GetMessageTokenRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetMessageTokenResponse
     */
    public GetMessageTokenResponse getMessageTokenWithOptions(GetMessageTokenRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceId)) {
            body.put("DeviceId", request.deviceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceType)) {
            body.put("DeviceType", request.deviceType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userId)) {
            body.put("UserId", request.userId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetMessageToken"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetMessageTokenResponse());
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>Obtain the user ID, device ID, and device type of the client, and then pass the information to the server. When you call this operation, the server obtains a token and returns the token to the client. Different users have different user IDs, and different devices have different device IDs.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Obtains a token that the client can use to establish a persistent connection over the LWP protocol and based on atomic capabilities.</p>
     * 
     * @param request GetMessageTokenRequest
     * @return GetMessageTokenResponse
     */
    public GetMessageTokenResponse getMessageToken(GetMessageTokenRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getMessageTokenWithOptions(request, runtime);
    }

    /**
     * @param request GetTranscodeTaskStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetTranscodeTaskStatusResponse
     */
    public GetTranscodeTaskStatusResponse getTranscodeTaskStatusWithOptions(GetTranscodeTaskStatusRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pushDomain)) {
            query.put("PushDomain", request.pushDomain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transcodingTemplate)) {
            query.put("TranscodingTemplate", request.transcodingTemplate);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetTranscodeTaskStatus"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetTranscodeTaskStatusResponse());
    }

    /**
     * @param request GetTranscodeTaskStatusRequest
     * @return GetTranscodeTaskStatusResponse
     */
    public GetTranscodeTaskStatusResponse getTranscodeTaskStatus(GetTranscodeTaskStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getTranscodeTaskStatusWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures prefetch for a live stream that is ingested based on Real-Time Communication (RTC).</p>
     * 
     * @param request HotLiveRtcStreamRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return HotLiveRtcStreamResponse
     */
    public HotLiveRtcStreamResponse hotLiveRtcStreamWithOptions(HotLiveRtcStreamRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioMsid)) {
            query.put("AudioMsid", request.audioMsid);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.connectionTimeout)) {
            query.put("ConnectionTimeout", request.connectionTimeout);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mediaTimeout)) {
            query.put("MediaTimeout", request.mediaTimeout);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionCode)) {
            query.put("RegionCode", request.regionCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.videoMsid)) {
            query.put("VideoMsid", request.videoMsid);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "HotLiveRtcStream"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new HotLiveRtcStreamResponse());
    }

    /**
     * <b>description</b> :
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures prefetch for a live stream that is ingested based on Real-Time Communication (RTC).</p>
     * 
     * @param request HotLiveRtcStreamRequest
     * @return HotLiveRtcStreamResponse
     */
    public HotLiveRtcStreamResponse hotLiveRtcStream(HotLiveRtcStreamRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.hotLiveRtcStreamWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create a scheduled task to start and stop the playback of an episode list at specified points in time. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a scheduled task to start and stop the playback of a playlist at specified points in time.</p>
     * 
     * @param request InitializeAutoShowListTaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return InitializeAutoShowListTaskResponse
     */
    public InitializeAutoShowListTaskResponse initializeAutoShowListTaskWithOptions(InitializeAutoShowListTaskRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.callBackUrl)) {
            query.put("CallBackUrl", request.callBackUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterConfig)) {
            query.put("CasterConfig", request.casterConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceIds)) {
            query.put("ResourceIds", request.resourceIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "InitializeAutoShowListTask"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new InitializeAutoShowListTaskResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to create a scheduled task to start and stop the playback of an episode list at specified points in time. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a scheduled task to start and stop the playback of a playlist at specified points in time.</p>
     * 
     * @param request InitializeAutoShowListTaskRequest
     * @return InitializeAutoShowListTaskResponse
     */
    public InitializeAutoShowListTaskResponse initializeAutoShowListTask(InitializeAutoShowListTaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.initializeAutoShowListTaskWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 200 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Joins a message group.</p>
     * 
     * @param request JoinMessageGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return JoinMessageGroupResponse
     */
    public JoinMessageGroupResponse joinMessageGroupWithOptions(JoinMessageGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.broadCastStatistics)) {
            body.put("BroadCastStatistics", request.broadCastStatistics);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.broadCastType)) {
            body.put("BroadCastType", request.broadCastType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userId)) {
            body.put("UserId", request.userId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "JoinMessageGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new JoinMessageGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 200 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Joins a message group.</p>
     * 
     * @param request JoinMessageGroupRequest
     * @return JoinMessageGroupResponse
     */
    public JoinMessageGroupResponse joinMessageGroup(JoinMessageGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.joinMessageGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Removes a user from an interactive messaging group.</p>
     * 
     * @param request KickLiveMessageGroupUserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return KickLiveMessageGroupUserResponse
     */
    public KickLiveMessageGroupUserResponse kickLiveMessageGroupUserWithOptions(KickLiveMessageGroupUserRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.kickoffUser)) {
            query.put("KickoffUser", request.kickoffUser);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "KickLiveMessageGroupUser"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new KickLiveMessageGroupUserResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Removes a user from an interactive messaging group.</p>
     * 
     * @param request KickLiveMessageGroupUserRequest
     * @return KickLiveMessageGroupUserResponse
     */
    public KickLiveMessageGroupUserResponse kickLiveMessageGroupUser(KickLiveMessageGroupUserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.kickLiveMessageGroupUserWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Leaves a message group.</p>
     * 
     * @param request LeaveMessageGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return LeaveMessageGroupResponse
     */
    public LeaveMessageGroupResponse leaveMessageGroupWithOptions(LeaveMessageGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.broadCastStatistics)) {
            body.put("BroadCastStatistics", request.broadCastStatistics);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.broadCastType)) {
            body.put("BroadCastType", request.broadCastType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userId)) {
            body.put("UserId", request.userId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "LeaveMessageGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new LeaveMessageGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2></h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Leaves a message group.</p>
     * 
     * @param request LeaveMessageGroupRequest
     * @return LeaveMessageGroupResponse
     */
    public LeaveMessageGroupResponse leaveMessageGroup(LeaveMessageGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.leaveMessageGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query edge transcoding tasks.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature.</li>
     * <li>You can query only tasks created or modified in the last 180 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries edge transcoding tasks.</p>
     * 
     * @param request ListEdgeTranscodeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListEdgeTranscodeJobResponse
     */
    public ListEdgeTranscodeJobResponse listEdgeTranscodeJobWithOptions(ListEdgeTranscodeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.clusterId)) {
            query.put("ClusterId", request.clusterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.keyword)) {
            query.put("Keyword", request.keyword);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNo)) {
            query.put("PageNo", request.pageNo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sortBy)) {
            query.put("SortBy", request.sortBy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            query.put("Status", request.status);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListEdgeTranscodeJob"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListEdgeTranscodeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query edge transcoding tasks.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature.</li>
     * <li>You can query only tasks created or modified in the last 180 days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries edge transcoding tasks.</p>
     * 
     * @param request ListEdgeTranscodeJobRequest
     * @return ListEdgeTranscodeJobResponse
     */
    public ListEdgeTranscodeJobResponse listEdgeTranscodeJob(ListEdgeTranscodeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listEdgeTranscodeJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the list of edge transcoding templates.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the list of edge transcoding templates.</p>
     * 
     * @param request ListEdgeTranscodeTemplateRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListEdgeTranscodeTemplateResponse
     */
    public ListEdgeTranscodeTemplateResponse listEdgeTranscodeTemplateWithOptions(ListEdgeTranscodeTemplateRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.clusterId)) {
            query.put("ClusterId", request.clusterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.keyword)) {
            query.put("Keyword", request.keyword);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNo)) {
            query.put("PageNo", request.pageNo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sortBy)) {
            query.put("SortBy", request.sortBy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.videoCodec)) {
            query.put("VideoCodec", request.videoCodec);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListEdgeTranscodeTemplate"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListEdgeTranscodeTemplateResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the list of edge transcoding templates.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the list of edge transcoding templates.</p>
     * 
     * @param request ListEdgeTranscodeTemplateRequest
     * @return ListEdgeTranscodeTemplateResponse
     */
    public ListEdgeTranscodeTemplateResponse listEdgeTranscodeTemplate(ListEdgeTranscodeTemplateRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listEdgeTranscodeTemplateWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the events generated in channels to which you subscribe.</p>
     * 
     * @param request ListEventSubRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListEventSubResponse
     */
    public ListEventSubResponse listEventSubWithOptions(ListEventSubRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListEventSub"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListEventSubResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the events generated in channels to which you subscribe.</p>
     * 
     * @param request ListEventSubRequest
     * @return ListEventSubResponse
     */
    public ListEventSubResponse listEventSub(ListEventSubRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listEventSubWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The maximum time range to query is seven days.</p>
     * <ul>
     * <li>The minimum time granularity to query is 1 minute.</li>
     * <li>You can query data in the last seven days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries callback records.</p>
     * 
     * @param request ListEventSubEventRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListEventSubEventResponse
     */
    public ListEventSubEventResponse listEventSubEventWithOptions(ListEventSubEventRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListEventSubEvent"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListEventSubEventResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The maximum time range to query is seven days.</p>
     * <ul>
     * <li>The minimum time granularity to query is 1 minute.</li>
     * <li>You can query data in the last seven days.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries callback records.</p>
     * 
     * @param request ListEventSubEventRequest
     * @return ListEventSubEventResponse
     */
    public ListEventSubEventResponse listEventSubEvent(ListEventSubEventRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listEventSubEventWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries stream delay configurations.</p>
     * 
     * @param request ListLiveDelayConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListLiveDelayConfigResponse
     */
    public ListLiveDelayConfigResponse listLiveDelayConfigWithOptions(ListLiveDelayConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListLiveDelayConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListLiveDelayConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries stream delay configurations.</p>
     * 
     * @param request ListLiveDelayConfigRequest
     * @return ListLiveDelayConfigResponse
     */
    public ListLiveDelayConfigResponse listLiveDelayConfig(ListLiveDelayConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listLiveDelayConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries interactive messaging applications.</p>
     * 
     * @param request ListLiveMessageAppsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListLiveMessageAppsResponse
     */
    public ListLiveMessageAppsResponse listLiveMessageAppsWithOptions(ListLiveMessageAppsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextPageToken)) {
            query.put("NextPageToken", request.nextPageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sortType)) {
            query.put("SortType", request.sortType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListLiveMessageApps"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListLiveMessageAppsResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries interactive messaging applications.</p>
     * 
     * @param request ListLiveMessageAppsRequest
     * @return ListLiveMessageAppsResponse
     */
    public ListLiveMessageAppsResponse listLiveMessageApps(ListLiveMessageAppsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listLiveMessageAppsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries interactive messaging groups by page.</p>
     * 
     * @param request ListLiveMessageGroupByPageRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListLiveMessageGroupByPageResponse
     */
    public ListLiveMessageGroupByPageResponse listLiveMessageGroupByPageWithOptions(ListLiveMessageGroupByPageRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListLiveMessageGroupByPage"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListLiveMessageGroupByPageResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries interactive messaging groups by page.</p>
     * 
     * @param request ListLiveMessageGroupByPageRequest
     * @return ListLiveMessageGroupByPageResponse
     */
    public ListLiveMessageGroupByPageResponse listLiveMessageGroupByPage(ListLiveMessageGroupByPageRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listLiveMessageGroupByPageWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the messages sent in a group.</p>
     * 
     * @param request ListLiveMessageGroupMessagesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListLiveMessageGroupMessagesResponse
     */
    public ListLiveMessageGroupMessagesResponse listLiveMessageGroupMessagesWithOptions(ListLiveMessageGroupMessagesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.beginTime)) {
            query.put("BeginTime", request.beginTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.msgType)) {
            query.put("MsgType", request.msgType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextPageToken)) {
            query.put("NextPageToken", request.nextPageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sortType)) {
            query.put("SortType", request.sortType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListLiveMessageGroupMessages"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListLiveMessageGroupMessagesResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the messages sent in a group.</p>
     * 
     * @param request ListLiveMessageGroupMessagesRequest
     * @return ListLiveMessageGroupMessagesResponse
     */
    public ListLiveMessageGroupMessagesResponse listLiveMessageGroupMessages(ListLiveMessageGroupMessagesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listLiveMessageGroupMessagesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <ul>
     * <li>For a super group, which has more than 2,000 users, the user list cannot be queried. In addition, the notifications about users entering or leaving the group are sent at an interval of at least of 5 seconds. These notifications display the accurate number of users in the group for the time being, but do not display the list of all users entering or leaving the group. Once a group is upgraded to a super group, the user list of the group is immediately cleared. The super group cannot be restored to a normal group until all users in the group leave the group (that is, the group is closed). After you reopen the group, it is restored to a normal group.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the users in an interactive messaging group.</p>
     * 
     * @param request ListLiveMessageGroupUsersRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListLiveMessageGroupUsersResponse
     */
    public ListLiveMessageGroupUsersResponse listLiveMessageGroupUsersWithOptions(ListLiveMessageGroupUsersRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextPageToken)) {
            query.put("NextPageToken", request.nextPageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sortType)) {
            query.put("SortType", request.sortType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListLiveMessageGroupUsers"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListLiveMessageGroupUsersResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <ul>
     * <li>For a super group, which has more than 2,000 users, the user list cannot be queried. In addition, the notifications about users entering or leaving the group are sent at an interval of at least of 5 seconds. These notifications display the accurate number of users in the group for the time being, but do not display the list of all users entering or leaving the group. Once a group is upgraded to a super group, the user list of the group is immediately cleared. The super group cannot be restored to a normal group until all users in the group leave the group (that is, the group is closed). After you reopen the group, it is restored to a normal group.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the users in an interactive messaging group.</p>
     * 
     * @param request ListLiveMessageGroupUsersRequest
     * @return ListLiveMessageGroupUsersResponse
     */
    public ListLiveMessageGroupUsersResponse listLiveMessageGroupUsers(ListLiveMessageGroupUsersRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listLiveMessageGroupUsersWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the interactive messaging groups in an interactive messaging application.</p>
     * 
     * @param request ListLiveMessageGroupsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListLiveMessageGroupsResponse
     */
    public ListLiveMessageGroupsResponse listLiveMessageGroupsWithOptions(ListLiveMessageGroupsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupStatus)) {
            query.put("GroupStatus", request.groupStatus);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextPageToken)) {
            query.put("NextPageToken", request.nextPageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sortType)) {
            query.put("SortType", request.sortType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListLiveMessageGroups"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListLiveMessageGroupsResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the interactive messaging groups in an interactive messaging application.</p>
     * 
     * @param request ListLiveMessageGroupsRequest
     * @return ListLiveMessageGroupsResponse
     */
    public ListLiveMessageGroupsResponse listLiveMessageGroups(ListLiveMessageGroupsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listLiveMessageGroupsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query all configurations of real-time log delivery under an account. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries all configurations of real-time log delivery under an Alibaba Cloud account.</p>
     * 
     * @param request ListLiveRealtimeLogDeliveryRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListLiveRealtimeLogDeliveryResponse
     */
    public ListLiveRealtimeLogDeliveryResponse listLiveRealtimeLogDeliveryWithOptions(ListLiveRealtimeLogDeliveryRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListLiveRealtimeLogDelivery"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListLiveRealtimeLogDeliveryResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query all configurations of real-time log delivery under an account. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries all configurations of real-time log delivery under an Alibaba Cloud account.</p>
     * 
     * @param request ListLiveRealtimeLogDeliveryRequest
     * @return ListLiveRealtimeLogDeliveryResponse
     */
    public ListLiveRealtimeLogDeliveryResponse listLiveRealtimeLogDelivery(ListLiveRealtimeLogDeliveryRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listLiveRealtimeLogDeliveryWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query all domain names that are associated with a specific configuration of real-time log delivery. The returned results indicate whether real-time log delivery is enabled or disabled for the domain names.</p>
     * <ul>
     * <li>You can call the <a href="https://help.aliyun.com/document_detail/2848121.html">DescribeLiveDomainRealtimeLogDelivery</a> to query the Project, Logstore, and Region parameters.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries all domain names that are associated with a specific configuration of real-time log delivery.</p>
     * 
     * @param request ListLiveRealtimeLogDeliveryDomainsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListLiveRealtimeLogDeliveryDomainsResponse
     */
    public ListLiveRealtimeLogDeliveryDomainsResponse listLiveRealtimeLogDeliveryDomainsWithOptions(ListLiveRealtimeLogDeliveryDomainsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListLiveRealtimeLogDeliveryDomains"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListLiveRealtimeLogDeliveryDomainsResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query all domain names that are associated with a specific configuration of real-time log delivery. The returned results indicate whether real-time log delivery is enabled or disabled for the domain names.</p>
     * <ul>
     * <li>You can call the <a href="https://help.aliyun.com/document_detail/2848121.html">DescribeLiveDomainRealtimeLogDelivery</a> to query the Project, Logstore, and Region parameters.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries all domain names that are associated with a specific configuration of real-time log delivery.</p>
     * 
     * @param request ListLiveRealtimeLogDeliveryDomainsRequest
     * @return ListLiveRealtimeLogDeliveryDomainsResponse
     */
    public ListLiveRealtimeLogDeliveryDomainsResponse listLiveRealtimeLogDeliveryDomains(ListLiveRealtimeLogDeliveryDomainsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listLiveRealtimeLogDeliveryDomainsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query all configurations of real-time log delivery. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries all configurations of real-time log delivery.</p>
     * 
     * @param request ListLiveRealtimeLogDeliveryInfosRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListLiveRealtimeLogDeliveryInfosResponse
     */
    public ListLiveRealtimeLogDeliveryInfosResponse listLiveRealtimeLogDeliveryInfosWithOptions(ListLiveRealtimeLogDeliveryInfosRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListLiveRealtimeLogDeliveryInfos"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListLiveRealtimeLogDeliveryInfosResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query all configurations of real-time log delivery. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries all configurations of real-time log delivery.</p>
     * 
     * @param request ListLiveRealtimeLogDeliveryInfosRequest
     * @return ListLiveRealtimeLogDeliveryInfosResponse
     */
    public ListLiveRealtimeLogDeliveryInfosResponse listLiveRealtimeLogDeliveryInfos(ListLiveRealtimeLogDeliveryInfosRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listLiveRealtimeLogDeliveryInfosWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries messages.</p>
     * 
     * @param request ListMessageRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListMessageResponse
     */
    public ListMessageResponse listMessageWithOptions(ListMessageRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            body.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sortType)) {
            body.put("SortType", request.sortType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            body.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListMessage"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListMessageResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries messages.</p>
     * 
     * @param request ListMessageRequest
     * @return ListMessageResponse
     */
    public ListMessageResponse listMessage(ListMessageRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listMessageWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries interactive messaging applications.</p>
     * 
     * @param request ListMessageAppRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListMessageAppResponse
     */
    public ListMessageAppResponse listMessageAppWithOptions(ListMessageAppRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            body.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sortType)) {
            body.put("SortType", request.sortType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListMessageApp"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListMessageAppResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries interactive messaging applications.</p>
     * 
     * @param request ListMessageAppRequest
     * @return ListMessageAppResponse
     */
    public ListMessageAppResponse listMessageApp(ListMessageAppRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listMessageAppWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the message groups of a specified user.</p>
     * 
     * @param request ListMessageGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListMessageGroupResponse
     */
    public ListMessageGroupResponse listMessageGroupWithOptions(ListMessageGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            body.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sortType)) {
            body.put("SortType", request.sortType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userId)) {
            body.put("UserId", request.userId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListMessageGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListMessageGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the message groups of a specified user.</p>
     * 
     * @param request ListMessageGroupRequest
     * @return ListMessageGroupResponse
     */
    public ListMessageGroupResponse listMessageGroup(ListMessageGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listMessageGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the members of a message group.</p>
     * 
     * @param request ListMessageGroupUserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListMessageGroupUserResponse
     */
    public ListMessageGroupUserResponse listMessageGroupUserWithOptions(ListMessageGroupUserRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            body.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sortType)) {
            body.put("SortType", request.sortType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListMessageGroupUser"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListMessageGroupUserResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the members of a message group.</p>
     * 
     * @param request ListMessageGroupUserRequest
     * @return ListMessageGroupUserResponse
     */
    public ListMessageGroupUserResponse listMessageGroupUser(ListMessageGroupUserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listMessageGroupUserWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries user information by user ID.</p>
     * 
     * @param tmpReq ListMessageGroupUserByIdRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListMessageGroupUserByIdResponse
     */
    public ListMessageGroupUserByIdResponse listMessageGroupUserByIdWithOptions(ListMessageGroupUserByIdRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        ListMessageGroupUserByIdShrinkRequest request = new ListMessageGroupUserByIdShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.userIdList)) {
            request.userIdListShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.userIdList, "UserIdList", "simple");
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userIdListShrink)) {
            body.put("UserIdList", request.userIdListShrink);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListMessageGroupUserById"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListMessageGroupUserByIdResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries user information by user ID.</p>
     * 
     * @param request ListMessageGroupUserByIdRequest
     * @return ListMessageGroupUserByIdResponse
     */
    public ListMessageGroupUserByIdResponse listMessageGroupUserById(ListMessageGroupUserByIdRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listMessageGroupUserByIdWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries muted members in a messaging group.</p>
     * 
     * @param request ListMuteGroupUserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListMuteGroupUserResponse
     */
    public ListMuteGroupUserResponse listMuteGroupUserWithOptions(ListMuteGroupUserRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.operatorUserId)) {
            body.put("OperatorUserId", request.operatorUserId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            body.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListMuteGroupUser"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListMuteGroupUserResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries muted members in a messaging group.</p>
     * 
     * @param request ListMuteGroupUserRequest
     * @return ListMuteGroupUserResponse
     */
    public ListMuteGroupUserResponse listMuteGroupUser(ListMuteGroupUserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listMuteGroupUserWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848078.html">AddPlaylistItems</a> operation to add episode lists and then call this operation to query the episode lists.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about one or more episode lists.</p>
     * 
     * @param request ListPlaylistRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListPlaylistResponse
     */
    public ListPlaylistResponse listPlaylistWithOptions(ListPlaylistRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.page)) {
            query.put("Page", request.page);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programId)) {
            query.put("ProgramId", request.programId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListPlaylist"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListPlaylistResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848078.html">AddPlaylistItems</a> operation to add episode lists and then call this operation to query the episode lists.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about one or more episode lists.</p>
     * 
     * @param request ListPlaylistRequest
     * @return ListPlaylistResponse
     */
    public ListPlaylistResponse listPlaylist(ListPlaylistRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listPlaylistWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848078.html">AddPlaylistItems</a> operation to add episodes to an episode list and then call this operation to query the episodes in the episode list</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about episodes in an episode list.</p>
     * 
     * @param request ListPlaylistItemsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListPlaylistItemsResponse
     */
    public ListPlaylistItemsResponse listPlaylistItemsWithOptions(ListPlaylistItemsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programId)) {
            query.put("ProgramId", request.programId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programItemIds)) {
            query.put("ProgramItemIds", request.programItemIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListPlaylistItems"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListPlaylistItemsResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848078.html">AddPlaylistItems</a> operation to add episodes to an episode list and then call this operation to query the episodes in the episode list</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about episodes in an episode list.</p>
     * 
     * @param request ListPlaylistItemsRequest
     * @return ListPlaylistItemsResponse
     */
    public ListPlaylistItemsResponse listPlaylistItems(ListPlaylistItemsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listPlaylistItemsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the callback records of a subscription to mixed-stream relay events in the last seven days.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the callback records of a subscription to mixed-stream relay events.</p>
     * 
     * @param request ListRtcMPUEventSubRecordRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListRtcMPUEventSubRecordResponse
     */
    public ListRtcMPUEventSubRecordResponse listRtcMPUEventSubRecordWithOptions(ListRtcMPUEventSubRecordRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNo)) {
            query.put("PageNo", request.pageNo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subId)) {
            query.put("SubId", request.subId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListRtcMPUEventSubRecord"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListRtcMPUEventSubRecordResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to query the callback records of a subscription to mixed-stream relay events in the last seven days.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the callback records of a subscription to mixed-stream relay events.</p>
     * 
     * @param request ListRtcMPUEventSubRecordRequest
     * @return ListRtcMPUEventSubRecordResponse
     */
    public ListRtcMPUEventSubRecordResponse listRtcMPUEventSubRecord(ListRtcMPUEventSubRecordRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listRtcMPUEventSubRecordWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call the ListRtcMPUTaskDetail operation to query the parameters of mixed-stream relay tasks that were created by calling the StartLiveMPUTask operation.</p>
     * <ul>
     * <li>By default, the query results are sorted in reverse chronological order based on the task update time.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the parameters of mixed-stream relay tasks.</p>
     * 
     * @param request ListRtcMPUTaskDetailRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListRtcMPUTaskDetailResponse
     */
    public ListRtcMPUTaskDetailResponse listRtcMPUTaskDetailWithOptions(ListRtcMPUTaskDetailRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNo)) {
            query.put("PageNo", request.pageNo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListRtcMPUTaskDetail"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListRtcMPUTaskDetailResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call the ListRtcMPUTaskDetail operation to query the parameters of mixed-stream relay tasks that were created by calling the StartLiveMPUTask operation.</p>
     * <ul>
     * <li>By default, the query results are sorted in reverse chronological order based on the task update time.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the parameters of mixed-stream relay tasks.</p>
     * 
     * @param request ListRtcMPUTaskDetailRequest
     * @return ListRtcMPUTaskDetailResponse
     */
    public ListRtcMPUTaskDetailResponse listRtcMPUTaskDetail(ListRtcMPUTaskDetailRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listRtcMPUTaskDetailWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>直播回源监控数据</p>
     * 
     * @param tmpReq LiveUpstreamQosDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return LiveUpstreamQosDataResponse
     */
    public LiveUpstreamQosDataResponse liveUpstreamQosDataWithOptions(LiveUpstreamQosDataRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        LiveUpstreamQosDataShrinkRequest request = new LiveUpstreamQosDataShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.cdnDomains)) {
            request.cdnDomainsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.cdnDomains, "CdnDomains", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.cdnIsps)) {
            request.cdnIspsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.cdnIsps, "CdnIsps", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.cdnProvinces)) {
            request.cdnProvincesShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.cdnProvinces, "CdnProvinces", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.kwaiSidcs)) {
            request.kwaiSidcsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.kwaiSidcs, "KwaiSidcs", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.kwaiTsc)) {
            request.kwaiTscShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.kwaiTsc, "KwaiTsc", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.upstreamDomains)) {
            request.upstreamDomainsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.upstreamDomains, "UpstreamDomains", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.cdnDomainsShrink)) {
            query.put("CdnDomains", request.cdnDomainsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.cdnIspsShrink)) {
            query.put("CdnIsps", request.cdnIspsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.cdnProvincesShrink)) {
            query.put("CdnProvinces", request.cdnProvincesShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.kwaiSidcsShrink)) {
            query.put("KwaiSidcs", request.kwaiSidcsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.kwaiTscShrink)) {
            query.put("KwaiTsc", request.kwaiTscShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.region)) {
            query.put("Region", request.region);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.upstreamDomainsShrink)) {
            query.put("UpstreamDomains", request.upstreamDomainsShrink);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "LiveUpstreamQosData"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new LiveUpstreamQosDataResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>直播回源监控数据</p>
     * 
     * @param request LiveUpstreamQosDataRequest
     * @return LiveUpstreamQosDataResponse
     */
    public LiveUpstreamQosDataResponse liveUpstreamQosData(LiveUpstreamQosDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.liveUpstreamQosDataWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>咪咕定制直播拉转推启动接口</p>
     * 
     * @param request MiguLivePullToPushStartRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return MiguLivePullToPushStartResponse
     */
    public MiguLivePullToPushStartResponse miguLivePullToPushStartWithOptions(MiguLivePullToPushStartRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.miguData)) {
            query.put("MiguData", request.miguData);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "MiguLivePullToPushStart"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new MiguLivePullToPushStartResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>咪咕定制直播拉转推启动接口</p>
     * 
     * @param request MiguLivePullToPushStartRequest
     * @return MiguLivePullToPushStartResponse
     */
    public MiguLivePullToPushStartResponse miguLivePullToPushStart(MiguLivePullToPushStartRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.miguLivePullToPushStartWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>咪咕定制直播拉转推启动接口</p>
     * 
     * @param request MiguLivePullToPushStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return MiguLivePullToPushStatusResponse
     */
    public MiguLivePullToPushStatusResponse miguLivePullToPushStatusWithOptions(MiguLivePullToPushStatusRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.miguData)) {
            query.put("MiguData", request.miguData);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "MiguLivePullToPushStatus"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new MiguLivePullToPushStatusResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>咪咕定制直播拉转推启动接口</p>
     * 
     * @param request MiguLivePullToPushStatusRequest
     * @return MiguLivePullToPushStatusResponse
     */
    public MiguLivePullToPushStatusResponse miguLivePullToPushStatus(MiguLivePullToPushStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.miguLivePullToPushStatusWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify a text, image, or subtitle component.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies a component of a production studio.</p>
     * 
     * @param request ModifyCasterComponentRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyCasterComponentResponse
     */
    public ModifyCasterComponentResponse modifyCasterComponentWithOptions(ModifyCasterComponentRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.captionLayerContent)) {
            query.put("CaptionLayerContent", request.captionLayerContent);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.componentId)) {
            query.put("ComponentId", request.componentId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.componentLayer)) {
            query.put("ComponentLayer", request.componentLayer);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.componentName)) {
            query.put("ComponentName", request.componentName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.componentType)) {
            query.put("ComponentType", request.componentType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.effect)) {
            query.put("Effect", request.effect);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.imageLayerContent)) {
            query.put("ImageLayerContent", request.imageLayerContent);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.textLayerContent)) {
            query.put("TextLayerContent", request.textLayerContent);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyCasterComponent"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyCasterComponentResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify a text, image, or subtitle component.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies a component of a production studio.</p>
     * 
     * @param request ModifyCasterComponentRequest
     * @return ModifyCasterComponentResponse
     */
    public ModifyCasterComponentResponse modifyCasterComponent(ModifyCasterComponentRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyCasterComponentWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify the configurations of an episode in a production studio. You cannot change the episode type.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the configurations of an episode in a production studio. You cannot change the episode type.</p>
     * 
     * @param request ModifyCasterEpisodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyCasterEpisodeResponse
     */
    public ModifyCasterEpisodeResponse modifyCasterEpisodeWithOptions(ModifyCasterEpisodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.componentId)) {
            query.put("ComponentId", request.componentId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.episodeId)) {
            query.put("EpisodeId", request.episodeId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.episodeName)) {
            query.put("EpisodeName", request.episodeName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceId)) {
            query.put("ResourceId", request.resourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.switchType)) {
            query.put("SwitchType", request.switchType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyCasterEpisode"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyCasterEpisodeResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify the configurations of an episode in a production studio. You cannot change the episode type.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the configurations of an episode in a production studio. You cannot change the episode type.</p>
     * 
     * @param request ModifyCasterEpisodeRequest
     * @return ModifyCasterEpisodeResponse
     */
    public ModifyCasterEpisodeResponse modifyCasterEpisode(ModifyCasterEpisodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyCasterEpisodeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to modify a layout of the production studio. This operation supports the default and adaptive scaling modes.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the layout configurations pf a production studio. You need to pass only parameters that you want to modify.</p>
     * 
     * @param request ModifyCasterLayoutRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyCasterLayoutResponse
     */
    public ModifyCasterLayoutResponse modifyCasterLayoutWithOptions(ModifyCasterLayoutRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.audioLayer)) {
            query.put("AudioLayer", request.audioLayer);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.blendList)) {
            query.put("BlendList", request.blendList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layoutId)) {
            query.put("LayoutId", request.layoutId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mixList)) {
            query.put("MixList", request.mixList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.videoLayer)) {
            query.put("VideoLayer", request.videoLayer);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyCasterLayout"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyCasterLayoutResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to modify a layout of the production studio. This operation supports the default and adaptive scaling modes.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the layout configurations pf a production studio. You need to pass only parameters that you want to modify.</p>
     * 
     * @param request ModifyCasterLayoutRequest
     * @return ModifyCasterLayoutResponse
     */
    public ModifyCasterLayoutResponse modifyCasterLayout(ModifyCasterLayoutRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyCasterLayoutWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848074.html">AddCasterProgram</a> operation to add the episode list for carousel playback in a production studio and then call this operation to modify the episode list. The supported types of episodes include video resource and component.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the episode list for carousel playback in a production studio.</p>
     * 
     * @param request ModifyCasterProgramRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyCasterProgramResponse
     */
    public ModifyCasterProgramResponse modifyCasterProgramWithOptions(ModifyCasterProgramRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.episode)) {
            query.put("Episode", request.episode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyCasterProgram"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyCasterProgramResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848074.html">AddCasterProgram</a> operation to add the episode list for carousel playback in a production studio and then call this operation to modify the episode list. The supported types of episodes include video resource and component.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 4 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the episode list for carousel playback in a production studio.</p>
     * 
     * @param request ModifyCasterProgramRequest
     * @return ModifyCasterProgramResponse
     */
    public ModifyCasterProgramResponse modifyCasterProgram(ModifyCasterProgramRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyCasterProgramWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>You must call the <a href="https://help.aliyun.com/document_detail/69338.html">CreateCaster</a> operation to create a production studio before you call this operation to modify input sources of the production studio.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Changes the video source for a production studio.</p>
     * 
     * @param request ModifyCasterVideoResourceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyCasterVideoResourceResponse
     */
    public ModifyCasterVideoResourceResponse modifyCasterVideoResourceWithOptions(ModifyCasterVideoResourceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.beginOffset)) {
            query.put("BeginOffset", request.beginOffset);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endOffset)) {
            query.put("EndOffset", request.endOffset);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.imageId)) {
            query.put("ImageId", request.imageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.imageUrl)) {
            query.put("ImageUrl", request.imageUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.liveStreamUrl)) {
            query.put("LiveStreamUrl", request.liveStreamUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.materialId)) {
            query.put("MaterialId", request.materialId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ptsCallbackInterval)) {
            query.put("PtsCallbackInterval", request.ptsCallbackInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.repeatNum)) {
            query.put("RepeatNum", request.repeatNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceId)) {
            query.put("ResourceId", request.resourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceName)) {
            query.put("ResourceName", request.resourceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.vodUrl)) {
            query.put("VodUrl", request.vodUrl);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyCasterVideoResource"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyCasterVideoResourceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>You must call the <a href="https://help.aliyun.com/document_detail/69338.html">CreateCaster</a> operation to create a production studio before you call this operation to modify input sources of the production studio.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Changes the video source for a production studio.</p>
     * 
     * @param request ModifyCasterVideoResourceRequest
     * @return ModifyCasterVideoResourceResponse
     */
    public ModifyCasterVideoResourceResponse modifyCasterVideoResource(ModifyCasterVideoResourceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyCasterVideoResourceWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Modifies a virtual studio template.</p>
     * 
     * @param tmpReq ModifyLiveAIStudioRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyLiveAIStudioResponse
     */
    public ModifyLiveAIStudioResponse modifyLiveAIStudioWithOptions(ModifyLiveAIStudioRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        ModifyLiveAIStudioShrinkRequest request = new ModifyLiveAIStudioShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.mattingLayout)) {
            request.mattingLayoutShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.mattingLayout, "MattingLayout", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.mediaLayout)) {
            request.mediaLayoutShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.mediaLayout, "MediaLayout", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.backgroundResourceId)) {
            query.put("BackgroundResourceId", request.backgroundResourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.backgroundResourceUrl)) {
            query.put("BackgroundResourceUrl", request.backgroundResourceUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.backgroundType)) {
            query.put("BackgroundType", request.backgroundType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.height)) {
            query.put("Height", request.height);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mattingLayoutShrink)) {
            query.put("MattingLayout", request.mattingLayoutShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mattingType)) {
            query.put("MattingType", request.mattingType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mediaLayoutShrink)) {
            query.put("MediaLayout", request.mediaLayoutShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mediaResourceId)) {
            query.put("MediaResourceId", request.mediaResourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mediaResourceUrl)) {
            query.put("MediaResourceUrl", request.mediaResourceUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mediaType)) {
            query.put("MediaType", request.mediaType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.studioName)) {
            query.put("StudioName", request.studioName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.width)) {
            query.put("Width", request.width);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyLiveAIStudio"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyLiveAIStudioResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Modifies a virtual studio template.</p>
     * 
     * @param request ModifyLiveAIStudioRequest
     * @return ModifyLiveAIStudioResponse
     */
    public ModifyLiveAIStudioResponse modifyLiveAIStudio(ModifyLiveAIStudioRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyLiveAIStudioWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the acceleration region of a domain name.</p>
     * 
     * @param request ModifyLiveDomainSchdmByPropertyRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyLiveDomainSchdmByPropertyResponse
     */
    public ModifyLiveDomainSchdmByPropertyResponse modifyLiveDomainSchdmByPropertyWithOptions(ModifyLiveDomainSchdmByPropertyRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.property)) {
            query.put("Property", request.property);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyLiveDomainSchdmByProperty"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyLiveDomainSchdmByPropertyResponse());
    }

    /**
     * <b>description</b> :
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the acceleration region of a domain name.</p>
     * 
     * @param request ModifyLiveDomainSchdmByPropertyRequest
     * @return ModifyLiveDomainSchdmByPropertyResponse
     */
    public ModifyLiveDomainSchdmByPropertyResponse modifyLiveDomainSchdmByProperty(ModifyLiveDomainSchdmByPropertyRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyLiveDomainSchdmByPropertyWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the content moderation settings of an interactive messaging application.</p>
     * 
     * @param request ModifyLiveMessageAppAuditRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyLiveMessageAppAuditResponse
     */
    public ModifyLiveMessageAppAuditResponse modifyLiveMessageAppAuditWithOptions(ModifyLiveMessageAppAuditRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.auditType)) {
            query.put("AuditType", request.auditType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.auditUrl)) {
            query.put("AuditUrl", request.auditUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyLiveMessageAppAudit"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyLiveMessageAppAuditResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the content moderation settings of an interactive messaging application.</p>
     * 
     * @param request ModifyLiveMessageAppAuditRequest
     * @return ModifyLiveMessageAppAuditResponse
     */
    public ModifyLiveMessageAppAuditResponse modifyLiveMessageAppAudit(ModifyLiveMessageAppAuditRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyLiveMessageAppAuditWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the callback settings of an interactive messaging application.</p>
     * 
     * @param request ModifyLiveMessageAppCallbackRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyLiveMessageAppCallbackResponse
     */
    public ModifyLiveMessageAppCallbackResponse modifyLiveMessageAppCallbackWithOptions(ModifyLiveMessageAppCallbackRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.eventCallbackUrl)) {
            query.put("EventCallbackUrl", request.eventCallbackUrl);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyLiveMessageAppCallback"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyLiveMessageAppCallbackResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the callback settings of an interactive messaging application.</p>
     * 
     * @param request ModifyLiveMessageAppCallbackRequest
     * @return ModifyLiveMessageAppCallbackResponse
     */
    public ModifyLiveMessageAppCallbackResponse modifyLiveMessageAppCallback(ModifyLiveMessageAppCallbackRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyLiveMessageAppCallbackWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Disables or enables an interactive messaging application.</p>
     * 
     * @param request ModifyLiveMessageAppDisableRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyLiveMessageAppDisableResponse
     */
    public ModifyLiveMessageAppDisableResponse modifyLiveMessageAppDisableWithOptions(ModifyLiveMessageAppDisableRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.disable)) {
            query.put("Disable", request.disable);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyLiveMessageAppDisable"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyLiveMessageAppDisableResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Disables or enables an interactive messaging application.</p>
     * 
     * @param request ModifyLiveMessageAppDisableRequest
     * @return ModifyLiveMessageAppDisableResponse
     */
    public ModifyLiveMessageAppDisableResponse modifyLiveMessageAppDisable(ModifyLiveMessageAppDisableRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyLiveMessageAppDisableWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the information about an interactive messaging group.</p>
     * 
     * @param tmpReq ModifyLiveMessageGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyLiveMessageGroupResponse
     */
    public ModifyLiveMessageGroupResponse modifyLiveMessageGroupWithOptions(ModifyLiveMessageGroupRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        ModifyLiveMessageGroupShrinkRequest request = new ModifyLiveMessageGroupShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.adminList)) {
            request.adminListShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.adminList, "AdminList", "simple");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.adminListShrink)) {
            query.put("AdminList", request.adminListShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupInfo)) {
            query.put("GroupInfo", request.groupInfo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.modifyAdmin)) {
            query.put("ModifyAdmin", request.modifyAdmin);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.modifyInfo)) {
            query.put("ModifyInfo", request.modifyInfo);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyLiveMessageGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyLiveMessageGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the information about an interactive messaging group.</p>
     * 
     * @param request ModifyLiveMessageGroupRequest
     * @return ModifyLiveMessageGroupResponse
     */
    public ModifyLiveMessageGroupResponse modifyLiveMessageGroup(ModifyLiveMessageGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyLiveMessageGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the mute status of users.</p>
     * 
     * @param tmpReq ModifyLiveMessageGroupBandRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyLiveMessageGroupBandResponse
     */
    public ModifyLiveMessageGroupBandResponse modifyLiveMessageGroupBandWithOptions(ModifyLiveMessageGroupBandRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        ModifyLiveMessageGroupBandShrinkRequest request = new ModifyLiveMessageGroupBandShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.bannnedUsers)) {
            request.bannnedUsersShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.bannnedUsers, "BannnedUsers", "simple");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.exceptUsers)) {
            request.exceptUsersShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.exceptUsers, "ExceptUsers", "simple");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.bannedAll)) {
            query.put("BannedAll", request.bannedAll);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.bannnedUsersShrink)) {
            query.put("BannnedUsers", request.bannnedUsersShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.exceptUsersShrink)) {
            query.put("ExceptUsers", request.exceptUsersShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyLiveMessageGroupBand"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyLiveMessageGroupBandResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the mute status of users.</p>
     * 
     * @param request ModifyLiveMessageGroupBandRequest
     * @return ModifyLiveMessageGroupBandResponse
     */
    public ModifyLiveMessageGroupBandResponse modifyLiveMessageGroupBand(ModifyLiveMessageGroupBandRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyLiveMessageGroupBandWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Modifies the information about a user.</p>
     * 
     * @param request ModifyLiveMessageUserInfoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyLiveMessageUserInfoResponse
     */
    public ModifyLiveMessageUserInfoResponse modifyLiveMessageUserInfoWithOptions(ModifyLiveMessageUserInfoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userId)) {
            query.put("UserId", request.userId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userMetaInfo)) {
            query.put("UserMetaInfo", request.userMetaInfo);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyLiveMessageUserInfo"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyLiveMessageUserInfoResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Modifies the information about a user.</p>
     * 
     * @param request ModifyLiveMessageUserInfoRequest
     * @return ModifyLiveMessageUserInfoResponse
     */
    public ModifyLiveMessageUserInfoResponse modifyLiveMessageUserInfo(ModifyLiveMessageUserInfoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyLiveMessageUserInfoWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to modify the configuration of real-time log delivery for a domain name. Logs for a domain name can be delivered to only one Logstore.
     * This operation is applicable to only streaming domains. If you want to configure real-time log delivery for an ingest domain, <a href="https://workorder-intl.console.aliyun.com/?spm=5176.12818093.nav-right.dticket.6cb216d07otFWR#/ticket/createIndex">submit a ticket</a>.</p>
     * <ul>
     * <li>You can call the <a href="https://help.aliyun.com/document_detail/2848121.html">DescribeLiveDomainRealtimeLogDelivery</a> operation to query the Project, Logstore, and Region parameters.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the configuration of real-time log delivery for a domain name.</p>
     * 
     * @param request ModifyLiveRealtimeLogDeliveryRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyLiveRealtimeLogDeliveryResponse
     */
    public ModifyLiveRealtimeLogDeliveryResponse modifyLiveRealtimeLogDeliveryWithOptions(ModifyLiveRealtimeLogDeliveryRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyLiveRealtimeLogDelivery"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyLiveRealtimeLogDeliveryResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to modify the configuration of real-time log delivery for a domain name. Logs for a domain name can be delivered to only one Logstore.
     * This operation is applicable to only streaming domains. If you want to configure real-time log delivery for an ingest domain, <a href="https://workorder-intl.console.aliyun.com/?spm=5176.12818093.nav-right.dticket.6cb216d07otFWR#/ticket/createIndex">submit a ticket</a>.</p>
     * <ul>
     * <li>You can call the <a href="https://help.aliyun.com/document_detail/2848121.html">DescribeLiveDomainRealtimeLogDelivery</a> operation to query the Project, Logstore, and Region parameters.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the configuration of real-time log delivery for a domain name.</p>
     * 
     * @param request ModifyLiveRealtimeLogDeliveryRequest
     * @return ModifyLiveRealtimeLogDeliveryResponse
     */
    public ModifyLiveRealtimeLogDeliveryResponse modifyLiveRealtimeLogDelivery(ModifyLiveRealtimeLogDeliveryRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyLiveRealtimeLogDeliveryWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation allows you to change the position of an episode in an episode list, how many times an episode list is played, and the specific point in time at which the episode of the highest priority in an episode list is played.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the attributes of an episode list.</p>
     * 
     * @param request ModifyShowListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyShowListResponse
     */
    public ModifyShowListResponse modifyShowListWithOptions(ModifyShowListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.highPriorityShowId)) {
            query.put("HighPriorityShowId", request.highPriorityShowId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.highPriorityShowStartTime)) {
            query.put("HighPriorityShowStartTime", request.highPriorityShowStartTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.repeatTimes)) {
            query.put("RepeatTimes", request.repeatTimes);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.showId)) {
            query.put("ShowId", request.showId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.spot)) {
            query.put("Spot", request.spot);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyShowList"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyShowListResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation allows you to change the position of an episode in an episode list, how many times an episode list is played, and the specific point in time at which the episode of the highest priority in an episode list is played.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the attributes of an episode list.</p>
     * 
     * @param request ModifyShowListRequest
     * @return ModifyShowListResponse
     */
    public ModifyShowListResponse modifyShowList(ModifyShowListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyShowListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify a layout of a virtual studio. When you call this operation, specify only the parameters that you want to modify.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies a layout of a virtual studio.</p>
     * 
     * @param request ModifyStudioLayoutRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyStudioLayoutResponse
     */
    public ModifyStudioLayoutResponse modifyStudioLayoutWithOptions(ModifyStudioLayoutRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.bgImageConfig)) {
            query.put("BgImageConfig", request.bgImageConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.commonConfig)) {
            query.put("CommonConfig", request.commonConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layerOrderConfigList)) {
            query.put("LayerOrderConfigList", request.layerOrderConfigList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layoutId)) {
            query.put("LayoutId", request.layoutId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layoutName)) {
            query.put("LayoutName", request.layoutName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mediaInputConfigList)) {
            query.put("MediaInputConfigList", request.mediaInputConfigList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.screenInputConfigList)) {
            query.put("ScreenInputConfigList", request.screenInputConfigList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyStudioLayout"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyStudioLayoutResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify a layout of a virtual studio. When you call this operation, specify only the parameters that you want to modify.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies a layout of a virtual studio.</p>
     * 
     * @param request ModifyStudioLayoutRequest
     * @return ModifyStudioLayoutResponse
     */
    public ModifyStudioLayoutResponse modifyStudioLayout(ModifyStudioLayoutRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyStudioLayoutWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Mutes a message group. In this case, all members of the message group are muted.</p>
     * 
     * @param request MuteAllGroupUserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return MuteAllGroupUserResponse
     */
    public MuteAllGroupUserResponse muteAllGroupUserWithOptions(MuteAllGroupUserRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.broadCastType)) {
            body.put("BroadCastType", request.broadCastType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.operatorUserId)) {
            body.put("OperatorUserId", request.operatorUserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "MuteAllGroupUser"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new MuteAllGroupUserResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Mutes a message group. In this case, all members of the message group are muted.</p>
     * 
     * @param request MuteAllGroupUserRequest
     * @return MuteAllGroupUserResponse
     */
    public MuteAllGroupUserResponse muteAllGroupUser(MuteAllGroupUserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.muteAllGroupUserWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Mutes members in a message group.</p>
     * 
     * @param tmpReq MuteGroupUserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return MuteGroupUserResponse
     */
    public MuteGroupUserResponse muteGroupUserWithOptions(MuteGroupUserRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        MuteGroupUserShrinkRequest request = new MuteGroupUserShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.muteUserList)) {
            request.muteUserListShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.muteUserList, "MuteUserList", "simple");
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.broadCastType)) {
            body.put("BroadCastType", request.broadCastType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.muteTime)) {
            body.put("MuteTime", request.muteTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.muteUserListShrink)) {
            body.put("MuteUserList", request.muteUserListShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.operatorUserId)) {
            body.put("OperatorUserId", request.operatorUserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "MuteGroupUser"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new MuteGroupUserResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Mutes members in a message group.</p>
     * 
     * @param request MuteGroupUserRequest
     * @return MuteGroupUserResponse
     */
    public MuteGroupUserResponse muteGroupUser(MuteGroupUserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.muteGroupUserWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You cannot configure time shifting and delayed transcoding at the same time.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Enables time shifting for a domain name, or an application or a live stream under the domain name.</p>
     * 
     * @param request OpenLiveShiftRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return OpenLiveShiftResponse
     */
    public OpenLiveShiftResponse openLiveShiftWithOptions(OpenLiveShiftRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.duration)) {
            query.put("Duration", request.duration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ignoreTranscode)) {
            query.put("IgnoreTranscode", request.ignoreTranscode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.vision)) {
            query.put("Vision", request.vision);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "OpenLiveShift"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new OpenLiveShiftResponse());
    }

    /**
     * <b>description</b> :
     * <p>You cannot configure time shifting and delayed transcoding at the same time.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Enables time shifting for a domain name, or an application or a live stream under the domain name.</p>
     * 
     * @param request OpenLiveShiftRequest
     * @return OpenLiveShiftResponse
     */
    public OpenLiveShiftResponse openLiveShift(OpenLiveShiftRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.openLiveShiftWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>After you add episodes to an episode list and start live streaming, you can call this operation to switch among episodes. For information about how to add episodes to an episode list, see <a href="https://help.aliyun.com/document_detail/2848051.html">AddShowIntoShowList</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Switches to a specified episode.</p>
     * 
     * @param request PlayChoosenShowRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PlayChoosenShowResponse
     */
    public PlayChoosenShowResponse playChoosenShowWithOptions(PlayChoosenShowRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.showId)) {
            query.put("ShowId", request.showId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "PlayChoosenShow"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PlayChoosenShowResponse());
    }

    /**
     * <b>description</b> :
     * <p>After you add episodes to an episode list and start live streaming, you can call this operation to switch among episodes. For information about how to add episodes to an episode list, see <a href="https://help.aliyun.com/document_detail/2848051.html">AddShowIntoShowList</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Switches to a specified episode.</p>
     * 
     * @param request PlayChoosenShowRequest
     * @return PlayChoosenShowResponse
     */
    public PlayChoosenShowResponse playChoosenShow(PlayChoosenShowRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.playChoosenShowWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Function name is required for calling this operation. You can get the function name by calling the <a href="~~297374#doc-api-live-DescribeLiveDomainStagingConfig~~" title="Queries the configurations in the canary release environment.">DescribeLiveDomainStagingConfig</a> operation.</p>
     * <h2>QPS limit</h2>
     * <p>A single user can perform a maximum of 30 queries per minute. Throttling is triggered when the number of calls per second exceeds the QPS limit. The throttling may affect your business. Thus, we recommend that you observe the QPS limit on this operation. For more information about what a single user means and the QPS details, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live#topic-2136805">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Publishes the configurations of an accelerated domain name from the canary release environment to the production environment.</p>
     * 
     * @param request PublishLiveStagingConfigToProductionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PublishLiveStagingConfigToProductionResponse
     */
    public PublishLiveStagingConfigToProductionResponse publishLiveStagingConfigToProductionWithOptions(PublishLiveStagingConfigToProductionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.functionName)) {
            query.put("FunctionName", request.functionName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "PublishLiveStagingConfigToProduction"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PublishLiveStagingConfigToProductionResponse());
    }

    /**
     * <b>description</b> :
     * <p>Function name is required for calling this operation. You can get the function name by calling the <a href="~~297374#doc-api-live-DescribeLiveDomainStagingConfig~~" title="Queries the configurations in the canary release environment.">DescribeLiveDomainStagingConfig</a> operation.</p>
     * <h2>QPS limit</h2>
     * <p>A single user can perform a maximum of 30 queries per minute. Throttling is triggered when the number of calls per second exceeds the QPS limit. The throttling may affect your business. Thus, we recommend that you observe the QPS limit on this operation. For more information about what a single user means and the QPS details, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live#topic-2136805">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Publishes the configurations of an accelerated domain name from the canary release environment to the production environment.</p>
     * 
     * @param request PublishLiveStagingConfigToProductionRequest
     * @return PublishLiveStagingConfigToProductionResponse
     */
    public PublishLiveStagingConfigToProductionResponse publishLiveStagingConfigToProduction(PublishLiveStagingConfigToProductionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.publishLiveStagingConfigToProductionWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Queries the dual-stream disaster recovery records of online streams.</p>
     * 
     * @param request QueryLiveDomainMultiStreamListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryLiveDomainMultiStreamListResponse
     */
    public QueryLiveDomainMultiStreamListResponse queryLiveDomainMultiStreamListWithOptions(QueryLiveDomainMultiStreamListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryLiveDomainMultiStreamList"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryLiveDomainMultiStreamListResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Queries the dual-stream disaster recovery records of online streams.</p>
     * 
     * @param request QueryLiveDomainMultiStreamListRequest
     * @return QueryLiveDomainMultiStreamListResponse
     */
    public QueryLiveDomainMultiStreamListResponse queryLiveDomainMultiStreamList(QueryLiveDomainMultiStreamListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryLiveDomainMultiStreamListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries interactive messaging applications based on specified conditions.</p>
     * 
     * @param request QueryMessageAppRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryMessageAppResponse
     */
    public QueryMessageAppResponse queryMessageAppWithOptions(QueryMessageAppRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            body.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            body.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sortType)) {
            body.put("SortType", request.sortType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryMessageApp"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryMessageAppResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries interactive messaging applications based on specified conditions.</p>
     * 
     * @param request QueryMessageAppRequest
     * @return QueryMessageAppResponse
     */
    public QueryMessageAppResponse queryMessageApp(QueryMessageAppRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryMessageAppWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the status of a speech-to-text or translation task.</p>
     * 
     * @param request QueryRtcAsrTasksRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryRtcAsrTasksResponse
     */
    public QueryRtcAsrTasksResponse queryRtcAsrTasksWithOptions(QueryRtcAsrTasksRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryRtcAsrTasks"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryRtcAsrTasksResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the status of a speech-to-text or translation task.</p>
     * 
     * @param request QueryRtcAsrTasksRequest
     * @return QueryRtcAsrTasksResponse
     */
    public QueryRtcAsrTasksResponse queryRtcAsrTasks(QueryRtcAsrTasksRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryRtcAsrTasksWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have configured authentication for snapshot callbacks. For more information, see <a href="https://help.aliyun.com/document_detail/2847907.html">SetSnapshotCallbackAuth</a>. You can call this operation to query the configuration of authentication for snapshot callbacks for a main streaming domain. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configuration of authentication for snapshot callbacks.</p>
     * 
     * @param request QuerySnapshotCallbackAuthRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySnapshotCallbackAuthResponse
     */
    public QuerySnapshotCallbackAuthResponse querySnapshotCallbackAuthWithOptions(QuerySnapshotCallbackAuthRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySnapshotCallbackAuth"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySnapshotCallbackAuthResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have configured authentication for snapshot callbacks. For more information, see <a href="https://help.aliyun.com/document_detail/2847907.html">SetSnapshotCallbackAuth</a>. You can call this operation to query the configuration of authentication for snapshot callbacks for a main streaming domain. Make sure that the parameter settings meet the requirements.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Queries the configuration of authentication for snapshot callbacks.</p>
     * 
     * @param request QuerySnapshotCallbackAuthRequest
     * @return QuerySnapshotCallbackAuthResponse
     */
    public QuerySnapshotCallbackAuthResponse querySnapshotCallbackAuth(QuerySnapshotCallbackAuthRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySnapshotCallbackAuthWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you fully understand the billing method and pricing of live stream recording in ApsaraVideo Live. For more information, see <a href="https://help.aliyun.com/document_detail/195287.html">Billing of live stream recording</a>.</p>
     * <ul>
     * <li>If a live stream is being automatically or manually recorded, you can call this operation to stop recording the live stream.</li>
     * <li>If you call this operation to start recording a live stream while it is being recorded, a TaskAlreadyStarted error is returned, indicating that the task has been started.</li>
     * <li>If a live stream that you manually record is interrupted, the recording stops.</li>
     * <li>If automatic recording is not configured for the live stream, ApsaraVideo Live does not automatically record the live stream after it is resumed.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Controls recordings manually on demand. For example, you can call this operation to start or stop recording at a specific point in time.</p>
     * 
     * @param request RealTimeRecordCommandRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RealTimeRecordCommandResponse
     */
    public RealTimeRecordCommandResponse realTimeRecordCommandWithOptions(RealTimeRecordCommandRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.command)) {
            query.put("Command", request.command);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RealTimeRecordCommand"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RealTimeRecordCommandResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you fully understand the billing method and pricing of live stream recording in ApsaraVideo Live. For more information, see <a href="https://help.aliyun.com/document_detail/195287.html">Billing of live stream recording</a>.</p>
     * <ul>
     * <li>If a live stream is being automatically or manually recorded, you can call this operation to stop recording the live stream.</li>
     * <li>If you call this operation to start recording a live stream while it is being recorded, a TaskAlreadyStarted error is returned, indicating that the task has been started.</li>
     * <li>If a live stream that you manually record is interrupted, the recording stops.</li>
     * <li>If automatic recording is not configured for the live stream, ApsaraVideo Live does not automatically record the live stream after it is resumed.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Controls recordings manually on demand. For example, you can call this operation to start or stop recording at a specific point in time.</p>
     * 
     * @param request RealTimeRecordCommandRequest
     * @return RealTimeRecordCommandResponse
     */
    public RealTimeRecordCommandResponse realTimeRecordCommand(RealTimeRecordCommandRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.realTimeRecordCommandWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to restore a deleted interactive messaging group within 30 days after you call the <a href="https://help.aliyun.com/document_detail/2848163.html">DeleteLiveMessageGroup</a> to delete the group.</p>
     * <ul>
     * <li>After you restore a group, the messages that were stored in the group before it was deleted can still be queried.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Restores a deleted interactive messaging group.</p>
     * 
     * @param request RecoverLiveMessageDeletedGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RecoverLiveMessageDeletedGroupResponse
     */
    public RecoverLiveMessageDeletedGroupResponse recoverLiveMessageDeletedGroupWithOptions(RecoverLiveMessageDeletedGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RecoverLiveMessageDeletedGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RecoverLiveMessageDeletedGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to restore a deleted interactive messaging group within 30 days after you call the <a href="https://help.aliyun.com/document_detail/2848163.html">DeleteLiveMessageGroup</a> to delete the group.</p>
     * <ul>
     * <li>After you restore a group, the messages that were stored in the group before it was deleted can still be queried.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Restores a deleted interactive messaging group.</p>
     * 
     * @param request RecoverLiveMessageDeletedGroupRequest
     * @return RecoverLiveMessageDeletedGroupResponse
     */
    public RecoverLiveMessageDeletedGroupResponse recoverLiveMessageDeletedGroup(RecoverLiveMessageDeletedGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.recoverLiveMessageDeletedGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Unmutes one or more users.</p>
     * 
     * @param tmpReq RemoveLiveMessageGroupBandRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RemoveLiveMessageGroupBandResponse
     */
    public RemoveLiveMessageGroupBandResponse removeLiveMessageGroupBandWithOptions(RemoveLiveMessageGroupBandRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        RemoveLiveMessageGroupBandShrinkRequest request = new RemoveLiveMessageGroupBandShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.unbannedUsers)) {
            request.unbannedUsersShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.unbannedUsers, "UnbannedUsers", "simple");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.unbannedUsersShrink)) {
            query.put("UnbannedUsers", request.unbannedUsersShrink);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RemoveLiveMessageGroupBand"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RemoveLiveMessageGroupBandResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Unmutes one or more users.</p>
     * 
     * @param request RemoveLiveMessageGroupBandRequest
     * @return RemoveLiveMessageGroupBandResponse
     */
    public RemoveLiveMessageGroupBandResponse removeLiveMessageGroupBand(RemoveLiveMessageGroupBandRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.removeLiveMessageGroupBandWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>You cannot use this operation on empty episode lists. For information about how to add episodes to an episode list, see <a href="https://help.aliyun.com/document_detail/370861.html">AddShowIntoShowList</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Removes a specified episode from an episode list.</p>
     * 
     * @param request RemoveShowFromShowListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RemoveShowFromShowListResponse
     */
    public RemoveShowFromShowListResponse removeShowFromShowListWithOptions(RemoveShowFromShowListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.showId)) {
            query.put("ShowId", request.showId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.isBatchMode)) {
            query.put("isBatchMode", request.isBatchMode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.showIdList)) {
            query.put("showIdList", request.showIdList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RemoveShowFromShowList"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RemoveShowFromShowListResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>You cannot use this operation on empty episode lists. For information about how to add episodes to an episode list, see <a href="https://help.aliyun.com/document_detail/370861.html">AddShowIntoShowList</a>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Removes a specified episode from an episode list.</p>
     * 
     * @param request RemoveShowFromShowListRequest
     * @return RemoveShowFromShowListResponse
     */
    public RemoveShowFromShowListResponse removeShowFromShowList(RemoveShowFromShowListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.removeShowFromShowListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to remove one or more users from a channel.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Removes users from a channel.</p>
     * 
     * @param request RemoveTerminalsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RemoveTerminalsResponse
     */
    public RemoveTerminalsResponse removeTerminalsWithOptions(RemoveTerminalsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.terminalIds)) {
            query.put("TerminalIds", request.terminalIds);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RemoveTerminals"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RemoveTerminalsResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to remove one or more users from a channel.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Removes users from a channel.</p>
     * 
     * @param request RemoveTerminalsRequest
     * @return RemoveTerminalsResponse
     */
    public RemoveTerminalsResponse removeTerminals(RemoveTerminalsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.removeTerminalsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Only product studios in playlist mode and general mode are supported. Virtual studios are not supported.</p>
     * <ul>
     * <li>After you restart a production studio, the current settings such as the resolution and screen orientation are reloaded to restore the previous playback status.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Restarts a production studio.</p>
     * 
     * @param request RestartCasterRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RestartCasterResponse
     */
    public RestartCasterResponse restartCasterWithOptions(RestartCasterRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RestartCaster"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RestartCasterResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Only product studios in playlist mode and general mode are supported. Virtual studios are not supported.</p>
     * <ul>
     * <li>After you restart a production studio, the current settings such as the resolution and screen orientation are reloaded to restore the previous playback status.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Restarts a production studio.</p>
     * 
     * @param request RestartCasterRequest
     * @return RestartCasterResponse
     */
    public RestartCasterResponse restartCaster(RestartCasterRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.restartCasterWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to restart a pulled-stream relay task.</p>
     * <ul>
     * <li>You can restart a task that is running (even if the task is in an abnormal retry state) or a task that is stopped. For a task that is running, this operation stops and then restarts it. For a task that is stopped, this operation directly starts it.</li>
     * <li>You cannot restart a task if the start time specified for the task has not been reached.</li>
     * <li>If a task is restarted, the task runs based on the latest configuration of the task. This interrupts stream ingest.</li>
     * <li>If a task for a list of ApsaraVideo VOD resources is restarted, the list plays from the beginning based on the latest configuration. You can call an operation to update the video index and playback progress to achieve successive playback.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Restarts a pulled-stream relay task.</p>
     * 
     * @param request RestartLivePullToPushRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RestartLivePullToPushResponse
     */
    public RestartLivePullToPushResponse restartLivePullToPushWithOptions(RestartLivePullToPushRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RestartLivePullToPush"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RestartLivePullToPushResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to restart a pulled-stream relay task.</p>
     * <ul>
     * <li>You can restart a task that is running (even if the task is in an abnormal retry state) or a task that is stopped. For a task that is running, this operation stops and then restarts it. For a task that is stopped, this operation directly starts it.</li>
     * <li>You cannot restart a task if the start time specified for the task has not been reached.</li>
     * <li>If a task is restarted, the task runs based on the latest configuration of the task. This interrupts stream ingest.</li>
     * <li>If a task for a list of ApsaraVideo VOD resources is restarted, the list plays from the beginning based on the latest configuration. You can call an operation to update the video index and playback progress to achieve successive playback.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Restarts a pulled-stream relay task.</p>
     * 
     * @param request RestartLivePullToPushRequest
     * @return RestartLivePullToPushResponse
     */
    public RestartLivePullToPushResponse restartLivePullToPush(RestartLivePullToPushRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.restartLivePullToPushWithOptions(request, runtime);
    }

    /**
     * @param request RestartTranscodeTaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RestartTranscodeTaskResponse
     */
    public RestartTranscodeTaskResponse restartTranscodeTaskWithOptions(RestartTranscodeTaskRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pushDomain)) {
            query.put("PushDomain", request.pushDomain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transcodingTemplate)) {
            query.put("TranscodingTemplate", request.transcodingTemplate);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RestartTranscodeTask"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RestartTranscodeTaskResponse());
    }

    /**
     * @param request RestartTranscodeTaskRequest
     * @return RestartTranscodeTaskResponse
     */
    public RestartTranscodeTaskResponse restartTranscodeTask(RestartTranscodeTaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.restartTranscodeTaskWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to resume the ingest of a stream. This operation supports only the live streams ingested by streamers.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Resumes the ingest of a live stream.</p>
     * 
     * @param request ResumeLiveStreamRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ResumeLiveStreamResponse
     */
    public ResumeLiveStreamResponse resumeLiveStreamWithOptions(ResumeLiveStreamRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.liveStreamType)) {
            query.put("LiveStreamType", request.liveStreamType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ResumeLiveStream"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ResumeLiveStreamResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to resume the ingest of a stream. This operation supports only the live streams ingested by streamers.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Resumes the ingest of a live stream.</p>
     * 
     * @param request ResumeLiveStreamRequest
     * @return ResumeLiveStreamResponse
     */
    public ResumeLiveStreamResponse resumeLiveStream(ResumeLiveStreamRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.resumeLiveStreamWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Function name is required for calling this operation. You can get the function name by calling the <a href="~~297374#doc-api-live-DescribeLiveDomainStagingConfig~~" title="Queries the configurations in the canary release environment.">DescribeLiveDomainStagingConfig</a> operation.</p>
     * <h2>QPS limit</h2>
     * <p>A single user can perform a maximum of 30 queries per minute. Throttling is triggered when the number of calls per second exceeds the QPS limit. The throttling may affect your business. Thus, we recommend that you observe the QPS limit on this operation. For more information about what a single user means and the QPS details, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live#topic-2136805">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Rolls back the configurations of an accelerated domain name in the canary release environment.</p>
     * 
     * @param request RollbackLiveStagingConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RollbackLiveStagingConfigResponse
     */
    public RollbackLiveStagingConfigResponse rollbackLiveStagingConfigWithOptions(RollbackLiveStagingConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.functionName)) {
            query.put("FunctionName", request.functionName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RollbackLiveStagingConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RollbackLiveStagingConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>Function name is required for calling this operation. You can get the function name by calling the <a href="~~297374#doc-api-live-DescribeLiveDomainStagingConfig~~" title="Queries the configurations in the canary release environment.">DescribeLiveDomainStagingConfig</a> operation.</p>
     * <h2>QPS limit</h2>
     * <p>A single user can perform a maximum of 30 queries per minute. Throttling is triggered when the number of calls per second exceeds the QPS limit. The throttling may affect your business. Thus, we recommend that you observe the QPS limit on this operation. For more information about what a single user means and the QPS details, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live#topic-2136805">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Rolls back the configurations of an accelerated domain name in the canary release environment.</p>
     * 
     * @param request RollbackLiveStagingConfigRequest
     * @return RollbackLiveStagingConfigResponse
     */
    public RollbackLiveStagingConfigResponse rollbackLiveStagingConfig(RollbackLiveStagingConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.rollbackLiveStagingConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures likes in a message group.</p>
     * 
     * @param request SendLikeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SendLikeResponse
     */
    public SendLikeResponse sendLikeWithOptions(SendLikeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.broadCastType)) {
            body.put("BroadCastType", request.broadCastType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.count)) {
            body.put("Count", request.count);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.operatorUserId)) {
            body.put("OperatorUserId", request.operatorUserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SendLike"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SendLikeResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures likes in a message group.</p>
     * 
     * @param request SendLikeRequest
     * @return SendLikeResponse
     */
    public SendLikeResponse sendLike(SendLikeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.sendLikeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group. You can send messages to a group only if the group is active, which requires that one or more users have joined the group. Offline messages are not supported. If you fail to send a message, check whether users exist in the group. If you want to send a message when all users are offline, we recommend that you store the message locally and send it after users get online.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Sends a message to a group.</p>
     * 
     * @param request SendLiveMessageGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SendLiveMessageGroupResponse
     */
    public SendLiveMessageGroupResponse sendLiveMessageGroupWithOptions(SendLiveMessageGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.body)) {
            query.put("Body", request.body);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.msgTid)) {
            query.put("MsgTid", request.msgTid);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.msgType)) {
            query.put("MsgType", request.msgType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.noCache)) {
            query.put("NoCache", request.noCache);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.noStorage)) {
            query.put("NoStorage", request.noStorage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.senderId)) {
            query.put("SenderId", request.senderId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.senderMetaInfo)) {
            query.put("SenderMetaInfo", request.senderMetaInfo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.staticsIncrease)) {
            query.put("StaticsIncrease", request.staticsIncrease);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.weight)) {
            query.put("Weight", request.weight);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SendLiveMessageGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SendLiveMessageGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group. You can send messages to a group only if the group is active, which requires that one or more users have joined the group. Offline messages are not supported. If you fail to send a message, check whether users exist in the group. If you want to send a message when all users are offline, we recommend that you store the message locally and send it after users get online.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Sends a message to a group.</p>
     * 
     * @param request SendLiveMessageGroupRequest
     * @return SendLiveMessageGroupResponse
     */
    public SendLiveMessageGroupResponse sendLiveMessageGroup(SendLiveMessageGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.sendLiveMessageGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Sends a message to a specified user. The user is identified by ReceiverId.</p>
     * 
     * @param request SendLiveMessageUserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SendLiveMessageUserResponse
     */
    public SendLiveMessageUserResponse sendLiveMessageUserWithOptions(SendLiveMessageUserRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.body)) {
            query.put("Body", request.body);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.highReliability)) {
            query.put("HighReliability", request.highReliability);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.msgTid)) {
            query.put("MsgTid", request.msgTid);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.msgType)) {
            query.put("MsgType", request.msgType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.receiverId)) {
            query.put("ReceiverId", request.receiverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.senderId)) {
            query.put("SenderId", request.senderId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.senderInfo)) {
            query.put("SenderInfo", request.senderInfo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.storage)) {
            query.put("Storage", request.storage);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SendLiveMessageUser"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SendLiveMessageUserResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Sends a message to a specified user. The user is identified by ReceiverId.</p>
     * 
     * @param request SendLiveMessageUserRequest
     * @return SendLiveMessageUserResponse
     */
    public SendLiveMessageUserResponse sendLiveMessageUser(SendLiveMessageUserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.sendLiveMessageUserWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Sends a message to all members in a message group.</p>
     * 
     * @param request SendMessageToGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SendMessageToGroupResponse
     */
    public SendMessageToGroupResponse sendMessageToGroupWithOptions(SendMessageToGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.skipAudit)) {
            query.put("SkipAudit", request.skipAudit);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.data)) {
            body.put("Data", request.data);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.operatorUserId)) {
            body.put("OperatorUserId", request.operatorUserId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            body.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SendMessageToGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SendMessageToGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Sends a message to all members in a message group.</p>
     * 
     * @param request SendMessageToGroupRequest
     * @return SendMessageToGroupResponse
     */
    public SendMessageToGroupResponse sendMessageToGroup(SendMessageToGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.sendMessageToGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Sends a message to specified users in a message group.</p>
     * 
     * @param tmpReq SendMessageToGroupUsersRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SendMessageToGroupUsersResponse
     */
    public SendMessageToGroupUsersResponse sendMessageToGroupUsersWithOptions(SendMessageToGroupUsersRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        SendMessageToGroupUsersShrinkRequest request = new SendMessageToGroupUsersShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.receiverIdList)) {
            request.receiverIdListShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.receiverIdList, "ReceiverIdList", "simple");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.skipAudit)) {
            query.put("SkipAudit", request.skipAudit);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.data)) {
            body.put("Data", request.data);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.operatorUserId)) {
            body.put("OperatorUserId", request.operatorUserId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.receiverIdListShrink)) {
            body.put("ReceiverIdList", request.receiverIdListShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            body.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SendMessageToGroupUsers"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SendMessageToGroupUsersResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Sends a message to specified users in a message group.</p>
     * 
     * @param request SendMessageToGroupUsersRequest
     * @return SendMessageToGroupUsersResponse
     */
    public SendMessageToGroupUsersResponse sendMessageToGroupUsers(SendMessageToGroupUsersRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.sendMessageToGroupUsersWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to configure a channel for the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures a channel of a production studio.</p>
     * 
     * @param request SetCasterChannelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetCasterChannelResponse
     */
    public SetCasterChannelResponse setCasterChannelWithOptions(SetCasterChannelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.faceBeauty)) {
            query.put("FaceBeauty", request.faceBeauty);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.playStatus)) {
            query.put("PlayStatus", request.playStatus);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceId)) {
            query.put("ResourceId", request.resourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.seekOffset)) {
            query.put("SeekOffset", request.seekOffset);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetCasterChannel"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetCasterChannelResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to configure a channel for the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures a channel of a production studio.</p>
     * 
     * @param request SetCasterChannelRequest
     * @return SetCasterChannelResponse
     */
    public SetCasterChannelResponse setCasterChannel(SetCasterChannelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setCasterChannelWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to configure the production studio. This operation completely replaces existing configurations. If you leave a parameter empty, the corresponding configuration is cleared for the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures a production studio. For example, you can specify the name of the production studio, configure the transcoding settings, and configure the recording settings.</p>
     * 
     * @param request SetCasterConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetCasterConfigResponse
     */
    public SetCasterConfigResponse setCasterConfigWithOptions(SetCasterConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.autoSwitchUrgentConfig)) {
            query.put("AutoSwitchUrgentConfig", request.autoSwitchUrgentConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.autoSwitchUrgentOn)) {
            query.put("AutoSwitchUrgentOn", request.autoSwitchUrgentOn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.callbackUrl)) {
            query.put("CallbackUrl", request.callbackUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterName)) {
            query.put("CasterName", request.casterName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelEnable)) {
            query.put("ChannelEnable", request.channelEnable);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.delay)) {
            query.put("Delay", request.delay);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programEffect)) {
            query.put("ProgramEffect", request.programEffect);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programName)) {
            query.put("ProgramName", request.programName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.recordConfig)) {
            query.put("RecordConfig", request.recordConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sideOutputUrl)) {
            query.put("SideOutputUrl", request.sideOutputUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sideOutputUrlList)) {
            query.put("SideOutputUrlList", request.sideOutputUrlList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.syncGroupsConfig)) {
            query.put("SyncGroupsConfig", request.syncGroupsConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transcodeConfig)) {
            query.put("TranscodeConfig", request.transcodeConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.urgentImageId)) {
            query.put("UrgentImageId", request.urgentImageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.urgentImageUrl)) {
            query.put("UrgentImageUrl", request.urgentImageUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.urgentLiveStreamUrl)) {
            query.put("UrgentLiveStreamUrl", request.urgentLiveStreamUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.urgentMaterialId)) {
            query.put("UrgentMaterialId", request.urgentMaterialId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetCasterConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetCasterConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to configure the production studio. This operation completely replaces existing configurations. If you leave a parameter empty, the corresponding configuration is cleared for the production studio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures a production studio. For example, you can specify the name of the production studio, configure the transcoding settings, and configure the recording settings.</p>
     * 
     * @param request SetCasterConfigRequest
     * @return SetCasterConfigResponse
     */
    public SetCasterConfigResponse setCasterConfig(SetCasterConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setCasterConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>This operation configures a scene by clearing all previous settings of the scene and applying new settings, including the layout setting, to the scene.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures all settings of a scene. This is done by clearing all previous settings of the scene and applying new settings, including the layout setting, to the scene.</p>
     * 
     * @param request SetCasterSceneConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetCasterSceneConfigResponse
     */
    public SetCasterSceneConfigResponse setCasterSceneConfigWithOptions(SetCasterSceneConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.componentId)) {
            query.put("ComponentId", request.componentId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layoutId)) {
            query.put("LayoutId", request.layoutId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sceneId)) {
            query.put("SceneId", request.sceneId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetCasterSceneConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetCasterSceneConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>This operation configures a scene by clearing all previous settings of the scene and applying new settings, including the layout setting, to the scene.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures all settings of a scene. This is done by clearing all previous settings of the scene and applying new settings, including the layout setting, to the scene.</p>
     * 
     * @param request SetCasterSceneConfigRequest
     * @return SetCasterSceneConfigResponse
     */
    public SetCasterSceneConfigResponse setCasterSceneConfig(SetCasterSceneConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setCasterSceneConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the domain name, and then call this operation to enable or disable the certificate of a domain name and modify the certificate information.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Enables or disables the certificate of a domain name, and modifies the certificate information.</p>
     * 
     * @param request SetLiveDomainCertificateRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetLiveDomainCertificateResponse
     */
    public SetLiveDomainCertificateResponse setLiveDomainCertificateWithOptions(SetLiveDomainCertificateRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.certName)) {
            query.put("CertName", request.certName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.certType)) {
            query.put("CertType", request.certType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.forceSet)) {
            query.put("ForceSet", request.forceSet);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.SSLPri)) {
            query.put("SSLPri", request.SSLPri);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.SSLProtocol)) {
            query.put("SSLProtocol", request.SSLProtocol);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.SSLPub)) {
            query.put("SSLPub", request.SSLPub);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetLiveDomainCertificate"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetLiveDomainCertificateResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the domain name, and then call this operation to enable or disable the certificate of a domain name and modify the certificate information.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Enables or disables the certificate of a domain name, and modifies the certificate information.</p>
     * 
     * @param request SetLiveDomainCertificateRequest
     * @return SetLiveDomainCertificateResponse
     */
    public SetLiveDomainCertificateResponse setLiveDomainCertificate(SetLiveDomainCertificateRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setLiveDomainCertificateWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to configure dual-stream disaster recovery for a streaming domain, which allows you to ingest two streams that have the same name.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures dual-stream disaster recovery for a streaming domain.</p>
     * 
     * @param request SetLiveDomainMultiStreamConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetLiveDomainMultiStreamConfigResponse
     */
    public SetLiveDomainMultiStreamConfigResponse setLiveDomainMultiStreamConfigWithOptions(SetLiveDomainMultiStreamConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetLiveDomainMultiStreamConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetLiveDomainMultiStreamConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to configure dual-stream disaster recovery for a streaming domain, which allows you to ingest two streams that have the same name.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures dual-stream disaster recovery for a streaming domain.</p>
     * 
     * @param request SetLiveDomainMultiStreamConfigRequest
     * @return SetLiveDomainMultiStreamConfigResponse
     */
    public SetLiveDomainMultiStreamConfigResponse setLiveDomainMultiStreamConfig(SetLiveDomainMultiStreamConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setLiveDomainMultiStreamConfigWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Manually switches between the active stream and standby stream.</p>
     * 
     * @param request SetLiveDomainMultiStreamMasterRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetLiveDomainMultiStreamMasterResponse
     */
    public SetLiveDomainMultiStreamMasterResponse setLiveDomainMultiStreamMasterWithOptions(SetLiveDomainMultiStreamMasterRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetLiveDomainMultiStreamMaster"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetLiveDomainMultiStreamMasterResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Manually switches between the active stream and standby stream.</p>
     * 
     * @param request SetLiveDomainMultiStreamMasterRequest
     * @return SetLiveDomainMultiStreamMasterResponse
     */
    public SetLiveDomainMultiStreamMasterResponse setLiveDomainMultiStreamMaster(SetLiveDomainMultiStreamMasterRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setLiveDomainMultiStreamMasterWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Configures the auto mode of dual-stream disaster recovery.</p>
     * 
     * @param request SetLiveDomainMultiStreamOptimalModeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetLiveDomainMultiStreamOptimalModeResponse
     */
    public SetLiveDomainMultiStreamOptimalModeResponse setLiveDomainMultiStreamOptimalModeWithOptions(SetLiveDomainMultiStreamOptimalModeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetLiveDomainMultiStreamOptimalMode"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetLiveDomainMultiStreamOptimalModeResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Configures the auto mode of dual-stream disaster recovery.</p>
     * 
     * @param request SetLiveDomainMultiStreamOptimalModeRequest
     * @return SetLiveDomainMultiStreamOptimalModeResponse
     */
    public SetLiveDomainMultiStreamOptimalModeResponse setLiveDomainMultiStreamOptimalMode(SetLiveDomainMultiStreamOptimalModeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setLiveDomainMultiStreamOptimalModeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>Obtain the accelerated domain name, and then call this operation to set or modify the domain name configurations in the canary release environment. For more information, see <strong>Format of the Functions parameter</strong>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Sets or modifies domain name configurations in the canary release environment.</p>
     * 
     * @param request SetLiveDomainStagingConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetLiveDomainStagingConfigResponse
     */
    public SetLiveDomainStagingConfigResponse setLiveDomainStagingConfigWithOptions(SetLiveDomainStagingConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.functions)) {
            query.put("Functions", request.functions);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetLiveDomainStagingConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetLiveDomainStagingConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>Obtain the accelerated domain name, and then call this operation to set or modify the domain name configurations in the canary release environment. For more information, see <strong>Format of the Functions parameter</strong>.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Sets or modifies domain name configurations in the canary release environment.</p>
     * 
     * @param request SetLiveDomainStagingConfigRequest
     * @return SetLiveDomainStagingConfigResponse
     */
    public SetLiveDomainStagingConfigResponse setLiveDomainStagingConfig(SetLiveDomainStagingConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setLiveDomainStagingConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the SetLiveEdgeTransfer operation to configure edge stream relay. The configuration takes effect for ingested streams that start after edge stream relay is configured. The following table describes the scenarios in which edge stream relay takes effect or not.</p>
     * <table>
     * <thead>
     * <tr>
     * <th>Scenario</th>
     * <th>Analysis</th>
     * <th>Result</th>
     * </tr>
     * </thead>
     * <tbody><tr>
     * <td>1\. You ingest a stream before you call the SetLiveEdgeTransfer operation.</td>
     * <td>The configuration of edge stream relay is not available.</td>
     * <td>The ingested stream is not affected by your call of the SetLiveEdgeTransfer operation. Edge stream relay does not take effect.</td>
     * </tr>
     * <tr>
     * <td>2\. You disconnect an ingested stream that started before you called the SetLiveEdgeTransfer operation, and then resume the ingested stream.</td>
     * <td>The configuration of edge stream relay is available.</td>
     * <td>Edge stream relay takes effect for the resumed ingested stream based on the configuration.</td>
     * </tr>
     * <tr>
     * <td>3\. You ingest a stream after you call the SetLiveEdgeTransfer operation.</td>
     * <td>The configuration of edge stream relay is available.</td>
     * <td>Edge stream relay takes effect for the ingested stream based on the configuration.</td>
     * </tr>
     * </tbody></table>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Sets the configuration of edge stream relay.</p>
     * 
     * @param request SetLiveEdgeTransferRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetLiveEdgeTransferResponse
     */
    public SetLiveEdgeTransferResponse setLiveEdgeTransferWithOptions(SetLiveEdgeTransferRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.httpDns)) {
            query.put("HttpDns", request.httpDns);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetDomainList)) {
            query.put("TargetDomainList", request.targetDomainList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transferArgs)) {
            query.put("TransferArgs", request.transferArgs);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetLiveEdgeTransfer"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetLiveEdgeTransferResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the SetLiveEdgeTransfer operation to configure edge stream relay. The configuration takes effect for ingested streams that start after edge stream relay is configured. The following table describes the scenarios in which edge stream relay takes effect or not.</p>
     * <table>
     * <thead>
     * <tr>
     * <th>Scenario</th>
     * <th>Analysis</th>
     * <th>Result</th>
     * </tr>
     * </thead>
     * <tbody><tr>
     * <td>1\. You ingest a stream before you call the SetLiveEdgeTransfer operation.</td>
     * <td>The configuration of edge stream relay is not available.</td>
     * <td>The ingested stream is not affected by your call of the SetLiveEdgeTransfer operation. Edge stream relay does not take effect.</td>
     * </tr>
     * <tr>
     * <td>2\. You disconnect an ingested stream that started before you called the SetLiveEdgeTransfer operation, and then resume the ingested stream.</td>
     * <td>The configuration of edge stream relay is available.</td>
     * <td>Edge stream relay takes effect for the resumed ingested stream based on the configuration.</td>
     * </tr>
     * <tr>
     * <td>3\. You ingest a stream after you call the SetLiveEdgeTransfer operation.</td>
     * <td>The configuration of edge stream relay is available.</td>
     * <td>Edge stream relay takes effect for the ingested stream based on the configuration.</td>
     * </tr>
     * </tbody></table>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Sets the configuration of edge stream relay.</p>
     * 
     * @param request SetLiveEdgeTransferRequest
     * @return SetLiveEdgeTransferResponse
     */
    public SetLiveEdgeTransferResponse setLiveEdgeTransfer(SetLiveEdgeTransferRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setLiveEdgeTransferWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to configure triggered stream pulling. The configuration lets ApsaraVideo Live automatically pull live streams from the origin server when the origin server starts to play live streams.</p>
     * <blockquote>
     * <p> The IPv6 protocol is not supported.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a configuration of triggered stream pulling.</p>
     * 
     * @param request SetLiveLazyPullStreamInfoConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetLiveLazyPullStreamInfoConfigResponse
     */
    public SetLiveLazyPullStreamInfoConfigResponse setLiveLazyPullStreamInfoConfigWithOptions(SetLiveLazyPullStreamInfoConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pullAppName)) {
            query.put("PullAppName", request.pullAppName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pullDomainName)) {
            query.put("PullDomainName", request.pullDomainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pullProtocol)) {
            query.put("PullProtocol", request.pullProtocol);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transcodeLazy)) {
            query.put("TranscodeLazy", request.transcodeLazy);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetLiveLazyPullStreamInfoConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetLiveLazyPullStreamInfoConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to configure triggered stream pulling. The configuration lets ApsaraVideo Live automatically pull live streams from the origin server when the origin server starts to play live streams.</p>
     * <blockquote>
     * <p> The IPv6 protocol is not supported.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a configuration of triggered stream pulling.</p>
     * 
     * @param request SetLiveLazyPullStreamInfoConfigRequest
     * @return SetLiveLazyPullStreamInfoConfigResponse
     */
    public SetLiveLazyPullStreamInfoConfigResponse setLiveLazyPullStreamInfoConfig(SetLiveLazyPullStreamInfoConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setLiveLazyPullStreamInfoConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>You can call this operation to configure custom SEI for a mixed-stream relay task.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures custom supplemental enhancement information (SEI) for co-streaming.</p>
     * 
     * @param request SetLiveMpuTaskSeiRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetLiveMpuTaskSeiResponse
     */
    public SetLiveMpuTaskSeiResponse setLiveMpuTaskSeiWithOptions(SetLiveMpuTaskSeiRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.customSei)) {
            query.put("CustomSei", request.customSei);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetLiveMpuTaskSei"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetLiveMpuTaskSeiResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>You can call this operation to configure custom SEI for a mixed-stream relay task.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures custom supplemental enhancement information (SEI) for co-streaming.</p>
     * 
     * @param request SetLiveMpuTaskSeiRequest
     * @return SetLiveMpuTaskSeiResponse
     */
    public SetLiveMpuTaskSeiResponse setLiveMpuTaskSei(SetLiveMpuTaskSeiRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setLiveMpuTaskSeiWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can configure up to 200 stream-level region blocking rules for a domain name. If there are rules in which the same application name and the same stream name are specified, the rule that is updated the most recently takes effect.</p>
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures stream-level region blocking.</p>
     * 
     * @param request SetLiveStreamBlockRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetLiveStreamBlockResponse
     */
    public SetLiveStreamBlockResponse setLiveStreamBlockWithOptions(SetLiveStreamBlockRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.blockType)) {
            query.put("BlockType", request.blockType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.locationList)) {
            query.put("LocationList", request.locationList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.releaseTime)) {
            query.put("ReleaseTime", request.releaseTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetLiveStreamBlock"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetLiveStreamBlockResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can configure up to 200 stream-level region blocking rules for a domain name. If there are rules in which the same application name and the same stream name are specified, the rule that is updated the most recently takes effect.</p>
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures stream-level region blocking.</p>
     * 
     * @param request SetLiveStreamBlockRequest
     * @return SetLiveStreamBlockResponse
     */
    public SetLiveStreamBlockResponse setLiveStreamBlock(SetLiveStreamBlockRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setLiveStreamBlockWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to configure the latency of a streaming domain.</p>
     * <ul>
     * <li>Because an integer number of groups of pictures (GOPs) are cached, the latency is not less than the GOP size. The actual latency is calculated based on the GOP size. For example, if RtmpDelay is set to 4 seconds and the GOP size is 2 seconds, the minimum latency is 2 seconds (4 seconds minus 2 seconds) and the maximum latency is 6 seconds (4 seconds plus 2 seconds). If the GOP size is greater than the value of RtmpDelay, for example, the GOP size is 5 seconds and RtmpDelay is set to 4 seconds, the latency ranges from 0 to 9 seconds.</li>
     * <li>Configuration for the latency of an audio-only stream is invalid. By default, the latency is close to 0.</li>
     * <li>For HTTP Live Streaming (HLS)-based playback, the segment size equals the latency divided by 3. Round the value down to the nearest integer. The value cannot be less than 1 second. Then, calculate the maximum number of segments. If the segment size is greater than or equal to 3 seconds, the maximum number of segments is 4. Otherwise, the maximum number of segments is 6.</li>
     * <li>The actual HLS segment size is not smaller than the GOP size.</li>
     * <li>The latency of HLS-based playback equals the configured segment size times 3.</li>
     * <li>If you do not call this operation, the default latency is 2 seconds for Real-Time Messaging Protocol (RTMP)-based playback and 4 seconds for Flash Video (FLV)-based playback. By default, the size of an HLS segment is 5 seconds. In this case, the latency is 15 seconds and the maximum number of segments is 6.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures the live streaming latency.</p>
     * 
     * @param request SetLiveStreamDelayConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetLiveStreamDelayConfigResponse
     */
    public SetLiveStreamDelayConfigResponse setLiveStreamDelayConfigWithOptions(SetLiveStreamDelayConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.flvDelay)) {
            query.put("FlvDelay", request.flvDelay);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.flvLevel)) {
            query.put("FlvLevel", request.flvLevel);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.hlsDelay)) {
            query.put("HlsDelay", request.hlsDelay);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.hlsLevel)) {
            query.put("HlsLevel", request.hlsLevel);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.rtmpDelay)) {
            query.put("RtmpDelay", request.rtmpDelay);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.rtmpLevel)) {
            query.put("RtmpLevel", request.rtmpLevel);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetLiveStreamDelayConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetLiveStreamDelayConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to configure the latency of a streaming domain.</p>
     * <ul>
     * <li>Because an integer number of groups of pictures (GOPs) are cached, the latency is not less than the GOP size. The actual latency is calculated based on the GOP size. For example, if RtmpDelay is set to 4 seconds and the GOP size is 2 seconds, the minimum latency is 2 seconds (4 seconds minus 2 seconds) and the maximum latency is 6 seconds (4 seconds plus 2 seconds). If the GOP size is greater than the value of RtmpDelay, for example, the GOP size is 5 seconds and RtmpDelay is set to 4 seconds, the latency ranges from 0 to 9 seconds.</li>
     * <li>Configuration for the latency of an audio-only stream is invalid. By default, the latency is close to 0.</li>
     * <li>For HTTP Live Streaming (HLS)-based playback, the segment size equals the latency divided by 3. Round the value down to the nearest integer. The value cannot be less than 1 second. Then, calculate the maximum number of segments. If the segment size is greater than or equal to 3 seconds, the maximum number of segments is 4. Otherwise, the maximum number of segments is 6.</li>
     * <li>The actual HLS segment size is not smaller than the GOP size.</li>
     * <li>The latency of HLS-based playback equals the configured segment size times 3.</li>
     * <li>If you do not call this operation, the default latency is 2 seconds for Real-Time Messaging Protocol (RTMP)-based playback and 4 seconds for Flash Video (FLV)-based playback. By default, the size of an HLS segment is 5 seconds. In this case, the latency is 15 seconds and the maximum number of segments is 6.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures the live streaming latency.</p>
     * 
     * @param request SetLiveStreamDelayConfigRequest
     * @return SetLiveStreamDelayConfigResponse
     */
    public SetLiveStreamDelayConfigResponse setLiveStreamDelayConfig(SetLiveStreamDelayConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setLiveStreamDelayConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to specify multiple URLs to prefetch at a time. You can specify up to 100 URLs in a request.</p>
     * <ul>
     * <li>URLs in the HTTP Live Steaming (HLS) format are not supported.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures a prefetch task. You can specify multiple URLs to prefetch at a time.</p>
     * 
     * @param request SetLiveStreamPreloadTasksRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetLiveStreamPreloadTasksResponse
     */
    public SetLiveStreamPreloadTasksResponse setLiveStreamPreloadTasksWithOptions(SetLiveStreamPreloadTasksRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.area)) {
            query.put("Area", request.area);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.playUrl)) {
            query.put("PlayUrl", request.playUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.preloadedEndTime)) {
            query.put("PreloadedEndTime", request.preloadedEndTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.preloadedStartTime)) {
            query.put("PreloadedStartTime", request.preloadedStartTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetLiveStreamPreloadTasks"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetLiveStreamPreloadTasksResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to specify multiple URLs to prefetch at a time. You can specify up to 100 URLs in a request.</p>
     * <ul>
     * <li>URLs in the HTTP Live Steaming (HLS) format are not supported.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures a prefetch task. You can specify multiple URLs to prefetch at a time.</p>
     * 
     * @param request SetLiveStreamPreloadTasksRequest
     * @return SetLiveStreamPreloadTasksResponse
     */
    public SetLiveStreamPreloadTasksResponse setLiveStreamPreloadTasks(SetLiveStreamPreloadTasksRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setLiveStreamPreloadTasksWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to configure the callback URL and authentication information of an ingest domain.</p>
     * <ul>
     * <li>If you configure callbacks for stream ingest status, you can receive callback notifications about successful or interrupted stream ingest in a timely manner. For more information, see <a href="https://help.aliyun.com/document_detail/54787.html">Format of stream ingest callbacks</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures stream ingest callbacks under an ingest domain.</p>
     * 
     * @param request SetLiveStreamsNotifyUrlConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetLiveStreamsNotifyUrlConfigResponse
     */
    public SetLiveStreamsNotifyUrlConfigResponse setLiveStreamsNotifyUrlConfigWithOptions(SetLiveStreamsNotifyUrlConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.exceptionNotifyUrl)) {
            query.put("ExceptionNotifyUrl", request.exceptionNotifyUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyAuthKey)) {
            query.put("NotifyAuthKey", request.notifyAuthKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyReqAuth)) {
            query.put("NotifyReqAuth", request.notifyReqAuth);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyUrl)) {
            query.put("NotifyUrl", request.notifyUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.switchNotifyUrl)) {
            query.put("SwitchNotifyUrl", request.switchNotifyUrl);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetLiveStreamsNotifyUrlConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetLiveStreamsNotifyUrlConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to configure the callback URL and authentication information of an ingest domain.</p>
     * <ul>
     * <li>If you configure callbacks for stream ingest status, you can receive callback notifications about successful or interrupted stream ingest in a timely manner. For more information, see <a href="https://help.aliyun.com/document_detail/54787.html">Format of stream ingest callbacks</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 15 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures stream ingest callbacks under an ingest domain.</p>
     * 
     * @param request SetLiveStreamsNotifyUrlConfigRequest
     * @return SetLiveStreamsNotifyUrlConfigResponse
     */
    public SetLiveStreamsNotifyUrlConfigResponse setLiveStreamsNotifyUrlConfig(SetLiveStreamsNotifyUrlConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setLiveStreamsNotifyUrlConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Create a production studio in playlist mode, and then call this operation to add the background material. For information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.</p>
     * <ul>
     * <li>You can call this operation to create, update, or delete the background of the episode list. To delete the background, leave the ResourceType, ResourceUrl, and MaterialId parameters empty.<blockquote>
     * </blockquote>
     * </li>
     * <li>When you select media resources from ApsaraVideo VOD, we recommend that you select resources that are stored in hosted OSS buckets. Resources stored in non-hosted OSS buckets have a validity period. Pay attention to the validity if you select resources that are stored in non-hosted OSS buckets.</li>
     * <li>When you add media resources to a production studio, we recommend that you select resources from ApsaraVideo Live and ApsaraVideo VOD. If you add a third-party stream by specifying a streaming URL, there is a possibility that the stream fails to be played. You must pay attention to the quality and validity of the third-party stream.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures the background of the episode list.</p>
     * 
     * @param request SetShowListBackgroundRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetShowListBackgroundResponse
     */
    public SetShowListBackgroundResponse setShowListBackgroundWithOptions(SetShowListBackgroundRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.materialId)) {
            query.put("MaterialId", request.materialId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceType)) {
            query.put("ResourceType", request.resourceType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceUrl)) {
            query.put("ResourceUrl", request.resourceUrl);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetShowListBackground"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetShowListBackgroundResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Create a production studio in playlist mode, and then call this operation to add the background material. For information about how to create a production studio, see <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a>.</p>
     * <ul>
     * <li>You can call this operation to create, update, or delete the background of the episode list. To delete the background, leave the ResourceType, ResourceUrl, and MaterialId parameters empty.<blockquote>
     * </blockquote>
     * </li>
     * <li>When you select media resources from ApsaraVideo VOD, we recommend that you select resources that are stored in hosted OSS buckets. Resources stored in non-hosted OSS buckets have a validity period. Pay attention to the validity if you select resources that are stored in non-hosted OSS buckets.</li>
     * <li>When you add media resources to a production studio, we recommend that you select resources from ApsaraVideo Live and ApsaraVideo VOD. If you add a third-party stream by specifying a streaming URL, there is a possibility that the stream fails to be played. You must pay attention to the quality and validity of the third-party stream.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures the background of the episode list.</p>
     * 
     * @param request SetShowListBackgroundRequest
     * @return SetShowListBackgroundResponse
     */
    public SetShowListBackgroundResponse setShowListBackground(SetShowListBackgroundRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setShowListBackgroundWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Before you configure authentication for snapshot callbacks, you need to specify the callback URL. For more information, see <a href="https://help.aliyun.com/document_detail/2847897.html">AddLiveAppSnapshotConfig</a>.</p>
     * <ul>
     * <li>You can call this operation to configure authentication for snapshot callbacks for a main streaming domain. Make sure that the parameter settings meet the requirements.</li>
     * <li>ApsaraVideo Live allows you to add a specific signature header to each HTTP or HTTPS callback request. This way, the server that receives callback messages can authenticate the signature to prevent illegal or invalid requests. For more information, see <a href="https://help.aliyun.com/document_detail/417349.html">Usage notes for callback authentication</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures authentication for snapshot callbacks.</p>
     * 
     * @param request SetSnapshotCallbackAuthRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetSnapshotCallbackAuthResponse
     */
    public SetSnapshotCallbackAuthResponse setSnapshotCallbackAuthWithOptions(SetSnapshotCallbackAuthRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.callbackAuthKey)) {
            query.put("CallbackAuthKey", request.callbackAuthKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.callbackReqAuth)) {
            query.put("CallbackReqAuth", request.callbackReqAuth);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetSnapshotCallbackAuth"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetSnapshotCallbackAuthResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Before you configure authentication for snapshot callbacks, you need to specify the callback URL. For more information, see <a href="https://help.aliyun.com/document_detail/2847897.html">AddLiveAppSnapshotConfig</a>.</p>
     * <ul>
     * <li>You can call this operation to configure authentication for snapshot callbacks for a main streaming domain. Make sure that the parameter settings meet the requirements.</li>
     * <li>ApsaraVideo Live allows you to add a specific signature header to each HTTP or HTTPS callback request. This way, the server that receives callback messages can authenticate the signature to prevent illegal or invalid requests. For more information, see <a href="https://help.aliyun.com/document_detail/417349.html">Usage notes for callback authentication</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Configures authentication for snapshot callbacks.</p>
     * 
     * @param request SetSnapshotCallbackAuthRequest
     * @return SetSnapshotCallbackAuthResponse
     */
    public SetSnapshotCallbackAuthResponse setSnapshotCallbackAuth(SetSnapshotCallbackAuthRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setSnapshotCallbackAuthWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to start the production studio. If the production studio does not have a PVW scene or a PGM scene, this operation creates and starts such scenes and starts audio and video processing tasks.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Starts a production studio. If the production studio does not have a PVW scene or a PGM scene, this operation creates and starts such scenes and starts audio and video processing tasks.</p>
     * 
     * @param request StartCasterRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StartCasterResponse
     */
    public StartCasterResponse startCasterWithOptions(StartCasterRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StartCaster"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StartCasterResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to start the production studio. If the production studio does not have a PVW scene or a PGM scene, this operation creates and starts such scenes and starts audio and video processing tasks.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Starts a production studio. If the production studio does not have a PVW scene or a PGM scene, this operation creates and starts such scenes and starts audio and video processing tasks.</p>
     * 
     * @param request StartCasterRequest
     * @return StartCasterResponse
     */
    public StartCasterResponse startCaster(StartCasterRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.startCasterWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to start a specified PVW scene.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Starts a specified preview (PVW) scene.</p>
     * 
     * @param request StartCasterSceneRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StartCasterSceneResponse
     */
    public StartCasterSceneResponse startCasterSceneWithOptions(StartCasterSceneRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sceneId)) {
            query.put("SceneId", request.sceneId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StartCasterScene"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StartCasterSceneResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to start a specified PVW scene.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Starts a specified preview (PVW) scene.</p>
     * 
     * @param request StartCasterSceneRequest
     * @return StartCasterSceneResponse
     */
    public StartCasterSceneResponse startCasterScene(StartCasterSceneRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.startCasterSceneWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to start an edge transcoding task.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature and the edge transcoding task that you specify is not started.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Starts an edge transcoding task.</p>
     * 
     * @param request StartEdgeTranscodeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StartEdgeTranscodeJobResponse
     */
    public StartEdgeTranscodeJobResponse startEdgeTranscodeJobWithOptions(StartEdgeTranscodeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.clusterId)) {
            query.put("ClusterId", request.clusterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StartEdgeTranscodeJob"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StartEdgeTranscodeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to start an edge transcoding task.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature and the edge transcoding task that you specify is not started.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Starts an edge transcoding task.</p>
     * 
     * @param request StartEdgeTranscodeJobRequest
     * @return StartEdgeTranscodeJobResponse
     */
    public StartEdgeTranscodeJobResponse startEdgeTranscodeJob(StartEdgeTranscodeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.startEdgeTranscodeJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation does not work if the Alibaba Cloud account to which the domain name belongs has overdue payments or the domain name is invalid.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Enables a disabled domain name. After the domain name is enabled, its status changes to online.</p>
     * 
     * @param request StartLiveDomainRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StartLiveDomainResponse
     */
    public StartLiveDomainResponse startLiveDomainWithOptions(StartLiveDomainRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StartLiveDomain"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StartLiveDomainResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation does not work if the Alibaba Cloud account to which the domain name belongs has overdue payments or the domain name is invalid.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Enables a disabled domain name. After the domain name is enabled, its status changes to online.</p>
     * 
     * @param request StartLiveDomainRequest
     * @return StartLiveDomainResponse
     */
    public StartLiveDomainResponse startLiveDomain(StartLiveDomainRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.startLiveDomainWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>By default, you can create up to 200 single-stream relay tasks and up to 40 mixed-stream relay tasks for an application. To increase the quota, <a href="https://smartservice.console.aliyun.com/service/create-ticket">submit a ticket</a>.</p>
     * <h3><a href="#"></a>Lifecycle of a stream relay task</h3>
     * <p><strong>Start</strong></p>
     * <ul>
     * <li>Call the StartLiveMPUTask operation to create a task.<ul>
     * <li>If no user joins the channel, an error indicating that the channel does not exist is returned.</li>
     * <li>Stream relay is not performed if no stream is ingested. In this case, no relayed stream is available for playback.</li>
     * <li>If the task is in the mixed-stream relay mode, make sure that at least one user is ingesting a stream, which can be relayed for playback. A black screen is displayed in the pane of a user who is not ingesting a stream.</li>
     * </ul>
     * </li>
     * <li>We recommend that you record the task status, task mode, and task parameters on your business server.<ul>
     * <li>Task status: started or stopped.</li>
     * <li>Task mode: single-stream relay or mixed-stream relay.</li>
     * <li>Task parameters: the latest input parameters. For example, after your call of the UpdateLiveMPUTask operation is successful, record the task parameters, which are the latest.</li>
     * </ul>
     * </li>
     * <li>In co-streaming or battle scenarios, the task is in the mixed-stream relay mode. If the streamer leaves the channel due to exceptions and re-joins the channel, you can directly call the StartLiveMPUTask operation on your business server to start stream relay based on the recorded task parameters.<ul>
     * <li>If the task has not been automatically cleared by the system, the task is directly started.</li>
     * <li>If the task has not been automatically cleared by the system, a message indicating that <strong>the task already exists</strong> is returned.
     * <strong>End</strong></li>
     * </ul>
     * </li>
     * <li>After the streamer leaves the channel, you need to call the <a href="https://help.aliyun.com/document_detail/2362742.html">StopLiveMPUTask</a> operation to stop the task.</li>
     * <li>If all users specified in the task have left the channel, but you do not call the StopLiveMPUTask operation, the system stops the task in 2 minutes.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 500 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a mixed-stream relay task.</p>
     * 
     * @param tmpReq StartLiveMPUTaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StartLiveMPUTaskResponse
     */
    public StartLiveMPUTaskResponse startLiveMPUTaskWithOptions(StartLiveMPUTaskRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        StartLiveMPUTaskShrinkRequest request = new StartLiveMPUTaskShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.multiStreamURL)) {
            request.multiStreamURLShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.multiStreamURL, "MultiStreamURL", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.seiParams)) {
            request.seiParamsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.seiParams, "SeiParams", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.singleSubParams)) {
            request.singleSubParamsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.singleSubParams, "SingleSubParams", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.transcodeParams)) {
            request.transcodeParamsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.transcodeParams, "TranscodeParams", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.maxIdleTime)) {
            query.put("MaxIdleTime", request.maxIdleTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mixMode)) {
            query.put("MixMode", request.mixMode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.multiStreamURLShrink)) {
            query.put("MultiStreamURL", request.multiStreamURLShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.region)) {
            query.put("Region", request.region);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.seiParamsShrink)) {
            query.put("SeiParams", request.seiParamsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.singleSubParamsShrink)) {
            query.put("SingleSubParams", request.singleSubParamsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamURL)) {
            query.put("StreamURL", request.streamURL);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transcodeParamsShrink)) {
            query.put("TranscodeParams", request.transcodeParamsShrink);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StartLiveMPUTask"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StartLiveMPUTaskResponse());
    }

    /**
     * <b>description</b> :
     * <p>By default, you can create up to 200 single-stream relay tasks and up to 40 mixed-stream relay tasks for an application. To increase the quota, <a href="https://smartservice.console.aliyun.com/service/create-ticket">submit a ticket</a>.</p>
     * <h3><a href="#"></a>Lifecycle of a stream relay task</h3>
     * <p><strong>Start</strong></p>
     * <ul>
     * <li>Call the StartLiveMPUTask operation to create a task.<ul>
     * <li>If no user joins the channel, an error indicating that the channel does not exist is returned.</li>
     * <li>Stream relay is not performed if no stream is ingested. In this case, no relayed stream is available for playback.</li>
     * <li>If the task is in the mixed-stream relay mode, make sure that at least one user is ingesting a stream, which can be relayed for playback. A black screen is displayed in the pane of a user who is not ingesting a stream.</li>
     * </ul>
     * </li>
     * <li>We recommend that you record the task status, task mode, and task parameters on your business server.<ul>
     * <li>Task status: started or stopped.</li>
     * <li>Task mode: single-stream relay or mixed-stream relay.</li>
     * <li>Task parameters: the latest input parameters. For example, after your call of the UpdateLiveMPUTask operation is successful, record the task parameters, which are the latest.</li>
     * </ul>
     * </li>
     * <li>In co-streaming or battle scenarios, the task is in the mixed-stream relay mode. If the streamer leaves the channel due to exceptions and re-joins the channel, you can directly call the StartLiveMPUTask operation on your business server to start stream relay based on the recorded task parameters.<ul>
     * <li>If the task has not been automatically cleared by the system, the task is directly started.</li>
     * <li>If the task has not been automatically cleared by the system, a message indicating that <strong>the task already exists</strong> is returned.
     * <strong>End</strong></li>
     * </ul>
     * </li>
     * <li>After the streamer leaves the channel, you need to call the <a href="https://help.aliyun.com/document_detail/2362742.html">StopLiveMPUTask</a> operation to stop the task.</li>
     * <li>If all users specified in the task have left the channel, but you do not call the StopLiveMPUTask operation, the system stops the task in 2 minutes.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 500 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Creates a mixed-stream relay task.</p>
     * 
     * @param request StartLiveMPUTaskRequest
     * @return StartLiveMPUTaskResponse
     */
    public StartLiveMPUTaskResponse startLiveMPUTask(StartLiveMPUTaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.startLiveMPUTaskWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848129.html">CreateLiveStreamMonitor</a> operation to create a monitoring session, obtain the value of the response parameter <strong>MonitorId</strong>, and then start live monitoring.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Starts live monitoring.</p>
     * 
     * @param request StartLiveStreamMonitorRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StartLiveStreamMonitorResponse
     */
    public StartLiveStreamMonitorResponse startLiveStreamMonitorWithOptions(StartLiveStreamMonitorRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.monitorId)) {
            query.put("MonitorId", request.monitorId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StartLiveStreamMonitor"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StartLiveStreamMonitorResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848129.html">CreateLiveStreamMonitor</a> operation to create a monitoring session, obtain the value of the response parameter <strong>MonitorId</strong>, and then start live monitoring.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Starts live monitoring.</p>
     * 
     * @param request StartLiveStreamMonitorRequest
     * @return StartLiveStreamMonitorResponse
     */
    public StartLiveStreamMonitorResponse startLiveStreamMonitor(StartLiveStreamMonitorRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.startLiveStreamMonitorWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848078.html">AddPlaylistItems</a> operation to add episodes to an episode list and then call this operation to start playing the episode list.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Starts playing an episode list.</p>
     * 
     * @param request StartPlaylistRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StartPlaylistResponse
     */
    public StartPlaylistResponse startPlaylistWithOptions(StartPlaylistRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.offset)) {
            query.put("Offset", request.offset);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programId)) {
            query.put("ProgramId", request.programId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resumeMode)) {
            query.put("ResumeMode", request.resumeMode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startItemId)) {
            query.put("StartItemId", request.startItemId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StartPlaylist"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StartPlaylistResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848078.html">AddPlaylistItems</a> operation to add episodes to an episode list and then call this operation to start playing the episode list.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Starts playing an episode list.</p>
     * 
     * @param request StartPlaylistRequest
     * @return StartPlaylistResponse
     */
    public StartPlaylistResponse startPlaylist(StartPlaylistRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.startPlaylistWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>启动rtc云端录制任务</p>
     * 
     * @param tmpReq StartRtcCloudRecordingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StartRtcCloudRecordingResponse
     */
    public StartRtcCloudRecordingResponse startRtcCloudRecordingWithOptions(StartRtcCloudRecordingRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        StartRtcCloudRecordingShrinkRequest request = new StartRtcCloudRecordingShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.mixLayoutParams)) {
            request.mixLayoutParamsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.mixLayoutParams, "MixLayoutParams", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.mixTranscodeParams)) {
            request.mixTranscodeParamsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.mixTranscodeParams, "MixTranscodeParams", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.recordParams)) {
            request.recordParamsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.recordParams, "RecordParams", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.storageParams)) {
            request.storageParamsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.storageParams, "StorageParams", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.subscribeParams)) {
            request.subscribeParamsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.subscribeParams, "SubscribeParams", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mixLayoutParamsShrink)) {
            query.put("MixLayoutParams", request.mixLayoutParamsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mixTranscodeParamsShrink)) {
            query.put("MixTranscodeParams", request.mixTranscodeParamsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyUrl)) {
            query.put("NotifyUrl", request.notifyUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.recordParamsShrink)) {
            query.put("RecordParams", request.recordParamsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.storageParamsShrink)) {
            query.put("StorageParams", request.storageParamsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subscribeParamsShrink)) {
            query.put("SubscribeParams", request.subscribeParamsShrink);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StartRtcCloudRecording"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StartRtcCloudRecordingResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>启动rtc云端录制任务</p>
     * 
     * @param request StartRtcCloudRecordingRequest
     * @return StartRtcCloudRecordingResponse
     */
    public StartRtcCloudRecordingResponse startRtcCloudRecording(StartRtcCloudRecordingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.startRtcCloudRecordingWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and call this operation to stop the production studio. When a production studio is stopped, its PVW and PGM scenes are stopped.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops a production studio. This stops the PVW and PGM scenes of the production studio.</p>
     * 
     * @param request StopCasterRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StopCasterResponse
     */
    public StopCasterResponse stopCasterWithOptions(StopCasterRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StopCaster"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StopCasterResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and call this operation to stop the production studio. When a production studio is stopped, its PVW and PGM scenes are stopped.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops a production studio. This stops the PVW and PGM scenes of the production studio.</p>
     * 
     * @param request StopCasterRequest
     * @return StopCasterResponse
     */
    public StopCasterResponse stopCaster(StopCasterRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.stopCasterWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Usage note</h2>
     * <p>This operation is only applicable to the PVW scenes.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops a specified preview scene.</p>
     * 
     * @param request StopCasterSceneRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StopCasterSceneResponse
     */
    public StopCasterSceneResponse stopCasterSceneWithOptions(StopCasterSceneRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sceneId)) {
            query.put("SceneId", request.sceneId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StopCasterScene"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StopCasterSceneResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Usage note</h2>
     * <p>This operation is only applicable to the PVW scenes.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops a specified preview scene.</p>
     * 
     * @param request StopCasterSceneRequest
     * @return StopCasterSceneResponse
     */
    public StopCasterSceneResponse stopCasterScene(StopCasterSceneRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.stopCasterSceneWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to stop an edge transcoding task.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature and the edge transcoding task that you specify is running.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops an edge transcoding task.</p>
     * 
     * @param request StopEdgeTranscodeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StopEdgeTranscodeJobResponse
     */
    public StopEdgeTranscodeJobResponse stopEdgeTranscodeJobWithOptions(StopEdgeTranscodeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.clusterId)) {
            query.put("ClusterId", request.clusterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StopEdgeTranscodeJob"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StopEdgeTranscodeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to stop an edge transcoding task.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature and the edge transcoding task that you specify is running.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops an edge transcoding task.</p>
     * 
     * @param request StopEdgeTranscodeJobRequest
     * @return StopEdgeTranscodeJobResponse
     */
    public StopEdgeTranscodeJobResponse stopEdgeTranscodeJob(StopEdgeTranscodeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.stopEdgeTranscodeJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>After you disable a domain name, the information about the domain name is retained. ApsaraVideo Live automatically reroutes all requests that are destined for the domain name to the origin.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Disables an enabled domain name. After the domain name is disabled, its status changes to offline.</p>
     * 
     * @param request StopLiveDomainRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StopLiveDomainResponse
     */
    public StopLiveDomainResponse stopLiveDomainWithOptions(StopLiveDomainRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StopLiveDomain"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StopLiveDomainResponse());
    }

    /**
     * <b>description</b> :
     * <p>After you disable a domain name, the information about the domain name is retained. ApsaraVideo Live automatically reroutes all requests that are destined for the domain name to the origin.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Disables an enabled domain name. After the domain name is disabled, its status changes to offline.</p>
     * 
     * @param request StopLiveDomainRequest
     * @return StopLiveDomainResponse
     */
    public StopLiveDomainResponse stopLiveDomain(StopLiveDomainRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.stopLiveDomainWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Make sure that a mixed-stream relay task is started before you call this operation. You can call the <a href="https://help.aliyun.com/document_detail/2848199.html">StartLiveMPUTask</a> operation to start a mixed-stream relay task.</p>
     * <ul>
     * <li>If a mixed-stream relay task becomes abnormal, the task is automatically stopped 2 minutes after the last person leaves the channel. In this case, you do not need to call the StopLiveMPUTask operation. If you need to resume a mixed-stream relay task that is stopped, call the <a href="https://help.aliyun.com/document_detail/2848199.html">StartLiveMPUTask</a> operation again.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 500 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops a mixed-stream relay task.</p>
     * 
     * @param request StopLiveMPUTaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StopLiveMPUTaskResponse
     */
    public StopLiveMPUTaskResponse stopLiveMPUTaskWithOptions(StopLiveMPUTaskRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StopLiveMPUTask"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StopLiveMPUTaskResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Make sure that a mixed-stream relay task is started before you call this operation. You can call the <a href="https://help.aliyun.com/document_detail/2848199.html">StartLiveMPUTask</a> operation to start a mixed-stream relay task.</p>
     * <ul>
     * <li>If a mixed-stream relay task becomes abnormal, the task is automatically stopped 2 minutes after the last person leaves the channel. In this case, you do not need to call the StopLiveMPUTask operation. If you need to resume a mixed-stream relay task that is stopped, call the <a href="https://help.aliyun.com/document_detail/2848199.html">StartLiveMPUTask</a> operation again.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 500 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops a mixed-stream relay task.</p>
     * 
     * @param request StopLiveMPUTaskRequest
     * @return StopLiveMPUTaskResponse
     */
    public StopLiveMPUTaskResponse stopLiveMPUTask(StopLiveMPUTaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.stopLiveMPUTaskWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to stop a pulled-stream relay task.</p>
     * <ul>
     * <li>You can stop a task that is running (even if the task is in an abnormal retry state). You cannot stop a task that is not running.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops a pulled-stream relay task.</p>
     * 
     * @param request StopLivePullToPushRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StopLivePullToPushResponse
     */
    public StopLivePullToPushResponse stopLivePullToPushWithOptions(StopLivePullToPushRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StopLivePullToPush"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StopLivePullToPushResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to stop a pulled-stream relay task.</p>
     * <ul>
     * <li>You can stop a task that is running (even if the task is in an abnormal retry state). You cannot stop a task that is not running.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops a pulled-stream relay task.</p>
     * 
     * @param request StopLivePullToPushRequest
     * @return StopLivePullToPushResponse
     */
    public StopLivePullToPushResponse stopLivePullToPush(StopLivePullToPushRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.stopLivePullToPushWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to stop live monitoring, make sure that live monitoring is started. You can call the <a href="https://help.aliyun.com/document_detail/2848129.html">CreateLiveStreamMonitor</a> operation to create a monitoring session, obtain the value of the response parameter <strong>MonitorId</strong>, and then start live monitoring.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops live monitoring.</p>
     * 
     * @param request StopLiveStreamMonitorRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StopLiveStreamMonitorResponse
     */
    public StopLiveStreamMonitorResponse stopLiveStreamMonitorWithOptions(StopLiveStreamMonitorRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.monitorId)) {
            query.put("MonitorId", request.monitorId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StopLiveStreamMonitor"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StopLiveStreamMonitorResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to stop live monitoring, make sure that live monitoring is started. You can call the <a href="https://help.aliyun.com/document_detail/2848129.html">CreateLiveStreamMonitor</a> operation to create a monitoring session, obtain the value of the response parameter <strong>MonitorId</strong>, and then start live monitoring.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops live monitoring.</p>
     * 
     * @param request StopLiveStreamMonitorRequest
     * @return StopLiveStreamMonitorResponse
     */
    public StopLiveStreamMonitorResponse stopLiveStreamMonitor(StopLiveStreamMonitorRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.stopLiveStreamMonitorWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848078.html">AddPlaylistItems</a> operation to add episodes to an episode list and then call this operation to stop playing the episode list.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops playing an episode list.</p>
     * 
     * @param request StopPlaylistRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StopPlaylistResponse
     */
    public StopPlaylistResponse stopPlaylistWithOptions(StopPlaylistRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.programId)) {
            query.put("ProgramId", request.programId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StopPlaylist"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StopPlaylistResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848078.html">AddPlaylistItems</a> operation to add episodes to an episode list and then call this operation to stop playing the episode list.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops playing an episode list.</p>
     * 
     * @param request StopPlaylistRequest
     * @return StopPlaylistResponse
     */
    public StopPlaylistResponse stopPlaylist(StopPlaylistRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.stopPlaylistWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops a live subtitle task.</p>
     * 
     * @param request StopRtcAsrTaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StopRtcAsrTaskResponse
     */
    public StopRtcAsrTaskResponse stopRtcAsrTaskWithOptions(StopRtcAsrTaskRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StopRtcAsrTask"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StopRtcAsrTaskResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 20 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Stops a live subtitle task.</p>
     * 
     * @param request StopRtcAsrTaskRequest
     * @return StopRtcAsrTaskResponse
     */
    public StopRtcAsrTaskResponse stopRtcAsrTask(StopRtcAsrTaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.stopRtcAsrTaskWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>停止rtc云端录制任务</p>
     * 
     * @param request StopRtcCloudRecordingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StopRtcCloudRecordingResponse
     */
    public StopRtcCloudRecordingResponse stopRtcCloudRecordingWithOptions(StopRtcCloudRecordingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StopRtcCloudRecording"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StopRtcCloudRecordingResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>停止rtc云端录制任务</p>
     * 
     * @param request StopRtcCloudRecordingRequest
     * @return StopRtcCloudRecordingResponse
     */
    public StopRtcCloudRecordingResponse stopRtcCloudRecording(StopRtcCloudRecordingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.stopRtcCloudRecordingWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>The key of the tag. Valid values of N: <strong>1 to 20</strong>.</p>
     * 
     * <b>summary</b> : 
     * <p>The N tags that you want to add for the resource.</p>
     * 
     * @param request TagLiveResourcesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return TagLiveResourcesResponse
     */
    public TagLiveResourcesResponse tagLiveResourcesWithOptions(TagLiveResourcesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceId)) {
            query.put("ResourceId", request.resourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceType)) {
            query.put("ResourceType", request.resourceType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tag)) {
            query.put("Tag", request.tag);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "TagLiveResources"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new TagLiveResourcesResponse());
    }

    /**
     * <b>description</b> :
     * <p>The key of the tag. Valid values of N: <strong>1 to 20</strong>.</p>
     * 
     * <b>summary</b> : 
     * <p>The N tags that you want to add for the resource.</p>
     * 
     * @param request TagLiveResourcesRequest
     * @return TagLiveResourcesResponse
     */
    public TagLiveResourcesResponse tagLiveResources(TagLiveResourcesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.tagLiveResourcesWithOptions(request, runtime);
    }

    /**
     * @param request UnTagLiveResourcesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UnTagLiveResourcesResponse
     */
    public UnTagLiveResourcesResponse unTagLiveResourcesWithOptions(UnTagLiveResourcesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.all)) {
            query.put("All", request.all);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceId)) {
            query.put("ResourceId", request.resourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceType)) {
            query.put("ResourceType", request.resourceType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tagKey)) {
            query.put("TagKey", request.tagKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UnTagLiveResources"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UnTagLiveResourcesResponse());
    }

    /**
     * @param request UnTagLiveResourcesRequest
     * @return UnTagLiveResourcesResponse
     */
    public UnTagLiveResourcesResponse unTagLiveResources(UnTagLiveResourcesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.unTagLiveResourcesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <ul>
     * <li>If a user was muted by calling the AddLiveMessageGroupBand operation, the user remains muted even after you call the UnbanLiveMessageGroup operation.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Unmutes a group.</p>
     * 
     * @param request UnbanLiveMessageGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UnbanLiveMessageGroupResponse
     */
    public UnbanLiveMessageGroupResponse unbanLiveMessageGroupWithOptions(UnbanLiveMessageGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCenter)) {
            query.put("DataCenter", request.dataCenter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UnbanLiveMessageGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UnbanLiveMessageGroupResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848163.html">CreateLiveMessageGroup</a> operation to create an interactive messaging group.</p>
     * <ul>
     * <li>If a user was muted by calling the AddLiveMessageGroupBand operation, the user remains muted even after you call the UnbanLiveMessageGroup operation.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Unmutes a group.</p>
     * 
     * @param request UnbanLiveMessageGroupRequest
     * @return UnbanLiveMessageGroupResponse
     */
    public UnbanLiveMessageGroupResponse unbanLiveMessageGroup(UnbanLiveMessageGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.unbanLiveMessageGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>To call this operation to change the resource group to which a production studio belongs, you must have access permissions on the original resource group and the destination resource group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Changes the resource group to which a production studio belongs.</p>
     * 
     * @param request UpdateCasterResourceGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateCasterResourceGroupResponse
     */
    public UpdateCasterResourceGroupResponse updateCasterResourceGroupWithOptions(UpdateCasterResourceGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.newResourceGroupId)) {
            query.put("NewResourceGroupId", request.newResourceGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateCasterResourceGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateCasterResourceGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#"></a>Usage notes</h2>
     * <p>To call this operation to change the resource group to which a production studio belongs, you must have access permissions on the original resource group and the destination resource group.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Changes the resource group to which a production studio belongs.</p>
     * 
     * @param request UpdateCasterResourceGroupRequest
     * @return UpdateCasterResourceGroupResponse
     */
    public UpdateCasterResourceGroupResponse updateCasterResourceGroup(UpdateCasterResourceGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateCasterResourceGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to modify the audio configurations of a scene in the production studio. This operation supports the audio mixing mode and the audio follows video (AFV) mode.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the audio configurations of a scene. This operation also allows you to add an audio configuration or apply an existing audio configuration to a new scene.</p>
     * 
     * @param request UpdateCasterSceneAudioRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateCasterSceneAudioResponse
     */
    public UpdateCasterSceneAudioResponse updateCasterSceneAudioWithOptions(UpdateCasterSceneAudioRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.audioLayer)) {
            query.put("AudioLayer", request.audioLayer);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.followEnable)) {
            query.put("FollowEnable", request.followEnable);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mixList)) {
            query.put("MixList", request.mixList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sceneId)) {
            query.put("SceneId", request.sceneId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateCasterSceneAudio"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateCasterSceneAudioResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/2848009.html">CreateCaster</a> operation to create a production studio and then call this operation to modify the audio configurations of a scene in the production studio. This operation supports the audio mixing mode and the audio follows video (AFV) mode.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the audio configurations of a scene. This operation also allows you to add an audio configuration or apply an existing audio configuration to a new scene.</p>
     * 
     * @param request UpdateCasterSceneAudioRequest
     * @return UpdateCasterSceneAudioResponse
     */
    public UpdateCasterSceneAudioResponse updateCasterSceneAudio(UpdateCasterSceneAudioRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateCasterSceneAudioWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify a scene, including the layout, without invalidating the previous configurations. This operation is more efficient than the SetCasterSceneConfig operation.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies a scene, including the layout, without invalidating the previous configurations. This operation is more efficient than the SetCasterSceneConfig operation.</p>
     * 
     * @param request UpdateCasterSceneConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateCasterSceneConfigResponse
     */
    public UpdateCasterSceneConfigResponse updateCasterSceneConfigWithOptions(UpdateCasterSceneConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.casterId)) {
            query.put("CasterId", request.casterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.componentId)) {
            query.put("ComponentId", request.componentId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layoutId)) {
            query.put("LayoutId", request.layoutId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sceneId)) {
            query.put("SceneId", request.sceneId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateCasterSceneConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateCasterSceneConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify a scene, including the layout, without invalidating the previous configurations. This operation is more efficient than the SetCasterSceneConfig operation.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies a scene, including the layout, without invalidating the previous configurations. This operation is more efficient than the SetCasterSceneConfig operation.</p>
     * 
     * @param request UpdateCasterSceneConfigRequest
     * @return UpdateCasterSceneConfigResponse
     */
    public UpdateCasterSceneConfigResponse updateCasterSceneConfig(UpdateCasterSceneConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateCasterSceneConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation supports the following types of custom transcoding templates:</p>
     * <ul>
     * <li>h264: custom H.264 standard transcoding.</li>
     * <li>h264-nbhd: custom H.264 Narrowband HD™ transcoding.</li>
     * <li>h265: custom H.265 standard transcoding.</li>
     * <li>h265-nbhd: custom H.265 Narrowband HD™ transcoding.</li>
     * <li>audio: audio-only transcoding.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a custom transcoding configuration.</p>
     * 
     * @param request UpdateCustomLiveStreamTranscodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateCustomLiveStreamTranscodeResponse
     */
    public UpdateCustomLiveStreamTranscodeResponse updateCustomLiveStreamTranscodeWithOptions(UpdateCustomLiveStreamTranscodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioBitrate)) {
            query.put("AudioBitrate", request.audioBitrate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioChannelNum)) {
            query.put("AudioChannelNum", request.audioChannelNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioCodec)) {
            query.put("AudioCodec", request.audioCodec);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioProfile)) {
            query.put("AudioProfile", request.audioProfile);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioRate)) {
            query.put("AudioRate", request.audioRate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.bitrateWithSource)) {
            query.put("BitrateWithSource", request.bitrateWithSource);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.encryptParameters)) {
            query.put("EncryptParameters", request.encryptParameters);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.extWithSource)) {
            query.put("ExtWithSource", request.extWithSource);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.FPS)) {
            query.put("FPS", request.FPS);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fpsWithSource)) {
            query.put("FpsWithSource", request.fpsWithSource);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.gop)) {
            query.put("Gop", request.gop);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.height)) {
            query.put("Height", request.height);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.lazy)) {
            query.put("Lazy", request.lazy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.profile)) {
            query.put("Profile", request.profile);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resWithSource)) {
            query.put("ResWithSource", request.resWithSource);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.template)) {
            query.put("Template", request.template);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateType)) {
            query.put("TemplateType", request.templateType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.videoBitrate)) {
            query.put("VideoBitrate", request.videoBitrate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.width)) {
            query.put("Width", request.width);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateCustomLiveStreamTranscode"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateCustomLiveStreamTranscodeResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation supports the following types of custom transcoding templates:</p>
     * <ul>
     * <li>h264: custom H.264 standard transcoding.</li>
     * <li>h264-nbhd: custom H.264 Narrowband HD™ transcoding.</li>
     * <li>h265: custom H.265 standard transcoding.</li>
     * <li>h265-nbhd: custom H.265 Narrowband HD™ transcoding.</li>
     * <li>audio: audio-only transcoding.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a custom transcoding configuration.</p>
     * 
     * @param request UpdateCustomLiveStreamTranscodeRequest
     * @return UpdateCustomLiveStreamTranscodeResponse
     */
    public UpdateCustomLiveStreamTranscodeResponse updateCustomLiveStreamTranscode(UpdateCustomLiveStreamTranscodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateCustomLiveStreamTranscodeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to update an edge transcoding task.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature and the edge transcoding task that you specify is not started.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates an edge transcoding task.</p>
     * 
     * @param request UpdateEdgeTranscodeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateEdgeTranscodeJobResponse
     */
    public UpdateEdgeTranscodeJobResponse updateEdgeTranscodeJobWithOptions(UpdateEdgeTranscodeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.clusterId)) {
            query.put("ClusterId", request.clusterId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamInput)) {
            query.put("StreamInput", request.streamInput);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamOutput)) {
            query.put("StreamOutput", request.streamOutput);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateId)) {
            query.put("TemplateId", request.templateId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateEdgeTranscodeJob"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateEdgeTranscodeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to update an edge transcoding task.</p>
     * <ul>
     * <li>To call this operation, make sure that you have the permissions to access the edge transcoding feature and the edge transcoding task that you specify is not started.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 6,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates an edge transcoding task.</p>
     * 
     * @param request UpdateEdgeTranscodeJobRequest
     * @return UpdateEdgeTranscodeJobResponse
     */
    public UpdateEdgeTranscodeJobResponse updateEdgeTranscodeJob(UpdateEdgeTranscodeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateEdgeTranscodeJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848209.html">CreateEventSub</a> operation to create a callback that is used to subscribe to channel or user events.</p>
     * <ul>
     * <li>An existing channel that you specify in this operation still uses its original callback configuration. The updated configuration can apply to the channel only if you restart the channel after it is closed for longer than 20 minutes.</li>
     * <li>If you only want to update specific parameters, you must also specify the other required parameters with their original values.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a callback that is used to subscribe to channel or user events.</p>
     * 
     * @param request UpdateEventSubRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateEventSubResponse
     */
    public UpdateEventSubResponse updateEventSubWithOptions(UpdateEventSubRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.callbackUrl)) {
            query.put("CallbackUrl", request.callbackUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.events)) {
            query.put("Events", request.events);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subscribeId)) {
            query.put("SubscribeId", request.subscribeId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.users)) {
            query.put("Users", request.users);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateEventSub"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateEventSubResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Before you call this operation, make sure that you have called the <a href="https://help.aliyun.com/document_detail/2848209.html">CreateEventSub</a> operation to create a callback that is used to subscribe to channel or user events.</p>
     * <ul>
     * <li>An existing channel that you specify in this operation still uses its original callback configuration. The updated configuration can apply to the channel only if you restart the channel after it is closed for longer than 20 minutes.</li>
     * <li>If you only want to update specific parameters, you must also specify the other required parameters with their original values.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a callback that is used to subscribe to channel or user events.</p>
     * 
     * @param request UpdateEventSubRequest
     * @return UpdateEventSubResponse
     */
    public UpdateEventSubResponse updateEventSub(UpdateEventSubRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateEventSubWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify the parameters of a specified subtitle rule.</p>
     * <blockquote>
     * <p> The live subtitles feature is in invitational preview. You can add up to 300 subtitle templates.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a subtitle rule.</p>
     * 
     * @param request UpdateLiveAIProduceRulesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveAIProduceRulesResponse
     */
    public UpdateLiveAIProduceRulesResponse updateLiveAIProduceRulesWithOptions(UpdateLiveAIProduceRulesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.isLazy)) {
            query.put("IsLazy", request.isLazy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.liveTemplate)) {
            query.put("LiveTemplate", request.liveTemplate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.rulesId)) {
            query.put("RulesId", request.rulesId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.studioName)) {
            query.put("StudioName", request.studioName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subtitleId)) {
            query.put("SubtitleId", request.subtitleId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subtitleName)) {
            query.put("SubtitleName", request.subtitleName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.suffix)) {
            query.put("Suffix", request.suffix);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveAIProduceRules"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveAIProduceRulesResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify the parameters of a specified subtitle rule.</p>
     * <blockquote>
     * <p> The live subtitles feature is in invitational preview. You can add up to 300 subtitle templates.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a subtitle rule.</p>
     * 
     * @param request UpdateLiveAIProduceRulesRequest
     * @return UpdateLiveAIProduceRulesResponse
     */
    public UpdateLiveAIProduceRulesResponse updateLiveAIProduceRules(UpdateLiveAIProduceRulesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveAIProduceRulesWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Updates a subtitle template.</p>
     * 
     * @param tmpReq UpdateLiveAISubtitleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveAISubtitleResponse
     */
    public UpdateLiveAISubtitleResponse updateLiveAISubtitleWithOptions(UpdateLiveAISubtitleRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        UpdateLiveAISubtitleShrinkRequest request = new UpdateLiveAISubtitleShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.positionNormalized)) {
            request.positionNormalizedShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.positionNormalized, "PositionNormalized", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.bgColor)) {
            query.put("BgColor", request.bgColor);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.bgWidthNormalized)) {
            query.put("BgWidthNormalized", request.bgWidthNormalized);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.borderWidthNormalized)) {
            query.put("BorderWidthNormalized", request.borderWidthNormalized);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dstLanguage)) {
            query.put("DstLanguage", request.dstLanguage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fontColor)) {
            query.put("FontColor", request.fontColor);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fontName)) {
            query.put("FontName", request.fontName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fontSizeNormalized)) {
            query.put("FontSizeNormalized", request.fontSizeNormalized);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.height)) {
            query.put("Height", request.height);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.maxLines)) {
            query.put("MaxLines", request.maxLines);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.positionNormalizedShrink)) {
            query.put("PositionNormalized", request.positionNormalizedShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.showSourceLan)) {
            query.put("ShowSourceLan", request.showSourceLan);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.srcLanguage)) {
            query.put("SrcLanguage", request.srcLanguage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subtitleId)) {
            query.put("SubtitleId", request.subtitleId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subtitleName)) {
            query.put("SubtitleName", request.subtitleName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.width)) {
            query.put("Width", request.width);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.wordPerLine)) {
            query.put("WordPerLine", request.wordPerLine);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveAISubtitle"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveAISubtitleResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Updates a subtitle template.</p>
     * 
     * @param request UpdateLiveAISubtitleRequest
     * @return UpdateLiveAISubtitleResponse
     */
    public UpdateLiveAISubtitleResponse updateLiveAISubtitle(UpdateLiveAISubtitleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveAISubtitleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to update a recording configuration.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a recording configuration for an application. The recordings are stored in Object Storage Service (OSS).</p>
     * 
     * @param request UpdateLiveAppRecordConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveAppRecordConfigResponse
     */
    public UpdateLiveAppRecordConfigResponse updateLiveAppRecordConfigWithOptions(UpdateLiveAppRecordConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.delayTime)) {
            query.put("DelayTime", request.delayTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.onDemand)) {
            query.put("OnDemand", request.onDemand);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossEndpoint)) {
            query.put("OssEndpoint", request.ossEndpoint);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.recordFormat)) {
            query.put("RecordFormat", request.recordFormat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transcodeRecordFormat)) {
            query.put("TranscodeRecordFormat", request.transcodeRecordFormat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transcodeTemplates)) {
            query.put("TranscodeTemplates", request.transcodeTemplates);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveAppRecordConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveAppRecordConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>Obtain the main streaming domain, and then call this operation to update a recording configuration.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a recording configuration for an application. The recordings are stored in Object Storage Service (OSS).</p>
     * 
     * @param request UpdateLiveAppRecordConfigRequest
     * @return UpdateLiveAppRecordConfigResponse
     */
    public UpdateLiveAppRecordConfigResponse updateLiveAppRecordConfig(UpdateLiveAppRecordConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveAppRecordConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify a snapshot configuration of a streaming domain. The captured snapshots are stored in OSS. The modification takes effect after you restart stream ingest.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies a snapshot configuration of a streaming domain. The captured snapshots are stored in Object Storage Service (OSS). The modification takes effect after you restart stream ingest.</p>
     * 
     * @param request UpdateLiveAppSnapshotConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveAppSnapshotConfigResponse
     */
    public UpdateLiveAppSnapshotConfigResponse updateLiveAppSnapshotConfigWithOptions(UpdateLiveAppSnapshotConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.callback)) {
            query.put("Callback", request.callback);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossBucket)) {
            query.put("OssBucket", request.ossBucket);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossEndpoint)) {
            query.put("OssEndpoint", request.ossEndpoint);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.overwriteOssObject)) {
            query.put("OverwriteOssObject", request.overwriteOssObject);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sequenceOssObject)) {
            query.put("SequenceOssObject", request.sequenceOssObject);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.timeInterval)) {
            query.put("TimeInterval", request.timeInterval);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveAppSnapshotConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveAppSnapshotConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify a snapshot configuration of a streaming domain. The captured snapshots are stored in OSS. The modification takes effect after you restart stream ingest.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies a snapshot configuration of a streaming domain. The captured snapshots are stored in Object Storage Service (OSS). The modification takes effect after you restart stream ingest.</p>
     * 
     * @param request UpdateLiveAppSnapshotConfigRequest
     * @return UpdateLiveAppSnapshotConfigResponse
     */
    public UpdateLiveAppSnapshotConfigResponse updateLiveAppSnapshotConfig(UpdateLiveAppSnapshotConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveAppSnapshotConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to modify an audio moderation configuration.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies an audio moderation configuration.</p>
     * 
     * @param request UpdateLiveAudioAuditConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveAudioAuditConfigResponse
     */
    public UpdateLiveAudioAuditConfigResponse updateLiveAudioAuditConfigWithOptions(UpdateLiveAudioAuditConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.bizType)) {
            query.put("BizType", request.bizType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossBucket)) {
            query.put("OssBucket", request.ossBucket);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossEndpoint)) {
            query.put("OssEndpoint", request.ossEndpoint);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossObject)) {
            query.put("OssObject", request.ossObject);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveAudioAuditConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveAudioAuditConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to modify an audio moderation configuration.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies an audio moderation configuration.</p>
     * 
     * @param request UpdateLiveAudioAuditConfigRequest
     * @return UpdateLiveAudioAuditConfigResponse
     */
    public UpdateLiveAudioAuditConfigResponse updateLiveAudioAuditConfig(UpdateLiveAudioAuditConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveAudioAuditConfigWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Modifies the configuration of callbacks for audio moderation results.</p>
     * 
     * @param request UpdateLiveAudioAuditNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveAudioAuditNotifyConfigResponse
     */
    public UpdateLiveAudioAuditNotifyConfigResponse updateLiveAudioAuditNotifyConfigWithOptions(UpdateLiveAudioAuditNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.callback)) {
            query.put("Callback", request.callback);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.callbackTemplate)) {
            query.put("CallbackTemplate", request.callbackTemplate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveAudioAuditNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveAudioAuditNotifyConfigResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Modifies the configuration of callbacks for audio moderation results.</p>
     * 
     * @param request UpdateLiveAudioAuditNotifyConfigRequest
     * @return UpdateLiveAudioAuditNotifyConfigResponse
     */
    public UpdateLiveAudioAuditNotifyConfigResponse updateLiveAudioAuditNotifyConfig(UpdateLiveAudioAuditNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveAudioAuditNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify only the <strong>time-related</strong> parameters, including TransferArgs, StartTime, and EndTime.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the configurations of live center stream relay.</p>
     * 
     * @param request UpdateLiveCenterTransferRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveCenterTransferResponse
     */
    public UpdateLiveCenterTransferResponse updateLiveCenterTransferWithOptions(UpdateLiveCenterTransferRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dstUrl)) {
            query.put("DstUrl", request.dstUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transferArgs)) {
            query.put("TransferArgs", request.transferArgs);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveCenterTransfer"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveCenterTransferResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify only the <strong>time-related</strong> parameters, including TransferArgs, StartTime, and EndTime.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the configurations of live center stream relay.</p>
     * 
     * @param request UpdateLiveCenterTransferRequest
     * @return UpdateLiveCenterTransferResponse
     */
    public UpdateLiveCenterTransferResponse updateLiveCenterTransfer(UpdateLiveCenterTransferRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveCenterTransferWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a stream delay configuration.</p>
     * 
     * @param request UpdateLiveDelayConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveDelayConfigResponse
     */
    public UpdateLiveDelayConfigResponse updateLiveDelayConfigWithOptions(UpdateLiveDelayConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.delayTime)) {
            query.put("DelayTime", request.delayTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.stream)) {
            query.put("Stream", request.stream);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskTriggerMode)) {
            query.put("TaskTriggerMode", request.taskTriggerMode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveDelayConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveDelayConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a stream delay configuration.</p>
     * 
     * @param request UpdateLiveDelayConfigRequest
     * @return UpdateLiveDelayConfigResponse
     */
    public UpdateLiveDelayConfigResponse updateLiveDelayConfig(UpdateLiveDelayConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveDelayConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to modify the configuration of callbacks for video moderation results.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the configuration of callbacks for video moderation results. As a result, the callback URL that is used to receive the callback notifications is changed.</p>
     * 
     * @param request UpdateLiveDetectNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveDetectNotifyConfigResponse
     */
    public UpdateLiveDetectNotifyConfigResponse updateLiveDetectNotifyConfigWithOptions(UpdateLiveDetectNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyUrl)) {
            query.put("NotifyUrl", request.notifyUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveDetectNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveDetectNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to modify the configuration of callbacks for video moderation results.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the configuration of callbacks for video moderation results. As a result, the callback URL that is used to receive the callback notifications is changed.</p>
     * 
     * @param request UpdateLiveDetectNotifyConfigRequest
     * @return UpdateLiveDetectNotifyConfigResponse
     */
    public UpdateLiveDetectNotifyConfigResponse updateLiveDetectNotifyConfig(UpdateLiveDetectNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveDetectNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Make sure that a mixed-stream relay task is created before you call this operation. You can call the <a href="https://help.aliyun.com/document_detail/2848199.html">StartLiveMPUTask</a> operation to create a mixed-stream relay task.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 500 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a mixed-stream relay task.</p>
     * 
     * @param tmpReq UpdateLiveMPUTaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveMPUTaskResponse
     */
    public UpdateLiveMPUTaskResponse updateLiveMPUTaskWithOptions(UpdateLiveMPUTaskRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        UpdateLiveMPUTaskShrinkRequest request = new UpdateLiveMPUTaskShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.multiStreamURL)) {
            request.multiStreamURLShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.multiStreamURL, "MultiStreamURL", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.seiParams)) {
            request.seiParamsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.seiParams, "SeiParams", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.singleSubParams)) {
            request.singleSubParamsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.singleSubParams, "SingleSubParams", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.transcodeParams)) {
            request.transcodeParamsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.transcodeParams, "TranscodeParams", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mixMode)) {
            query.put("MixMode", request.mixMode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.multiStreamURLShrink)) {
            query.put("MultiStreamURL", request.multiStreamURLShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.seiParamsShrink)) {
            query.put("SeiParams", request.seiParamsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.singleSubParamsShrink)) {
            query.put("SingleSubParams", request.singleSubParamsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamURL)) {
            query.put("StreamURL", request.streamURL);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transcodeParamsShrink)) {
            query.put("TranscodeParams", request.transcodeParamsShrink);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveMPUTask"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveMPUTaskResponse());
    }

    /**
     * <b>description</b> :
     * <p>Make sure that a mixed-stream relay task is created before you call this operation. You can call the <a href="https://help.aliyun.com/document_detail/2848199.html">StartLiveMPUTask</a> operation to create a mixed-stream relay task.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 500 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a mixed-stream relay task.</p>
     * 
     * @param request UpdateLiveMPUTaskRequest
     * @return UpdateLiveMPUTaskResponse
     */
    public UpdateLiveMPUTaskResponse updateLiveMPUTask(UpdateLiveMPUTaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveMPUTaskWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to update a live stream encapsulation configuration. The update takes effect only after you re-ingest the stream.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 300 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a live stream encapsulation configuration.</p>
     * 
     * @param request UpdateLivePackageConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLivePackageConfigResponse
     */
    public UpdateLivePackageConfigResponse updateLivePackageConfigWithOptions(UpdateLivePackageConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ignoreTranscode)) {
            query.put("IgnoreTranscode", request.ignoreTranscode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.partDuration)) {
            query.put("PartDuration", request.partDuration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.protocol)) {
            query.put("Protocol", request.protocol);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.segmentDuration)) {
            query.put("SegmentDuration", request.segmentDuration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.segmentNum)) {
            query.put("SegmentNum", request.segmentNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLivePackageConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLivePackageConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to update a live stream encapsulation configuration. The update takes effect only after you re-ingest the stream.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 300 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a live stream encapsulation configuration.</p>
     * 
     * @param request UpdateLivePackageConfigRequest
     * @return UpdateLivePackageConfigResponse
     */
    public UpdateLivePackageConfigResponse updateLivePackageConfig(UpdateLivePackageConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLivePackageConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation is applicable to regular stream pulling. You can call this operation to modify the stream pulling settings of a live stream, including the origin URL, start time, and end time.</p>
     * <blockquote>
     * <p> After this operation is complete, ApsaraVideo Live uses the updated settings for regular stream pulling. Make sure that the modification does not affect your business.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the stream pulling settings of a live stream, including the origin URL, start time, and end time.</p>
     * 
     * @param request UpdateLivePullStreamInfoConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLivePullStreamInfoConfigResponse
     */
    public UpdateLivePullStreamInfoConfigResponse updateLivePullStreamInfoConfigWithOptions(UpdateLivePullStreamInfoConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLivePullStreamInfoConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLivePullStreamInfoConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation is applicable to regular stream pulling. You can call this operation to modify the stream pulling settings of a live stream, including the origin URL, start time, and end time.</p>
     * <blockquote>
     * <p> After this operation is complete, ApsaraVideo Live uses the updated settings for regular stream pulling. Make sure that the modification does not affect your business.</p>
     * </blockquote>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the stream pulling settings of a live stream, including the origin URL, start time, and end time.</p>
     * 
     * @param request UpdateLivePullStreamInfoConfigRequest
     * @return UpdateLivePullStreamInfoConfigResponse
     */
    public UpdateLivePullStreamInfoConfigResponse updateLivePullStreamInfoConfig(UpdateLivePullStreamInfoConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLivePullStreamInfoConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to update a pulled-stream relay task.</p>
     * <ul>
     * <li>As long as the specified start time of a task has not been reached, you can modify the SourceType, Region, and DstUrl parameters of the task.</li>
     * <li>If a task is running (even if the task is in an abnormal retry state), you can modify only the CallbackUrl and RepeatTime parameters of the task. The update takes effect immediately.</li>
     * <li>If a task is stopped, you can modify all parameters of the task except SourceType, Region, and DstUrl.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a pulled-stream relay task.</p>
     * 
     * @param tmpReq UpdateLivePullToPushRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLivePullToPushResponse
     */
    public UpdateLivePullToPushResponse updateLivePullToPushWithOptions(UpdateLivePullToPushRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        UpdateLivePullToPushShrinkRequest request = new UpdateLivePullToPushShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.sourceUrls)) {
            request.sourceUrlsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.sourceUrls, "SourceUrls", "json");
        }

        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLivePullToPush"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLivePullToPushResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to update a pulled-stream relay task.</p>
     * <ul>
     * <li>As long as the specified start time of a task has not been reached, you can modify the SourceType, Region, and DstUrl parameters of the task.</li>
     * <li>If a task is running (even if the task is in an abnormal retry state), you can modify only the CallbackUrl and RepeatTime parameters of the task. The update takes effect immediately.</li>
     * <li>If a task is stopped, you can modify all parameters of the task except SourceType, Region, and DstUrl.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a pulled-stream relay task.</p>
     * 
     * @param request UpdateLivePullToPushRequest
     * @return UpdateLivePullToPushResponse
     */
    public UpdateLivePullToPushResponse updateLivePullToPush(UpdateLivePullToPushRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLivePullToPushWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify the following settings:</p>
     * <ul>
     * <li>The callback URL that is used to receive notifications about recording events and status. For more information, see <a href="https://help.aliyun.com/document_detail/55016.html">Recording event callbacks</a>.</li>
     * <li>The callback URL for on-demand recordings. For more information, see <a href="https://help.aliyun.com/document_detail/85910.html">On-demand recording callbacks</a>.</li>
     * <li>The setting that specifies whether to enable callbacks for recording status.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the recording callback configuration of a streaming domain.</p>
     * 
     * @param request UpdateLiveRecordNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveRecordNotifyConfigResponse
     */
    public UpdateLiveRecordNotifyConfigResponse updateLiveRecordNotifyConfigWithOptions(UpdateLiveRecordNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.needStatusNotify)) {
            query.put("NeedStatusNotify", request.needStatusNotify);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyUrl)) {
            query.put("NotifyUrl", request.notifyUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.onDemandUrl)) {
            query.put("OnDemandUrl", request.onDemandUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveRecordNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveRecordNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to modify the following settings:</p>
     * <ul>
     * <li>The callback URL that is used to receive notifications about recording events and status. For more information, see <a href="https://help.aliyun.com/document_detail/55016.html">Recording event callbacks</a>.</li>
     * <li>The callback URL for on-demand recordings. For more information, see <a href="https://help.aliyun.com/document_detail/85910.html">On-demand recording callbacks</a>.</li>
     * <li>The setting that specifies whether to enable callbacks for recording status.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the recording callback configuration of a streaming domain.</p>
     * 
     * @param request UpdateLiveRecordNotifyConfigRequest
     * @return UpdateLiveRecordNotifyConfigResponse
     */
    public UpdateLiveRecordNotifyConfigResponse updateLiveRecordNotifyConfig(UpdateLiveRecordNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveRecordNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a Live-to-VOD configuration.</p>
     * 
     * @param request UpdateLiveRecordVodConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveRecordVodConfigResponse
     */
    public UpdateLiveRecordVodConfigResponse updateLiveRecordVodConfigWithOptions(UpdateLiveRecordVodConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.autoCompose)) {
            query.put("AutoCompose", request.autoCompose);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.composeVodTranscodeGroupId)) {
            query.put("ComposeVodTranscodeGroupId", request.composeVodTranscodeGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.cycleDuration)) {
            query.put("CycleDuration", request.cycleDuration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.onDemand)) {
            query.put("OnDemand", request.onDemand);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.streamName)) {
            query.put("StreamName", request.streamName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.vodTranscodeGroupId)) {
            query.put("VodTranscodeGroupId", request.vodTranscodeGroupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveRecordVodConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveRecordVodConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 1,000 times per minute per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a Live-to-VOD configuration.</p>
     * 
     * @param request UpdateLiveRecordVodConfigRequest
     * @return UpdateLiveRecordVodConfigResponse
     */
    public UpdateLiveRecordVodConfigResponse updateLiveRecordVodConfig(UpdateLiveRecordVodConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveRecordVodConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to modify a video moderation configuration.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies a video moderation configuration.</p>
     * 
     * @param request UpdateLiveSnapshotDetectPornConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveSnapshotDetectPornConfigResponse
     */
    public UpdateLiveSnapshotDetectPornConfigResponse updateLiveSnapshotDetectPornConfigWithOptions(UpdateLiveSnapshotDetectPornConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            query.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.interval)) {
            query.put("Interval", request.interval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossBucket)) {
            query.put("OssBucket", request.ossBucket);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossEndpoint)) {
            query.put("OssEndpoint", request.ossEndpoint);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ossObject)) {
            query.put("OssObject", request.ossObject);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scene)) {
            query.put("Scene", request.scene);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.securityToken)) {
            query.put("SecurityToken", request.securityToken);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveSnapshotDetectPornConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveSnapshotDetectPornConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Obtain the main streaming domain, and then call this operation to modify a video moderation configuration.</p>
     * <ul>
     * <li>Only some live centers support the content moderation feature. For more information, see <a href="https://help.aliyun.com/document_detail/193730.html">Supported regions</a>.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies a video moderation configuration.</p>
     * 
     * @param request UpdateLiveSnapshotDetectPornConfigRequest
     * @return UpdateLiveSnapshotDetectPornConfigResponse
     */
    public UpdateLiveSnapshotDetectPornConfigResponse updateLiveSnapshotDetectPornConfig(UpdateLiveSnapshotDetectPornConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveSnapshotDetectPornConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the configuration of snapshot callbacks.</p>
     * 
     * @param request UpdateLiveSnapshotNotifyConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveSnapshotNotifyConfigResponse
     */
    public UpdateLiveSnapshotNotifyConfigResponse updateLiveSnapshotNotifyConfigWithOptions(UpdateLiveSnapshotNotifyConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyAuthKey)) {
            query.put("NotifyAuthKey", request.notifyAuthKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyReqAuth)) {
            query.put("NotifyReqAuth", request.notifyReqAuth);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.notifyUrl)) {
            query.put("NotifyUrl", request.notifyUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveSnapshotNotifyConfig"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveSnapshotNotifyConfigResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation up to 30 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Modifies the configuration of snapshot callbacks.</p>
     * 
     * @param request UpdateLiveSnapshotNotifyConfigRequest
     * @return UpdateLiveSnapshotNotifyConfigResponse
     */
    public UpdateLiveSnapshotNotifyConfigResponse updateLiveSnapshotNotifyConfig(UpdateLiveSnapshotNotifyConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveSnapshotNotifyConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to update the configurations of a monitoring session. The updates that you make to the input source configurations when the monitoring session is in the Running state immediately take effect.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates the configurations of a monitoring session.</p>
     * 
     * @param request UpdateLiveStreamMonitorRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveStreamMonitorResponse
     */
    public UpdateLiveStreamMonitorResponse updateLiveStreamMonitorWithOptions(UpdateLiveStreamMonitorRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.callbackUrl)) {
            query.put("CallbackUrl", request.callbackUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dingTalkWebHookUrl)) {
            query.put("DingTalkWebHookUrl", request.dingTalkWebHookUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.inputList)) {
            query.put("InputList", request.inputList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.monitorConfig)) {
            query.put("MonitorConfig", request.monitorConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.monitorId)) {
            query.put("MonitorId", request.monitorId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.monitorName)) {
            query.put("MonitorName", request.monitorName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.outputTemplate)) {
            query.put("OutputTemplate", request.outputTemplate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.stream)) {
            query.put("Stream", request.stream);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveStreamMonitor"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveStreamMonitorResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to update the configurations of a monitoring session. The updates that you make to the input source configurations when the monitoring session is in the Running state immediately take effect.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates the configurations of a monitoring session.</p>
     * 
     * @param request UpdateLiveStreamMonitorRequest
     * @return UpdateLiveStreamMonitorResponse
     */
    public UpdateLiveStreamMonitorResponse updateLiveStreamMonitor(UpdateLiveStreamMonitorRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveStreamMonitorWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You must obtain the customer master key (CMK) in Key Management Service (KMS) before you call this operation to update a transcoding configuration. Only standard transcoding templates and Narrowband HD™ transcoding templates are supported for this operation.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a default transcoding configuration.</p>
     * 
     * @param request UpdateLiveStreamTranscodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveStreamTranscodeResponse
     */
    public UpdateLiveStreamTranscodeResponse updateLiveStreamTranscodeWithOptions(UpdateLiveStreamTranscodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.encryptParameters)) {
            query.put("EncryptParameters", request.encryptParameters);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.lazy)) {
            query.put("Lazy", request.lazy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.template)) {
            query.put("Template", request.template);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveStreamTranscode"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveStreamTranscodeResponse());
    }

    /**
     * <b>description</b> :
     * <p>You must obtain the customer master key (CMK) in Key Management Service (KMS) before you call this operation to update a transcoding configuration. Only standard transcoding templates and Narrowband HD™ transcoding templates are supported for this operation.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 30 times per second per account.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a default transcoding configuration.</p>
     * 
     * @param request UpdateLiveStreamTranscodeRequest
     * @return UpdateLiveStreamTranscodeResponse
     */
    public UpdateLiveStreamTranscodeResponse updateLiveStreamTranscode(UpdateLiveStreamTranscodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveStreamTranscodeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation allows you to modify the parameters of a watermark template with a specified ID.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a watermark template.</p>
     * 
     * @param request UpdateLiveStreamWatermarkRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveStreamWatermarkResponse
     */
    public UpdateLiveStreamWatermarkResponse updateLiveStreamWatermarkWithOptions(UpdateLiveStreamWatermarkRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.height)) {
            query.put("Height", request.height);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.offsetCorner)) {
            query.put("OffsetCorner", request.offsetCorner);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pictureUrl)) {
            query.put("PictureUrl", request.pictureUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.refHeight)) {
            query.put("RefHeight", request.refHeight);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.refWidth)) {
            query.put("RefWidth", request.refWidth);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateId)) {
            query.put("TemplateId", request.templateId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.transparency)) {
            query.put("Transparency", request.transparency);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.XOffset)) {
            query.put("XOffset", request.XOffset);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.YOffset)) {
            query.put("YOffset", request.YOffset);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveStreamWatermark"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveStreamWatermarkResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation allows you to modify the parameters of a watermark template with a specified ID.</p>
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://www.alibabacloud.com/help/en/apsaravideo-live/latest/qps-limit-on-an-api-operation-in-apsaravideo-live">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a watermark template.</p>
     * 
     * @param request UpdateLiveStreamWatermarkRequest
     * @return UpdateLiveStreamWatermarkResponse
     */
    public UpdateLiveStreamWatermarkResponse updateLiveStreamWatermark(UpdateLiveStreamWatermarkRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveStreamWatermarkWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation allows you to modify the parameters of a watermark rule with a specified ID.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a watermark rule.</p>
     * 
     * @param request UpdateLiveStreamWatermarkRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateLiveStreamWatermarkRuleResponse
     */
    public UpdateLiveStreamWatermarkRuleResponse updateLiveStreamWatermarkRuleWithOptions(UpdateLiveStreamWatermarkRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateId)) {
            query.put("TemplateId", request.templateId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateLiveStreamWatermarkRule"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateLiveStreamWatermarkRuleResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation allows you to modify the parameters of a watermark rule with a specified ID.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 60 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a watermark rule.</p>
     * 
     * @param request UpdateLiveStreamWatermarkRuleRequest
     * @return UpdateLiveStreamWatermarkRuleResponse
     */
    public UpdateLiveStreamWatermarkRuleResponse updateLiveStreamWatermarkRule(UpdateLiveStreamWatermarkRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateLiveStreamWatermarkRuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates the configurations of an interactive message application.</p>
     * 
     * @param tmpReq UpdateMessageAppRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateMessageAppResponse
     */
    public UpdateMessageAppResponse updateMessageAppWithOptions(UpdateMessageAppRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        UpdateMessageAppShrinkRequest request = new UpdateMessageAppShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.appConfig)) {
            request.appConfigShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.appConfig, "AppConfig", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.extension)) {
            request.extensionShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.extension, "Extension", "json");
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appConfigShrink)) {
            body.put("AppConfig", request.appConfigShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.appName)) {
            body.put("AppName", request.appName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.extensionShrink)) {
            body.put("Extension", request.extensionShrink);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateMessageApp"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateMessageAppResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates the configurations of an interactive message application.</p>
     * 
     * @param request UpdateMessageAppRequest
     * @return UpdateMessageAppResponse
     */
    public UpdateMessageAppResponse updateMessageApp(UpdateMessageAppRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateMessageAppWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates the information about a message group.</p>
     * 
     * @param tmpReq UpdateMessageGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateMessageGroupResponse
     */
    public UpdateMessageGroupResponse updateMessageGroupWithOptions(UpdateMessageGroupRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        UpdateMessageGroupShrinkRequest request = new UpdateMessageGroupShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.extension)) {
            request.extensionShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.extension, "Extension", "json");
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.extensionShrink)) {
            body.put("Extension", request.extensionShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            body.put("GroupId", request.groupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateMessageGroup"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateMessageGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limit</h2>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limit on an API operation in ApsaraVideo Live</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates the information about a message group.</p>
     * 
     * @param request UpdateMessageGroupRequest
     * @return UpdateMessageGroupResponse
     */
    public UpdateMessageGroupResponse updateMessageGroup(UpdateMessageGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateMessageGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to update a stream mixing task. This operation allows you to modify the input sources and layout, but not other parameters such as the output resolution.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a stream mixing task.</p>
     * 
     * @param request UpdateMixStreamRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateMixStreamResponse
     */
    public UpdateMixStreamResponse updateMixStreamWithOptions(UpdateMixStreamRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.inputStreamList)) {
            query.put("InputStreamList", request.inputStreamList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.layoutId)) {
            query.put("LayoutId", request.layoutId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mixStreamId)) {
            query.put("MixStreamId", request.mixStreamId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateMixStream"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateMixStreamResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation to update a stream mixing task. This operation allows you to modify the input sources and layout, but not other parameters such as the output resolution.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a stream mixing task.</p>
     * 
     * @param request UpdateMixStreamRequest
     * @return UpdateMixStreamResponse
     */
    public UpdateMixStreamResponse updateMixStream(UpdateMixStreamRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateMixStreamWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>更新rtc云端录制任务</p>
     * 
     * @param tmpReq UpdateRtcCloudRecordingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateRtcCloudRecordingResponse
     */
    public UpdateRtcCloudRecordingResponse updateRtcCloudRecordingWithOptions(UpdateRtcCloudRecordingRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        UpdateRtcCloudRecordingShrinkRequest request = new UpdateRtcCloudRecordingShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.mixLayoutParams)) {
            request.mixLayoutParamsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.mixLayoutParams, "MixLayoutParams", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.subscribeParams)) {
            request.subscribeParamsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.subscribeParams, "SubscribeParams", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.mixLayoutParamsShrink)) {
            query.put("MixLayoutParams", request.mixLayoutParamsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subscribeParamsShrink)) {
            query.put("SubscribeParams", request.subscribeParamsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateRtcCloudRecording"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateRtcCloudRecordingResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>更新rtc云端录制任务</p>
     * 
     * @param request UpdateRtcCloudRecordingRequest
     * @return UpdateRtcCloudRecordingResponse
     */
    public UpdateRtcCloudRecordingResponse updateRtcCloudRecording(UpdateRtcCloudRecordingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateRtcCloudRecordingWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to update a subscription to mixed-stream relay events. You can modify parameters such as the callback URL and channel IDs.</p>
     * <ul>
     * <li>Before you call this operation, make sure that you have called the CreateRtcMPUEventSub operation to create the subscription.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a subscription to mixed-stream relay events.</p>
     * 
     * @param request UpdateRtcMPUEventSubRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateRtcMPUEventSubResponse
     */
    public UpdateRtcMPUEventSubResponse updateRtcMPUEventSubWithOptions(UpdateRtcMPUEventSubRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            query.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.callbackUrl)) {
            query.put("CallbackUrl", request.callbackUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelIds)) {
            query.put("ChannelIds", request.channelIds);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateRtcMPUEventSub"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateRtcMPUEventSubResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to update a subscription to mixed-stream relay events. You can modify parameters such as the callback URL and channel IDs.</p>
     * <ul>
     * <li>Before you call this operation, make sure that you have called the CreateRtcMPUEventSub operation to create the subscription.</li>
     * </ul>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 50 times per second per account. Requests that exceed this limit are dropped and you will experience service interruptions. We recommend that you take note of this limit when you call this operation.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a subscription to mixed-stream relay events.</p>
     * 
     * @param request UpdateRtcMPUEventSubRequest
     * @return UpdateRtcMPUEventSubResponse
     */
    public UpdateRtcMPUEventSubResponse updateRtcMPUEventSub(UpdateRtcMPUEventSubRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateRtcMPUEventSubWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation supports the following types of custom transcoding templates: h264, h264-nbhd, h264-origin, and audio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a custom Real-Time Streaming (RTS) transcoding configuration.</p>
     * 
     * @param request UpdateRtsLiveStreamTranscodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateRtsLiveStreamTranscodeResponse
     */
    public UpdateRtsLiveStreamTranscodeResponse updateRtsLiveStreamTranscodeWithOptions(UpdateRtsLiveStreamTranscodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.app)) {
            query.put("App", request.app);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioBitrate)) {
            query.put("AudioBitrate", request.audioBitrate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioChannelNum)) {
            query.put("AudioChannelNum", request.audioChannelNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioCodec)) {
            query.put("AudioCodec", request.audioCodec);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioProfile)) {
            query.put("AudioProfile", request.audioProfile);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.audioRate)) {
            query.put("AudioRate", request.audioRate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deleteBframes)) {
            query.put("DeleteBframes", request.deleteBframes);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domain)) {
            query.put("Domain", request.domain);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.FPS)) {
            query.put("FPS", request.FPS);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.gop)) {
            query.put("Gop", request.gop);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.height)) {
            query.put("Height", request.height);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.lazy)) {
            query.put("Lazy", request.lazy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.opus)) {
            query.put("Opus", request.opus);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.profile)) {
            query.put("Profile", request.profile);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.template)) {
            query.put("Template", request.template);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateType)) {
            query.put("TemplateType", request.templateType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.videoBitrate)) {
            query.put("VideoBitrate", request.videoBitrate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.width)) {
            query.put("Width", request.width);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateRtsLiveStreamTranscode"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateRtsLiveStreamTranscodeResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation supports the following types of custom transcoding templates: h264, h264-nbhd, h264-origin, and audio.</p>
     * <h2><a href="#qps-"></a>QPS limit</h2>
     * <p>You can call this operation up to 10 times per second per account.</p>
     * 
     * <b>summary</b> : 
     * <p>Updates a custom Real-Time Streaming (RTS) transcoding configuration.</p>
     * 
     * @param request UpdateRtsLiveStreamTranscodeRequest
     * @return UpdateRtsLiveStreamTranscodeResponse
     */
    public UpdateRtsLiveStreamTranscodeResponse updateRtsLiveStreamTranscode(UpdateRtsLiveStreamTranscodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateRtsLiveStreamTranscodeWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Verifies the ownership of a domain name.</p>
     * 
     * @param request VerifyLiveDomainOwnerRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return VerifyLiveDomainOwnerResponse
     */
    public VerifyLiveDomainOwnerResponse verifyLiveDomainOwnerWithOptions(VerifyLiveDomainOwnerRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.domainName)) {
            query.put("DomainName", request.domainName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.verifyType)) {
            query.put("VerifyType", request.verifyType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "VerifyLiveDomainOwner"),
            new TeaPair("version", "2016-11-01"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new VerifyLiveDomainOwnerResponse());
    }

    /**
     * <b>description</b> :
     * <h3><a href="#qps-"></a>QPS limit</h3>
     * <p>You can call this operation up to 100 times per second per account. Requests that exceed this limit are dropped and you may experience service interruptions. We recommend that you take note of this limit when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/343507.html">QPS limits</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>Verifies the ownership of a domain name.</p>
     * 
     * @param request VerifyLiveDomainOwnerRequest
     * @return VerifyLiveDomainOwnerResponse
     */
    public VerifyLiveDomainOwnerResponse verifyLiveDomainOwner(VerifyLiveDomainOwnerRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.verifyLiveDomainOwnerWithOptions(request, runtime);
    }
}
