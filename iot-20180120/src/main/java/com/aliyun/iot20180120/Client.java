// This file is auto-generated, don't edit it. Thanks.
package com.aliyun.iot20180120;

import com.aliyun.tea.*;
import com.aliyun.iot20180120.models.*;

public class Client extends com.aliyun.teaopenapi.Client {

    public Client(com.aliyun.teaopenapi.models.Config config) throws Exception {
        super(config);
        this._endpointRule = "regional";
        this._endpointMap = TeaConverter.buildMap(
            new TeaPair("ap-northeast-2-pop", "iot.aliyuncs.com"),
            new TeaPair("ap-south-1", "iot.aliyuncs.com"),
            new TeaPair("ap-southeast-2", "iot.aliyuncs.com"),
            new TeaPair("ap-southeast-3", "iot.aliyuncs.com"),
            new TeaPair("ap-southeast-5", "iot.aliyuncs.com"),
            new TeaPair("cn-beijing-finance-1", "iot.aliyuncs.com"),
            new TeaPair("cn-beijing-finance-pop", "iot.aliyuncs.com"),
            new TeaPair("cn-beijing-gov-1", "iot.aliyuncs.com"),
            new TeaPair("cn-beijing-nu16-b01", "iot.aliyuncs.com"),
            new TeaPair("cn-chengdu", "iot.aliyuncs.com"),
            new TeaPair("cn-edge-1", "iot.aliyuncs.com"),
            new TeaPair("cn-fujian", "iot.aliyuncs.com"),
            new TeaPair("cn-haidian-cm12-c01", "iot.aliyuncs.com"),
            new TeaPair("cn-hangzhou-bj-b01", "iot.aliyuncs.com"),
            new TeaPair("cn-hangzhou-finance", "iot.aliyuncs.com"),
            new TeaPair("cn-hangzhou-internal-prod-1", "iot.aliyuncs.com"),
            new TeaPair("cn-hangzhou-internal-test-1", "iot.aliyuncs.com"),
            new TeaPair("cn-hangzhou-internal-test-2", "iot.aliyuncs.com"),
            new TeaPair("cn-hangzhou-internal-test-3", "iot.aliyuncs.com"),
            new TeaPair("cn-hangzhou-test-306", "iot.aliyuncs.com"),
            new TeaPair("cn-hongkong", "iot.aliyuncs.com"),
            new TeaPair("cn-hongkong-finance-pop", "iot.aliyuncs.com"),
            new TeaPair("cn-huhehaote", "iot.aliyuncs.com"),
            new TeaPair("cn-huhehaote-nebula-1", "iot.aliyuncs.com"),
            new TeaPair("cn-qingdao", "iot.aliyuncs.com"),
            new TeaPair("cn-qingdao-nebula", "iot.aliyuncs.com"),
            new TeaPair("cn-shanghai-et15-b01", "iot.aliyuncs.com"),
            new TeaPair("cn-shanghai-et2-b01", "iot.aliyuncs.com"),
            new TeaPair("cn-shanghai-finance-1", "iot.aliyuncs.com"),
            new TeaPair("cn-shanghai-inner", "iot.aliyuncs.com"),
            new TeaPair("cn-shanghai-internal-test-1", "iot.aliyuncs.com"),
            new TeaPair("cn-shenzhen-finance-1", "iot.aliyuncs.com"),
            new TeaPair("cn-shenzhen-inner", "iot.aliyuncs.com"),
            new TeaPair("cn-shenzhen-st4-d01", "iot.aliyuncs.com"),
            new TeaPair("cn-shenzhen-su18-b01", "iot.aliyuncs.com"),
            new TeaPair("cn-wuhan", "iot.aliyuncs.com"),
            new TeaPair("cn-wulanchabu", "iot.aliyuncs.com"),
            new TeaPair("cn-yushanfang", "iot.aliyuncs.com"),
            new TeaPair("cn-zhangbei", "iot.aliyuncs.com"),
            new TeaPair("cn-zhangbei-na61-b01", "iot.aliyuncs.com"),
            new TeaPair("cn-zhangjiakou", "iot.aliyuncs.com"),
            new TeaPair("cn-zhangjiakou-na62-a01", "iot.aliyuncs.com"),
            new TeaPair("cn-zhengzhou-nebula-1", "iot.aliyuncs.com"),
            new TeaPair("eu-west-1", "iot.aliyuncs.com"),
            new TeaPair("eu-west-1-oxs", "iot.aliyuncs.com"),
            new TeaPair("me-east-1", "iot.aliyuncs.com"),
            new TeaPair("rus-west-1-pop", "iot.aliyuncs.com")
        );
        this.checkConfig(config);
        this._endpoint = this.getEndpoint("iot", _regionId, _endpointRule, _network, _suffix, _endpointMap, _endpoint);
    }


    public String getEndpoint(String productId, String regionId, String endpointRule, String network, String suffix, java.util.Map<String, String> endpointMap, String endpoint) throws Exception {
        if (!com.aliyun.teautil.Common.empty(endpoint)) {
            return endpoint;
        }

        if (!com.aliyun.teautil.Common.isUnset(endpointMap) && !com.aliyun.teautil.Common.empty(endpointMap.get(regionId))) {
            return endpointMap.get(regionId);
        }

        return com.aliyun.endpointutil.Client.getEndpointRules(productId, regionId, endpointRule, network, suffix);
    }

    /**
     * @param request AddDataForApiSourceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddDataForApiSourceResponse
     */
    public AddDataForApiSourceResponse addDataForApiSourceWithOptions(AddDataForApiSourceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.apiId)) {
            query.put("ApiId", request.apiId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.content)) {
            query.put("Content", request.content);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddDataForApiSource"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddDataForApiSourceResponse());
    }

    /**
     * @param request AddDataForApiSourceRequest
     * @return AddDataForApiSourceResponse
     */
    public AddDataForApiSourceResponse addDataForApiSource(AddDataForApiSourceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addDataForApiSourceWithOptions(request, runtime);
    }

    /**
     * @param request AddDeviceToSharePromotionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddDeviceToSharePromotionResponse
     */
    public AddDeviceToSharePromotionResponse addDeviceToSharePromotionWithOptions(AddDeviceToSharePromotionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceSimpleInfoList)) {
            body.put("DeviceSimpleInfoList", request.deviceSimpleInfoList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sharePromotionActivityId)) {
            body.put("SharePromotionActivityId", request.sharePromotionActivityId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shareTaskCode)) {
            body.put("ShareTaskCode", request.shareTaskCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddDeviceToSharePromotion"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddDeviceToSharePromotionResponse());
    }

    /**
     * @param request AddDeviceToSharePromotionRequest
     * @return AddDeviceToSharePromotionResponse
     */
    public AddDeviceToSharePromotionResponse addDeviceToSharePromotion(AddDeviceToSharePromotionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addDeviceToSharePromotionWithOptions(request, runtime);
    }

    /**
     * @param request AddPowerStationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddPowerStationResponse
     */
    public AddPowerStationResponse addPowerStationWithOptions(AddPowerStationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.algorithmInstanceUid)) {
            query.put("AlgorithmInstanceUid", request.algorithmInstanceUid);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.powerStationName)) {
            query.put("PowerStationName", request.powerStationName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ratedPower)) {
            query.put("RatedPower", request.ratedPower);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddPowerStation"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddPowerStationResponse());
    }

    /**
     * @param request AddPowerStationRequest
     * @return AddPowerStationResponse
     */
    public AddPowerStationResponse addPowerStation(AddPowerStationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addPowerStationWithOptions(request, runtime);
    }

    /**
     * @param request AddShareTaskDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AddShareTaskDeviceResponse
     */
    public AddShareTaskDeviceResponse addShareTaskDeviceWithOptions(AddShareTaskDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotIdList)) {
            body.put("IotIdList", request.iotIdList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shareTaskId)) {
            body.put("ShareTaskId", request.shareTaskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AddShareTaskDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AddShareTaskDeviceResponse());
    }

    /**
     * @param request AddShareTaskDeviceRequest
     * @return AddShareTaskDeviceResponse
     */
    public AddShareTaskDeviceResponse addShareTaskDevice(AddShareTaskDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.addShareTaskDeviceWithOptions(request, runtime);
    }

    /**
     * @param request AsyncRRpcRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AsyncRRpcResponse
     */
    public AsyncRRpcResponse asyncRRpcWithOptions(AsyncRRpcRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.extInfo)) {
            query.put("ExtInfo", request.extInfo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicFullName)) {
            query.put("TopicFullName", request.topicFullName);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.messageContent)) {
            body.put("MessageContent", request.messageContent);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AsyncRRpc"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AsyncRRpcResponse());
    }

    /**
     * @param request AsyncRRpcRequest
     * @return AsyncRRpcResponse
     */
    public AsyncRRpcResponse asyncRRpc(AsyncRRpcRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.asyncRRpcWithOptions(request, runtime);
    }

    /**
     * @param request AttachDestinationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AttachDestinationResponse
     */
    public AttachDestinationResponse attachDestinationWithOptions(AttachDestinationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.destinationId)) {
            query.put("DestinationId", request.destinationId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.isFailover)) {
            query.put("IsFailover", request.isFailover);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.parserId)) {
            query.put("ParserId", request.parserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AttachDestination"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AttachDestinationResponse());
    }

    /**
     * @param request AttachDestinationRequest
     * @return AttachDestinationResponse
     */
    public AttachDestinationResponse attachDestination(AttachDestinationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.attachDestinationWithOptions(request, runtime);
    }

    /**
     * @param request AttachParserDataSourceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return AttachParserDataSourceResponse
     */
    public AttachParserDataSourceResponse attachParserDataSourceWithOptions(AttachParserDataSourceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataSourceId)) {
            query.put("DataSourceId", request.dataSourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.parserId)) {
            query.put("ParserId", request.parserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "AttachParserDataSource"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new AttachParserDataSourceResponse());
    }

    /**
     * @param request AttachParserDataSourceRequest
     * @return AttachParserDataSourceResponse
     */
    public AttachParserDataSourceResponse attachParserDataSource(AttachParserDataSourceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.attachParserDataSourceWithOptions(request, runtime);
    }

    /**
     * @param request BatchAddDataForApiSourceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchAddDataForApiSourceResponse
     */
    public BatchAddDataForApiSourceResponse batchAddDataForApiSourceWithOptions(BatchAddDataForApiSourceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.apiId)) {
            query.put("ApiId", request.apiId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.contentList)) {
            query.put("ContentList", request.contentList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchAddDataForApiSource"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchAddDataForApiSourceResponse());
    }

    /**
     * @param request BatchAddDataForApiSourceRequest
     * @return BatchAddDataForApiSourceResponse
     */
    public BatchAddDataForApiSourceResponse batchAddDataForApiSource(BatchAddDataForApiSourceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchAddDataForApiSourceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/30561.html">Common request parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchAddDeviceGroupRelationsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchAddDeviceGroupRelationsResponse
     */
    public BatchAddDeviceGroupRelationsResponse batchAddDeviceGroupRelationsWithOptions(BatchAddDeviceGroupRelationsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.device)) {
            query.put("Device", request.device);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchAddDeviceGroupRelations"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchAddDeviceGroupRelationsResponse());
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/30561.html">Common request parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchAddDeviceGroupRelationsRequest
     * @return BatchAddDeviceGroupRelationsResponse
     */
    public BatchAddDeviceGroupRelationsResponse batchAddDeviceGroupRelations(BatchAddDeviceGroupRelationsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchAddDeviceGroupRelationsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can attach up to 10 sub-devices to a gateway in a single call.</p>
     * <ul>
     * <li>The API operation caller must be the gateway owner.</li>
     * <li>If you specify a sub-device that is already attached to a gateway, the original gateway is replaced with the specified gateway.</li>
     * <li>If one of the specified sub-devices fails to establish a topological relationship with the gateway, the system rolls back, and all specified sub-devices fail to establish topological relationships with the gateway.</li>
     * <li>After you call this operation to establish topological relationships between sub-devices and the gateway, IoT Platform uses the <code>/sys/${productKey}/${deviceName}/thing/topo/change</code> topic to push information that includes the result of this operation to the gateway. For more information, see <a href="https://help.aliyun.com/document_detail/89299.html">Notify gateways of changes of topological relationships</a>.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per Alibaba Cloud account. </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Establishes multiple topological relationships at a time.</p>
     * 
     * @param request BatchAddThingTopoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchAddThingTopoResponse
     */
    public BatchAddThingTopoResponse batchAddThingTopoWithOptions(BatchAddThingTopoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.gwDeviceName)) {
            query.put("GwDeviceName", request.gwDeviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.gwProductKey)) {
            query.put("GwProductKey", request.gwProductKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topoAddItem)) {
            query.put("TopoAddItem", request.topoAddItem);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchAddThingTopo"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchAddThingTopoResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can attach up to 10 sub-devices to a gateway in a single call.</p>
     * <ul>
     * <li>The API operation caller must be the gateway owner.</li>
     * <li>If you specify a sub-device that is already attached to a gateway, the original gateway is replaced with the specified gateway.</li>
     * <li>If one of the specified sub-devices fails to establish a topological relationship with the gateway, the system rolls back, and all specified sub-devices fail to establish topological relationships with the gateway.</li>
     * <li>After you call this operation to establish topological relationships between sub-devices and the gateway, IoT Platform uses the <code>/sys/${productKey}/${deviceName}/thing/topo/change</code> topic to push information that includes the result of this operation to the gateway. For more information, see <a href="https://help.aliyun.com/document_detail/89299.html">Notify gateways of changes of topological relationships</a>.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per Alibaba Cloud account. </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Establishes multiple topological relationships at a time.</p>
     * 
     * @param request BatchAddThingTopoRequest
     * @return BatchAddThingTopoResponse
     */
    public BatchAddThingTopoResponse batchAddThingTopo(BatchAddThingTopoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchAddThingTopoWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information about common request parameters, see <a href="https://help.aliyun.com/document_detail/30561.html">Common parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchBindDeviceToEdgeInstanceWithDriverRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchBindDeviceToEdgeInstanceWithDriverResponse
     */
    public BatchBindDeviceToEdgeInstanceWithDriverResponse batchBindDeviceToEdgeInstanceWithDriverWithOptions(BatchBindDeviceToEdgeInstanceWithDriverRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotIds)) {
            query.put("IotIds", request.iotIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchBindDeviceToEdgeInstanceWithDriver"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchBindDeviceToEdgeInstanceWithDriverResponse());
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information about common request parameters, see <a href="https://help.aliyun.com/document_detail/30561.html">Common parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchBindDeviceToEdgeInstanceWithDriverRequest
     * @return BatchBindDeviceToEdgeInstanceWithDriverResponse
     */
    public BatchBindDeviceToEdgeInstanceWithDriverResponse batchBindDeviceToEdgeInstanceWithDriver(BatchBindDeviceToEdgeInstanceWithDriverRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchBindDeviceToEdgeInstanceWithDriverWithOptions(request, runtime);
    }

    /**
     * @param request BatchBindDevicesIntoProjectRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchBindDevicesIntoProjectResponse
     */
    public BatchBindDevicesIntoProjectResponse batchBindDevicesIntoProjectWithOptions(BatchBindDevicesIntoProjectRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.devices)) {
            body.put("Devices", request.devices);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectId)) {
            body.put("ProjectId", request.projectId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchBindDevicesIntoProject"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchBindDevicesIntoProjectResponse());
    }

    /**
     * @param request BatchBindDevicesIntoProjectRequest
     * @return BatchBindDevicesIntoProjectResponse
     */
    public BatchBindDevicesIntoProjectResponse batchBindDevicesIntoProject(BatchBindDevicesIntoProjectRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchBindDevicesIntoProjectWithOptions(request, runtime);
    }

    /**
     * @param request BatchBindProductsIntoProjectRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchBindProductsIntoProjectResponse
     */
    public BatchBindProductsIntoProjectResponse batchBindProductsIntoProjectWithOptions(BatchBindProductsIntoProjectRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKeys)) {
            body.put("ProductKeys", request.productKeys);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectId)) {
            body.put("ProjectId", request.projectId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchBindProductsIntoProject"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchBindProductsIntoProjectResponse());
    }

    /**
     * @param request BatchBindProductsIntoProjectRequest
     * @return BatchBindProductsIntoProjectResponse
     */
    public BatchBindProductsIntoProjectResponse batchBindProductsIntoProject(BatchBindProductsIntoProjectRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchBindProductsIntoProjectWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation with the <strong>BatchRegisterDeviceWithApplyId</strong> operation to register multiple devices under a product. Each device carries a unique DeviceName.
     * Procedure:
     * 1\. Call this operation to specify the DeviceNames of the devices to be registered. IoT Platform returns an application ID (<strong>ApplyId</strong>). A successful response indicates that the request to verify the DeviceNames is submitted. The actual registration process is asynchronously implemented and takes some minutes.
     * 2\. Call the <a href="https://help.aliyun.com/document_detail/69483.html">QueryBatchRegisterDeviceStatus</a> operation to query the name setting result.
     * 3\. Call the <a href="https://help.aliyun.com/document_detail/69514.html">BatchRegisterDeviceWithApplyId</a> operation to register multiple devices.
     * 4\. Optional. Call the <a href="https://help.aliyun.com/document_detail/69483.html">QueryBatchRegisterDeviceStatus</a> operation to view the registration result.
     * 5\. Call the <a href="https://help.aliyun.com/document_detail/69518.html">QueryPageByApplyId</a> operation to query the information about the registered devices.</p>
     * <h2>Limits</h2>
     * <ul>
     * <li>You can specify a maximum of 10,000 DeviceNames in a single call.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).  &gt;  RAM users of an Alibaba Cloud account share the quota of the account.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Creates multiple custom DeviceNames under a specified product. IoT Platform checks the validity of these DeviceNames.</p>
     * 
     * @param request BatchCheckDeviceNamesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchCheckDeviceNamesResponse
     */
    public BatchCheckDeviceNamesResponse batchCheckDeviceNamesWithOptions(BatchCheckDeviceNamesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceNameList)) {
            body.put("DeviceNameList", request.deviceNameList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchCheckDeviceNames"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchCheckDeviceNamesResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation with the <strong>BatchRegisterDeviceWithApplyId</strong> operation to register multiple devices under a product. Each device carries a unique DeviceName.
     * Procedure:
     * 1\. Call this operation to specify the DeviceNames of the devices to be registered. IoT Platform returns an application ID (<strong>ApplyId</strong>). A successful response indicates that the request to verify the DeviceNames is submitted. The actual registration process is asynchronously implemented and takes some minutes.
     * 2\. Call the <a href="https://help.aliyun.com/document_detail/69483.html">QueryBatchRegisterDeviceStatus</a> operation to query the name setting result.
     * 3\. Call the <a href="https://help.aliyun.com/document_detail/69514.html">BatchRegisterDeviceWithApplyId</a> operation to register multiple devices.
     * 4\. Optional. Call the <a href="https://help.aliyun.com/document_detail/69483.html">QueryBatchRegisterDeviceStatus</a> operation to view the registration result.
     * 5\. Call the <a href="https://help.aliyun.com/document_detail/69518.html">QueryPageByApplyId</a> operation to query the information about the registered devices.</p>
     * <h2>Limits</h2>
     * <ul>
     * <li>You can specify a maximum of 10,000 DeviceNames in a single call.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).  &gt;  RAM users of an Alibaba Cloud account share the quota of the account.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Creates multiple custom DeviceNames under a specified product. IoT Platform checks the validity of these DeviceNames.</p>
     * 
     * @param request BatchCheckDeviceNamesRequest
     * @return BatchCheckDeviceNamesResponse
     */
    public BatchCheckDeviceNamesResponse batchCheckDeviceNames(BatchCheckDeviceNamesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchCheckDeviceNamesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this operation up to 100 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Verifies multiple devices that are added at the same time.</p>
     * 
     * @param request BatchCheckImportDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchCheckImportDeviceResponse
     */
    public BatchCheckImportDeviceResponse batchCheckImportDeviceWithOptions(BatchCheckImportDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceList)) {
            body.put("DeviceList", request.deviceList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchCheckImportDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchCheckImportDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this operation up to 100 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Verifies multiple devices that are added at the same time.</p>
     * 
     * @param request BatchCheckImportDeviceRequest
     * @return BatchCheckImportDeviceResponse
     */
    public BatchCheckImportDeviceResponse batchCheckImportDevice(BatchCheckImportDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchCheckImportDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>The invalid device models returned if the call fails.</p>
     * 
     * <b>summary</b> : 
     * <p>The invalid device IDs returned if the call fails.</p>
     * 
     * @param request BatchCheckVehicleDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchCheckVehicleDeviceResponse
     */
    public BatchCheckVehicleDeviceResponse batchCheckVehicleDeviceWithOptions(BatchCheckVehicleDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceList)) {
            body.put("DeviceList", request.deviceList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchCheckVehicleDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchCheckVehicleDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <p>The invalid device models returned if the call fails.</p>
     * 
     * <b>summary</b> : 
     * <p>The invalid device IDs returned if the call fails.</p>
     * 
     * @param request BatchCheckVehicleDeviceRequest
     * @return BatchCheckVehicleDeviceResponse
     */
    public BatchCheckVehicleDeviceResponse batchCheckVehicleDevice(BatchCheckVehicleDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchCheckVehicleDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchClearEdgeInstanceDeviceConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchClearEdgeInstanceDeviceConfigResponse
     */
    public BatchClearEdgeInstanceDeviceConfigResponse batchClearEdgeInstanceDeviceConfigWithOptions(BatchClearEdgeInstanceDeviceConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotIds)) {
            query.put("IotIds", request.iotIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchClearEdgeInstanceDeviceConfig"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchClearEdgeInstanceDeviceConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchClearEdgeInstanceDeviceConfigRequest
     * @return BatchClearEdgeInstanceDeviceConfigResponse
     */
    public BatchClearEdgeInstanceDeviceConfigResponse batchClearEdgeInstanceDeviceConfig(BatchClearEdgeInstanceDeviceConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchClearEdgeInstanceDeviceConfigWithOptions(request, runtime);
    }

    /**
     * @param request BatchCreateSoundCodeLabelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchCreateSoundCodeLabelResponse
     */
    public BatchCreateSoundCodeLabelResponse batchCreateSoundCodeLabelWithOptions(BatchCreateSoundCodeLabelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            body.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scheduleCode)) {
            body.put("ScheduleCode", request.scheduleCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.total)) {
            body.put("Total", request.total);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchCreateSoundCodeLabel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchCreateSoundCodeLabelResponse());
    }

    /**
     * @param request BatchCreateSoundCodeLabelRequest
     * @return BatchCreateSoundCodeLabelResponse
     */
    public BatchCreateSoundCodeLabelResponse batchCreateSoundCodeLabel(BatchCreateSoundCodeLabelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchCreateSoundCodeLabelWithOptions(request, runtime);
    }

    /**
     * @param request BatchCreateSoundCodeLabelWithLabelsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchCreateSoundCodeLabelWithLabelsResponse
     */
    public BatchCreateSoundCodeLabelWithLabelsResponse batchCreateSoundCodeLabelWithLabelsWithOptions(BatchCreateSoundCodeLabelWithLabelsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            body.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.labels)) {
            body.put("Labels", request.labels);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scheduleCode)) {
            body.put("ScheduleCode", request.scheduleCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchCreateSoundCodeLabelWithLabels"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchCreateSoundCodeLabelWithLabelsResponse());
    }

    /**
     * @param request BatchCreateSoundCodeLabelWithLabelsRequest
     * @return BatchCreateSoundCodeLabelWithLabelsResponse
     */
    public BatchCreateSoundCodeLabelWithLabelsResponse batchCreateSoundCodeLabelWithLabels(BatchCreateSoundCodeLabelWithLabelsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchCreateSoundCodeLabelWithLabelsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchDeleteDeviceGroupRelationsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchDeleteDeviceGroupRelationsResponse
     */
    public BatchDeleteDeviceGroupRelationsResponse batchDeleteDeviceGroupRelationsWithOptions(BatchDeleteDeviceGroupRelationsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.device)) {
            query.put("Device", request.device);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchDeleteDeviceGroupRelations"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchDeleteDeviceGroupRelationsResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchDeleteDeviceGroupRelationsRequest
     * @return BatchDeleteDeviceGroupRelationsResponse
     */
    public BatchDeleteDeviceGroupRelationsResponse batchDeleteDeviceGroupRelations(BatchDeleteDeviceGroupRelationsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchDeleteDeviceGroupRelationsWithOptions(request, runtime);
    }

    /**
     * @param request BatchDeleteEdgeInstanceChannelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchDeleteEdgeInstanceChannelResponse
     */
    public BatchDeleteEdgeInstanceChannelResponse batchDeleteEdgeInstanceChannelWithOptions(BatchDeleteEdgeInstanceChannelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.channelIds)) {
            query.put("ChannelIds", request.channelIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchDeleteEdgeInstanceChannel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchDeleteEdgeInstanceChannelResponse());
    }

    /**
     * @param request BatchDeleteEdgeInstanceChannelRequest
     * @return BatchDeleteEdgeInstanceChannelResponse
     */
    public BatchDeleteEdgeInstanceChannelResponse batchDeleteEdgeInstanceChannel(BatchDeleteEdgeInstanceChannelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchDeleteEdgeInstanceChannelWithOptions(request, runtime);
    }

    /**
     * @param request BatchGetDeviceBindStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchGetDeviceBindStatusResponse
     */
    public BatchGetDeviceBindStatusResponse batchGetDeviceBindStatusWithOptions(BatchGetDeviceBindStatusRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotIds)) {
            query.put("IotIds", request.iotIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchGetDeviceBindStatus"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchGetDeviceBindStatusResponse());
    }

    /**
     * @param request BatchGetDeviceBindStatusRequest
     * @return BatchGetDeviceBindStatusResponse
     */
    public BatchGetDeviceBindStatusResponse batchGetDeviceBindStatus(BatchGetDeviceBindStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchGetDeviceBindStatusWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>When you call this operation, you can perform the following operations:</p>
     * <ul>
     * <li>You can specify a value for the <strong>ProductKey</strong> parameter and multiple values for the <strong>DeviceName</strong> parameter to query the status of devices that belong to a product.</li>
     * <li>You can specify multiple values for the <strong>IotId</strong> parameter to query the status of devices that belong to different products.****<blockquote>
     * <p>You can query the status of up to 50 devices in a call.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the status of multiple devices at a time.</p>
     * 
     * @param request BatchGetDeviceStateRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchGetDeviceStateResponse
     */
    public BatchGetDeviceStateResponse batchGetDeviceStateWithOptions(BatchGetDeviceStateRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchGetDeviceState"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchGetDeviceStateResponse());
    }

    /**
     * <b>description</b> :
     * <p>When you call this operation, you can perform the following operations:</p>
     * <ul>
     * <li>You can specify a value for the <strong>ProductKey</strong> parameter and multiple values for the <strong>DeviceName</strong> parameter to query the status of devices that belong to a product.</li>
     * <li>You can specify multiple values for the <strong>IotId</strong> parameter to query the status of devices that belong to different products.****<blockquote>
     * <p>You can query the status of up to 50 devices in a call.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the status of multiple devices at a time.</p>
     * 
     * @param request BatchGetDeviceStateRequest
     * @return BatchGetDeviceStateResponse
     */
    public BatchGetDeviceStateResponse batchGetDeviceState(BatchGetDeviceStateRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchGetDeviceStateWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>A single Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * @param request BatchGetEdgeDriverRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchGetEdgeDriverResponse
     */
    public BatchGetEdgeDriverResponse batchGetEdgeDriverWithOptions(BatchGetEdgeDriverRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.driverIds)) {
            query.put("DriverIds", request.driverIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchGetEdgeDriver"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchGetEdgeDriverResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>A single Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * @param request BatchGetEdgeDriverRequest
     * @return BatchGetEdgeDriverResponse
     */
    public BatchGetEdgeDriverResponse batchGetEdgeDriver(BatchGetEdgeDriverRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchGetEdgeDriverWithOptions(request, runtime);
    }

    /**
     * @param request BatchGetEdgeInstanceChannelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchGetEdgeInstanceChannelResponse
     */
    public BatchGetEdgeInstanceChannelResponse batchGetEdgeInstanceChannelWithOptions(BatchGetEdgeInstanceChannelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.channelIds)) {
            query.put("ChannelIds", request.channelIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchGetEdgeInstanceChannel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchGetEdgeInstanceChannelResponse());
    }

    /**
     * @param request BatchGetEdgeInstanceChannelRequest
     * @return BatchGetEdgeInstanceChannelResponse
     */
    public BatchGetEdgeInstanceChannelResponse batchGetEdgeInstanceChannel(BatchGetEdgeInstanceChannelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchGetEdgeInstanceChannelWithOptions(request, runtime);
    }

    /**
     * @param request BatchGetEdgeInstanceDeviceChannelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchGetEdgeInstanceDeviceChannelResponse
     */
    public BatchGetEdgeInstanceDeviceChannelResponse batchGetEdgeInstanceDeviceChannelWithOptions(BatchGetEdgeInstanceDeviceChannelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotIds)) {
            query.put("IotIds", request.iotIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchGetEdgeInstanceDeviceChannel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchGetEdgeInstanceDeviceChannelResponse());
    }

    /**
     * @param request BatchGetEdgeInstanceDeviceChannelRequest
     * @return BatchGetEdgeInstanceDeviceChannelResponse
     */
    public BatchGetEdgeInstanceDeviceChannelResponse batchGetEdgeInstanceDeviceChannel(BatchGetEdgeInstanceDeviceChannelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchGetEdgeInstanceDeviceChannelWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchGetEdgeInstanceDeviceConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchGetEdgeInstanceDeviceConfigResponse
     */
    public BatchGetEdgeInstanceDeviceConfigResponse batchGetEdgeInstanceDeviceConfigWithOptions(BatchGetEdgeInstanceDeviceConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotIds)) {
            query.put("IotIds", request.iotIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchGetEdgeInstanceDeviceConfig"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchGetEdgeInstanceDeviceConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchGetEdgeInstanceDeviceConfigRequest
     * @return BatchGetEdgeInstanceDeviceConfigResponse
     */
    public BatchGetEdgeInstanceDeviceConfigResponse batchGetEdgeInstanceDeviceConfig(BatchGetEdgeInstanceDeviceConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchGetEdgeInstanceDeviceConfigWithOptions(request, runtime);
    }

    /**
     * @param request BatchGetEdgeInstanceDeviceDriverRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchGetEdgeInstanceDeviceDriverResponse
     */
    public BatchGetEdgeInstanceDeviceDriverResponse batchGetEdgeInstanceDeviceDriverWithOptions(BatchGetEdgeInstanceDeviceDriverRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotIds)) {
            query.put("IotIds", request.iotIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchGetEdgeInstanceDeviceDriver"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchGetEdgeInstanceDeviceDriverResponse());
    }

    /**
     * @param request BatchGetEdgeInstanceDeviceDriverRequest
     * @return BatchGetEdgeInstanceDeviceDriverResponse
     */
    public BatchGetEdgeInstanceDeviceDriverResponse batchGetEdgeInstanceDeviceDriver(BatchGetEdgeInstanceDeviceDriverRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchGetEdgeInstanceDeviceDriverWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchGetEdgeInstanceDriverConfigsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchGetEdgeInstanceDriverConfigsResponse
     */
    public BatchGetEdgeInstanceDriverConfigsResponse batchGetEdgeInstanceDriverConfigsWithOptions(BatchGetEdgeInstanceDriverConfigsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.driverIds)) {
            query.put("DriverIds", request.driverIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchGetEdgeInstanceDriverConfigs"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchGetEdgeInstanceDriverConfigsResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchGetEdgeInstanceDriverConfigsRequest
     * @return BatchGetEdgeInstanceDriverConfigsResponse
     */
    public BatchGetEdgeInstanceDriverConfigsResponse batchGetEdgeInstanceDriverConfigs(BatchGetEdgeInstanceDriverConfigsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchGetEdgeInstanceDriverConfigsWithOptions(request, runtime);
    }

    /**
     * @param request BatchGrayMigrationDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchGrayMigrationDeviceResponse
     */
    public BatchGrayMigrationDeviceResponse batchGrayMigrationDeviceWithOptions(BatchGrayMigrationDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceNames)) {
            body.put("DeviceNames", request.deviceNames);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchGrayMigrationDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchGrayMigrationDeviceResponse());
    }

    /**
     * @param request BatchGrayMigrationDeviceRequest
     * @return BatchGrayMigrationDeviceResponse
     */
    public BatchGrayMigrationDeviceResponse batchGrayMigrationDevice(BatchGrayMigrationDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchGrayMigrationDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>Before you call this operation, make sure that an MQTT gateway and the related product are created and the <strong>ProductKey</strong> of the product is obtained. For more information, see <a href="https://help.aliyun.com/document_detail/433804.html">Create an MQTT gateway</a>.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Adds multiple devices to a Message Queuing Telemetry Transport (MQTT) gateway product at the same time.</p>
     * 
     * @param request BatchImportDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchImportDeviceResponse
     */
    public BatchImportDeviceResponse batchImportDeviceWithOptions(BatchImportDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceList)) {
            body.put("DeviceList", request.deviceList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchImportDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchImportDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>Before you call this operation, make sure that an MQTT gateway and the related product are created and the <strong>ProductKey</strong> of the product is obtained. For more information, see <a href="https://help.aliyun.com/document_detail/433804.html">Create an MQTT gateway</a>.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Adds multiple devices to a Message Queuing Telemetry Transport (MQTT) gateway product at the same time.</p>
     * 
     * @param request BatchImportDeviceRequest
     * @return BatchImportDeviceResponse
     */
    public BatchImportDeviceResponse batchImportDevice(BatchImportDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchImportDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Indicates whether the call was successful. Valid values: </p>
     * <ul>
     * <li><strong>true</strong>: The call was successful.</li>
     * <li><strong>false</strong>: The call failed.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>The ID of the request.</p>
     * 
     * @param request BatchImportVehicleDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchImportVehicleDeviceResponse
     */
    public BatchImportVehicleDeviceResponse batchImportVehicleDeviceWithOptions(BatchImportVehicleDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceList)) {
            body.put("DeviceList", request.deviceList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchImportVehicleDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchImportVehicleDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <p>Indicates whether the call was successful. Valid values: </p>
     * <ul>
     * <li><strong>true</strong>: The call was successful.</li>
     * <li><strong>false</strong>: The call failed.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>The ID of the request.</p>
     * 
     * @param request BatchImportVehicleDeviceRequest
     * @return BatchImportVehicleDeviceResponse
     */
    public BatchImportVehicleDeviceResponse batchImportVehicleDevice(BatchImportVehicleDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchImportVehicleDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to publish a message to a maximum of 100 devices of a product at a time.</p>
     * <ul>
     * <li>The BatchPub operation cannot be used to send commands of setting properties or calling services. If you need to set properties, use the <a href="https://help.aliyun.com/document_detail/69579.html">SetDeviceProperty</a> or <a href="https://help.aliyun.com/document_detail/96243.html">SetDevicesProperty</a> operation. If you need to call services, use the <a href="https://help.aliyun.com/document_detail/69584.html">InvokeThingService</a> or <a href="https://help.aliyun.com/document_detail/96242.html">InvokeThingsService</a> operation.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request BatchPubRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchPubResponse
     */
    public BatchPubResponse batchPubWithOptions(BatchPubRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.contentType)) {
            query.put("ContentType", request.contentType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.correlationData)) {
            query.put("CorrelationData", request.correlationData);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.messageExpiryInterval)) {
            query.put("MessageExpiryInterval", request.messageExpiryInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.payloadFormatIndicator)) {
            query.put("PayloadFormatIndicator", request.payloadFormatIndicator);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.qos)) {
            query.put("Qos", request.qos);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.responseTopicTemplateName)) {
            query.put("ResponseTopicTemplateName", request.responseTopicTemplateName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.retained)) {
            query.put("Retained", request.retained);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicShortName)) {
            query.put("TopicShortName", request.topicShortName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicTemplateName)) {
            query.put("TopicTemplateName", request.topicTemplateName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userProp)) {
            query.put("UserProp", request.userProp);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.messageContent)) {
            body.put("MessageContent", request.messageContent);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchPub"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchPubResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to publish a message to a maximum of 100 devices of a product at a time.</p>
     * <ul>
     * <li>The BatchPub operation cannot be used to send commands of setting properties or calling services. If you need to set properties, use the <a href="https://help.aliyun.com/document_detail/69579.html">SetDeviceProperty</a> or <a href="https://help.aliyun.com/document_detail/96243.html">SetDevicesProperty</a> operation. If you need to call services, use the <a href="https://help.aliyun.com/document_detail/69584.html">InvokeThingService</a> or <a href="https://help.aliyun.com/document_detail/96242.html">InvokeThingsService</a> operation.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request BatchPubRequest
     * @return BatchPubResponse
     */
    public BatchPubResponse batchPub(BatchPubRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchPubWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can query a maximum of 100 devices in a single call.</li>
     * <li>You can query the details of devices that belong only to the current Alibaba Cloud account. If you specify a device that does not belong to the current account, an error message is returned.</li>
     * <li>If you specify multiple devices and some devices do not exist, only the details of existing devices are returned.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of multiple devices under a product.</p>
     * 
     * @param request BatchQueryDeviceDetailRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchQueryDeviceDetailResponse
     */
    public BatchQueryDeviceDetailResponse batchQueryDeviceDetailWithOptions(BatchQueryDeviceDetailRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchQueryDeviceDetail"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchQueryDeviceDetailResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can query a maximum of 100 devices in a single call.</li>
     * <li>You can query the details of devices that belong only to the current Alibaba Cloud account. If you specify a device that does not belong to the current account, an error message is returned.</li>
     * <li>If you specify multiple devices and some devices do not exist, only the details of existing devices are returned.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of multiple devices under a product.</p>
     * 
     * @param request BatchQueryDeviceDetailRequest
     * @return BatchQueryDeviceDetailResponse
     */
    public BatchQueryDeviceDetailResponse batchQueryDeviceDetail(BatchQueryDeviceDetailRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchQueryDeviceDetailWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can use one of the following methods to register multiple devices:</p>
     * <ul>
     * <li>If you want to generate random DeviceNames, call the BatchRegisterDevice operation.
     * Perform the following steps to register devices and view the result:
     * 1\. Call the BatchRegisterDevice operation to register multiple devices. A successful response indicates that the registration request is submitted. The actual registration process is asynchronously implemented and takes some minutes.
     * 2\. Call the <a href="https://help.aliyun.com/document_detail/69483.html">QueryBatchRegisterDeviceStatus</a> operation to query the device registration result.
     * 3\. Call the <a href="https://help.aliyun.com/document_detail/69518.html">QueryPageByApplyId</a> operation to view the details of registered devices. The details include the DeviceName, DeviceSecret, and IotId parameters.</li>
     * <li>If you want to specify custom DeviceNames, call the BatchRegisterDeviceWithApplyId operation. For more information, see <a href="https://help.aliyun.com/document_detail/69514.html">BatchRegisterDeviceWithApplyId</a>.</li>
     * </ul>
     * <h2>Limits</h2>
     * <ul>
     * <li>You can create a maximum of 10,000 devices in a single call.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).  &gt;  RAM users of an Alibaba Cloud account share the quota of the account.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Registers multiple devices under a product. The DeviceNames of these devices are randomly generated.</p>
     * 
     * @param request BatchRegisterDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchRegisterDeviceResponse
     */
    public BatchRegisterDeviceResponse batchRegisterDeviceWithOptions(BatchRegisterDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.count)) {
            query.put("Count", request.count);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchRegisterDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchRegisterDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can use one of the following methods to register multiple devices:</p>
     * <ul>
     * <li>If you want to generate random DeviceNames, call the BatchRegisterDevice operation.
     * Perform the following steps to register devices and view the result:
     * 1\. Call the BatchRegisterDevice operation to register multiple devices. A successful response indicates that the registration request is submitted. The actual registration process is asynchronously implemented and takes some minutes.
     * 2\. Call the <a href="https://help.aliyun.com/document_detail/69483.html">QueryBatchRegisterDeviceStatus</a> operation to query the device registration result.
     * 3\. Call the <a href="https://help.aliyun.com/document_detail/69518.html">QueryPageByApplyId</a> operation to view the details of registered devices. The details include the DeviceName, DeviceSecret, and IotId parameters.</li>
     * <li>If you want to specify custom DeviceNames, call the BatchRegisterDeviceWithApplyId operation. For more information, see <a href="https://help.aliyun.com/document_detail/69514.html">BatchRegisterDeviceWithApplyId</a>.</li>
     * </ul>
     * <h2>Limits</h2>
     * <ul>
     * <li>You can create a maximum of 10,000 devices in a single call.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).  &gt;  RAM users of an Alibaba Cloud account share the quota of the account.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Registers multiple devices under a product. The DeviceNames of these devices are randomly generated.</p>
     * 
     * @param request BatchRegisterDeviceRequest
     * @return BatchRegisterDeviceResponse
     */
    public BatchRegisterDeviceResponse batchRegisterDevice(BatchRegisterDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchRegisterDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can use one of the following methods to register multiple devices at a time:</p>
     * <ul>
     * <li>Call the <a href="https://help.aliyun.com/document_detail/69473.html">BatchRegisterDevice</a> operation to generate random DeviceNames.</li>
     * <li>Call the BatchRegisterDeviceWithApplyId and <strong>BatchCheckDeviceNames</strong> operations to specify custom DeviceNames. Procedure:
     * Call the <a href="https://help.aliyun.com/document_detail/69482.html">BatchCheckDeviceNames</a> operation and specify the names of devices that you want to register. If the DeviceNames are valid, IoT Platform returns an application ID that is specified by the <strong>ApplyId</strong> parameter. You can query the DeviceName setting results, device registration results, and device details by <strong>ApplyId</strong>.
     * Call the <a href="https://help.aliyun.com/document_detail/69483.html">QueryBatchRegisterDeviceStatus</a> operation to query the name setting result.
     * Call the BatchRegisterDeviceWithApplyId operation to register multiple devices. The successful result that is returned by this operation indicates that only the batch registration request is submitted. In actual scenarios, the registration process takes a few minutes.
     * Optional. Call the <a href="https://help.aliyun.com/document_detail/69483.html">QueryBatchRegisterDeviceStatus</a> operation to query the device registration result.
     * Call the <a href="https://help.aliyun.com/document_detail/69518.html">QueryPageByApplyId</a> operation to view the details of devices that are registered in batches.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Registers multiple devices by using an application ID at a time.</p>
     * 
     * @param request BatchRegisterDeviceWithApplyIdRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchRegisterDeviceWithApplyIdResponse
     */
    public BatchRegisterDeviceWithApplyIdResponse batchRegisterDeviceWithApplyIdWithOptions(BatchRegisterDeviceWithApplyIdRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.applyId)) {
            query.put("ApplyId", request.applyId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchRegisterDeviceWithApplyId"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchRegisterDeviceWithApplyIdResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can use one of the following methods to register multiple devices at a time:</p>
     * <ul>
     * <li>Call the <a href="https://help.aliyun.com/document_detail/69473.html">BatchRegisterDevice</a> operation to generate random DeviceNames.</li>
     * <li>Call the BatchRegisterDeviceWithApplyId and <strong>BatchCheckDeviceNames</strong> operations to specify custom DeviceNames. Procedure:
     * Call the <a href="https://help.aliyun.com/document_detail/69482.html">BatchCheckDeviceNames</a> operation and specify the names of devices that you want to register. If the DeviceNames are valid, IoT Platform returns an application ID that is specified by the <strong>ApplyId</strong> parameter. You can query the DeviceName setting results, device registration results, and device details by <strong>ApplyId</strong>.
     * Call the <a href="https://help.aliyun.com/document_detail/69483.html">QueryBatchRegisterDeviceStatus</a> operation to query the name setting result.
     * Call the BatchRegisterDeviceWithApplyId operation to register multiple devices. The successful result that is returned by this operation indicates that only the batch registration request is submitted. In actual scenarios, the registration process takes a few minutes.
     * Optional. Call the <a href="https://help.aliyun.com/document_detail/69483.html">QueryBatchRegisterDeviceStatus</a> operation to query the device registration result.
     * Call the <a href="https://help.aliyun.com/document_detail/69518.html">QueryPageByApplyId</a> operation to view the details of devices that are registered in batches.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Registers multiple devices by using an application ID at a time.</p>
     * 
     * @param request BatchRegisterDeviceWithApplyIdRequest
     * @return BatchRegisterDeviceWithApplyIdResponse
     */
    public BatchRegisterDeviceWithApplyIdResponse batchRegisterDeviceWithApplyId(BatchRegisterDeviceWithApplyIdRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchRegisterDeviceWithApplyIdWithOptions(request, runtime);
    }

    /**
     * @param request BatchSetEdgeInstanceDeviceChannelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchSetEdgeInstanceDeviceChannelResponse
     */
    public BatchSetEdgeInstanceDeviceChannelResponse batchSetEdgeInstanceDeviceChannelWithOptions(BatchSetEdgeInstanceDeviceChannelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotIds)) {
            query.put("IotIds", request.iotIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchSetEdgeInstanceDeviceChannel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchSetEdgeInstanceDeviceChannelResponse());
    }

    /**
     * @param request BatchSetEdgeInstanceDeviceChannelRequest
     * @return BatchSetEdgeInstanceDeviceChannelResponse
     */
    public BatchSetEdgeInstanceDeviceChannelResponse batchSetEdgeInstanceDeviceChannel(BatchSetEdgeInstanceDeviceChannelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchSetEdgeInstanceDeviceChannelWithOptions(request, runtime);
    }

    /**
     * @param request BatchSetEdgeInstanceDeviceConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchSetEdgeInstanceDeviceConfigResponse
     */
    public BatchSetEdgeInstanceDeviceConfigResponse batchSetEdgeInstanceDeviceConfigWithOptions(BatchSetEdgeInstanceDeviceConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceConfigs)) {
            query.put("DeviceConfigs", request.deviceConfigs);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchSetEdgeInstanceDeviceConfig"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchSetEdgeInstanceDeviceConfigResponse());
    }

    /**
     * @param request BatchSetEdgeInstanceDeviceConfigRequest
     * @return BatchSetEdgeInstanceDeviceConfigResponse
     */
    public BatchSetEdgeInstanceDeviceConfigResponse batchSetEdgeInstanceDeviceConfig(BatchSetEdgeInstanceDeviceConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchSetEdgeInstanceDeviceConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchUnbindDeviceFromEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchUnbindDeviceFromEdgeInstanceResponse
     */
    public BatchUnbindDeviceFromEdgeInstanceResponse batchUnbindDeviceFromEdgeInstanceWithOptions(BatchUnbindDeviceFromEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotIds)) {
            query.put("IotIds", request.iotIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchUnbindDeviceFromEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchUnbindDeviceFromEdgeInstanceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchUnbindDeviceFromEdgeInstanceRequest
     * @return BatchUnbindDeviceFromEdgeInstanceResponse
     */
    public BatchUnbindDeviceFromEdgeInstanceResponse batchUnbindDeviceFromEdgeInstance(BatchUnbindDeviceFromEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchUnbindDeviceFromEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * @param request BatchUnbindProjectDevicesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchUnbindProjectDevicesResponse
     */
    public BatchUnbindProjectDevicesResponse batchUnbindProjectDevicesWithOptions(BatchUnbindProjectDevicesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.devices)) {
            body.put("Devices", request.devices);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectId)) {
            body.put("ProjectId", request.projectId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchUnbindProjectDevices"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchUnbindProjectDevicesResponse());
    }

    /**
     * @param request BatchUnbindProjectDevicesRequest
     * @return BatchUnbindProjectDevicesResponse
     */
    public BatchUnbindProjectDevicesResponse batchUnbindProjectDevices(BatchUnbindProjectDevicesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchUnbindProjectDevicesWithOptions(request, runtime);
    }

    /**
     * @param request BatchUnbindProjectProductsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchUnbindProjectProductsResponse
     */
    public BatchUnbindProjectProductsResponse batchUnbindProjectProductsWithOptions(BatchUnbindProjectProductsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKeys)) {
            body.put("ProductKeys", request.productKeys);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectId)) {
            body.put("ProjectId", request.projectId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchUnbindProjectProducts"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchUnbindProjectProductsResponse());
    }

    /**
     * @param request BatchUnbindProjectProductsRequest
     * @return BatchUnbindProjectProductsResponse
     */
    public BatchUnbindProjectProductsResponse batchUnbindProjectProducts(BatchUnbindProjectProductsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchUnbindProjectProductsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchUpdateDeviceNicknameRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BatchUpdateDeviceNicknameResponse
     */
    public BatchUpdateDeviceNicknameResponse batchUpdateDeviceNicknameWithOptions(BatchUpdateDeviceNicknameRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceNicknameInfo)) {
            query.put("DeviceNicknameInfo", request.deviceNicknameInfo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BatchUpdateDeviceNickname"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BatchUpdateDeviceNicknameResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BatchUpdateDeviceNicknameRequest
     * @return BatchUpdateDeviceNicknameResponse
     */
    public BatchUpdateDeviceNicknameResponse batchUpdateDeviceNickname(BatchUpdateDeviceNicknameRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.batchUpdateDeviceNicknameWithOptions(request, runtime);
    }

    /**
     * @param request BindApplicationToEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BindApplicationToEdgeInstanceResponse
     */
    public BindApplicationToEdgeInstanceResponse bindApplicationToEdgeInstanceWithOptions(BindApplicationToEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.applicationId)) {
            query.put("ApplicationId", request.applicationId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.applicationVersion)) {
            query.put("ApplicationVersion", request.applicationVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BindApplicationToEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BindApplicationToEdgeInstanceResponse());
    }

    /**
     * @param request BindApplicationToEdgeInstanceRequest
     * @return BindApplicationToEdgeInstanceResponse
     */
    public BindApplicationToEdgeInstanceResponse bindApplicationToEdgeInstance(BindApplicationToEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.bindApplicationToEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BindDriverToEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BindDriverToEdgeInstanceResponse
     */
    public BindDriverToEdgeInstanceResponse bindDriverToEdgeInstanceWithOptions(BindDriverToEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverVersion)) {
            query.put("DriverVersion", request.driverVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.orderId)) {
            query.put("OrderId", request.orderId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BindDriverToEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BindDriverToEdgeInstanceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BindDriverToEdgeInstanceRequest
     * @return BindDriverToEdgeInstanceResponse
     */
    public BindDriverToEdgeInstanceResponse bindDriverToEdgeInstance(BindDriverToEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.bindDriverToEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BindGatewayToEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BindGatewayToEdgeInstanceResponse
     */
    public BindGatewayToEdgeInstanceResponse bindGatewayToEdgeInstanceWithOptions(BindGatewayToEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BindGatewayToEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BindGatewayToEdgeInstanceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request BindGatewayToEdgeInstanceRequest
     * @return BindGatewayToEdgeInstanceResponse
     */
    public BindGatewayToEdgeInstanceResponse bindGatewayToEdgeInstance(BindGatewayToEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.bindGatewayToEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>Before you call this operation, make sure that the following steps are complete:</p>
     * <ol>
     * <li>A license is purchased. For more information, see <a href="https://help.aliyun.com/document_detail/427935.html">Purchase a license</a>.</li>
     * <li>The license is bound to a product. The devices to which you want to bind the license belong to the product. For more information, see <a href="https://help.aliyun.com/document_detail/427956.html">BindLicenseProduct</a> or <a href="https://help.aliyun.com/document_detail/427937.html">Bind a license to a product</a>.</li>
     * </ol>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Binds a license to devices of a specific product.</p>
     * 
     * @param request BindLicenseDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BindLicenseDeviceResponse
     */
    public BindLicenseDeviceResponse bindLicenseDeviceWithOptions(BindLicenseDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.licenseCode)) {
            query.put("LicenseCode", request.licenseCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceNameList)) {
            body.put("DeviceNameList", request.deviceNameList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotIdList)) {
            body.put("IotIdList", request.iotIdList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BindLicenseDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BindLicenseDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>Before you call this operation, make sure that the following steps are complete:</p>
     * <ol>
     * <li>A license is purchased. For more information, see <a href="https://help.aliyun.com/document_detail/427935.html">Purchase a license</a>.</li>
     * <li>The license is bound to a product. The devices to which you want to bind the license belong to the product. For more information, see <a href="https://help.aliyun.com/document_detail/427956.html">BindLicenseProduct</a> or <a href="https://help.aliyun.com/document_detail/427937.html">Bind a license to a product</a>.</li>
     * </ol>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Binds a license to devices of a specific product.</p>
     * 
     * @param request BindLicenseDeviceRequest
     * @return BindLicenseDeviceResponse
     */
    public BindLicenseDeviceResponse bindLicenseDevice(BindLicenseDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.bindLicenseDeviceWithOptions(request, runtime);
    }

    /**
     * @param request BindLicenseProductRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BindLicenseProductResponse
     */
    public BindLicenseProductResponse bindLicenseProductWithOptions(BindLicenseProductRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.licenseCode)) {
            query.put("LicenseCode", request.licenseCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BindLicenseProduct"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BindLicenseProductResponse());
    }

    /**
     * @param request BindLicenseProductRequest
     * @return BindLicenseProductResponse
     */
    public BindLicenseProductResponse bindLicenseProduct(BindLicenseProductRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.bindLicenseProductWithOptions(request, runtime);
    }

    /**
     * @param request BindRoleToEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BindRoleToEdgeInstanceResponse
     */
    public BindRoleToEdgeInstanceResponse bindRoleToEdgeInstanceWithOptions(BindRoleToEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.roleArn)) {
            query.put("RoleArn", request.roleArn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.roleName)) {
            query.put("RoleName", request.roleName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BindRoleToEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BindRoleToEdgeInstanceResponse());
    }

    /**
     * @param request BindRoleToEdgeInstanceRequest
     * @return BindRoleToEdgeInstanceResponse
     */
    public BindRoleToEdgeInstanceResponse bindRoleToEdgeInstance(BindRoleToEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.bindRoleToEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * @param request BindSceneRuleToEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return BindSceneRuleToEdgeInstanceResponse
     */
    public BindSceneRuleToEdgeInstanceResponse bindSceneRuleToEdgeInstanceWithOptions(BindSceneRuleToEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "BindSceneRuleToEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new BindSceneRuleToEdgeInstanceResponse());
    }

    /**
     * @param request BindSceneRuleToEdgeInstanceRequest
     * @return BindSceneRuleToEdgeInstanceResponse
     */
    public BindSceneRuleToEdgeInstanceResponse bindSceneRuleToEdgeInstance(BindSceneRuleToEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.bindSceneRuleToEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * @param request CancelJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CancelJobResponse
     */
    public CancelJobResponse cancelJobWithOptions(CancelJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CancelJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CancelJobResponse());
    }

    /**
     * @param request CancelJobRequest
     * @return CancelJobResponse
     */
    public CancelJobResponse cancelJob(CancelJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.cancelJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can cancel only the dynamic update policy that is attached to a dynamic update batch. This operation is not applicable to static update batches.
     * After the operation is successful, the <strong>JobStatus</strong> parameter is set to CANCELED.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request CancelOTAStrategyByJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CancelOTAStrategyByJobResponse
     */
    public CancelOTAStrategyByJobResponse cancelOTAStrategyByJobWithOptions(CancelOTAStrategyByJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CancelOTAStrategyByJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CancelOTAStrategyByJobResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can cancel only the dynamic update policy that is attached to a dynamic update batch. This operation is not applicable to static update batches.
     * After the operation is successful, the <strong>JobStatus</strong> parameter is set to CANCELED.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request CancelOTAStrategyByJobRequest
     * @return CancelOTAStrategyByJobResponse
     */
    public CancelOTAStrategyByJobResponse cancelOTAStrategyByJob(CancelOTAStrategyByJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.cancelOTAStrategyByJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation can cancel device update tasks only when the tasks are in the to be pushed, pushed, or in upgrade state.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Cancels the device update tasks that are in the to be pushed, pushed, or in upgrade state of an OTA update package.</p>
     * 
     * @param request CancelOTATaskByDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CancelOTATaskByDeviceResponse
     */
    public CancelOTATaskByDeviceResponse cancelOTATaskByDeviceWithOptions(CancelOTATaskByDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareId)) {
            query.put("FirmwareId", request.firmwareId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CancelOTATaskByDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CancelOTATaskByDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation can cancel device update tasks only when the tasks are in the to be pushed, pushed, or in upgrade state.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Cancels the device update tasks that are in the to be pushed, pushed, or in upgrade state of an OTA update package.</p>
     * 
     * @param request CancelOTATaskByDeviceRequest
     * @return CancelOTATaskByDeviceResponse
     */
    public CancelOTATaskByDeviceResponse cancelOTATaskByDevice(CancelOTATaskByDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.cancelOTATaskByDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>When you call this operation, make sure that you specify at least one of the CancelScheduledTask, CancelQueuedTask, CancelInProgressTask, CancelNotifiedTask, and CancelUnconfirmedTask parameters. Otherwise, the request will fail.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Cancels update tasks of a specified batch.</p>
     * 
     * @param request CancelOTATaskByJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CancelOTATaskByJobResponse
     */
    public CancelOTATaskByJobResponse cancelOTATaskByJobWithOptions(CancelOTATaskByJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.cancelInProgressTask)) {
            query.put("CancelInProgressTask", request.cancelInProgressTask);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.cancelNotifiedTask)) {
            query.put("CancelNotifiedTask", request.cancelNotifiedTask);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.cancelQueuedTask)) {
            query.put("CancelQueuedTask", request.cancelQueuedTask);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.cancelScheduledTask)) {
            query.put("CancelScheduledTask", request.cancelScheduledTask);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.cancelUnconfirmedTask)) {
            query.put("CancelUnconfirmedTask", request.cancelUnconfirmedTask);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CancelOTATaskByJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CancelOTATaskByJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>When you call this operation, make sure that you specify at least one of the CancelScheduledTask, CancelQueuedTask, CancelInProgressTask, CancelNotifiedTask, and CancelUnconfirmedTask parameters. Otherwise, the request will fail.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Cancels update tasks of a specified batch.</p>
     * 
     * @param request CancelOTATaskByJobRequest
     * @return CancelOTATaskByJobResponse
     */
    public CancelOTATaskByJobResponse cancelOTATaskByJob(CancelOTATaskByJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.cancelOTATaskByJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CancelReleaseProductRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CancelReleaseProductResponse
     */
    public CancelReleaseProductResponse cancelReleaseProductWithOptions(CancelReleaseProductRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CancelReleaseProduct"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CancelReleaseProductResponse());
    }

    /**
     * <b>description</b> :
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CancelReleaseProductRequest
     * @return CancelReleaseProductResponse
     */
    public CancelReleaseProductResponse cancelReleaseProduct(CancelReleaseProductRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.cancelReleaseProductWithOptions(request, runtime);
    }

    /**
     * @param request CheckBindLicenseDeviceProgressRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CheckBindLicenseDeviceProgressResponse
     */
    public CheckBindLicenseDeviceProgressResponse checkBindLicenseDeviceProgressWithOptions(CheckBindLicenseDeviceProgressRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.checkProgressId)) {
            query.put("CheckProgressId", request.checkProgressId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.licenseCode)) {
            query.put("LicenseCode", request.licenseCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CheckBindLicenseDeviceProgress"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CheckBindLicenseDeviceProgressResponse());
    }

    /**
     * @param request CheckBindLicenseDeviceProgressRequest
     * @return CheckBindLicenseDeviceProgressResponse
     */
    public CheckBindLicenseDeviceProgressResponse checkBindLicenseDeviceProgress(CheckBindLicenseDeviceProgressRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.checkBindLicenseDeviceProgressWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  Each time you call this operation, you must specify the identifiers of properties whose desired values you want to delete for the <strong>Identifies</strong> parameter. If you do not configure the <strong>Identifies</strong> parameter, the call fails.</p>
     * <ul>
     * <li>You can specify up to 10 property identifiers for the <strong>Identifies</strong> parameter in a single call.</li>
     * <li>After you call this operation to deletes the desired values of properties of a device, you can call the <a href="https://help.aliyun.com/document_detail/107566.html">QueryDeviceDesiredProperty</a> operation to query the desired values of properties of the device. In this case, the QueryDeviceDesiredProperty operation returns the <strong>Identifier</strong> parameter instead of the <strong>Value</strong> parameter.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Deletes the desired values of properties of a device.</p>
     * 
     * @param request ClearDeviceDesiredPropertyRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ClearDeviceDesiredPropertyResponse
     */
    public ClearDeviceDesiredPropertyResponse clearDeviceDesiredPropertyWithOptions(ClearDeviceDesiredPropertyRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.identifies)) {
            body.put("Identifies", request.identifies);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ClearDeviceDesiredProperty"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ClearDeviceDesiredPropertyResponse());
    }

    /**
     * <b>description</b> :
     * <p>  Each time you call this operation, you must specify the identifiers of properties whose desired values you want to delete for the <strong>Identifies</strong> parameter. If you do not configure the <strong>Identifies</strong> parameter, the call fails.</p>
     * <ul>
     * <li>You can specify up to 10 property identifiers for the <strong>Identifies</strong> parameter in a single call.</li>
     * <li>After you call this operation to deletes the desired values of properties of a device, you can call the <a href="https://help.aliyun.com/document_detail/107566.html">QueryDeviceDesiredProperty</a> operation to query the desired values of properties of the device. In this case, the QueryDeviceDesiredProperty operation returns the <strong>Identifier</strong> parameter instead of the <strong>Value</strong> parameter.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Deletes the desired values of properties of a device.</p>
     * 
     * @param request ClearDeviceDesiredPropertyRequest
     * @return ClearDeviceDesiredPropertyResponse
     */
    public ClearDeviceDesiredPropertyResponse clearDeviceDesiredProperty(ClearDeviceDesiredPropertyRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.clearDeviceDesiredPropertyWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request ClearEdgeInstanceDriverConfigsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ClearEdgeInstanceDriverConfigsResponse
     */
    public ClearEdgeInstanceDriverConfigsResponse clearEdgeInstanceDriverConfigsWithOptions(ClearEdgeInstanceDriverConfigsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ClearEdgeInstanceDriverConfigs"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ClearEdgeInstanceDriverConfigsResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request ClearEdgeInstanceDriverConfigsRequest
     * @return ClearEdgeInstanceDriverConfigsResponse
     */
    public ClearEdgeInstanceDriverConfigsResponse clearEdgeInstanceDriverConfigs(ClearEdgeInstanceDriverConfigsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.clearEdgeInstanceDriverConfigsWithOptions(request, runtime);
    }

    /**
     * @param request CloseDeviceTunnelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CloseDeviceTunnelResponse
     */
    public CloseDeviceTunnelResponse closeDeviceTunnelWithOptions(CloseDeviceTunnelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tunnelId)) {
            query.put("TunnelId", request.tunnelId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CloseDeviceTunnel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CloseDeviceTunnelResponse());
    }

    /**
     * @param request CloseDeviceTunnelRequest
     * @return CloseDeviceTunnelResponse
     */
    public CloseDeviceTunnelResponse closeDeviceTunnel(CloseDeviceTunnelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.closeDeviceTunnelWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Stops the deployment tasks of an edge instance.</p>
     * 
     * @param request CloseEdgeInstanceDeploymentRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CloseEdgeInstanceDeploymentResponse
     */
    public CloseEdgeInstanceDeploymentResponse closeEdgeInstanceDeploymentWithOptions(CloseEdgeInstanceDeploymentRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CloseEdgeInstanceDeployment"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CloseEdgeInstanceDeploymentResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Stops the deployment tasks of an edge instance.</p>
     * 
     * @param request CloseEdgeInstanceDeploymentRequest
     * @return CloseEdgeInstanceDeploymentResponse
     */
    public CloseEdgeInstanceDeploymentResponse closeEdgeInstanceDeployment(CloseEdgeInstanceDeploymentRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.closeEdgeInstanceDeploymentWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>To confirm update tasks in a scheduled update batch, you must call this operation within the specified time range.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Confirms the device update tasks that are in the pending confirmation status.</p>
     * 
     * @param request ConfirmOTATaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ConfirmOTATaskResponse
     */
    public ConfirmOTATaskResponse confirmOTATaskWithOptions(ConfirmOTATaskRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ConfirmOTATask"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ConfirmOTATaskResponse());
    }

    /**
     * <b>description</b> :
     * <p>To confirm update tasks in a scheduled update batch, you must call this operation within the specified time range.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Confirms the device update tasks that are in the pending confirmation status.</p>
     * 
     * @param request ConfirmOTATaskRequest
     * @return ConfirmOTATaskResponse
     */
    public ConfirmOTATaskResponse confirmOTATask(ConfirmOTATaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.confirmOTATaskWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  If a destination product is published, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product before you can copy a TSL model.</p>
     * <ul>
     * <li>The categories of the source product and destination product must be the same. The product category is indicated by the <strong>CategoryKey</strong> parameter. You can call the <a href="https://help.aliyun.com/document_detail/69272.html">QueryProduct</a> operation and view the <strong>CategoryKey</strong> parameter of a product in the returned result.</li>
     * <li>You must specify the version of the TSL model that you want to copy by using the <strong>SourceModelVersion</strong> parameter in the request. Otherwise, the CopyThingModel operation fails.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to five queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Copies a Thing Specification Language (TSL) model from a source product to a destination product.</p>
     * 
     * @param request CopyThingModelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CopyThingModelResponse
     */
    public CopyThingModelResponse copyThingModelWithOptions(CopyThingModelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceModelVersion)) {
            query.put("SourceModelVersion", request.sourceModelVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceProductKey)) {
            query.put("SourceProductKey", request.sourceProductKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetProductKey)) {
            query.put("TargetProductKey", request.targetProductKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CopyThingModel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CopyThingModelResponse());
    }

    /**
     * <b>description</b> :
     * <p>  If a destination product is published, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product before you can copy a TSL model.</p>
     * <ul>
     * <li>The categories of the source product and destination product must be the same. The product category is indicated by the <strong>CategoryKey</strong> parameter. You can call the <a href="https://help.aliyun.com/document_detail/69272.html">QueryProduct</a> operation and view the <strong>CategoryKey</strong> parameter of a product in the returned result.</li>
     * <li>You must specify the version of the TSL model that you want to copy by using the <strong>SourceModelVersion</strong> parameter in the request. Otherwise, the CopyThingModel operation fails.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to five queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Copies a Thing Specification Language (TSL) model from a source product to a destination product.</p>
     * 
     * @param request CopyThingModelRequest
     * @return CopyThingModelResponse
     */
    public CopyThingModelResponse copyThingModel(CopyThingModelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.copyThingModelWithOptions(request, runtime);
    }

    /**
     * @param request CopyThingModelAsyncRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CopyThingModelAsyncResponse
     */
    public CopyThingModelAsyncResponse copyThingModelAsyncWithOptions(CopyThingModelAsyncRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceModelVersion)) {
            query.put("SourceModelVersion", request.sourceModelVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceProductKey)) {
            query.put("SourceProductKey", request.sourceProductKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetProductKey)) {
            query.put("TargetProductKey", request.targetProductKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CopyThingModelAsync"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CopyThingModelAsyncResponse());
    }

    /**
     * @param request CopyThingModelAsyncRequest
     * @return CopyThingModelAsyncResponse
     */
    public CopyThingModelAsyncResponse copyThingModelAsync(CopyThingModelAsyncRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.copyThingModelAsyncWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>You can call this operation to query the shared speeches that were broadcasted six hours ago. For example, if a speech was broadcasted at 07:15, you can query the speech after 13:15.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 100 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the number of speeches that were broadcasted in a specific hour.</p>
     * 
     * @param request CountSpeechBroadcastHourRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CountSpeechBroadcastHourResponse
     */
    public CountSpeechBroadcastHourResponse countSpeechBroadcastHourWithOptions(CountSpeechBroadcastHourRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.queryDateTimeHour)) {
            query.put("QueryDateTimeHour", request.queryDateTimeHour);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shareTaskCode)) {
            body.put("ShareTaskCode", request.shareTaskCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CountSpeechBroadcastHour"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CountSpeechBroadcastHourResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>You can call this operation to query the shared speeches that were broadcasted six hours ago. For example, if a speech was broadcasted at 07:15, you can query the speech after 13:15.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 100 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the number of speeches that were broadcasted in a specific hour.</p>
     * 
     * @param request CountSpeechBroadcastHourRequest
     * @return CountSpeechBroadcastHourResponse
     */
    public CountSpeechBroadcastHourResponse countSpeechBroadcastHour(CountSpeechBroadcastHourRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.countSpeechBroadcastHourWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CreateConsumerGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateConsumerGroupResponse
     */
    public CreateConsumerGroupResponse createConsumerGroupWithOptions(CreateConsumerGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupName)) {
            query.put("GroupName", request.groupName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateConsumerGroup"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateConsumerGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CreateConsumerGroupRequest
     * @return CreateConsumerGroupResponse
     */
    public CreateConsumerGroupResponse createConsumerGroup(CreateConsumerGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createConsumerGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CreateConsumerGroupSubscribeRelationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateConsumerGroupSubscribeRelationResponse
     */
    public CreateConsumerGroupSubscribeRelationResponse createConsumerGroupSubscribeRelationWithOptions(CreateConsumerGroupSubscribeRelationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.consumerGroupId)) {
            query.put("ConsumerGroupId", request.consumerGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateConsumerGroupSubscribeRelation"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateConsumerGroupSubscribeRelationResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CreateConsumerGroupSubscribeRelationRequest
     * @return CreateConsumerGroupSubscribeRelationResponse
     */
    public CreateConsumerGroupSubscribeRelationResponse createConsumerGroupSubscribeRelation(CreateConsumerGroupSubscribeRelationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createConsumerGroupSubscribeRelationWithOptions(request, runtime);
    }

    /**
     * @param request CreateDataAPIServiceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateDataAPIServiceResponse
     */
    public CreateDataAPIServiceResponse createDataAPIServiceWithOptions(CreateDataAPIServiceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.apiPath)) {
            body.put("ApiPath", request.apiPath);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.desc)) {
            body.put("Desc", request.desc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.displayName)) {
            body.put("DisplayName", request.displayName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.originSql)) {
            body.put("OriginSql", request.originSql);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.requestParam)) {
            body.put("RequestParam", request.requestParam);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.responseParam)) {
            body.put("ResponseParam", request.responseParam);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateSql)) {
            body.put("TemplateSql", request.templateSql);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateDataAPIService"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateDataAPIServiceResponse());
    }

    /**
     * @param request CreateDataAPIServiceRequest
     * @return CreateDataAPIServiceResponse
     */
    public CreateDataAPIServiceResponse createDataAPIService(CreateDataAPIServiceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createDataAPIServiceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>Before you call this operation, perform the following steps: First, create a data source. For information about how to create a data source, see Step 1 to Step 6 in the <a href="https://help.aliyun.com/document_detail/270932.html">Create a data source</a> topic. Second, go to the <strong>Data Source</strong> tab on the <strong>Message Forwarding</strong> page of the instance that you want to manage in the IoT Platform console. Then, view and record the ID of the <strong>data source</strong> that you created.</p>
     * <blockquote>
     * <p> If you set Topic to a custom topic for a product or device that uses the open source Message Queuing Telemetry Transport (MQTT) protocol, you must specify ScopeType and ProductKey. If ScopeType is set to DEVICE, you must also specify DeviceName.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CreateDataSourceItemRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateDataSourceItemResponse
     */
    public CreateDataSourceItemResponse createDataSourceItemWithOptions(CreateDataSourceItemRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataSourceId)) {
            query.put("DataSourceId", request.dataSourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scopeType)) {
            query.put("ScopeType", request.scopeType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topic)) {
            query.put("Topic", request.topic);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateDataSourceItem"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateDataSourceItemResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>Before you call this operation, perform the following steps: First, create a data source. For information about how to create a data source, see Step 1 to Step 6 in the <a href="https://help.aliyun.com/document_detail/270932.html">Create a data source</a> topic. Second, go to the <strong>Data Source</strong> tab on the <strong>Message Forwarding</strong> page of the instance that you want to manage in the IoT Platform console. Then, view and record the ID of the <strong>data source</strong> that you created.</p>
     * <blockquote>
     * <p> If you set Topic to a custom topic for a product or device that uses the open source Message Queuing Telemetry Transport (MQTT) protocol, you must specify ScopeType and ProductKey. If ScopeType is set to DEVICE, you must also specify DeviceName.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CreateDataSourceItemRequest
     * @return CreateDataSourceItemResponse
     */
    public CreateDataSourceItemResponse createDataSourceItem(CreateDataSourceItemRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createDataSourceItemWithOptions(request, runtime);
    }

    /**
     * @param request CreateDestinationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateDestinationResponse
     */
    public CreateDestinationResponse createDestinationWithOptions(CreateDestinationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.configuration)) {
            query.put("Configuration", request.configuration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateDestination"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateDestinationResponse());
    }

    /**
     * @param request CreateDestinationRequest
     * @return CreateDestinationResponse
     */
    public CreateDestinationResponse createDestination(CreateDestinationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createDestinationWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>To distribute devices, perform the following steps:
     * 1\. Asynchronously call this operation to create a device distribution task and obtain the <strong>JobId</strong> parameter.
     * 2\. Use <strong>JobId</strong> as a request parameter and repeatedly call the <a href="https://help.aliyun.com/document_detail/199536.html">QueryDeviceDistributeJob</a> operation to obtain the <strong>Status</strong> parameter.</p>
     * <blockquote>
     * <p> You must control the frequency of calls based on the QPS limit of the QueryDeviceDistributeJob operation.
     * If either of the following values is returned for the <strong>Status</strong> parameter, the distribution task ends:</p>
     * </blockquote>
     * <ul>
     * <li><strong>2</strong>: The device distribution task is completed. This return value does not indicate that the devices are distributed. To obtain the distribution result of each device, perform the next step.</li>
     * <li><strong>3</strong>: The distribution is unexpectedly interrupted. After you process the error, you can initiate a device distribution task again.
     * 3\. Use <strong>JobId</strong> that is returned in Step 1 as a request parameter and call the <a href="https://help.aliyun.com/document_detail/199533.html">QueryDeviceDistributeDetail</a> operation to obtain the <strong>File</strong> parameter. The File parameter indicates the file URL of the distribution result.<blockquote>
     * <p> The file URL is valid for 10 minutes.
     * 4\. Obtain the distribution result by using the file URL. The <strong>Code</strong> parameter indicates whether a device is distributed. If the value of the <strong>Code</strong> parameter is 200, the device is distributed.
     * If the distribution fails, you can perform the preceding steps to distribute devices again.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2>Limits</h2>
     * <ul>
     * <li>This operation can be called only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</li>
     * <li>You cannot call this operation to distribute devices across accounts.</li>
     * <li>Each Alibaba Cloud account can create a maximum of 10 tasks to distribute products or devices. For more information about how to create a product distribution task, see <a href="/help/en/iot-platform/latest/createproductdistributejob">CreateProductDistributeJob</a>.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).  &gt;  RAM users of an Alibaba Cloud account share the quota of the account.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Creates a task to distribute devices. The product to which the devices belong is distributed by default.</p>
     * 
     * @param request CreateDeviceDistributeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateDeviceDistributeJobResponse
     */
    public CreateDeviceDistributeJobResponse createDeviceDistributeJobWithOptions(CreateDeviceDistributeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceInstanceId)) {
            body.put("SourceInstanceId", request.sourceInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.strategy)) {
            body.put("Strategy", request.strategy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetAliyunId)) {
            body.put("TargetAliyunId", request.targetAliyunId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetInstanceConfig)) {
            body.put("TargetInstanceConfig", request.targetInstanceConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetUid)) {
            body.put("TargetUid", request.targetUid);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateDeviceDistributeJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateDeviceDistributeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>To distribute devices, perform the following steps:
     * 1\. Asynchronously call this operation to create a device distribution task and obtain the <strong>JobId</strong> parameter.
     * 2\. Use <strong>JobId</strong> as a request parameter and repeatedly call the <a href="https://help.aliyun.com/document_detail/199536.html">QueryDeviceDistributeJob</a> operation to obtain the <strong>Status</strong> parameter.</p>
     * <blockquote>
     * <p> You must control the frequency of calls based on the QPS limit of the QueryDeviceDistributeJob operation.
     * If either of the following values is returned for the <strong>Status</strong> parameter, the distribution task ends:</p>
     * </blockquote>
     * <ul>
     * <li><strong>2</strong>: The device distribution task is completed. This return value does not indicate that the devices are distributed. To obtain the distribution result of each device, perform the next step.</li>
     * <li><strong>3</strong>: The distribution is unexpectedly interrupted. After you process the error, you can initiate a device distribution task again.
     * 3\. Use <strong>JobId</strong> that is returned in Step 1 as a request parameter and call the <a href="https://help.aliyun.com/document_detail/199533.html">QueryDeviceDistributeDetail</a> operation to obtain the <strong>File</strong> parameter. The File parameter indicates the file URL of the distribution result.<blockquote>
     * <p> The file URL is valid for 10 minutes.
     * 4\. Obtain the distribution result by using the file URL. The <strong>Code</strong> parameter indicates whether a device is distributed. If the value of the <strong>Code</strong> parameter is 200, the device is distributed.
     * If the distribution fails, you can perform the preceding steps to distribute devices again.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2>Limits</h2>
     * <ul>
     * <li>This operation can be called only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</li>
     * <li>You cannot call this operation to distribute devices across accounts.</li>
     * <li>Each Alibaba Cloud account can create a maximum of 10 tasks to distribute products or devices. For more information about how to create a product distribution task, see <a href="/help/en/iot-platform/latest/createproductdistributejob">CreateProductDistributeJob</a>.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).  &gt;  RAM users of an Alibaba Cloud account share the quota of the account.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Creates a task to distribute devices. The product to which the devices belong is distributed by default.</p>
     * 
     * @param request CreateDeviceDistributeJobRequest
     * @return CreateDeviceDistributeJobResponse
     */
    public CreateDeviceDistributeJobResponse createDeviceDistributeJob(CreateDeviceDistributeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createDeviceDistributeJobWithOptions(request, runtime);
    }

    /**
     * @param request CreateDeviceDynamicGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateDeviceDynamicGroupResponse
     */
    public CreateDeviceDynamicGroupResponse createDeviceDynamicGroupWithOptions(CreateDeviceDynamicGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dynamicGroupExpression)) {
            query.put("DynamicGroupExpression", request.dynamicGroupExpression);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupDesc)) {
            query.put("GroupDesc", request.groupDesc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupName)) {
            query.put("GroupName", request.groupName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateDeviceDynamicGroup"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateDeviceDynamicGroupResponse());
    }

    /**
     * @param request CreateDeviceDynamicGroupRequest
     * @return CreateDeviceDynamicGroupResponse
     */
    public CreateDeviceDynamicGroupResponse createDeviceDynamicGroup(CreateDeviceDynamicGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createDeviceDynamicGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CreateDeviceGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateDeviceGroupResponse
     */
    public CreateDeviceGroupResponse createDeviceGroupWithOptions(CreateDeviceGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupDesc)) {
            query.put("GroupDesc", request.groupDesc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupName)) {
            query.put("GroupName", request.groupName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.superGroupId)) {
            query.put("SuperGroupId", request.superGroupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateDeviceGroup"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateDeviceGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CreateDeviceGroupRequest
     * @return CreateDeviceGroupResponse
     */
    public CreateDeviceGroupResponse createDeviceGroup(CreateDeviceGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createDeviceGroupWithOptions(request, runtime);
    }

    /**
     * @param request CreateDeviceTunnelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateDeviceTunnelResponse
     */
    public CreateDeviceTunnelResponse createDeviceTunnelWithOptions(CreateDeviceTunnelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.udi)) {
            query.put("Udi", request.udi);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateDeviceTunnel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateDeviceTunnelResponse());
    }

    /**
     * @param request CreateDeviceTunnelRequest
     * @return CreateDeviceTunnelResponse
     */
    public CreateDeviceTunnelResponse createDeviceTunnel(CreateDeviceTunnelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createDeviceTunnelWithOptions(request, runtime);
    }

    /**
     * @param tmpReq CreateDownloadDataJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateDownloadDataJobResponse
     */
    public CreateDownloadDataJobResponse createDownloadDataJobWithOptions(CreateDownloadDataJobRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        CreateDownloadDataJobShrinkRequest request = new CreateDownloadDataJobShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.fileConfig)) {
            request.fileConfigShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.fileConfig, "FileConfig", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.downloadDataType)) {
            query.put("DownloadDataType", request.downloadDataType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fileConfigShrink)) {
            query.put("FileConfig", request.fileConfigShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tableName)) {
            query.put("TableName", request.tableName);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateDownloadDataJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateDownloadDataJobResponse());
    }

    /**
     * @param request CreateDownloadDataJobRequest
     * @return CreateDownloadDataJobResponse
     */
    public CreateDownloadDataJobResponse createDownloadDataJob(CreateDownloadDataJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createDownloadDataJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * @param request CreateEdgeDriverRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateEdgeDriverResponse
     */
    public CreateEdgeDriverResponse createEdgeDriverWithOptions(CreateEdgeDriverRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.cpuArch)) {
            query.put("CpuArch", request.cpuArch);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverName)) {
            query.put("DriverName", request.driverName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverProtocol)) {
            query.put("DriverProtocol", request.driverProtocol);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.isBuiltIn)) {
            query.put("IsBuiltIn", request.isBuiltIn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.runtime)) {
            query.put("Runtime", request.runtime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateEdgeDriver"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateEdgeDriverResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * @param request CreateEdgeDriverRequest
     * @return CreateEdgeDriverResponse
     */
    public CreateEdgeDriverResponse createEdgeDriver(CreateEdgeDriverRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createEdgeDriverWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a driver version.</p>
     * 
     * @param request CreateEdgeDriverVersionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateEdgeDriverVersionResponse
     */
    public CreateEdgeDriverVersionResponse createEdgeDriverVersionWithOptions(CreateEdgeDriverVersionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.argument)) {
            query.put("Argument", request.argument);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.configCheckRule)) {
            query.put("ConfigCheckRule", request.configCheckRule);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.containerConfig)) {
            query.put("ContainerConfig", request.containerConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverConfig)) {
            query.put("DriverConfig", request.driverConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverVersion)) {
            query.put("DriverVersion", request.driverVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.edgeVersion)) {
            query.put("EdgeVersion", request.edgeVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceConfig)) {
            query.put("SourceConfig", request.sourceConfig);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateEdgeDriverVersion"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateEdgeDriverVersionResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a driver version.</p>
     * 
     * @param request CreateEdgeDriverVersionRequest
     * @return CreateEdgeDriverVersionResponse
     */
    public CreateEdgeDriverVersionResponse createEdgeDriverVersion(CreateEdgeDriverVersionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createEdgeDriverVersionWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * @param request CreateEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateEdgeInstanceResponse
     */
    public CreateEdgeInstanceResponse createEdgeInstanceWithOptions(CreateEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.spec)) {
            query.put("Spec", request.spec);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tags)) {
            query.put("Tags", request.tags);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateEdgeInstanceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * @param request CreateEdgeInstanceRequest
     * @return CreateEdgeInstanceResponse
     */
    public CreateEdgeInstanceResponse createEdgeInstance(CreateEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * @param request CreateEdgeInstanceChannelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateEdgeInstanceChannelResponse
     */
    public CreateEdgeInstanceChannelResponse createEdgeInstanceChannelWithOptions(CreateEdgeInstanceChannelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.channelName)) {
            query.put("ChannelName", request.channelName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.configs)) {
            query.put("Configs", request.configs);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateEdgeInstanceChannel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateEdgeInstanceChannelResponse());
    }

    /**
     * @param request CreateEdgeInstanceChannelRequest
     * @return CreateEdgeInstanceChannelResponse
     */
    public CreateEdgeInstanceChannelResponse createEdgeInstanceChannel(CreateEdgeInstanceChannelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createEdgeInstanceChannelWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CreateEdgeInstanceDeploymentRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateEdgeInstanceDeploymentResponse
     */
    public CreateEdgeInstanceDeploymentResponse createEdgeInstanceDeploymentWithOptions(CreateEdgeInstanceDeploymentRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateEdgeInstanceDeployment"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateEdgeInstanceDeploymentResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CreateEdgeInstanceDeploymentRequest
     * @return CreateEdgeInstanceDeploymentResponse
     */
    public CreateEdgeInstanceDeploymentResponse createEdgeInstanceDeployment(CreateEdgeInstanceDeploymentRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createEdgeInstanceDeploymentWithOptions(request, runtime);
    }

    /**
     * @param request CreateEdgeInstanceMessageRoutingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateEdgeInstanceMessageRoutingResponse
     */
    public CreateEdgeInstanceMessageRoutingResponse createEdgeInstanceMessageRoutingWithOptions(CreateEdgeInstanceMessageRoutingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceData)) {
            query.put("SourceData", request.sourceData);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceType)) {
            query.put("SourceType", request.sourceType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetData)) {
            query.put("TargetData", request.targetData);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetIotHubQos)) {
            query.put("TargetIotHubQos", request.targetIotHubQos);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetType)) {
            query.put("TargetType", request.targetType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicFilter)) {
            query.put("TopicFilter", request.topicFilter);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateEdgeInstanceMessageRouting"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateEdgeInstanceMessageRoutingResponse());
    }

    /**
     * @param request CreateEdgeInstanceMessageRoutingRequest
     * @return CreateEdgeInstanceMessageRoutingResponse
     */
    public CreateEdgeInstanceMessageRoutingResponse createEdgeInstanceMessageRouting(CreateEdgeInstanceMessageRoutingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createEdgeInstanceMessageRoutingWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a pre-signed URL for an object that is stored in Object Storage Service (OSS).</p>
     * 
     * @param request CreateEdgeOssPreSignedAddressRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateEdgeOssPreSignedAddressResponse
     */
    public CreateEdgeOssPreSignedAddressResponse createEdgeOssPreSignedAddressWithOptions(CreateEdgeOssPreSignedAddressRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.fileName)) {
            query.put("FileName", request.fileName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceId)) {
            query.put("ResourceId", request.resourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceVersion)) {
            query.put("ResourceVersion", request.resourceVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateEdgeOssPreSignedAddress"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateEdgeOssPreSignedAddressResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a pre-signed URL for an object that is stored in Object Storage Service (OSS).</p>
     * 
     * @param request CreateEdgeOssPreSignedAddressRequest
     * @return CreateEdgeOssPreSignedAddressResponse
     */
    public CreateEdgeOssPreSignedAddressResponse createEdgeOssPreSignedAddress(CreateEdgeOssPreSignedAddressRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createEdgeOssPreSignedAddressWithOptions(request, runtime);
    }

    /**
     * @param tmpReq CreateJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateJobResponse
     */
    public CreateJobResponse createJobWithOptions(CreateJobRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        CreateJobShrinkRequest request = new CreateJobShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.jobFile)) {
            request.jobFileShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.jobFile, "JobFile", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.rolloutConfig)) {
            request.rolloutConfigShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.rolloutConfig, "RolloutConfig", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.targetConfig)) {
            request.targetConfigShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.targetConfig, "TargetConfig", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.timeoutConfig)) {
            request.timeoutConfigShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.timeoutConfig, "TimeoutConfig", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobDocument)) {
            query.put("JobDocument", request.jobDocument);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobFileShrink)) {
            query.put("JobFile", request.jobFileShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobName)) {
            query.put("JobName", request.jobName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.rolloutConfigShrink)) {
            query.put("RolloutConfig", request.rolloutConfigShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scheduledTime)) {
            query.put("ScheduledTime", request.scheduledTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetConfigShrink)) {
            query.put("TargetConfig", request.targetConfigShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.timeoutConfigShrink)) {
            query.put("TimeoutConfig", request.timeoutConfigShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateJobResponse());
    }

    /**
     * @param request CreateJobRequest
     * @return CreateJobResponse
     */
    public CreateJobResponse createJob(CreateJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>You can call this operation to create up to 500 devices.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates multiple Long Range Wide Area Networking (LoRaWAN) devices.</p>
     * 
     * @param request CreateLoRaNodesTaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateLoRaNodesTaskResponse
     */
    public CreateLoRaNodesTaskResponse createLoRaNodesTaskWithOptions(CreateLoRaNodesTaskRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceInfo)) {
            query.put("DeviceInfo", request.deviceInfo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateLoRaNodesTask"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateLoRaNodesTaskResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>You can call this operation to create up to 500 devices.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates multiple Long Range Wide Area Networking (LoRaWAN) devices.</p>
     * 
     * @param request CreateLoRaNodesTaskRequest
     * @return CreateLoRaNodesTaskResponse
     */
    public CreateLoRaNodesTaskResponse createLoRaNodesTask(CreateLoRaNodesTaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createLoRaNodesTaskWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/30561.html">Common parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>  You can specify that an update package does not need to be verified when you call the <a href="https://help.aliyun.com/document_detail/147311.html">CreateOTAFirmware</a> operation. Otherwise, you must make sure that the update package is verified before you call the CreateOTADynamicUpgradeJob operation to create an update batch. For more information about how to create a task to verify an update package, see <a href="https://help.aliyun.com/document_detail/147480.html">CreateOTAVerifyJob</a>.</p>
     * <ul>
     * <li>Each device can be in the pending or updating status only in one update task. If you initiate another update task for a device that is in the pending or updating status, the update task fails.</li>
     * <li>Each update package can have only one dynamic update task that is in the running state.</li>
     * <li>If a device is included in dynamic update policies of different update packages, the device performs the latest dynamic update.</li>
     * <li>After a dynamic update job is created, the system automatically creates the corresponding dynamic update policy. You can call the <a href="https://help.aliyun.com/document_detail/147905.html">CancelOTAStrategyByJob</a> operation to cancel a dynamic update policy.</li>
     * <li>Only devices in the China (Shanghai) region can download update packages over the MQTT protocol.</li>
     * </ul>
     * 
     * @param request CreateOTADynamicUpgradeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateOTADynamicUpgradeJobResponse
     */
    public CreateOTADynamicUpgradeJobResponse createOTADynamicUpgradeJobWithOptions(CreateOTADynamicUpgradeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.downloadProtocol)) {
            query.put("DownloadProtocol", request.downloadProtocol);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dynamicMode)) {
            query.put("DynamicMode", request.dynamicMode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareId)) {
            query.put("FirmwareId", request.firmwareId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupType)) {
            query.put("GroupType", request.groupType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.maximumPerMinute)) {
            query.put("MaximumPerMinute", request.maximumPerMinute);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.multiModuleMode)) {
            query.put("MultiModuleMode", request.multiModuleMode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.needConfirm)) {
            query.put("NeedConfirm", request.needConfirm);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.needPush)) {
            query.put("NeedPush", request.needPush);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.overwriteMode)) {
            query.put("OverwriteMode", request.overwriteMode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.retryCount)) {
            query.put("RetryCount", request.retryCount);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.retryInterval)) {
            query.put("RetryInterval", request.retryInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.srcVersion)) {
            query.put("SrcVersion", request.srcVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tag)) {
            query.put("Tag", request.tag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.timeoutInMinutes)) {
            query.put("TimeoutInMinutes", request.timeoutInMinutes);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateOTADynamicUpgradeJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateOTADynamicUpgradeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/30561.html">Common parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <p>  You can specify that an update package does not need to be verified when you call the <a href="https://help.aliyun.com/document_detail/147311.html">CreateOTAFirmware</a> operation. Otherwise, you must make sure that the update package is verified before you call the CreateOTADynamicUpgradeJob operation to create an update batch. For more information about how to create a task to verify an update package, see <a href="https://help.aliyun.com/document_detail/147480.html">CreateOTAVerifyJob</a>.</p>
     * <ul>
     * <li>Each device can be in the pending or updating status only in one update task. If you initiate another update task for a device that is in the pending or updating status, the update task fails.</li>
     * <li>Each update package can have only one dynamic update task that is in the running state.</li>
     * <li>If a device is included in dynamic update policies of different update packages, the device performs the latest dynamic update.</li>
     * <li>After a dynamic update job is created, the system automatically creates the corresponding dynamic update policy. You can call the <a href="https://help.aliyun.com/document_detail/147905.html">CancelOTAStrategyByJob</a> operation to cancel a dynamic update policy.</li>
     * <li>Only devices in the China (Shanghai) region can download update packages over the MQTT protocol.</li>
     * </ul>
     * 
     * @param request CreateOTADynamicUpgradeJobRequest
     * @return CreateOTADynamicUpgradeJobResponse
     */
    public CreateOTADynamicUpgradeJobResponse createOTADynamicUpgradeJob(CreateOTADynamicUpgradeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createOTADynamicUpgradeJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to create an OTA update package, you must call the <a href="https://help.aliyun.com/document_detail/147310.html">GenerateOTAUploadURL</a> operation to generate the information about the files that you want to add to the OTA update package and call the Object Storage Service (OSS) <a href="https://help.aliyun.com/document_detail/31988.html">PostObject</a> operation to upload the files.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can have up to 500 update packages. </p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates an over-the-air (OTA) update package for devices after you generate a URL for each file that you want to add to the OTA update package.</p>
     * 
     * @param request CreateOTAFirmwareRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateOTAFirmwareResponse
     */
    public CreateOTAFirmwareResponse createOTAFirmwareWithOptions(CreateOTAFirmwareRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.destVersion)) {
            query.put("DestVersion", request.destVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareDesc)) {
            query.put("FirmwareDesc", request.firmwareDesc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareName)) {
            query.put("FirmwareName", request.firmwareName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareSign)) {
            query.put("FirmwareSign", request.firmwareSign);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareSize)) {
            query.put("FirmwareSize", request.firmwareSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareUrl)) {
            query.put("FirmwareUrl", request.firmwareUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.moduleName)) {
            query.put("ModuleName", request.moduleName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.multiFiles)) {
            query.put("MultiFiles", request.multiFiles);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.needToVerify)) {
            query.put("NeedToVerify", request.needToVerify);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.signMethod)) {
            query.put("SignMethod", request.signMethod);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.srcVersion)) {
            query.put("SrcVersion", request.srcVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.udi)) {
            query.put("Udi", request.udi);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateOTAFirmware"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateOTAFirmwareResponse());
    }

    /**
     * <b>description</b> :
     * <p>Before you call this operation to create an OTA update package, you must call the <a href="https://help.aliyun.com/document_detail/147310.html">GenerateOTAUploadURL</a> operation to generate the information about the files that you want to add to the OTA update package and call the Object Storage Service (OSS) <a href="https://help.aliyun.com/document_detail/31988.html">PostObject</a> operation to upload the files.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can have up to 500 update packages. </p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates an over-the-air (OTA) update package for devices after you generate a URL for each file that you want to add to the OTA update package.</p>
     * 
     * @param request CreateOTAFirmwareRequest
     * @return CreateOTAFirmwareResponse
     */
    public CreateOTAFirmwareResponse createOTAFirmware(CreateOTAFirmwareRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createOTAFirmwareWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>OTA modules are the updatable units of the devices that belong to the same product. The default module indicates the entire firmware of a device. You can call this operation to create a custom OTA module.</p>
     * <ul>
     * <li>You can create a maximum of 10 custom OTA modules for each product.</li>
     * <li>After an OTA module is created, you cannot modify its name. You can call the <a href="https://help.aliyun.com/document_detail/186061.html">UpdateOTAModule</a> operation to modify the module alias and description.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Creates an over-the-air (OTA) module for a product.</p>
     * 
     * @param request CreateOTAModuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateOTAModuleResponse
     */
    public CreateOTAModuleResponse createOTAModuleWithOptions(CreateOTAModuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.aliasName)) {
            query.put("AliasName", request.aliasName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.desc)) {
            query.put("Desc", request.desc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.moduleName)) {
            query.put("ModuleName", request.moduleName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateOTAModule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateOTAModuleResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>OTA modules are the updatable units of the devices that belong to the same product. The default module indicates the entire firmware of a device. You can call this operation to create a custom OTA module.</p>
     * <ul>
     * <li>You can create a maximum of 10 custom OTA modules for each product.</li>
     * <li>After an OTA module is created, you cannot modify its name. You can call the <a href="https://help.aliyun.com/document_detail/186061.html">UpdateOTAModule</a> operation to modify the module alias and description.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Creates an over-the-air (OTA) module for a product.</p>
     * 
     * @param request CreateOTAModuleRequest
     * @return CreateOTAModuleResponse
     */
    public CreateOTAModuleResponse createOTAModule(CreateOTAModuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createOTAModuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  If you specify that an update package does not need to be verified when you call the <a href="https://help.aliyun.com/document_detail/147311.html">CreateOTAFirmware</a> operation, you must make sure that the update package is verified before you call the CreateOTAStaticUpgradeJob operation to create an update batch. For more information about how to create a task to verify an update package, see <a href="https://help.aliyun.com/document_detail/147480.html">CreateOTAVerifyJob</a>.</p>
     * <ul>
     * <li>You can initiate update tasks for a maximum of 200 devices in each call. If you use a device list file, you can initiate update tasks for a maximum of 1,000,000 devices. However, you must call the <a href="https://help.aliyun.com/document_detail/186062.html">GenerateDeviceNameListURL</a> operation to generate a URL for the device list file. Then, you can perform the operations as prompted to upload the device list file.</li>
     * <li>When you initiate update tasks for multiple devices, the devices that already have the destination firmware versions are skipped.</li>
     * <li>Each device can be in the pending or updating status only in one update task. If you initiate another update task for a device that is in the pending or updating status, the update task fails.</li>
     * <li>You can create multiple static update batches by using a single update package.</li>
     * <li>Downloading update packages through the MQTT protocol is supported only in the China (Shanghai) region.</li>
     * </ul>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a static update batch.</p>
     * 
     * @param request CreateOTAStaticUpgradeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateOTAStaticUpgradeJobResponse
     */
    public CreateOTAStaticUpgradeJobResponse createOTAStaticUpgradeJobWithOptions(CreateOTAStaticUpgradeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dnListFileUrl)) {
            query.put("DnListFileUrl", request.dnListFileUrl);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.downloadProtocol)) {
            query.put("DownloadProtocol", request.downloadProtocol);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareId)) {
            query.put("FirmwareId", request.firmwareId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.grayPercent)) {
            query.put("GrayPercent", request.grayPercent);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupType)) {
            query.put("GroupType", request.groupType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.maximumPerMinute)) {
            query.put("MaximumPerMinute", request.maximumPerMinute);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.multiModuleMode)) {
            query.put("MultiModuleMode", request.multiModuleMode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.needConfirm)) {
            query.put("NeedConfirm", request.needConfirm);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.needPush)) {
            query.put("NeedPush", request.needPush);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.overwriteMode)) {
            query.put("OverwriteMode", request.overwriteMode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.retryCount)) {
            query.put("RetryCount", request.retryCount);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.retryInterval)) {
            query.put("RetryInterval", request.retryInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scheduleFinishTime)) {
            query.put("ScheduleFinishTime", request.scheduleFinishTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scheduleTime)) {
            query.put("ScheduleTime", request.scheduleTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.srcVersion)) {
            query.put("SrcVersion", request.srcVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tag)) {
            query.put("Tag", request.tag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetDeviceName)) {
            query.put("TargetDeviceName", request.targetDeviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetSelection)) {
            query.put("TargetSelection", request.targetSelection);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.timeoutInMinutes)) {
            query.put("TimeoutInMinutes", request.timeoutInMinutes);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateOTAStaticUpgradeJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateOTAStaticUpgradeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>  If you specify that an update package does not need to be verified when you call the <a href="https://help.aliyun.com/document_detail/147311.html">CreateOTAFirmware</a> operation, you must make sure that the update package is verified before you call the CreateOTAStaticUpgradeJob operation to create an update batch. For more information about how to create a task to verify an update package, see <a href="https://help.aliyun.com/document_detail/147480.html">CreateOTAVerifyJob</a>.</p>
     * <ul>
     * <li>You can initiate update tasks for a maximum of 200 devices in each call. If you use a device list file, you can initiate update tasks for a maximum of 1,000,000 devices. However, you must call the <a href="https://help.aliyun.com/document_detail/186062.html">GenerateDeviceNameListURL</a> operation to generate a URL for the device list file. Then, you can perform the operations as prompted to upload the device list file.</li>
     * <li>When you initiate update tasks for multiple devices, the devices that already have the destination firmware versions are skipped.</li>
     * <li>Each device can be in the pending or updating status only in one update task. If you initiate another update task for a device that is in the pending or updating status, the update task fails.</li>
     * <li>You can create multiple static update batches by using a single update package.</li>
     * <li>Downloading update packages through the MQTT protocol is supported only in the China (Shanghai) region.</li>
     * </ul>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a static update batch.</p>
     * 
     * @param request CreateOTAStaticUpgradeJobRequest
     * @return CreateOTAStaticUpgradeJobResponse
     */
    public CreateOTAStaticUpgradeJobResponse createOTAStaticUpgradeJob(CreateOTAStaticUpgradeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createOTAStaticUpgradeJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You must verify an update package before you push the package to devices for a batch update. Only verified update packages can be used to update devices in batches. You can call the <a href="https://help.aliyun.com/document_detail/147461.html">QueryOTAFirmware</a> operation to view the status of a verification task.</p>
     * <ul>
     * <li>You cannot initiate a verification task for an update package that is being verified or has been verified.</li>
     * <li>You can specify a maximum of 10 devices for a verification task.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a task to verify an over-the-air (OTA) update package.</p>
     * 
     * @param request CreateOTAVerifyJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateOTAVerifyJobResponse
     */
    public CreateOTAVerifyJobResponse createOTAVerifyJobWithOptions(CreateOTAVerifyJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.downloadProtocol)) {
            query.put("DownloadProtocol", request.downloadProtocol);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareId)) {
            query.put("FirmwareId", request.firmwareId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.needConfirm)) {
            query.put("NeedConfirm", request.needConfirm);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.needPush)) {
            query.put("NeedPush", request.needPush);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tag)) {
            query.put("Tag", request.tag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetDeviceName)) {
            query.put("TargetDeviceName", request.targetDeviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.timeoutInMinutes)) {
            query.put("TimeoutInMinutes", request.timeoutInMinutes);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateOTAVerifyJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateOTAVerifyJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You must verify an update package before you push the package to devices for a batch update. Only verified update packages can be used to update devices in batches. You can call the <a href="https://help.aliyun.com/document_detail/147461.html">QueryOTAFirmware</a> operation to view the status of a verification task.</p>
     * <ul>
     * <li>You cannot initiate a verification task for an update package that is being verified or has been verified.</li>
     * <li>You can specify a maximum of 10 devices for a verification task.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a task to verify an over-the-air (OTA) update package.</p>
     * 
     * @param request CreateOTAVerifyJobRequest
     * @return CreateOTAVerifyJobResponse
     */
    public CreateOTAVerifyJobResponse createOTAVerifyJob(CreateOTAVerifyJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createOTAVerifyJobWithOptions(request, runtime);
    }

    /**
     * @param request CreateParserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateParserResponse
     */
    public CreateParserResponse createParserWithOptions(CreateParserRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateParser"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateParserResponse());
    }

    /**
     * @param request CreateParserRequest
     * @return CreateParserResponse
     */
    public CreateParserResponse createParser(CreateParserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createParserWithOptions(request, runtime);
    }

    /**
     * @param request CreateParserDataSourceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateParserDataSourceResponse
     */
    public CreateParserDataSourceResponse createParserDataSourceWithOptions(CreateParserDataSourceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateParserDataSource"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateParserDataSourceResponse());
    }

    /**
     * @param request CreateParserDataSourceRequest
     * @return CreateParserDataSourceResponse
     */
    public CreateParserDataSourceResponse createParserDataSource(CreateParserDataSourceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createParserDataSourceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>If a Thing Specification Language (TSL) model is required to create a product, you must set the <strong>AliyunCommodityCode</strong> parameter to iothub_senior and configure the <strong>DataFormat</strong> parameter.******** For more information, see the &quot;<strong>Request parameters</strong>&quot; section of this topic.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a product.</p>
     * 
     * @param request CreateProductRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateProductResponse
     */
    public CreateProductResponse createProductWithOptions(CreateProductRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.aliyunCommodityCode)) {
            query.put("AliyunCommodityCode", request.aliyunCommodityCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.authType)) {
            query.put("AuthType", request.authType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.categoryKey)) {
            query.put("CategoryKey", request.categoryKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataFormat)) {
            query.put("DataFormat", request.dataFormat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.id2)) {
            query.put("Id2", request.id2);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.joinPermissionId)) {
            query.put("JoinPermissionId", request.joinPermissionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.netType)) {
            query.put("NetType", request.netType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nodeType)) {
            query.put("NodeType", request.nodeType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productName)) {
            query.put("ProductName", request.productName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.protocolType)) {
            query.put("ProtocolType", request.protocolType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.publishAuto)) {
            query.put("PublishAuto", request.publishAuto);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.validateType)) {
            query.put("ValidateType", request.validateType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateProduct"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateProductResponse());
    }

    /**
     * <b>description</b> :
     * <p>If a Thing Specification Language (TSL) model is required to create a product, you must set the <strong>AliyunCommodityCode</strong> parameter to iothub_senior and configure the <strong>DataFormat</strong> parameter.******** For more information, see the &quot;<strong>Request parameters</strong>&quot; section of this topic.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a product.</p>
     * 
     * @param request CreateProductRequest
     * @return CreateProductResponse
     */
    public CreateProductResponse createProduct(CreateProductRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createProductWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  This operation can be called only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</p>
     * <ul>
     * <li>You cannot call this operation to distribute a product across accounts.</li>
     * <li>A product distribution task does not distribute the devices under the product.</li>
     * <li>After a product is distributed, you cannot modify its TSL model and scripts.</li>
     * <li>Each Alibaba Cloud account can create a maximum of 10 tasks to distribute products or devices. For more information about how to create a device distribution task, see <a href="https://help.aliyun.com/document_detail/199390.html">CreateDeviceDistributeJob</a>.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
     * **
     * <strong>Note</strong> RAM users of an Alibaba Cloud account share the quota of the account.</li>
     * </ul>
     * 
     * @param request CreateProductDistributeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateProductDistributeJobResponse
     */
    public CreateProductDistributeJobResponse createProductDistributeJobWithOptions(CreateProductDistributeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceInstanceId)) {
            query.put("SourceInstanceId", request.sourceInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetAliyunId)) {
            query.put("TargetAliyunId", request.targetAliyunId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetInstanceId)) {
            query.put("TargetInstanceId", request.targetInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetUid)) {
            query.put("TargetUid", request.targetUid);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateProductDistributeJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateProductDistributeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>  This operation can be called only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</p>
     * <ul>
     * <li>You cannot call this operation to distribute a product across accounts.</li>
     * <li>A product distribution task does not distribute the devices under the product.</li>
     * <li>After a product is distributed, you cannot modify its TSL model and scripts.</li>
     * <li>Each Alibaba Cloud account can create a maximum of 10 tasks to distribute products or devices. For more information about how to create a device distribution task, see <a href="https://help.aliyun.com/document_detail/199390.html">CreateDeviceDistributeJob</a>.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).
     * **
     * <strong>Note</strong> RAM users of an Alibaba Cloud account share the quota of the account.</li>
     * </ul>
     * 
     * @param request CreateProductDistributeJobRequest
     * @return CreateProductDistributeJobResponse
     */
    public CreateProductDistributeJobResponse createProductDistributeJob(CreateProductDistributeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createProductDistributeJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can create a maximum of 10 tags for a product in a single call.</p>
     * <ul>
     * <li>Each product can have a maximum of 100 tags.<blockquote>
     * <p>You must specify the tag keys and tag values. Otherwise, the call fails. For description about the tag values, see the &quot;<strong>Request parameters</strong>&quot; section of this topic.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates tags for a product.</p>
     * 
     * @param request CreateProductTagsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateProductTagsResponse
     */
    public CreateProductTagsResponse createProductTagsWithOptions(CreateProductTagsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productTag)) {
            query.put("ProductTag", request.productTag);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateProductTags"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateProductTagsResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can create a maximum of 10 tags for a product in a single call.</p>
     * <ul>
     * <li>Each product can have a maximum of 100 tags.<blockquote>
     * <p>You must specify the tag keys and tag values. Otherwise, the call fails. For description about the tag values, see the &quot;<strong>Request parameters</strong>&quot; section of this topic.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates tags for a product.</p>
     * 
     * @param request CreateProductTagsRequest
     * @return CreateProductTagsResponse
     */
    public CreateProductTagsResponse createProductTags(CreateProductTagsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createProductTagsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 1 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CreateProductTopicRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateProductTopicResponse
     */
    public CreateProductTopicResponse createProductTopicWithOptions(CreateProductTopicRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.codec)) {
            query.put("Codec", request.codec);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.desc)) {
            query.put("Desc", request.desc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.enableProxySubscribe)) {
            query.put("EnableProxySubscribe", request.enableProxySubscribe);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.operation)) {
            query.put("Operation", request.operation);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicShortName)) {
            query.put("TopicShortName", request.topicShortName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateProductTopic"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateProductTopicResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 1 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request CreateProductTopicRequest
     * @return CreateProductTopicResponse
     */
    public CreateProductTopicResponse createProductTopic(CreateProductTopicRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createProductTopicWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>When you call this operation, you must specify the <strong>ProductKey</strong> parameter in the request.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a data forwarding rule for a specified topic.</p>
     * 
     * @param request CreateRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateRuleResponse
     */
    public CreateRuleResponse createRuleWithOptions(CreateRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataType)) {
            query.put("DataType", request.dataType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleDesc)) {
            query.put("RuleDesc", request.ruleDesc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.select)) {
            query.put("Select", request.select);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shortTopic)) {
            query.put("ShortTopic", request.shortTopic);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topic)) {
            query.put("Topic", request.topic);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicType)) {
            query.put("TopicType", request.topicType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.where)) {
            query.put("Where", request.where);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateRuleResponse());
    }

    /**
     * <b>description</b> :
     * <p>When you call this operation, you must specify the <strong>ProductKey</strong> parameter in the request.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a data forwarding rule for a specified topic.</p>
     * 
     * @param request CreateRuleRequest
     * @return CreateRuleResponse
     */
    public CreateRuleResponse createRule(CreateRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createRuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>Destination Alibaba Cloud services that are supported by the rules engine vary based on regions. For more information about the regions and destination cloud services that are supported by the rules engine, see <a href="https://help.aliyun.com/document_detail/85669.html">Regions and zones</a>.</li>
     * <li>You can create a maximum of 10 rule actions for each rule.</li>
     * <li>You can call this API operation to define rule actions to forward data to an IoT Platform topic, AMQP consumer group, or Alibaba Cloud service. The supported Alibaba Cloud services include Message Service (MNS), Function Compute, and Tablestore. If you need to forward data to ApsaraDB RDS, you must use the <a href="https://iot.console.aliyun.com">IoT Platform console</a>.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Creates a rule action for a specified rule to forward processed data from a topic to another topic or a supported Alibaba Cloud service.</p>
     * 
     * @param request CreateRuleActionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateRuleActionResponse
     */
    public CreateRuleActionResponse createRuleActionWithOptions(CreateRuleActionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.configuration)) {
            query.put("Configuration", request.configuration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.errorActionFlag)) {
            query.put("ErrorActionFlag", request.errorActionFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateRuleAction"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateRuleActionResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>Destination Alibaba Cloud services that are supported by the rules engine vary based on regions. For more information about the regions and destination cloud services that are supported by the rules engine, see <a href="https://help.aliyun.com/document_detail/85669.html">Regions and zones</a>.</li>
     * <li>You can create a maximum of 10 rule actions for each rule.</li>
     * <li>You can call this API operation to define rule actions to forward data to an IoT Platform topic, AMQP consumer group, or Alibaba Cloud service. The supported Alibaba Cloud services include Message Service (MNS), Function Compute, and Tablestore. If you need to forward data to ApsaraDB RDS, you must use the <a href="https://iot.console.aliyun.com">IoT Platform console</a>.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Creates a rule action for a specified rule to forward processed data from a topic to another topic or a supported Alibaba Cloud service.</p>
     * 
     * @param request CreateRuleActionRequest
     * @return CreateRuleActionResponse
     */
    public CreateRuleActionResponse createRuleAction(CreateRuleActionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createRuleActionWithOptions(request, runtime);
    }

    /**
     * @param request CreateSceneRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateSceneRuleResponse
     */
    public CreateSceneRuleResponse createSceneRuleWithOptions(CreateSceneRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleContent)) {
            query.put("RuleContent", request.ruleContent);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleDescription)) {
            query.put("RuleDescription", request.ruleDescription);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleName)) {
            query.put("RuleName", request.ruleName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateSceneRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateSceneRuleResponse());
    }

    /**
     * @param request CreateSceneRuleRequest
     * @return CreateSceneRuleResponse
     */
    public CreateSceneRuleResponse createSceneRule(CreateSceneRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createSceneRuleWithOptions(request, runtime);
    }

    /**
     * @param request CreateSchedulePeriodRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateSchedulePeriodResponse
     */
    public CreateSchedulePeriodResponse createSchedulePeriodWithOptions(CreateSchedulePeriodRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            body.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            body.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scheduleCode)) {
            body.put("ScheduleCode", request.scheduleCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.soundCodeContent)) {
            body.put("SoundCodeContent", request.soundCodeContent);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            body.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateSchedulePeriod"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateSchedulePeriodResponse());
    }

    /**
     * @param request CreateSchedulePeriodRequest
     * @return CreateSchedulePeriodResponse
     */
    public CreateSchedulePeriodResponse createSchedulePeriod(CreateSchedulePeriodRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createSchedulePeriodWithOptions(request, runtime);
    }

    /**
     * @param request CreateSharePromotionActivityRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateSharePromotionActivityResponse
     */
    public CreateSharePromotionActivityResponse createSharePromotionActivityWithOptions(CreateSharePromotionActivityRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            body.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sharePromotionActivityName)) {
            body.put("SharePromotionActivityName", request.sharePromotionActivityName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            body.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateSharePromotionActivity"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateSharePromotionActivityResponse());
    }

    /**
     * @param request CreateSharePromotionActivityRequest
     * @return CreateSharePromotionActivityResponse
     */
    public CreateSharePromotionActivityResponse createSharePromotionActivity(CreateSharePromotionActivityRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createSharePromotionActivityWithOptions(request, runtime);
    }

    /**
     * @param request CreateSharePromotionSpeechModelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateSharePromotionSpeechModelResponse
     */
    public CreateSharePromotionSpeechModelResponse createSharePromotionSpeechModelWithOptions(CreateSharePromotionSpeechModelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.audioFormat)) {
            body.put("AudioFormat", request.audioFormat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.bizCode)) {
            body.put("BizCode", request.bizCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sharePromotionActivityId)) {
            body.put("SharePromotionActivityId", request.sharePromotionActivityId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shareTaskCode)) {
            body.put("ShareTaskCode", request.shareTaskCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechModelType)) {
            body.put("SpeechModelType", request.speechModelType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechRate)) {
            body.put("SpeechRate", request.speechRate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.text)) {
            body.put("Text", request.text);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.voice)) {
            body.put("Voice", request.voice);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.volume)) {
            body.put("Volume", request.volume);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateSharePromotionSpeechModel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateSharePromotionSpeechModelResponse());
    }

    /**
     * @param request CreateSharePromotionSpeechModelRequest
     * @return CreateSharePromotionSpeechModelResponse
     */
    public CreateSharePromotionSpeechModelResponse createSharePromotionSpeechModel(CreateSharePromotionSpeechModelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createSharePromotionSpeechModelWithOptions(request, runtime);
    }

    /**
     * @param request CreateSoundCodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateSoundCodeResponse
     */
    public CreateSoundCodeResponse createSoundCodeWithOptions(CreateSoundCodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.duration)) {
            body.put("Duration", request.duration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            body.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.openType)) {
            body.put("OpenType", request.openType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.soundCodeContent)) {
            body.put("SoundCodeContent", request.soundCodeContent);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateSoundCode"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateSoundCodeResponse());
    }

    /**
     * @param request CreateSoundCodeRequest
     * @return CreateSoundCodeResponse
     */
    public CreateSoundCodeResponse createSoundCode(CreateSoundCodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createSoundCodeWithOptions(request, runtime);
    }

    /**
     * @param request CreateSoundCodeLabelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateSoundCodeLabelResponse
     */
    public CreateSoundCodeLabelResponse createSoundCodeLabelWithOptions(CreateSoundCodeLabelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.label)) {
            body.put("Label", request.label);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scheduleCode)) {
            body.put("ScheduleCode", request.scheduleCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateSoundCodeLabel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateSoundCodeLabelResponse());
    }

    /**
     * @param request CreateSoundCodeLabelRequest
     * @return CreateSoundCodeLabelResponse
     */
    public CreateSoundCodeLabelResponse createSoundCodeLabel(CreateSoundCodeLabelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createSoundCodeLabelWithOptions(request, runtime);
    }

    /**
     * @param request CreateSoundCodeScheduleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateSoundCodeScheduleResponse
     */
    public CreateSoundCodeScheduleResponse createSoundCodeScheduleWithOptions(CreateSoundCodeScheduleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            body.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endDate)) {
            body.put("EndDate", request.endDate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            body.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.openType)) {
            body.put("OpenType", request.openType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startDate)) {
            body.put("StartDate", request.startDate);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateSoundCodeSchedule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateSoundCodeScheduleResponse());
    }

    /**
     * @param request CreateSoundCodeScheduleRequest
     * @return CreateSoundCodeScheduleResponse
     */
    public CreateSoundCodeScheduleResponse createSoundCodeSchedule(CreateSoundCodeScheduleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createSoundCodeScheduleWithOptions(request, runtime);
    }

    /**
     * @param tmpReq CreateSpeechRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateSpeechResponse
     */
    public CreateSpeechResponse createSpeechWithOptions(CreateSpeechRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        CreateSpeechShrinkRequest request = new CreateSpeechShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.soundCodeConfig)) {
            request.soundCodeConfigShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.soundCodeConfig, "SoundCodeConfig", "json");
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.audioFormat)) {
            body.put("AudioFormat", request.audioFormat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.bizCode)) {
            body.put("BizCode", request.bizCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.enableSoundCode)) {
            body.put("EnableSoundCode", request.enableSoundCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectCode)) {
            body.put("ProjectCode", request.projectCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.soundCodeConfigShrink)) {
            body.put("SoundCodeConfig", request.soundCodeConfigShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechRate)) {
            body.put("SpeechRate", request.speechRate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechType)) {
            body.put("SpeechType", request.speechType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.text)) {
            body.put("Text", request.text);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.voice)) {
            body.put("Voice", request.voice);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.volume)) {
            body.put("Volume", request.volume);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateSpeech"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateSpeechResponse());
    }

    /**
     * @param request CreateSpeechRequest
     * @return CreateSpeechResponse
     */
    public CreateSpeechResponse createSpeech(CreateSpeechRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createSpeechWithOptions(request, runtime);
    }

    /**
     * @param request CreateStudioAppDomainOpenRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateStudioAppDomainOpenResponse
     */
    public CreateStudioAppDomainOpenResponse createStudioAppDomainOpenWithOptions(CreateStudioAppDomainOpenRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.host)) {
            body.put("Host", request.host);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectId)) {
            body.put("ProjectId", request.projectId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.protocol)) {
            body.put("Protocol", request.protocol);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateStudioAppDomainOpen"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateStudioAppDomainOpenResponse());
    }

    /**
     * @param request CreateStudioAppDomainOpenRequest
     * @return CreateStudioAppDomainOpenResponse
     */
    public CreateStudioAppDomainOpenResponse createStudioAppDomainOpen(CreateStudioAppDomainOpenRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createStudioAppDomainOpenWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Server-side subscriptions are categorized into the following two types:</p>
     * <ul>
     * <li>MNS subscription: pushes subscribed messages to MNS queues. Your server applications listen to MNS queues to receive device messages. For more information, see <a href="https://help.aliyun.com/document_detail/68948.html">Configure MNS server-side subscriptions</a>. You can call this operation to create an MNS subscription.</li>
     * <li>AMQP subscription: pushes subscribed messages to your server by using the AMQP channel. For more information, see <a href="https://help.aliyun.com/document_detail/142376.html">Configure AMQP server-side subscriptions</a>. To configure an AMQP subscription, perform the following steps:
     * 1\. Call the <a href="https://help.aliyun.com/document_detail/170388.html">CreateConsumerGroup</a> operation to create a consumer group and obtain the returned consumer group ID. Messages are pushed to the consumer group. The AMQP client carries the consumer group ID when the client connected to IoT Platform. For more information, see <a href="https://help.aliyun.com/document_detail/142489.html">Connect an AMQP client to IoT Platform</a>.
     * 2\. Call the CreateSubscribeRelation operation to create an AMQP subscription.
     * 3\. Optional. Call the <a href="https://help.aliyun.com/document_detail/170354.html">CreateConsumerGroupSubscribeRelation</a> operation to add a consumer group to the AMQP subscription. You can also call the <a href="https://help.aliyun.com/document_detail/170357.html">DeleteConsumerGroupSubscribeRelation</a> operation to remove a consumer group from an AMQP subscription.
     * 4\. Optional. Call the <a href="https://help.aliyun.com/document_detail/170358.html">QueryConsumerGroupStatus</a> operation to query the status of a consumer group, including online client information, message consumption rate, number of accumulated messages, and last message consumption time. You can also call the <a href="https://help.aliyun.com/document_detail/170355.html">ResetConsumerGroupPosition</a> operation to clear the accumulated messages of the consumer group.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to five times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a Message Service (MNS) or Advanced Message Queuing Protocol (AMQP) server-side subscription.</p>
     * 
     * @param request CreateSubscribeRelationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateSubscribeRelationResponse
     */
    public CreateSubscribeRelationResponse createSubscribeRelationWithOptions(CreateSubscribeRelationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.consumerGroupIds)) {
            query.put("ConsumerGroupIds", request.consumerGroupIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceDataFlag)) {
            query.put("DeviceDataFlag", request.deviceDataFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceLifeCycleFlag)) {
            query.put("DeviceLifeCycleFlag", request.deviceLifeCycleFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceStatusChangeFlag)) {
            query.put("DeviceStatusChangeFlag", request.deviceStatusChangeFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceTagFlag)) {
            query.put("DeviceTagFlag", request.deviceTagFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceTopoLifeCycleFlag)) {
            query.put("DeviceTopoLifeCycleFlag", request.deviceTopoLifeCycleFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.foundDeviceListFlag)) {
            query.put("FoundDeviceListFlag", request.foundDeviceListFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mnsConfiguration)) {
            query.put("MnsConfiguration", request.mnsConfiguration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.otaEventFlag)) {
            query.put("OtaEventFlag", request.otaEventFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.otaJobFlag)) {
            query.put("OtaJobFlag", request.otaJobFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.otaVersionFlag)) {
            query.put("OtaVersionFlag", request.otaVersionFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subscribeFlags)) {
            query.put("SubscribeFlags", request.subscribeFlags);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.thingHistoryFlag)) {
            query.put("ThingHistoryFlag", request.thingHistoryFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateSubscribeRelation"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateSubscribeRelationResponse());
    }

    /**
     * <b>description</b> :
     * <p>Server-side subscriptions are categorized into the following two types:</p>
     * <ul>
     * <li>MNS subscription: pushes subscribed messages to MNS queues. Your server applications listen to MNS queues to receive device messages. For more information, see <a href="https://help.aliyun.com/document_detail/68948.html">Configure MNS server-side subscriptions</a>. You can call this operation to create an MNS subscription.</li>
     * <li>AMQP subscription: pushes subscribed messages to your server by using the AMQP channel. For more information, see <a href="https://help.aliyun.com/document_detail/142376.html">Configure AMQP server-side subscriptions</a>. To configure an AMQP subscription, perform the following steps:
     * 1\. Call the <a href="https://help.aliyun.com/document_detail/170388.html">CreateConsumerGroup</a> operation to create a consumer group and obtain the returned consumer group ID. Messages are pushed to the consumer group. The AMQP client carries the consumer group ID when the client connected to IoT Platform. For more information, see <a href="https://help.aliyun.com/document_detail/142489.html">Connect an AMQP client to IoT Platform</a>.
     * 2\. Call the CreateSubscribeRelation operation to create an AMQP subscription.
     * 3\. Optional. Call the <a href="https://help.aliyun.com/document_detail/170354.html">CreateConsumerGroupSubscribeRelation</a> operation to add a consumer group to the AMQP subscription. You can also call the <a href="https://help.aliyun.com/document_detail/170357.html">DeleteConsumerGroupSubscribeRelation</a> operation to remove a consumer group from an AMQP subscription.
     * 4\. Optional. Call the <a href="https://help.aliyun.com/document_detail/170358.html">QueryConsumerGroupStatus</a> operation to query the status of a consumer group, including online client information, message consumption rate, number of accumulated messages, and last message consumption time. You can also call the <a href="https://help.aliyun.com/document_detail/170355.html">ResetConsumerGroupPosition</a> operation to clear the accumulated messages of the consumer group.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to five times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Creates a Message Service (MNS) or Advanced Message Queuing Protocol (AMQP) server-side subscription.</p>
     * 
     * @param request CreateSubscribeRelationRequest
     * @return CreateSubscribeRelationResponse
     */
    public CreateSubscribeRelationResponse createSubscribeRelation(CreateSubscribeRelationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createSubscribeRelationWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>If a product is published, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product before you call this operation.</li>
     * <li>Before you call the operation, you can use the <a href="https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb">json-schema</a> library to verify the input parameters in <strong>ThingModelJson</strong>. For more information, see <a href="https://help.aliyun.com/document_detail/150457.html">Data structure of ThingModelJson</a>.</li>
     * <li>You can call this operation to add a maximum of 10 TSL features. TSL features include properties, services, and events.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request CreateThingModelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateThingModelResponse
     */
    public CreateThingModelResponse createThingModelWithOptions(CreateThingModelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockId)) {
            query.put("FunctionBlockId", request.functionBlockId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockName)) {
            query.put("FunctionBlockName", request.functionBlockName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.thingModelJson)) {
            query.put("ThingModelJson", request.thingModelJson);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateThingModel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateThingModelResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>If a product is published, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product before you call this operation.</li>
     * <li>Before you call the operation, you can use the <a href="https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb">json-schema</a> library to verify the input parameters in <strong>ThingModelJson</strong>. For more information, see <a href="https://help.aliyun.com/document_detail/150457.html">Data structure of ThingModelJson</a>.</li>
     * <li>You can call this operation to add a maximum of 10 TSL features. TSL features include properties, services, and events.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request CreateThingModelRequest
     * @return CreateThingModelResponse
     */
    public CreateThingModelResponse createThingModel(CreateThingModelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createThingModelWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>A data parsing script is used to convert data submitted by devices into the JSON format. The data submitted by devices is in a custom format. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see <a href="https://help.aliyun.com/document_detail/149963.html">Submit scripts for data parsing</a>.</p>
     * <blockquote>
     * <p>If the data format is <strong>Alink JSON</strong>, the CreateThingScript operation is not supported. Alink JSON is a standard data format that is defined by IoT Connectivity Alliance (ICA).</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Submits a data parsing script for a specified product.</p>
     * 
     * @param request CreateThingScriptRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateThingScriptResponse
     */
    public CreateThingScriptResponse createThingScriptWithOptions(CreateThingScriptRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scriptContent)) {
            query.put("ScriptContent", request.scriptContent);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scriptType)) {
            query.put("ScriptType", request.scriptType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateThingScript"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateThingScriptResponse());
    }

    /**
     * <b>description</b> :
     * <p>A data parsing script is used to convert data submitted by devices into the JSON format. The data submitted by devices is in a custom format. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see <a href="https://help.aliyun.com/document_detail/149963.html">Submit scripts for data parsing</a>.</p>
     * <blockquote>
     * <p>If the data format is <strong>Alink JSON</strong>, the CreateThingScript operation is not supported. Alink JSON is a standard data format that is defined by IoT Connectivity Alliance (ICA).</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Submits a data parsing script for a specified product.</p>
     * 
     * @param request CreateThingScriptRequest
     * @return CreateThingScriptResponse
     */
    public CreateThingScriptResponse createThingScript(CreateThingScriptRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createThingScriptWithOptions(request, runtime);
    }

    /**
     * @param request CreateTopicConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateTopicConfigResponse
     */
    public CreateTopicConfigResponse createTopicConfigWithOptions(CreateTopicConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.codec)) {
            query.put("Codec", request.codec);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.enableBroadcast)) {
            query.put("EnableBroadcast", request.enableBroadcast);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.enableProxySubscribe)) {
            query.put("EnableProxySubscribe", request.enableProxySubscribe);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.operation)) {
            query.put("Operation", request.operation);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicFullName)) {
            query.put("TopicFullName", request.topicFullName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateTopicConfig"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateTopicConfigResponse());
    }

    /**
     * @param request CreateTopicConfigRequest
     * @return CreateTopicConfigResponse
     */
    public CreateTopicConfigResponse createTopicConfig(CreateTopicConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createTopicConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can specify a maximum of 100 destination topics for a source topic.</li>
     * <li>The device to which the source topic belongs must be activated.</li>
     * <li>The source and destination topics support only custom topics.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request CreateTopicRouteTableRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return CreateTopicRouteTableResponse
     */
    public CreateTopicRouteTableResponse createTopicRouteTableWithOptions(CreateTopicRouteTableRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dstTopic)) {
            query.put("DstTopic", request.dstTopic);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.srcTopic)) {
            query.put("SrcTopic", request.srcTopic);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "CreateTopicRouteTable"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new CreateTopicRouteTableResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can specify a maximum of 100 destination topics for a source topic.</li>
     * <li>The device to which the source topic belongs must be activated.</li>
     * <li>The source and destination topics support only custom topics.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request CreateTopicRouteTableRequest
     * @return CreateTopicRouteTableResponse
     */
    public CreateTopicRouteTableResponse createTopicRouteTable(CreateTopicRouteTableRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.createTopicRouteTableWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call the <a href="https://help.aliyun.com/document_detail/371985.html">QueryClientIds</a> operation to view the ClientIDs of a device and obtain the number of ClientIDs.</p>
     * <ul>
     * <li>After you call the DeleteClientIds operation, all ClientIDs of the device are deleted and cannot be resumed. To obtain a new ClientID, you can register the device again.</li>
     * </ul>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Deletes all ClientIDs of a device if the number of ClientIDs exceeds the limit 5. This API operation applies to preregistration-free unique-certificate-per-product authentication.</p>
     * 
     * @param request DeleteClientIdsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteClientIdsResponse
     */
    public DeleteClientIdsResponse deleteClientIdsWithOptions(DeleteClientIdsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteClientIds"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteClientIdsResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call the <a href="https://help.aliyun.com/document_detail/371985.html">QueryClientIds</a> operation to view the ClientIDs of a device and obtain the number of ClientIDs.</p>
     * <ul>
     * <li>After you call the DeleteClientIds operation, all ClientIDs of the device are deleted and cannot be resumed. To obtain a new ClientID, you can register the device again.</li>
     * </ul>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Deletes all ClientIDs of a device if the number of ClientIDs exceeds the limit 5. This API operation applies to preregistration-free unique-certificate-per-product authentication.</p>
     * 
     * @param request DeleteClientIdsRequest
     * @return DeleteClientIdsResponse
     */
    public DeleteClientIdsResponse deleteClientIds(DeleteClientIdsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteClientIdsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You cannot delete the default consumer group provided by IoT Platform.</li>
     * <li>If the consumer group is associated with an AMQP subscription, you must disassociate the consumer group from the subscription. If the subscription has multiple consumer groups, you can call the <a href="https://help.aliyun.com/document_detail/170357.html">DeleteConsumerGroupSubscribeRelation</a> operation to remove the consumer group from the subscription. If the subscription has only one consumer group, you can call the <a href="https://help.aliyun.com/document_detail/170351.html">UpdateSubscribeRelation</a> operation to change the consumer group or call the <a href="https://help.aliyun.com/document_detail/170353.html">DeleteSubscribeRelation</a> operation to delete the subscription.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteConsumerGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteConsumerGroupResponse
     */
    public DeleteConsumerGroupResponse deleteConsumerGroupWithOptions(DeleteConsumerGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteConsumerGroup"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteConsumerGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You cannot delete the default consumer group provided by IoT Platform.</li>
     * <li>If the consumer group is associated with an AMQP subscription, you must disassociate the consumer group from the subscription. If the subscription has multiple consumer groups, you can call the <a href="https://help.aliyun.com/document_detail/170357.html">DeleteConsumerGroupSubscribeRelation</a> operation to remove the consumer group from the subscription. If the subscription has only one consumer group, you can call the <a href="https://help.aliyun.com/document_detail/170351.html">UpdateSubscribeRelation</a> operation to change the consumer group or call the <a href="https://help.aliyun.com/document_detail/170353.html">DeleteSubscribeRelation</a> operation to delete the subscription.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteConsumerGroupRequest
     * @return DeleteConsumerGroupResponse
     */
    public DeleteConsumerGroupResponse deleteConsumerGroup(DeleteConsumerGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteConsumerGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>If the AMQP subscription has only one consumer group, you cannot call this operation to remove the consumer group.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteConsumerGroupSubscribeRelationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteConsumerGroupSubscribeRelationResponse
     */
    public DeleteConsumerGroupSubscribeRelationResponse deleteConsumerGroupSubscribeRelationWithOptions(DeleteConsumerGroupSubscribeRelationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.consumerGroupId)) {
            query.put("ConsumerGroupId", request.consumerGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteConsumerGroupSubscribeRelation"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteConsumerGroupSubscribeRelationResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>If the AMQP subscription has only one consumer group, you cannot call this operation to remove the consumer group.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteConsumerGroupSubscribeRelationRequest
     * @return DeleteConsumerGroupSubscribeRelationResponse
     */
    public DeleteConsumerGroupSubscribeRelationResponse deleteConsumerGroupSubscribeRelation(DeleteConsumerGroupSubscribeRelationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteConsumerGroupSubscribeRelationWithOptions(request, runtime);
    }

    /**
     * @param request DeleteDataSourceItemRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteDataSourceItemResponse
     */
    public DeleteDataSourceItemResponse deleteDataSourceItemWithOptions(DeleteDataSourceItemRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataSourceId)) {
            query.put("DataSourceId", request.dataSourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataSourceItemId)) {
            query.put("DataSourceItemId", request.dataSourceItemId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteDataSourceItem"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteDataSourceItemResponse());
    }

    /**
     * @param request DeleteDataSourceItemRequest
     * @return DeleteDataSourceItemResponse
     */
    public DeleteDataSourceItemResponse deleteDataSourceItem(DeleteDataSourceItemRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteDataSourceItemWithOptions(request, runtime);
    }

    /**
     * @param request DeleteDestinationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteDestinationResponse
     */
    public DeleteDestinationResponse deleteDestinationWithOptions(DeleteDestinationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.destinationId)) {
            query.put("DestinationId", request.destinationId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteDestination"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteDestinationResponse());
    }

    /**
     * @param request DeleteDestinationRequest
     * @return DeleteDestinationResponse
     */
    public DeleteDestinationResponse deleteDestination(DeleteDestinationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteDestinationWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  When you call this operation with an Alibaba Cloud account, IoT Platform sends a verification code by text message to confirm your identity.</p>
     * <ul>
     * <li>When you call this operation with a RAM user, IoT Platform does not send a verification code. To ensure device security, you can create custom permission policies to perform fine-grained permission management. For more information, see <a href="https://help.aliyun.com/document_detail/47485.html">Mapping of IoT Platform operations and RAM policies</a> and <a href="https://help.aliyun.com/document_detail/47495.html">Custom permissions</a>.
     * <strong>Warning</strong></li>
     * <li>After a device is deleted, the device ID (<strong>IotId</strong>) becomes invalid, and all other information associated with the device is deleted. In addition, you can no longer perform an operation on the device.</li>
     * <li>Before you delete a device in the IoT Platform console, make sure that the corresponding actual device is offline. Otherwise, after the device is deleted from IoT Platform, the actual device continues to initiate connection requests to IoT Platform. If the number of requests exceeds the upper limit, IoT Platform starts request throttling. In this case, access of other devices within your Alibaba Cloud account is affected.</li>
     * <li>After you delete a device, the certificate of the device becomes invalid and cannot be restored. Proceed with caution.</li>
     * </ul>
     * <hr>
     * <ul>
     * <li>You must specify a value for the <strong>IotId</strong> parameter or values for the <strong>ProductKey</strong> and <strong>DeviceName</strong> parameters to identify a device.</li>
     * <li>If you specify a gateway and the number of sub-devices that belong to the gateway exceeds 2,000, you can call this operation to create a device job to delete the topological relationships in an asynchronous manner. The operation returns the <strong>JobId</strong> parameter.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Deletes a device. You can also call this operation to delete the topological relationships between a gateway and the sub-devices that are connected to the gateway.</p>
     * 
     * @param request DeleteDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteDeviceResponse
     */
    public DeleteDeviceResponse deleteDeviceWithOptions(DeleteDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <p>  When you call this operation with an Alibaba Cloud account, IoT Platform sends a verification code by text message to confirm your identity.</p>
     * <ul>
     * <li>When you call this operation with a RAM user, IoT Platform does not send a verification code. To ensure device security, you can create custom permission policies to perform fine-grained permission management. For more information, see <a href="https://help.aliyun.com/document_detail/47485.html">Mapping of IoT Platform operations and RAM policies</a> and <a href="https://help.aliyun.com/document_detail/47495.html">Custom permissions</a>.
     * <strong>Warning</strong></li>
     * <li>After a device is deleted, the device ID (<strong>IotId</strong>) becomes invalid, and all other information associated with the device is deleted. In addition, you can no longer perform an operation on the device.</li>
     * <li>Before you delete a device in the IoT Platform console, make sure that the corresponding actual device is offline. Otherwise, after the device is deleted from IoT Platform, the actual device continues to initiate connection requests to IoT Platform. If the number of requests exceeds the upper limit, IoT Platform starts request throttling. In this case, access of other devices within your Alibaba Cloud account is affected.</li>
     * <li>After you delete a device, the certificate of the device becomes invalid and cannot be restored. Proceed with caution.</li>
     * </ul>
     * <hr>
     * <ul>
     * <li>You must specify a value for the <strong>IotId</strong> parameter or values for the <strong>ProductKey</strong> and <strong>DeviceName</strong> parameters to identify a device.</li>
     * <li>If you specify a gateway and the number of sub-devices that belong to the gateway exceeds 2,000, you can call this operation to create a device job to delete the topological relationships in an asynchronous manner. The operation returns the <strong>JobId</strong> parameter.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Deletes a device. You can also call this operation to delete the topological relationships between a gateway and the sub-devices that are connected to the gateway.</p>
     * 
     * @param request DeleteDeviceRequest
     * @return DeleteDeviceResponse
     */
    public DeleteDeviceResponse deleteDevice(DeleteDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  This operation can be called only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteDeviceDistributeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteDeviceDistributeJobResponse
     */
    public DeleteDeviceDistributeJobResponse deleteDeviceDistributeJobWithOptions(DeleteDeviceDistributeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteDeviceDistributeJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteDeviceDistributeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>  This operation can be called only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteDeviceDistributeJobRequest
     * @return DeleteDeviceDistributeJobResponse
     */
    public DeleteDeviceDistributeJobResponse deleteDeviceDistributeJob(DeleteDeviceDistributeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteDeviceDistributeJobWithOptions(request, runtime);
    }

    /**
     * @param request DeleteDeviceDynamicGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteDeviceDynamicGroupResponse
     */
    public DeleteDeviceDynamicGroupResponse deleteDeviceDynamicGroupWithOptions(DeleteDeviceDynamicGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteDeviceDynamicGroup"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteDeviceDynamicGroupResponse());
    }

    /**
     * @param request DeleteDeviceDynamicGroupRequest
     * @return DeleteDeviceDynamicGroupResponse
     */
    public DeleteDeviceDynamicGroupResponse deleteDeviceDynamicGroup(DeleteDeviceDynamicGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteDeviceDynamicGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteDeviceFileRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteDeviceFileResponse
     */
    public DeleteDeviceFileResponse deleteDeviceFileWithOptions(DeleteDeviceFileRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fileId)) {
            query.put("FileId", request.fileId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteDeviceFile"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteDeviceFileResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteDeviceFileRequest
     * @return DeleteDeviceFileResponse
     */
    public DeleteDeviceFileResponse deleteDeviceFile(DeleteDeviceFileRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteDeviceFileWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteDeviceGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteDeviceGroupResponse
     */
    public DeleteDeviceGroupResponse deleteDeviceGroupWithOptions(DeleteDeviceGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteDeviceGroup"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteDeviceGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteDeviceGroupRequest
     * @return DeleteDeviceGroupResponse
     */
    public DeleteDeviceGroupResponse deleteDeviceGroup(DeleteDeviceGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteDeviceGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteDevicePropRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteDevicePropResponse
     */
    public DeleteDevicePropResponse deleteDevicePropWithOptions(DeleteDevicePropRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.propKey)) {
            query.put("PropKey", request.propKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteDeviceProp"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteDevicePropResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteDevicePropRequest
     * @return DeleteDevicePropResponse
     */
    public DeleteDevicePropResponse deleteDeviceProp(DeleteDevicePropRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteDevicePropWithOptions(request, runtime);
    }

    /**
     * @param request DeleteDeviceSpeechRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteDeviceSpeechResponse
     */
    public DeleteDeviceSpeechResponse deleteDeviceSpeechWithOptions(DeleteDeviceSpeechRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceSpeechList)) {
            body.put("DeviceSpeechList", request.deviceSpeechList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            body.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteDeviceSpeech"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteDeviceSpeechResponse());
    }

    /**
     * @param request DeleteDeviceSpeechRequest
     * @return DeleteDeviceSpeechResponse
     */
    public DeleteDeviceSpeechResponse deleteDeviceSpeech(DeleteDeviceSpeechRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteDeviceSpeechWithOptions(request, runtime);
    }

    /**
     * @param request DeleteDeviceTunnelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteDeviceTunnelResponse
     */
    public DeleteDeviceTunnelResponse deleteDeviceTunnelWithOptions(DeleteDeviceTunnelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tunnelId)) {
            query.put("TunnelId", request.tunnelId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteDeviceTunnel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteDeviceTunnelResponse());
    }

    /**
     * @param request DeleteDeviceTunnelRequest
     * @return DeleteDeviceTunnelResponse
     */
    public DeleteDeviceTunnelResponse deleteDeviceTunnel(DeleteDeviceTunnelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteDeviceTunnelWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You are not allowed to delete a driver that has a published version.</li>
     * <li>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteEdgeDriverRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteEdgeDriverResponse
     */
    public DeleteEdgeDriverResponse deleteEdgeDriverWithOptions(DeleteEdgeDriverRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteEdgeDriver"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteEdgeDriverResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You are not allowed to delete a driver that has a published version.</li>
     * <li>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteEdgeDriverRequest
     * @return DeleteEdgeDriverResponse
     */
    public DeleteEdgeDriverResponse deleteEdgeDriver(DeleteEdgeDriverRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteEdgeDriverWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You are not allowed to delete a published driver version.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteEdgeDriverVersionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteEdgeDriverVersionResponse
     */
    public DeleteEdgeDriverVersionResponse deleteEdgeDriverVersionWithOptions(DeleteEdgeDriverVersionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverVersion)) {
            query.put("DriverVersion", request.driverVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteEdgeDriverVersion"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteEdgeDriverVersionResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You are not allowed to delete a published driver version.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteEdgeDriverVersionRequest
     * @return DeleteEdgeDriverVersionResponse
     */
    public DeleteEdgeDriverVersionResponse deleteEdgeDriverVersion(DeleteEdgeDriverVersionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteEdgeDriverVersionWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteEdgeInstanceResponse
     */
    public DeleteEdgeInstanceResponse deleteEdgeInstanceWithOptions(DeleteEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteEdgeInstanceResponse());
    }

    /**
     * <b>description</b> :
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteEdgeInstanceRequest
     * @return DeleteEdgeInstanceResponse
     */
    public DeleteEdgeInstanceResponse deleteEdgeInstance(DeleteEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * @param request DeleteEdgeInstanceMessageRoutingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteEdgeInstanceMessageRoutingResponse
     */
    public DeleteEdgeInstanceMessageRoutingResponse deleteEdgeInstanceMessageRoutingWithOptions(DeleteEdgeInstanceMessageRoutingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.routeId)) {
            query.put("RouteId", request.routeId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteEdgeInstanceMessageRouting"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteEdgeInstanceMessageRoutingResponse());
    }

    /**
     * @param request DeleteEdgeInstanceMessageRoutingRequest
     * @return DeleteEdgeInstanceMessageRoutingResponse
     */
    public DeleteEdgeInstanceMessageRoutingResponse deleteEdgeInstanceMessageRouting(DeleteEdgeInstanceMessageRoutingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteEdgeInstanceMessageRoutingWithOptions(request, runtime);
    }

    /**
     * @param request DeleteJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteJobResponse
     */
    public DeleteJobResponse deleteJobWithOptions(DeleteJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteJobResponse());
    }

    /**
     * @param request DeleteJobRequest
     * @return DeleteJobResponse
     */
    public DeleteJobResponse deleteJob(DeleteJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteOTAFirmwareRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteOTAFirmwareResponse
     */
    public DeleteOTAFirmwareResponse deleteOTAFirmwareWithOptions(DeleteOTAFirmwareRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.firmwareId)) {
            query.put("FirmwareId", request.firmwareId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteOTAFirmware"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteOTAFirmwareResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteOTAFirmwareRequest
     * @return DeleteOTAFirmwareResponse
     */
    public DeleteOTAFirmwareResponse deleteOTAFirmware(DeleteOTAFirmwareRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteOTAFirmwareWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>The default module cannot be deleted.</li>
     * <li>If an update package exists in an OTA module, you cannot delete the OTA module.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteOTAModuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteOTAModuleResponse
     */
    public DeleteOTAModuleResponse deleteOTAModuleWithOptions(DeleteOTAModuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.moduleName)) {
            query.put("ModuleName", request.moduleName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteOTAModule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteOTAModuleResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>The default module cannot be deleted.</li>
     * <li>If an update package exists in an OTA module, you cannot delete the OTA module.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteOTAModuleRequest
     * @return DeleteOTAModuleResponse
     */
    public DeleteOTAModuleResponse deleteOTAModule(DeleteOTAModuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteOTAModuleWithOptions(request, runtime);
    }

    /**
     * @param request DeleteParserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteParserResponse
     */
    public DeleteParserResponse deleteParserWithOptions(DeleteParserRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.parserId)) {
            query.put("ParserId", request.parserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteParser"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteParserResponse());
    }

    /**
     * @param request DeleteParserRequest
     * @return DeleteParserResponse
     */
    public DeleteParserResponse deleteParser(DeleteParserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteParserWithOptions(request, runtime);
    }

    /**
     * @param request DeleteParserDataSourceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteParserDataSourceResponse
     */
    public DeleteParserDataSourceResponse deleteParserDataSourceWithOptions(DeleteParserDataSourceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataSourceId)) {
            query.put("DataSourceId", request.dataSourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteParserDataSource"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteParserDataSourceResponse());
    }

    /**
     * @param request DeleteParserDataSourceRequest
     * @return DeleteParserDataSourceResponse
     */
    public DeleteParserDataSourceResponse deleteParserDataSource(DeleteParserDataSourceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteParserDataSourceWithOptions(request, runtime);
    }

    /**
     * @param request DeletePowerStationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeletePowerStationResponse
     */
    public DeletePowerStationResponse deletePowerStationWithOptions(DeletePowerStationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.algorithmInstanceUid)) {
            query.put("AlgorithmInstanceUid", request.algorithmInstanceUid);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.powerStationUid)) {
            query.put("PowerStationUid", request.powerStationUid);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeletePowerStation"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeletePowerStationResponse());
    }

    /**
     * @param request DeletePowerStationRequest
     * @return DeletePowerStationResponse
     */
    public DeletePowerStationResponse deletePowerStation(DeletePowerStationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deletePowerStationWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>After a product is deleted, the ProductKey of the product is invalid. The related information about the product is also deleted. You cannot perform the required operations on the product.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteProductRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteProductResponse
     */
    public DeleteProductResponse deleteProductWithOptions(DeleteProductRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteProduct"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteProductResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>After a product is deleted, the ProductKey of the product is invalid. The related information about the product is also deleted. You cannot perform the required operations on the product.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteProductRequest
     * @return DeleteProductResponse
     */
    public DeleteProductResponse deleteProduct(DeleteProductRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteProductWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can delete a maximum of 10 tags in a single call.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteProductTagsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteProductTagsResponse
     */
    public DeleteProductTagsResponse deleteProductTagsWithOptions(DeleteProductTagsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productTagKey)) {
            query.put("ProductTagKey", request.productTagKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteProductTags"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteProductTagsResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can delete a maximum of 10 tags in a single call.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DeleteProductTagsRequest
     * @return DeleteProductTagsResponse
     */
    public DeleteProductTagsResponse deleteProductTags(DeleteProductTagsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteProductTagsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteProductTopicRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteProductTopicResponse
     */
    public DeleteProductTopicResponse deleteProductTopicWithOptions(DeleteProductTopicRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicId)) {
            query.put("TopicId", request.topicId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteProductTopic"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteProductTopicResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteProductTopicRequest
     * @return DeleteProductTopicResponse
     */
    public DeleteProductTopicResponse deleteProductTopic(DeleteProductTopicRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteProductTopicWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteRuleResponse
     */
    public DeleteRuleResponse deleteRuleWithOptions(DeleteRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteRuleResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteRuleRequest
     * @return DeleteRuleResponse
     */
    public DeleteRuleResponse deleteRule(DeleteRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteRuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteRuleActionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteRuleActionResponse
     */
    public DeleteRuleActionResponse deleteRuleActionWithOptions(DeleteRuleActionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.actionId)) {
            query.put("ActionId", request.actionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteRuleAction"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteRuleActionResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteRuleActionRequest
     * @return DeleteRuleActionResponse
     */
    public DeleteRuleActionResponse deleteRuleAction(DeleteRuleActionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteRuleActionWithOptions(request, runtime);
    }

    /**
     * @param request DeleteSceneRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteSceneRuleResponse
     */
    public DeleteSceneRuleResponse deleteSceneRuleWithOptions(DeleteSceneRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteSceneRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteSceneRuleResponse());
    }

    /**
     * @param request DeleteSceneRuleRequest
     * @return DeleteSceneRuleResponse
     */
    public DeleteSceneRuleResponse deleteSceneRule(DeleteSceneRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteSceneRuleWithOptions(request, runtime);
    }

    /**
     * @param request DeleteSchedulePeriodRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteSchedulePeriodResponse
     */
    public DeleteSchedulePeriodResponse deleteSchedulePeriodWithOptions(DeleteSchedulePeriodRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.periodCode)) {
            body.put("PeriodCode", request.periodCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteSchedulePeriod"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteSchedulePeriodResponse());
    }

    /**
     * @param request DeleteSchedulePeriodRequest
     * @return DeleteSchedulePeriodResponse
     */
    public DeleteSchedulePeriodResponse deleteSchedulePeriod(DeleteSchedulePeriodRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteSchedulePeriodWithOptions(request, runtime);
    }

    /**
     * @param request DeleteShareTaskDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteShareTaskDeviceResponse
     */
    public DeleteShareTaskDeviceResponse deleteShareTaskDeviceWithOptions(DeleteShareTaskDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotIdList)) {
            body.put("IotIdList", request.iotIdList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shareTaskId)) {
            body.put("ShareTaskId", request.shareTaskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteShareTaskDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteShareTaskDeviceResponse());
    }

    /**
     * @param request DeleteShareTaskDeviceRequest
     * @return DeleteShareTaskDeviceResponse
     */
    public DeleteShareTaskDeviceResponse deleteShareTaskDevice(DeleteShareTaskDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteShareTaskDeviceWithOptions(request, runtime);
    }

    /**
     * @param request DeleteSoundCodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteSoundCodeResponse
     */
    public DeleteSoundCodeResponse deleteSoundCodeWithOptions(DeleteSoundCodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.soundCode)) {
            body.put("SoundCode", request.soundCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteSoundCode"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteSoundCodeResponse());
    }

    /**
     * @param request DeleteSoundCodeRequest
     * @return DeleteSoundCodeResponse
     */
    public DeleteSoundCodeResponse deleteSoundCode(DeleteSoundCodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteSoundCodeWithOptions(request, runtime);
    }

    /**
     * @param request DeleteSoundCodeLabelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteSoundCodeLabelResponse
     */
    public DeleteSoundCodeLabelResponse deleteSoundCodeLabelWithOptions(DeleteSoundCodeLabelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.soundCode)) {
            body.put("SoundCode", request.soundCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteSoundCodeLabel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteSoundCodeLabelResponse());
    }

    /**
     * @param request DeleteSoundCodeLabelRequest
     * @return DeleteSoundCodeLabelResponse
     */
    public DeleteSoundCodeLabelResponse deleteSoundCodeLabel(DeleteSoundCodeLabelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteSoundCodeLabelWithOptions(request, runtime);
    }

    /**
     * @param request DeleteSoundCodeScheduleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteSoundCodeScheduleResponse
     */
    public DeleteSoundCodeScheduleResponse deleteSoundCodeScheduleWithOptions(DeleteSoundCodeScheduleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scheduleCode)) {
            body.put("ScheduleCode", request.scheduleCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteSoundCodeSchedule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteSoundCodeScheduleResponse());
    }

    /**
     * @param request DeleteSoundCodeScheduleRequest
     * @return DeleteSoundCodeScheduleResponse
     */
    public DeleteSoundCodeScheduleResponse deleteSoundCodeSchedule(DeleteSoundCodeScheduleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteSoundCodeScheduleWithOptions(request, runtime);
    }

    /**
     * @param request DeleteSpeechRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteSpeechResponse
     */
    public DeleteSpeechResponse deleteSpeechWithOptions(DeleteSpeechRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechCodeList)) {
            body.put("SpeechCodeList", request.speechCodeList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteSpeech"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteSpeechResponse());
    }

    /**
     * @param request DeleteSpeechRequest
     * @return DeleteSpeechResponse
     */
    public DeleteSpeechResponse deleteSpeech(DeleteSpeechRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteSpeechWithOptions(request, runtime);
    }

    /**
     * @param request DeleteStudioAppDomainOpenRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteStudioAppDomainOpenResponse
     */
    public DeleteStudioAppDomainOpenResponse deleteStudioAppDomainOpenWithOptions(DeleteStudioAppDomainOpenRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.domainId)) {
            body.put("DomainId", request.domainId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectId)) {
            body.put("ProjectId", request.projectId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteStudioAppDomainOpen"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteStudioAppDomainOpenResponse());
    }

    /**
     * @param request DeleteStudioAppDomainOpenRequest
     * @return DeleteStudioAppDomainOpenResponse
     */
    public DeleteStudioAppDomainOpenResponse deleteStudioAppDomainOpen(DeleteStudioAppDomainOpenRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteStudioAppDomainOpenWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteSubscribeRelationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteSubscribeRelationResponse
     */
    public DeleteSubscribeRelationResponse deleteSubscribeRelationWithOptions(DeleteSubscribeRelationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteSubscribeRelation"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteSubscribeRelationResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteSubscribeRelationRequest
     * @return DeleteSubscribeRelationResponse
     */
    public DeleteSubscribeRelationResponse deleteSubscribeRelation(DeleteSubscribeRelationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteSubscribeRelationWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  If a product is published, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product before you call the DeleteThingModel operation.</p>
     * <ul>
     * <li>If an existing feature or custom TSL module in a product is not published, you can call the DeleteThingModel operation to remove the feature or delete the custom TSL module.</li>
     * <li>When you call the DeleteThingModel operation, you must specify a value for the <strong>ProductKey</strong> parameter. The following list describes how the DeleteThingModel operation works:<ul>
     * <li>If you specify a value only for the <strong>ProductKey</strong> parameter, the operation deletes all custom TSL modules and removes all features in the default TSL module from the specified product.</li>
     * <li>If you specify values only for the <strong>ProductKey</strong> and <strong>FunctionBlockId</strong> parameters, the operation deletes the specified custom TSL module from the specified product.</li>
     * <li>If you specify a value for the <strong>ProductKey</strong> parameter and a value for the <strong>PropertyIdentifier.N</strong>, <strong>ServiceIdentifier.N</strong>, or <strong>EventIdentifier.N</strong> parameter, the operation removes one or more specified features from the default TSL module of the specified product. The operation removes the specified features only if the features exist. If the value that you specified for the <strong>PropertyIdentifier.N</strong>, <strong>ServiceIdentifier.N</strong>, or <strong>EventIdentifier.N</strong> parameter does not exist in the default TSL module, the operation returns the same result as when you specify a value only for the <strong>ProductKey</strong> parameter.</li>
     * <li>If you specify values for the <strong>ProductKey</strong> and <strong>FunctionBlockId</strong> parameters and a value for the <strong>PropertyIdentifier.N</strong>, <strong>ServiceIdentifier.N</strong>, or <strong>EventIdentifier.N</strong> parameter, the operation removes one or more specified features from a specified custom TSL module in a specified product. The operation removes the specified features only if the features exist. If the value that you specified for the <strong>PropertyIdentifier.N</strong>, <strong>ServiceIdentifier.N</strong>, or <strong>EventIdentifier.N</strong> parameter does not exist, the operation returns the same result as when you specify values only for the <strong>ProductKey</strong> and <strong>FunctionBlockId</strong> parameters.<blockquote>
     * <p>You must specify up to 10 identifiers for the <strong>PropertyIdentifier.N</strong>, <strong>ServiceIdentifier.N</strong>, or <strong>EventIdentifier.N</strong> parameter.</p>
     * </blockquote>
     * </li>
     * </ul>
     * </li>
     * <li>After you call the DeleteThingModel operation to remove one or more features from a product, you must call the <a href="https://help.aliyun.com/document_detail/150311.html">PublishThingModel</a> operation to re-publish the TSL model of the product. This way, the change takes effect.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 5 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Removes one or more Thing Specification Language (TSL) features from a specified product. The features can be properties, services, or events.</p>
     * 
     * @param request DeleteThingModelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteThingModelResponse
     */
    public DeleteThingModelResponse deleteThingModelWithOptions(DeleteThingModelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.eventIdentifier)) {
            query.put("EventIdentifier", request.eventIdentifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockId)) {
            query.put("FunctionBlockId", request.functionBlockId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.propertyIdentifier)) {
            query.put("PropertyIdentifier", request.propertyIdentifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.serviceIdentifier)) {
            query.put("ServiceIdentifier", request.serviceIdentifier);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteThingModel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteThingModelResponse());
    }

    /**
     * <b>description</b> :
     * <p>  If a product is published, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product before you call the DeleteThingModel operation.</p>
     * <ul>
     * <li>If an existing feature or custom TSL module in a product is not published, you can call the DeleteThingModel operation to remove the feature or delete the custom TSL module.</li>
     * <li>When you call the DeleteThingModel operation, you must specify a value for the <strong>ProductKey</strong> parameter. The following list describes how the DeleteThingModel operation works:<ul>
     * <li>If you specify a value only for the <strong>ProductKey</strong> parameter, the operation deletes all custom TSL modules and removes all features in the default TSL module from the specified product.</li>
     * <li>If you specify values only for the <strong>ProductKey</strong> and <strong>FunctionBlockId</strong> parameters, the operation deletes the specified custom TSL module from the specified product.</li>
     * <li>If you specify a value for the <strong>ProductKey</strong> parameter and a value for the <strong>PropertyIdentifier.N</strong>, <strong>ServiceIdentifier.N</strong>, or <strong>EventIdentifier.N</strong> parameter, the operation removes one or more specified features from the default TSL module of the specified product. The operation removes the specified features only if the features exist. If the value that you specified for the <strong>PropertyIdentifier.N</strong>, <strong>ServiceIdentifier.N</strong>, or <strong>EventIdentifier.N</strong> parameter does not exist in the default TSL module, the operation returns the same result as when you specify a value only for the <strong>ProductKey</strong> parameter.</li>
     * <li>If you specify values for the <strong>ProductKey</strong> and <strong>FunctionBlockId</strong> parameters and a value for the <strong>PropertyIdentifier.N</strong>, <strong>ServiceIdentifier.N</strong>, or <strong>EventIdentifier.N</strong> parameter, the operation removes one or more specified features from a specified custom TSL module in a specified product. The operation removes the specified features only if the features exist. If the value that you specified for the <strong>PropertyIdentifier.N</strong>, <strong>ServiceIdentifier.N</strong>, or <strong>EventIdentifier.N</strong> parameter does not exist, the operation returns the same result as when you specify values only for the <strong>ProductKey</strong> and <strong>FunctionBlockId</strong> parameters.<blockquote>
     * <p>You must specify up to 10 identifiers for the <strong>PropertyIdentifier.N</strong>, <strong>ServiceIdentifier.N</strong>, or <strong>EventIdentifier.N</strong> parameter.</p>
     * </blockquote>
     * </li>
     * </ul>
     * </li>
     * <li>After you call the DeleteThingModel operation to remove one or more features from a product, you must call the <a href="https://help.aliyun.com/document_detail/150311.html">PublishThingModel</a> operation to re-publish the TSL model of the product. This way, the change takes effect.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 5 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Removes one or more Thing Specification Language (TSL) features from a specified product. The features can be properties, services, or events.</p>
     * 
     * @param request DeleteThingModelRequest
     * @return DeleteThingModelResponse
     */
    public DeleteThingModelResponse deleteThingModel(DeleteThingModelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteThingModelWithOptions(request, runtime);
    }

    /**
     * @param request DeleteTopicConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteTopicConfigResponse
     */
    public DeleteTopicConfigResponse deleteTopicConfigWithOptions(DeleteTopicConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicFullName)) {
            query.put("TopicFullName", request.topicFullName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteTopicConfig"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteTopicConfigResponse());
    }

    /**
     * @param request DeleteTopicConfigRequest
     * @return DeleteTopicConfigResponse
     */
    public DeleteTopicConfigResponse deleteTopicConfig(DeleteTopicConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteTopicConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteTopicRouteTableRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteTopicRouteTableResponse
     */
    public DeleteTopicRouteTableResponse deleteTopicRouteTableWithOptions(DeleteTopicRouteTableRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dstTopic)) {
            query.put("DstTopic", request.dstTopic);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.srcTopic)) {
            query.put("SrcTopic", request.srcTopic);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteTopicRouteTable"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteTopicRouteTableResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request DeleteTopicRouteTableRequest
     * @return DeleteTopicRouteTableResponse
     */
    public DeleteTopicRouteTableResponse deleteTopicRouteTable(DeleteTopicRouteTableRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteTopicRouteTableWithOptions(request, runtime);
    }

    /**
     * @param tmpReq DeleteUserDefineTableDataByPrimaryKeyRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DeleteUserDefineTableDataByPrimaryKeyResponse
     */
    public DeleteUserDefineTableDataByPrimaryKeyResponse deleteUserDefineTableDataByPrimaryKeyWithOptions(DeleteUserDefineTableDataByPrimaryKeyRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        DeleteUserDefineTableDataByPrimaryKeyShrinkRequest request = new DeleteUserDefineTableDataByPrimaryKeyShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.conditions)) {
            request.conditionsShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.conditions, "Conditions", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.conditionsShrink)) {
            query.put("Conditions", request.conditionsShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tableIdentifier)) {
            query.put("TableIdentifier", request.tableIdentifier);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DeleteUserDefineTableDataByPrimaryKey"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DeleteUserDefineTableDataByPrimaryKeyResponse());
    }

    /**
     * @param request DeleteUserDefineTableDataByPrimaryKeyRequest
     * @return DeleteUserDefineTableDataByPrimaryKeyResponse
     */
    public DeleteUserDefineTableDataByPrimaryKeyResponse deleteUserDefineTableDataByPrimaryKey(DeleteUserDefineTableDataByPrimaryKeyRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.deleteUserDefineTableDataByPrimaryKeyWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * @param request DetachDestinationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DetachDestinationResponse
     */
    public DetachDestinationResponse detachDestinationWithOptions(DetachDestinationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.destinationId)) {
            query.put("DestinationId", request.destinationId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.parserId)) {
            query.put("ParserId", request.parserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DetachDestination"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DetachDestinationResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * @param request DetachDestinationRequest
     * @return DetachDestinationResponse
     */
    public DetachDestinationResponse detachDestination(DetachDestinationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.detachDestinationWithOptions(request, runtime);
    }

    /**
     * @param request DetachParserDataSourceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DetachParserDataSourceResponse
     */
    public DetachParserDataSourceResponse detachParserDataSourceWithOptions(DetachParserDataSourceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataSourceId)) {
            query.put("DataSourceId", request.dataSourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.parserId)) {
            query.put("ParserId", request.parserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DetachParserDataSource"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DetachParserDataSourceResponse());
    }

    /**
     * @param request DetachParserDataSourceRequest
     * @return DetachParserDataSourceResponse
     */
    public DetachParserDataSourceResponse detachParserDataSource(DetachParserDataSourceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.detachParserDataSourceWithOptions(request, runtime);
    }

    /**
     * @param request DisableDeviceTunnelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DisableDeviceTunnelResponse
     */
    public DisableDeviceTunnelResponse disableDeviceTunnelWithOptions(DisableDeviceTunnelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DisableDeviceTunnel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DisableDeviceTunnelResponse());
    }

    /**
     * @param request DisableDeviceTunnelRequest
     * @return DisableDeviceTunnelResponse
     */
    public DisableDeviceTunnelResponse disableDeviceTunnel(DisableDeviceTunnelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.disableDeviceTunnelWithOptions(request, runtime);
    }

    /**
     * @param request DisableDeviceTunnelShareRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DisableDeviceTunnelShareResponse
     */
    public DisableDeviceTunnelShareResponse disableDeviceTunnelShareWithOptions(DisableDeviceTunnelShareRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DisableDeviceTunnelShare"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DisableDeviceTunnelShareResponse());
    }

    /**
     * @param request DisableDeviceTunnelShareRequest
     * @return DisableDeviceTunnelShareResponse
     */
    public DisableDeviceTunnelShareResponse disableDeviceTunnelShare(DisableDeviceTunnelShareRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.disableDeviceTunnelShareWithOptions(request, runtime);
    }

    /**
     * @param request DisableSceneRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DisableSceneRuleResponse
     */
    public DisableSceneRuleResponse disableSceneRuleWithOptions(DisableSceneRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DisableSceneRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DisableSceneRuleResponse());
    }

    /**
     * @param request DisableSceneRuleRequest
     * @return DisableSceneRuleResponse
     */
    public DisableSceneRuleResponse disableSceneRule(DisableSceneRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.disableSceneRuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>After a device is disabled, you cannot connect the device to IoT Platform. You can perform device-specific operations on the device. However, the information about the device is still retained in IoT Platform. You can use the <a href="https://help.aliyun.com/document_detail/69603.html">EnableThing</a> API operation to connect the disabled device to IoT Platform again.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DisableThingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return DisableThingResponse
     */
    public DisableThingResponse disableThingWithOptions(DisableThingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "DisableThing"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new DisableThingResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>After a device is disabled, you cannot connect the device to IoT Platform. You can perform device-specific operations on the device. However, the information about the device is still retained in IoT Platform. You can use the <a href="https://help.aliyun.com/document_detail/69603.html">EnableThing</a> API operation to connect the disabled device to IoT Platform again.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request DisableThingRequest
     * @return DisableThingResponse
     */
    public DisableThingResponse disableThing(DisableThingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.disableThingWithOptions(request, runtime);
    }

    /**
     * @param request EnableDeviceTunnelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return EnableDeviceTunnelResponse
     */
    public EnableDeviceTunnelResponse enableDeviceTunnelWithOptions(EnableDeviceTunnelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "EnableDeviceTunnel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new EnableDeviceTunnelResponse());
    }

    /**
     * @param request EnableDeviceTunnelRequest
     * @return EnableDeviceTunnelResponse
     */
    public EnableDeviceTunnelResponse enableDeviceTunnel(EnableDeviceTunnelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.enableDeviceTunnelWithOptions(request, runtime);
    }

    /**
     * @param request EnableDeviceTunnelShareRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return EnableDeviceTunnelShareResponse
     */
    public EnableDeviceTunnelShareResponse enableDeviceTunnelShareWithOptions(EnableDeviceTunnelShareRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "EnableDeviceTunnelShare"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new EnableDeviceTunnelShareResponse());
    }

    /**
     * @param request EnableDeviceTunnelShareRequest
     * @return EnableDeviceTunnelShareResponse
     */
    public EnableDeviceTunnelShareResponse enableDeviceTunnelShare(EnableDeviceTunnelShareRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.enableDeviceTunnelShareWithOptions(request, runtime);
    }

    /**
     * @param request EnableSceneRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return EnableSceneRuleResponse
     */
    public EnableSceneRuleResponse enableSceneRuleWithOptions(EnableSceneRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "EnableSceneRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new EnableSceneRuleResponse());
    }

    /**
     * @param request EnableSceneRuleRequest
     * @return EnableSceneRuleResponse
     */
    public EnableSceneRuleResponse enableSceneRule(EnableSceneRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.enableSceneRuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request EnableThingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return EnableThingResponse
     */
    public EnableThingResponse enableThingWithOptions(EnableThingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "EnableThing"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new EnableThingResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request EnableThingRequest
     * @return EnableThingResponse
     */
    public EnableThingResponse enableThing(EnableThingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.enableThingWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation can be used with other operations to upload a device list file. Procedure:</p>
     * <ol>
     * <li>Call this operation to generate the information of a device list file that you want to upload to OSS.<br>The response parameters of this API operation include:
     * The following request parameters of the OSS <a href="/help/en/object-storage-service/latest/postobject">PostObject</a> operation that is used to upload the device list file: <strong>Key</strong>, <strong>AccessKeyId</strong>, <strong>Signature</strong>, and <strong>Policy</strong>.  </li>
     * <li>Use an <a href="/help/en/object-storage-service/latest/sdk-code-samples-overview">OSS SDK</a> to call the <a href="/help/en/object-storage-service/latest/postobject">PostObject</a> operation to upload the device list file within 1 minute after a response is returned. For more information about sample code, see the &quot;Usage of response parameters&quot; section in this topic.  <blockquote>
     * <p> The parameter information that is returned by this operation is valid for 1 minute. You must upload the device list file within 1 minute.  3. After you upload the device list file, call the <a href="/help/en/iot-platform/latest/e1qtmo">CreateOTAStaticUpgradeJob</a> operation of IoT Platform to create a static update batch within 60 minutes.<br>If you upload device list files but you do not call the CreateOTAStaticUpgradeJob operation to create a static update batch, the system automatically deletes the uploaded files. The system deletes files on a regular basis.</p>
     * </blockquote>
     * </li>
     * </ol>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account. </p>
     * </blockquote>
     * <h2>Requirements</h2>
     * <ul>
     * <li>A device list file contains the names of devices. Separate multiple device names with line feeds. Each line contains only one device name. A device list file must be in the CSV format. The maximum size of a device list file is 5 MB.</li>
     * <li>Each device list file can contain up to 10,000 names for the devices in a product that is related to an update package. If the number of device names in a device list file exceeds the limit, an error occurs when you use the file to create a static update batch.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Generates the URL and details of a device list file that you want to upload to Object Storage Service (OSS). When you create a static update batch, you can specify devices that you want to update in a device list file.</p>
     * 
     * @param request GenerateDeviceNameListURLRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GenerateDeviceNameListURLResponse
     */
    public GenerateDeviceNameListURLResponse generateDeviceNameListURLWithOptions(GenerateDeviceNameListURLRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GenerateDeviceNameListURL"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GenerateDeviceNameListURLResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation can be used with other operations to upload a device list file. Procedure:</p>
     * <ol>
     * <li>Call this operation to generate the information of a device list file that you want to upload to OSS.<br>The response parameters of this API operation include:
     * The following request parameters of the OSS <a href="/help/en/object-storage-service/latest/postobject">PostObject</a> operation that is used to upload the device list file: <strong>Key</strong>, <strong>AccessKeyId</strong>, <strong>Signature</strong>, and <strong>Policy</strong>.  </li>
     * <li>Use an <a href="/help/en/object-storage-service/latest/sdk-code-samples-overview">OSS SDK</a> to call the <a href="/help/en/object-storage-service/latest/postobject">PostObject</a> operation to upload the device list file within 1 minute after a response is returned. For more information about sample code, see the &quot;Usage of response parameters&quot; section in this topic.  <blockquote>
     * <p> The parameter information that is returned by this operation is valid for 1 minute. You must upload the device list file within 1 minute.  3. After you upload the device list file, call the <a href="/help/en/iot-platform/latest/e1qtmo">CreateOTAStaticUpgradeJob</a> operation of IoT Platform to create a static update batch within 60 minutes.<br>If you upload device list files but you do not call the CreateOTAStaticUpgradeJob operation to create a static update batch, the system automatically deletes the uploaded files. The system deletes files on a regular basis.</p>
     * </blockquote>
     * </li>
     * </ol>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account. </p>
     * </blockquote>
     * <h2>Requirements</h2>
     * <ul>
     * <li>A device list file contains the names of devices. Separate multiple device names with line feeds. Each line contains only one device name. A device list file must be in the CSV format. The maximum size of a device list file is 5 MB.</li>
     * <li>Each device list file can contain up to 10,000 names for the devices in a product that is related to an update package. If the number of device names in a device list file exceeds the limit, an error occurs when you use the file to create a static update batch.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Generates the URL and details of a device list file that you want to upload to Object Storage Service (OSS). When you create a static update batch, you can specify devices that you want to update in a device list file.</p>
     * 
     * @param request GenerateDeviceNameListURLRequest
     * @return GenerateDeviceNameListURLResponse
     */
    public GenerateDeviceNameListURLResponse generateDeviceNameListURL(GenerateDeviceNameListURLRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.generateDeviceNameListURLWithOptions(request, runtime);
    }

    /**
     * @param request GenerateFileUploadURLRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GenerateFileUploadURLResponse
     */
    public GenerateFileUploadURLResponse generateFileUploadURLWithOptions(GenerateFileUploadURLRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.bizCode)) {
            query.put("BizCode", request.bizCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fileName)) {
            query.put("FileName", request.fileName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fileSuffix)) {
            query.put("FileSuffix", request.fileSuffix);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GenerateFileUploadURL"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GenerateFileUploadURLResponse());
    }

    /**
     * @param request GenerateFileUploadURLRequest
     * @return GenerateFileUploadURLResponse
     */
    public GenerateFileUploadURLResponse generateFileUploadURL(GenerateFileUploadURLRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.generateFileUploadURLWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation can be used together with other operations to create an update package. Procedure:
     * 1\. Call this API operation to generate the details of an update package file that you want to upload to OSS.
     * The following section describes the response parameters of this API operation:</p>
     * <ul>
     * <li>The following request parameters of the OSS <a href="https://help.aliyun.com/document_detail/31988.html">PostObject</a> operation that is used to upload the update package file: <strong>Key</strong>, <strong>OSSAccessKeyId</strong>, <strong>Signature</strong>, and <strong>Policy</strong>.</li>
     * <li>The following request parameter of the <a href="https://help.aliyun.com/document_detail/147311.html">CreateOTAFirmware</a> operation that is used to create the update package: <strong>FirmwareUrl</strong>.
     * 2\. Use an <a href="https://help.aliyun.com/document_detail/52834.html">OSS SDK</a> to call the <a href="https://help.aliyun.com/document_detail/31988.html">PostObject</a> operation to upload the update package file. For more information about sample code, see the &quot;Usage of response parameters&quot; section.<blockquote>
     * <p>The parameter information that is returned by this operation is valid for 1 minute. You must upload the update package file within 1 minute. The maximum size of the uploaded update package file is 1,000 MB.
     * 3\. After the update package file is uploaded, call the <a href="https://help.aliyun.com/document_detail/147311.html">CreateOTAFirmware</a> operation to create an update package within 60 minutes.
     * If update package files are uploaded but you do not call the CreateOTAFirmware operation to create update packages for the files, the uploaded files are automatically deleted by the system on a regular basis.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Generates the URL and other information that are required to upload an update package file to Object Storage Service (OSS).</p>
     * 
     * @param request GenerateOTAUploadURLRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GenerateOTAUploadURLResponse
     */
    public GenerateOTAUploadURLResponse generateOTAUploadURLWithOptions(GenerateOTAUploadURLRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.fileSuffix)) {
            query.put("FileSuffix", request.fileSuffix);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GenerateOTAUploadURL"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GenerateOTAUploadURLResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation can be used together with other operations to create an update package. Procedure:
     * 1\. Call this API operation to generate the details of an update package file that you want to upload to OSS.
     * The following section describes the response parameters of this API operation:</p>
     * <ul>
     * <li>The following request parameters of the OSS <a href="https://help.aliyun.com/document_detail/31988.html">PostObject</a> operation that is used to upload the update package file: <strong>Key</strong>, <strong>OSSAccessKeyId</strong>, <strong>Signature</strong>, and <strong>Policy</strong>.</li>
     * <li>The following request parameter of the <a href="https://help.aliyun.com/document_detail/147311.html">CreateOTAFirmware</a> operation that is used to create the update package: <strong>FirmwareUrl</strong>.
     * 2\. Use an <a href="https://help.aliyun.com/document_detail/52834.html">OSS SDK</a> to call the <a href="https://help.aliyun.com/document_detail/31988.html">PostObject</a> operation to upload the update package file. For more information about sample code, see the &quot;Usage of response parameters&quot; section.<blockquote>
     * <p>The parameter information that is returned by this operation is valid for 1 minute. You must upload the update package file within 1 minute. The maximum size of the uploaded update package file is 1,000 MB.
     * 3\. After the update package file is uploaded, call the <a href="https://help.aliyun.com/document_detail/147311.html">CreateOTAFirmware</a> operation to create an update package within 60 minutes.
     * If update package files are uploaded but you do not call the CreateOTAFirmware operation to create update packages for the files, the uploaded files are automatically deleted by the system on a regular basis.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Generates the URL and other information that are required to upload an update package file to Object Storage Service (OSS).</p>
     * 
     * @param request GenerateOTAUploadURLRequest
     * @return GenerateOTAUploadURLResponse
     */
    public GenerateOTAUploadURLResponse generateOTAUploadURL(GenerateOTAUploadURLRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.generateOTAUploadURLWithOptions(request, runtime);
    }

    /**
     * @param request GetDataAPIServiceDetailRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetDataAPIServiceDetailResponse
     */
    public GetDataAPIServiceDetailResponse getDataAPIServiceDetailWithOptions(GetDataAPIServiceDetailRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.apiSrn)) {
            body.put("ApiSrn", request.apiSrn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetDataAPIServiceDetail"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetDataAPIServiceDetailResponse());
    }

    /**
     * @param request GetDataAPIServiceDetailRequest
     * @return GetDataAPIServiceDetailResponse
     */
    public GetDataAPIServiceDetailResponse getDataAPIServiceDetail(GetDataAPIServiceDetailRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getDataAPIServiceDetailWithOptions(request, runtime);
    }

    /**
     * @param request GetDestinationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetDestinationResponse
     */
    public GetDestinationResponse getDestinationWithOptions(GetDestinationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.destinationId)) {
            query.put("DestinationId", request.destinationId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetDestination"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetDestinationResponse());
    }

    /**
     * @param request GetDestinationRequest
     * @return GetDestinationResponse
     */
    public GetDestinationResponse getDestination(GetDestinationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getDestinationWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 500 times per second per account.</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetDeviceShadowRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetDeviceShadowResponse
     */
    public GetDeviceShadowResponse getDeviceShadowWithOptions(GetDeviceShadowRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetDeviceShadow"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetDeviceShadowResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 500 times per second per account.</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetDeviceShadowRequest
     * @return GetDeviceShadowResponse
     */
    public GetDeviceShadowResponse getDeviceShadow(GetDeviceShadowRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getDeviceShadowWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetDeviceStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetDeviceStatusResponse
     */
    public GetDeviceStatusResponse getDeviceStatusWithOptions(GetDeviceStatusRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetDeviceStatus"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetDeviceStatusResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetDeviceStatusRequest
     * @return GetDeviceStatusResponse
     */
    public GetDeviceStatusResponse getDeviceStatus(GetDeviceStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getDeviceStatusWithOptions(request, runtime);
    }

    /**
     * @param request GetDeviceTunnelShareStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetDeviceTunnelShareStatusResponse
     */
    public GetDeviceTunnelShareStatusResponse getDeviceTunnelShareStatusWithOptions(GetDeviceTunnelShareStatusRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetDeviceTunnelShareStatus"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetDeviceTunnelShareStatusResponse());
    }

    /**
     * @param request GetDeviceTunnelShareStatusRequest
     * @return GetDeviceTunnelShareStatusResponse
     */
    public GetDeviceTunnelShareStatusResponse getDeviceTunnelShareStatus(GetDeviceTunnelShareStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getDeviceTunnelShareStatusWithOptions(request, runtime);
    }

    /**
     * @param request GetDeviceTunnelStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetDeviceTunnelStatusResponse
     */
    public GetDeviceTunnelStatusResponse getDeviceTunnelStatusWithOptions(GetDeviceTunnelStatusRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetDeviceTunnelStatus"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetDeviceTunnelStatusResponse());
    }

    /**
     * @param request GetDeviceTunnelStatusRequest
     * @return GetDeviceTunnelStatusResponse
     */
    public GetDeviceTunnelStatusResponse getDeviceTunnelStatus(GetDeviceTunnelStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getDeviceTunnelStatusWithOptions(request, runtime);
    }

    /**
     * @param tmpReq GetDownloadFileRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetDownloadFileResponse
     */
    public GetDownloadFileResponse getDownloadFileWithOptions(GetDownloadFileRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        GetDownloadFileShrinkRequest request = new GetDownloadFileShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.context)) {
            request.contextShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.context, "Context", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.longJobId)) {
            query.put("LongJobId", request.longJobId);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.contextShrink)) {
            body.put("Context", request.contextShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetDownloadFile"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetDownloadFileResponse());
    }

    /**
     * @param request GetDownloadFileRequest
     * @return GetDownloadFileResponse
     */
    public GetDownloadFileResponse getDownloadFile(GetDownloadFileRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getDownloadFileWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries information about a driver version.</p>
     * 
     * @param request GetEdgeDriverVersionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetEdgeDriverVersionResponse
     */
    public GetEdgeDriverVersionResponse getEdgeDriverVersionWithOptions(GetEdgeDriverVersionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverVersion)) {
            query.put("DriverVersion", request.driverVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetEdgeDriverVersion"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetEdgeDriverVersionResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries information about a driver version.</p>
     * 
     * @param request GetEdgeDriverVersionRequest
     * @return GetEdgeDriverVersionResponse
     */
    public GetEdgeDriverVersionResponse getEdgeDriverVersion(GetEdgeDriverVersionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getEdgeDriverVersionWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetEdgeInstanceResponse
     */
    public GetEdgeInstanceResponse getEdgeInstanceWithOptions(GetEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetEdgeInstanceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetEdgeInstanceRequest
     * @return GetEdgeInstanceResponse
     */
    public GetEdgeInstanceResponse getEdgeInstance(GetEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries detailed information about a deployment task of an edge instance.</p>
     * 
     * @param request GetEdgeInstanceDeploymentRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetEdgeInstanceDeploymentResponse
     */
    public GetEdgeInstanceDeploymentResponse getEdgeInstanceDeploymentWithOptions(GetEdgeInstanceDeploymentRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deploymentId)) {
            query.put("DeploymentId", request.deploymentId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetEdgeInstanceDeployment"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetEdgeInstanceDeploymentResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries detailed information about a deployment task of an edge instance.</p>
     * 
     * @param request GetEdgeInstanceDeploymentRequest
     * @return GetEdgeInstanceDeploymentResponse
     */
    public GetEdgeInstanceDeploymentResponse getEdgeInstanceDeployment(GetEdgeInstanceDeploymentRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getEdgeInstanceDeploymentWithOptions(request, runtime);
    }

    /**
     * @param request GetEdgeInstanceMessageRoutingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetEdgeInstanceMessageRoutingResponse
     */
    public GetEdgeInstanceMessageRoutingResponse getEdgeInstanceMessageRoutingWithOptions(GetEdgeInstanceMessageRoutingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.routeId)) {
            query.put("RouteId", request.routeId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetEdgeInstanceMessageRouting"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetEdgeInstanceMessageRoutingResponse());
    }

    /**
     * @param request GetEdgeInstanceMessageRoutingRequest
     * @return GetEdgeInstanceMessageRoutingResponse
     */
    public GetEdgeInstanceMessageRoutingResponse getEdgeInstanceMessageRouting(GetEdgeInstanceMessageRoutingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getEdgeInstanceMessageRoutingWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetGatewayBySubDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetGatewayBySubDeviceResponse
     */
    public GetGatewayBySubDeviceResponse getGatewayBySubDeviceWithOptions(GetGatewayBySubDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetGatewayBySubDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetGatewayBySubDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetGatewayBySubDeviceRequest
     * @return GetGatewayBySubDeviceResponse
     */
    public GetGatewayBySubDeviceResponse getGatewayBySubDevice(GetGatewayBySubDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getGatewayBySubDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>You can call this API operation up to 50 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the status of the task for creating multiple Long Range Wide Area Networking (LoRaWAN) devices at the same time.</p>
     * 
     * @param request GetLoraNodesTaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetLoraNodesTaskResponse
     */
    public GetLoraNodesTaskResponse getLoraNodesTaskWithOptions(GetLoraNodesTaskRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetLoraNodesTask"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetLoraNodesTaskResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>You can call this API operation up to 50 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the status of the task for creating multiple Long Range Wide Area Networking (LoRaWAN) devices at the same time.</p>
     * 
     * @param request GetLoraNodesTaskRequest
     * @return GetLoraNodesTaskResponse
     */
    public GetLoraNodesTaskResponse getLoraNodesTask(GetLoraNodesTaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getLoraNodesTaskWithOptions(request, runtime);
    }

    /**
     * @param request GetParserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetParserResponse
     */
    public GetParserResponse getParserWithOptions(GetParserRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.parserId)) {
            query.put("ParserId", request.parserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetParser"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetParserResponse());
    }

    /**
     * @param request GetParserRequest
     * @return GetParserResponse
     */
    public GetParserResponse getParser(GetParserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getParserWithOptions(request, runtime);
    }

    /**
     * @param request GetParserDataSourceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetParserDataSourceResponse
     */
    public GetParserDataSourceResponse getParserDataSourceWithOptions(GetParserDataSourceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataSourceId)) {
            query.put("DataSourceId", request.dataSourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetParserDataSource"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetParserDataSourceResponse());
    }

    /**
     * @param request GetParserDataSourceRequest
     * @return GetParserDataSourceResponse
     */
    public GetParserDataSourceResponse getParserDataSource(GetParserDataSourceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getParserDataSourceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetRuleResponse
     */
    public GetRuleResponse getRuleWithOptions(GetRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetRuleResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetRuleRequest
     * @return GetRuleResponse
     */
    public GetRuleResponse getRule(GetRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getRuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/30561.html">Common request parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetRuleActionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetRuleActionResponse
     */
    public GetRuleActionResponse getRuleActionWithOptions(GetRuleActionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.actionId)) {
            query.put("ActionId", request.actionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetRuleAction"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetRuleActionResponse());
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/30561.html">Common request parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetRuleActionRequest
     * @return GetRuleActionResponse
     */
    public GetRuleActionResponse getRuleAction(GetRuleActionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getRuleActionWithOptions(request, runtime);
    }

    /**
     * @param request GetSceneRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetSceneRuleResponse
     */
    public GetSceneRuleResponse getSceneRuleWithOptions(GetSceneRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetSceneRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetSceneRuleResponse());
    }

    /**
     * @param request GetSceneRuleRequest
     * @return GetSceneRuleResponse
     */
    public GetSceneRuleResponse getSceneRule(GetSceneRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getSceneRuleWithOptions(request, runtime);
    }

    /**
     * @param request GetShareSpeechModelAudioRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetShareSpeechModelAudioResponse
     */
    public GetShareSpeechModelAudioResponse getShareSpeechModelAudioWithOptions(GetShareSpeechModelAudioRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shareTaskId)) {
            body.put("ShareTaskId", request.shareTaskId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechModelCodeList)) {
            body.put("SpeechModelCodeList", request.speechModelCodeList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetShareSpeechModelAudio"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetShareSpeechModelAudioResponse());
    }

    /**
     * @param request GetShareSpeechModelAudioRequest
     * @return GetShareSpeechModelAudioResponse
     */
    public GetShareSpeechModelAudioResponse getShareSpeechModelAudio(GetShareSpeechModelAudioRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getShareSpeechModelAudioWithOptions(request, runtime);
    }

    /**
     * @param request GetShareTaskByDeviceOpenRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetShareTaskByDeviceOpenResponse
     */
    public GetShareTaskByDeviceOpenResponse getShareTaskByDeviceOpenWithOptions(GetShareTaskByDeviceOpenRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            body.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetShareTaskByDeviceOpen"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetShareTaskByDeviceOpenResponse());
    }

    /**
     * @param request GetShareTaskByDeviceOpenRequest
     * @return GetShareTaskByDeviceOpenResponse
     */
    public GetShareTaskByDeviceOpenResponse getShareTaskByDeviceOpen(GetShareTaskByDeviceOpenRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getShareTaskByDeviceOpenWithOptions(request, runtime);
    }

    /**
     * @param request GetSoundCodeAudioRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetSoundCodeAudioResponse
     */
    public GetSoundCodeAudioResponse getSoundCodeAudioWithOptions(GetSoundCodeAudioRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.soundCodeList)) {
            body.put("SoundCodeList", request.soundCodeList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetSoundCodeAudio"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetSoundCodeAudioResponse());
    }

    /**
     * @param request GetSoundCodeAudioRequest
     * @return GetSoundCodeAudioResponse
     */
    public GetSoundCodeAudioResponse getSoundCodeAudio(GetSoundCodeAudioRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getSoundCodeAudioWithOptions(request, runtime);
    }

    /**
     * @param request GetSoundCodeScheduleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetSoundCodeScheduleResponse
     */
    public GetSoundCodeScheduleResponse getSoundCodeScheduleWithOptions(GetSoundCodeScheduleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scheduleCode)) {
            body.put("ScheduleCode", request.scheduleCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetSoundCodeSchedule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetSoundCodeScheduleResponse());
    }

    /**
     * @param request GetSoundCodeScheduleRequest
     * @return GetSoundCodeScheduleResponse
     */
    public GetSoundCodeScheduleResponse getSoundCodeSchedule(GetSoundCodeScheduleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getSoundCodeScheduleWithOptions(request, runtime);
    }

    /**
     * @param request GetSpeechDeviceDetailRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetSpeechDeviceDetailResponse
     */
    public GetSpeechDeviceDetailResponse getSpeechDeviceDetailWithOptions(GetSpeechDeviceDetailRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            body.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetSpeechDeviceDetail"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetSpeechDeviceDetailResponse());
    }

    /**
     * @param request GetSpeechDeviceDetailRequest
     * @return GetSpeechDeviceDetailResponse
     */
    public GetSpeechDeviceDetailResponse getSpeechDeviceDetail(GetSpeechDeviceDetailRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getSpeechDeviceDetailWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to three times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about Speech Sending Service licenses that are bound to devices.</p>
     * 
     * @param request GetSpeechLicenseDeviceStatisticsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetSpeechLicenseDeviceStatisticsResponse
     */
    public GetSpeechLicenseDeviceStatisticsResponse getSpeechLicenseDeviceStatisticsWithOptions(GetSpeechLicenseDeviceStatisticsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetSpeechLicenseDeviceStatistics"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetSpeechLicenseDeviceStatisticsResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to three times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about Speech Sending Service licenses that are bound to devices.</p>
     * 
     * @param request GetSpeechLicenseDeviceStatisticsRequest
     * @return GetSpeechLicenseDeviceStatisticsResponse
     */
    public GetSpeechLicenseDeviceStatisticsResponse getSpeechLicenseDeviceStatistics(GetSpeechLicenseDeviceStatisticsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getSpeechLicenseDeviceStatisticsWithOptions(request, runtime);
    }

    /**
     * @param request GetSpeechVoiceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetSpeechVoiceResponse
     */
    public GetSpeechVoiceResponse getSpeechVoiceWithOptions(com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teaopenapi.models.OpenApiRequest req = new com.aliyun.teaopenapi.models.OpenApiRequest();
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetSpeechVoice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetSpeechVoiceResponse());
    }

    /**
     * @return GetSpeechVoiceResponse
     */
    public GetSpeechVoiceResponse getSpeechVoice() throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getSpeechVoiceWithOptions(runtime);
    }

    /**
     * @param request GetStudioAppTokenOpenRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetStudioAppTokenOpenResponse
     */
    public GetStudioAppTokenOpenResponse getStudioAppTokenOpenWithOptions(GetStudioAppTokenOpenRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectId)) {
            body.put("ProjectId", request.projectId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetStudioAppTokenOpen"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetStudioAppTokenOpenResponse());
    }

    /**
     * @param request GetStudioAppTokenOpenRequest
     * @return GetStudioAppTokenOpenResponse
     */
    public GetStudioAppTokenOpenResponse getStudioAppTokenOpen(GetStudioAppTokenOpenRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getStudioAppTokenOpenWithOptions(request, runtime);
    }

    /**
     * @param request GetThingModelStatusInnerRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetThingModelStatusInnerResponse
     */
    public GetThingModelStatusInnerResponse getThingModelStatusInnerWithOptions(GetThingModelStatusInnerRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.insId)) {
            query.put("InsId", request.insId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetThingModelStatusInner"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetThingModelStatusInnerResponse());
    }

    /**
     * @param request GetThingModelStatusInnerRequest
     * @return GetThingModelStatusInnerResponse
     */
    public GetThingModelStatusInnerResponse getThingModelStatusInner(GetThingModelStatusInnerRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getThingModelStatusInnerWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/30561.html">Common request parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetThingModelTslRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetThingModelTslResponse
     */
    public GetThingModelTslResponse getThingModelTslWithOptions(GetThingModelTslRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockId)) {
            query.put("FunctionBlockId", request.functionBlockId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.modelVersion)) {
            query.put("ModelVersion", request.modelVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.simple)) {
            query.put("Simple", request.simple);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetThingModelTsl"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetThingModelTslResponse());
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/30561.html">Common request parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetThingModelTslRequest
     * @return GetThingModelTslResponse
     */
    public GetThingModelTslResponse getThingModelTsl(GetThingModelTslRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getThingModelTslWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetThingModelTslPublishedRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetThingModelTslPublishedResponse
     */
    public GetThingModelTslPublishedResponse getThingModelTslPublishedWithOptions(GetThingModelTslPublishedRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockId)) {
            query.put("FunctionBlockId", request.functionBlockId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.modelVersion)) {
            query.put("ModelVersion", request.modelVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.simple)) {
            query.put("Simple", request.simple);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetThingModelTslPublished"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetThingModelTslPublishedResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetThingModelTslPublishedRequest
     * @return GetThingModelTslPublishedResponse
     */
    public GetThingModelTslPublishedResponse getThingModelTslPublished(GetThingModelTslPublishedRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getThingModelTslPublishedWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  A data parsing script is used to convert the custom-formatted data to JSON data after the data is submitted by a device. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see <a href="https://help.aliyun.com/document_detail/149963.html">Submit scripts for data parsing</a>.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request GetThingScriptRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetThingScriptResponse
     */
    public GetThingScriptResponse getThingScriptWithOptions(GetThingScriptRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetThingScript"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetThingScriptResponse());
    }

    /**
     * <b>description</b> :
     * <p>  A data parsing script is used to convert the custom-formatted data to JSON data after the data is submitted by a device. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see <a href="https://help.aliyun.com/document_detail/149963.html">Submit scripts for data parsing</a>.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request GetThingScriptRequest
     * @return GetThingScriptResponse
     */
    public GetThingScriptResponse getThingScript(GetThingScriptRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getThingScriptWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetThingTemplateRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetThingTemplateResponse
     */
    public GetThingTemplateResponse getThingTemplateWithOptions(GetThingTemplateRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.categoryKey)) {
            query.put("CategoryKey", request.categoryKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetThingTemplate"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetThingTemplateResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 2 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request GetThingTemplateRequest
     * @return GetThingTemplateResponse
     */
    public GetThingTemplateResponse getThingTemplate(GetThingTemplateRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getThingTemplateWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can initiate a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the sub-devices of a specified gateway device.</p>
     * 
     * @param request GetThingTopoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GetThingTopoResponse
     */
    public GetThingTopoResponse getThingTopoWithOptions(GetThingTopoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNo)) {
            query.put("PageNo", request.pageNo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GetThingTopo"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GetThingTopoResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can initiate a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the sub-devices of a specified gateway device.</p>
     * 
     * @param request GetThingTopoRequest
     * @return GetThingTopoResponse
     */
    public GetThingTopoResponse getThingTopo(GetThingTopoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.getThingTopoWithOptions(request, runtime);
    }

    /**
     * @param request GisQueryDeviceLocationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GisQueryDeviceLocationResponse
     */
    public GisQueryDeviceLocationResponse gisQueryDeviceLocationWithOptions(GisQueryDeviceLocationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.thingList)) {
            query.put("ThingList", request.thingList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GisQueryDeviceLocation"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GisQueryDeviceLocationResponse());
    }

    /**
     * @param request GisQueryDeviceLocationRequest
     * @return GisQueryDeviceLocationResponse
     */
    public GisQueryDeviceLocationResponse gisQueryDeviceLocation(GisQueryDeviceLocationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.gisQueryDeviceLocationWithOptions(request, runtime);
    }

    /**
     * @param request GisSearchDeviceTraceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return GisSearchDeviceTraceResponse
     */
    public GisSearchDeviceTraceResponse gisSearchDeviceTraceWithOptions(GisSearchDeviceTraceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mapMatch)) {
            query.put("MapMatch", request.mapMatch);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "GisSearchDeviceTrace"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new GisSearchDeviceTraceResponse());
    }

    /**
     * @param request GisSearchDeviceTraceRequest
     * @return GisSearchDeviceTraceResponse
     */
    public GisSearchDeviceTraceResponse gisSearchDeviceTrace(GisSearchDeviceTraceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.gisSearchDeviceTraceWithOptions(request, runtime);
    }

    /**
     * @param request ImportDTDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ImportDTDataResponse
     */
    public ImportDTDataResponse importDTDataWithOptions(ImportDTDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.DTInstanceId)) {
            query.put("DTInstanceId", request.DTInstanceId);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.items)) {
            body.put("Items", request.items);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ImportDTData"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ImportDTDataResponse());
    }

    /**
     * @param request ImportDTDataRequest
     * @return ImportDTDataResponse
     */
    public ImportDTDataResponse importDTData(ImportDTDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.importDTDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>Before you call this operation, make sure that an MQTT gateway and the related product are created and the <strong>ProductKey</strong> of the product is obtained. For more information, see <a href="https://help.aliyun.com/document_detail/433804.html">Create an MQTT gateway</a>.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Adds a device to a Message Queuing Telemetry Transport (MQTT) gateway product.</p>
     * 
     * @param request ImportDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ImportDeviceResponse
     */
    public ImportDeviceResponse importDeviceWithOptions(ImportDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceSecret)) {
            query.put("DeviceSecret", request.deviceSecret);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nickname)) {
            query.put("Nickname", request.nickname);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sn)) {
            query.put("Sn", request.sn);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ImportDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ImportDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>Before you call this operation, make sure that an MQTT gateway and the related product are created and the <strong>ProductKey</strong> of the product is obtained. For more information, see <a href="https://help.aliyun.com/document_detail/433804.html">Create an MQTT gateway</a>.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Adds a device to a Message Queuing Telemetry Transport (MQTT) gateway product.</p>
     * 
     * @param request ImportDeviceRequest
     * @return ImportDeviceResponse
     */
    public ImportDeviceResponse importDevice(ImportDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.importDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>If a product is published, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product before you call this operation.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request ImportThingModelTslRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ImportThingModelTslResponse
     */
    public ImportThingModelTslResponse importThingModelTslWithOptions(ImportThingModelTslRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockId)) {
            query.put("FunctionBlockId", request.functionBlockId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockName)) {
            query.put("FunctionBlockName", request.functionBlockName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tslStr)) {
            query.put("TslStr", request.tslStr);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tslUrl)) {
            query.put("TslUrl", request.tslUrl);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ImportThingModelTsl"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ImportThingModelTslResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>If a product is published, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product before you call this operation.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request ImportThingModelTslRequest
     * @return ImportThingModelTslResponse
     */
    public ImportThingModelTslResponse importThingModelTsl(ImportThingModelTslRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.importThingModelTslWithOptions(request, runtime);
    }

    /**
     * @param request InvokeDataAPIServiceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return InvokeDataAPIServiceResponse
     */
    public InvokeDataAPIServiceResponse invokeDataAPIServiceWithOptions(InvokeDataAPIServiceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.apiSrn)) {
            body.put("ApiSrn", request.apiSrn);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.param)) {
            body.put("Param", request.param);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "InvokeDataAPIService"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new InvokeDataAPIServiceResponse());
    }

    /**
     * @param request InvokeDataAPIServiceRequest
     * @return InvokeDataAPIServiceResponse
     */
    public InvokeDataAPIServiceResponse invokeDataAPIService(InvokeDataAPIServiceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.invokeDataAPIServiceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>When you define a service in a Thing Specification Language (TSL) model, the mode in which the service is called is specified. When you call a service by using this operation, IoT Platform uses a call mode based on the value of the <strong>Identifier</strong> parameter.</p>
     * <ul>
     * <li>Synchronous mode: IoT Platform sends a revert-remote procedure call (RRPC) request to a device. Then, the device synchronously returns an RRPC response. For more information about how to use an RRPC, see <a href="https://help.aliyun.com/document_detail/90567.html">What is RRPC?</a></li>
     * <li>Asynchronous mode: IoT Platform sends an RRPC request to a device. Then, the device asynchronously returns an RRPC response. For more information about topics, see <a href="https://help.aliyun.com/document_detail/89301.html">Device properties, events, and services</a>.<blockquote>
     * <p>If you set the Checksum Type parameter to <strong>Verification-free</strong> when you create a product, the asynchronous mode is used.
     * When the device receives the service call, the device returns a response to the service caller. When you configure the device, you must specify the response logic and response parameters. The data formats of response parameters must comply with the Alink protocol. Example:</p>
     * </blockquote>
     * </li>
     * </ul>
     * <pre><code>{
     *     &quot;id&quot;: &quot;58***89&quot;,
     *     &quot;code&quot;: 200,
     *     &quot;data&quot;: {},
     *     &quot;message&quot;: &quot;success&quot;,
     *     &quot;localizedMsg&quot;: &quot;localizedMsg&quot;
     * }
     * </code></pre>
     * <blockquote>
     * <ul>
     * <li>The <strong>id</strong> parameter specifies the unique identifier of the request. The ID is generated by IoT Platform. The device can obtain the ID from the request parameters and then return the ID.</li>
     * <li>The <strong>code</strong> parameter specifies the result of the service call. The value of the parameter is an integer.</li>
     * <li>The <strong>data</strong> parameter specifies the result of the service call. This parameter is returned to the service caller. You can configure the parameters that you want to include in the returned result. The data must be in the JSON format.</li>
     * <li>The <strong>message</strong> and <strong>localizedMsg</strong> parameters are optional.</li>
     * <li>Link SDK for C of IoT Platform provides an example on how to use a TSL model. For more information, see <a href="https://help.aliyun.com/document_detail/258239.html">Call device services</a>.</li>
     * </ul>
     * </blockquote>
     * <h2>Limits</h2>
     * <p>If you synchronously call a service, the timeout period is 8 seconds. If a server does not receive a response within 8 seconds, a timeout error occurs. No limit is imposed on the timeout period of asynchronous calls. </p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Calls a service of a device.</p>
     * 
     * @param request InvokeThingServiceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return InvokeThingServiceResponse
     */
    public InvokeThingServiceResponse invokeThingServiceWithOptions(InvokeThingServiceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.args)) {
            query.put("Args", request.args);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.identifier)) {
            query.put("Identifier", request.identifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.qos)) {
            query.put("Qos", request.qos);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "InvokeThingService"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new InvokeThingServiceResponse());
    }

    /**
     * <b>description</b> :
     * <p>When you define a service in a Thing Specification Language (TSL) model, the mode in which the service is called is specified. When you call a service by using this operation, IoT Platform uses a call mode based on the value of the <strong>Identifier</strong> parameter.</p>
     * <ul>
     * <li>Synchronous mode: IoT Platform sends a revert-remote procedure call (RRPC) request to a device. Then, the device synchronously returns an RRPC response. For more information about how to use an RRPC, see <a href="https://help.aliyun.com/document_detail/90567.html">What is RRPC?</a></li>
     * <li>Asynchronous mode: IoT Platform sends an RRPC request to a device. Then, the device asynchronously returns an RRPC response. For more information about topics, see <a href="https://help.aliyun.com/document_detail/89301.html">Device properties, events, and services</a>.<blockquote>
     * <p>If you set the Checksum Type parameter to <strong>Verification-free</strong> when you create a product, the asynchronous mode is used.
     * When the device receives the service call, the device returns a response to the service caller. When you configure the device, you must specify the response logic and response parameters. The data formats of response parameters must comply with the Alink protocol. Example:</p>
     * </blockquote>
     * </li>
     * </ul>
     * <pre><code>{
     *     &quot;id&quot;: &quot;58***89&quot;,
     *     &quot;code&quot;: 200,
     *     &quot;data&quot;: {},
     *     &quot;message&quot;: &quot;success&quot;,
     *     &quot;localizedMsg&quot;: &quot;localizedMsg&quot;
     * }
     * </code></pre>
     * <blockquote>
     * <ul>
     * <li>The <strong>id</strong> parameter specifies the unique identifier of the request. The ID is generated by IoT Platform. The device can obtain the ID from the request parameters and then return the ID.</li>
     * <li>The <strong>code</strong> parameter specifies the result of the service call. The value of the parameter is an integer.</li>
     * <li>The <strong>data</strong> parameter specifies the result of the service call. This parameter is returned to the service caller. You can configure the parameters that you want to include in the returned result. The data must be in the JSON format.</li>
     * <li>The <strong>message</strong> and <strong>localizedMsg</strong> parameters are optional.</li>
     * <li>Link SDK for C of IoT Platform provides an example on how to use a TSL model. For more information, see <a href="https://help.aliyun.com/document_detail/258239.html">Call device services</a>.</li>
     * </ul>
     * </blockquote>
     * <h2>Limits</h2>
     * <p>If you synchronously call a service, the timeout period is 8 seconds. If a server does not receive a response within 8 seconds, a timeout error occurs. No limit is imposed on the timeout period of asynchronous calls. </p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Calls a service of a device.</p>
     * 
     * @param request InvokeThingServiceRequest
     * @return InvokeThingServiceResponse
     */
    public InvokeThingServiceResponse invokeThingService(InvokeThingServiceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.invokeThingServiceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can only asynchronously call this operation.
     * When the device receives the service call, the device returns a response to the service caller. When you configure the device, you must specify the response logic and response parameters. The data formats of response parameters must comply with the Alink protocol. Example:</p>
     * <pre><code>{
     *     &quot;id&quot;: &quot;58***89&quot;,
     *     &quot;code&quot;: 200,
     *     &quot;data&quot;: {},
     *     &quot;message&quot;: &quot;success&quot;,
     *     &quot;localizedMsg&quot;: &quot;localizedMsg&quot;
     * }
     * </code></pre>
     * <blockquote>
     * <ul>
     * <li>The <strong>id</strong> parameter specifies the unique identifier of the request. The ID is generated by IoT Platform. The device can obtain the ID from the request parameters and return the ID.</li>
     * <li>The <strong>code</strong> parameter specifies the result of the service call. The value of the parameter is an integer.</li>
     * <li>The <strong>data</strong> parameter specifies the result of the service call. This parameter is returned to the service caller. You can specify the parameters included in the returned result. The data must be in JSON format.</li>
     * <li>The <strong>message</strong> and <strong>localizedMsg</strong> parameters are optional.</li>
     * <li>Link SDK for C of IoT Platform provides an example on how to use a TSL model. For more information, see <a href="https://help.aliyun.com/document_detail/258239.html">Call device services</a>.</li>
     * </ul>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Calls multiple device services at a time.</p>
     * 
     * @param request InvokeThingsServiceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return InvokeThingsServiceResponse
     */
    public InvokeThingsServiceResponse invokeThingsServiceWithOptions(InvokeThingsServiceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.args)) {
            query.put("Args", request.args);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.identifier)) {
            query.put("Identifier", request.identifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.qos)) {
            query.put("Qos", request.qos);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "InvokeThingsService"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new InvokeThingsServiceResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can only asynchronously call this operation.
     * When the device receives the service call, the device returns a response to the service caller. When you configure the device, you must specify the response logic and response parameters. The data formats of response parameters must comply with the Alink protocol. Example:</p>
     * <pre><code>{
     *     &quot;id&quot;: &quot;58***89&quot;,
     *     &quot;code&quot;: 200,
     *     &quot;data&quot;: {},
     *     &quot;message&quot;: &quot;success&quot;,
     *     &quot;localizedMsg&quot;: &quot;localizedMsg&quot;
     * }
     * </code></pre>
     * <blockquote>
     * <ul>
     * <li>The <strong>id</strong> parameter specifies the unique identifier of the request. The ID is generated by IoT Platform. The device can obtain the ID from the request parameters and return the ID.</li>
     * <li>The <strong>code</strong> parameter specifies the result of the service call. The value of the parameter is an integer.</li>
     * <li>The <strong>data</strong> parameter specifies the result of the service call. This parameter is returned to the service caller. You can specify the parameters included in the returned result. The data must be in JSON format.</li>
     * <li>The <strong>message</strong> and <strong>localizedMsg</strong> parameters are optional.</li>
     * <li>Link SDK for C of IoT Platform provides an example on how to use a TSL model. For more information, see <a href="https://help.aliyun.com/document_detail/258239.html">Call device services</a>.</li>
     * </ul>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Calls multiple device services at a time.</p>
     * 
     * @param request InvokeThingsServiceRequest
     * @return InvokeThingsServiceResponse
     */
    public InvokeThingsServiceResponse invokeThingsService(InvokeThingsServiceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.invokeThingsServiceWithOptions(request, runtime);
    }

    /**
     * @param request ListAnalyticsDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListAnalyticsDataResponse
     */
    public ListAnalyticsDataResponse listAnalyticsDataWithOptions(ListAnalyticsDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.apiPath)) {
            query.put("ApiPath", request.apiPath);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.condition)) {
            query.put("Condition", request.condition);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.isoId)) {
            query.put("IsoId", request.isoId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNum)) {
            query.put("PageNum", request.pageNum);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListAnalyticsData"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListAnalyticsDataResponse());
    }

    /**
     * @param request ListAnalyticsDataRequest
     * @return ListAnalyticsDataResponse
     */
    public ListAnalyticsDataResponse listAnalyticsData(ListAnalyticsDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listAnalyticsDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request ListDataSourceItemRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListDataSourceItemResponse
     */
    public ListDataSourceItemResponse listDataSourceItemWithOptions(ListDataSourceItemRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataSourceId)) {
            query.put("DataSourceId", request.dataSourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.page)) {
            query.put("Page", request.page);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.searchName)) {
            query.put("SearchName", request.searchName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListDataSourceItem"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListDataSourceItemResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request ListDataSourceItemRequest
     * @return ListDataSourceItemResponse
     */
    public ListDataSourceItemResponse listDataSourceItem(ListDataSourceItemRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listDataSourceItemWithOptions(request, runtime);
    }

    /**
     * @param request ListDestinationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListDestinationResponse
     */
    public ListDestinationResponse listDestinationWithOptions(ListDestinationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.page)) {
            query.put("Page", request.page);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.searchName)) {
            query.put("SearchName", request.searchName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.types)) {
            query.put("Types", request.types);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListDestination"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListDestinationResponse());
    }

    /**
     * @param request ListDestinationRequest
     * @return ListDestinationResponse
     */
    public ListDestinationResponse listDestination(ListDestinationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listDestinationWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>If you use an Enterprise Edition instance, you must specify the <strong>IotInstanceId</strong> parameter when you call this operation. Otherwise, the call fails.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to five times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries device distribution tasks.</p>
     * 
     * @param request ListDeviceDistributeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListDeviceDistributeJobResponse
     */
    public ListDeviceDistributeJobResponse listDeviceDistributeJobWithOptions(ListDeviceDistributeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextToken)) {
            query.put("NextToken", request.nextToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            query.put("Status", request.status);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetUid)) {
            query.put("TargetUid", request.targetUid);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            body.put("JobId", request.jobId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListDeviceDistributeJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListDeviceDistributeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>If you use an Enterprise Edition instance, you must specify the <strong>IotInstanceId</strong> parameter when you call this operation. Otherwise, the call fails.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to five times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries device distribution tasks.</p>
     * 
     * @param request ListDeviceDistributeJobRequest
     * @return ListDeviceDistributeJobResponse
     */
    public ListDeviceDistributeJobResponse listDeviceDistributeJob(ListDeviceDistributeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listDeviceDistributeJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  This operation can be called only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * <li>Multiple Alibaba Cloud accounts can run a maximum of 200 QPS at the same time.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries distributed devices.</p>
     * 
     * @param request ListDistributedDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListDistributedDeviceResponse
     */
    public ListDistributedDeviceResponse listDistributedDeviceWithOptions(ListDistributedDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceInstanceId)) {
            query.put("SourceInstanceId", request.sourceInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetUid)) {
            query.put("TargetUid", request.targetUid);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListDistributedDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListDistributedDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <p>  This operation can be called only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * <li>Multiple Alibaba Cloud accounts can run a maximum of 200 QPS at the same time.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries distributed devices.</p>
     * 
     * @param request ListDistributedDeviceRequest
     * @return ListDistributedDeviceResponse
     */
    public ListDistributedDeviceResponse listDistributedDevice(ListDistributedDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listDistributedDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to five times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request ListDistributedProductRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListDistributedProductResponse
     */
    public ListDistributedProductResponse listDistributedProductWithOptions(ListDistributedProductRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceInstanceId)) {
            query.put("SourceInstanceId", request.sourceInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetInstanceId)) {
            query.put("TargetInstanceId", request.targetInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetUid)) {
            query.put("TargetUid", request.targetUid);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListDistributedProduct"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListDistributedProductResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call this operation only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to five times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request ListDistributedProductRequest
     * @return ListDistributedProductResponse
     */
    public ListDistributedProductResponse listDistributedProduct(ListDistributedProductRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listDistributedProductWithOptions(request, runtime);
    }

    /**
     * @param request ListJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListJobResponse
     */
    public ListJobResponse listJobWithOptions(ListJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            query.put("Status", request.status);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListJobResponse());
    }

    /**
     * @param request ListJobRequest
     * @return ListJobResponse
     */
    public ListJobResponse listJob(ListJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries over-the-air (OTA) update packages.</p>
     * 
     * @param request ListOTAFirmwareRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListOTAFirmwareResponse
     */
    public ListOTAFirmwareResponse listOTAFirmwareWithOptions(ListOTAFirmwareRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.destVersion)) {
            query.put("DestVersion", request.destVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListOTAFirmware"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListOTAFirmwareResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries over-the-air (OTA) update packages.</p>
     * 
     * @param request ListOTAFirmwareRequest
     * @return ListOTAFirmwareResponse
     */
    public ListOTAFirmwareResponse listOTAFirmware(ListOTAFirmwareRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listOTAFirmwareWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries all the update batches of a device by update package.</p>
     * 
     * @param request ListOTAJobByDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListOTAJobByDeviceResponse
     */
    public ListOTAJobByDeviceResponse listOTAJobByDeviceWithOptions(ListOTAJobByDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareId)) {
            query.put("FirmwareId", request.firmwareId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListOTAJobByDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListOTAJobByDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries all the update batches of a device by update package.</p>
     * 
     * @param request ListOTAJobByDeviceRequest
     * @return ListOTAJobByDeviceResponse
     */
    public ListOTAJobByDeviceResponse listOTAJobByDevice(ListOTAJobByDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listOTAJobByDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the update batches of an update package.</p>
     * 
     * @param request ListOTAJobByFirmwareRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListOTAJobByFirmwareResponse
     */
    public ListOTAJobByFirmwareResponse listOTAJobByFirmwareWithOptions(ListOTAJobByFirmwareRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareId)) {
            query.put("FirmwareId", request.firmwareId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListOTAJobByFirmware"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListOTAJobByFirmwareResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the update batches of an update package.</p>
     * 
     * @param request ListOTAJobByFirmwareRequest
     * @return ListOTAJobByFirmwareResponse
     */
    public ListOTAJobByFirmwareResponse listOTAJobByFirmware(ListOTAJobByFirmwareRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listOTAJobByFirmwareWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request ListOTAModuleByProductRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListOTAModuleByProductResponse
     */
    public ListOTAModuleByProductResponse listOTAModuleByProductWithOptions(ListOTAModuleByProductRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListOTAModuleByProduct"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListOTAModuleByProductResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request ListOTAModuleByProductRequest
     * @return ListOTAModuleByProductResponse
     */
    public ListOTAModuleByProductResponse listOTAModuleByProduct(ListOTAModuleByProductRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listOTAModuleByProductWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the version information of the over-the-air (OTA) modules that are submitted by a device.</p>
     * 
     * @param request ListOTAModuleVersionsByDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListOTAModuleVersionsByDeviceResponse
     */
    public ListOTAModuleVersionsByDeviceResponse listOTAModuleVersionsByDeviceWithOptions(ListOTAModuleVersionsByDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListOTAModuleVersionsByDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListOTAModuleVersionsByDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the version information of the over-the-air (OTA) modules that are submitted by a device.</p>
     * 
     * @param request ListOTAModuleVersionsByDeviceRequest
     * @return ListOTAModuleVersionsByDeviceResponse
     */
    public ListOTAModuleVersionsByDeviceResponse listOTAModuleVersionsByDevice(ListOTAModuleVersionsByDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listOTAModuleVersionsByDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the update tasks of a device by update batch.</p>
     * 
     * @param request ListOTATaskByJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListOTATaskByJobResponse
     */
    public ListOTATaskByJobResponse listOTATaskByJobWithOptions(ListOTATaskByJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceNames)) {
            query.put("DeviceNames", request.deviceNames);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskStatus)) {
            query.put("TaskStatus", request.taskStatus);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListOTATaskByJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListOTATaskByJobResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the update tasks of a device by update batch.</p>
     * 
     * @param request ListOTATaskByJobRequest
     * @return ListOTATaskByJobResponse
     */
    public ListOTATaskByJobResponse listOTATaskByJob(ListOTATaskByJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listOTATaskByJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries uncompleted update tasks of a specified device.</p>
     * 
     * @param request ListOTAUnfinishedTaskByDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListOTAUnfinishedTaskByDeviceResponse
     */
    public ListOTAUnfinishedTaskByDeviceResponse listOTAUnfinishedTaskByDeviceWithOptions(ListOTAUnfinishedTaskByDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.moduleName)) {
            query.put("ModuleName", request.moduleName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskStatus)) {
            query.put("TaskStatus", request.taskStatus);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskStatusList)) {
            query.put("TaskStatusList", request.taskStatusList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListOTAUnfinishedTaskByDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListOTAUnfinishedTaskByDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries uncompleted update tasks of a specified device.</p>
     * 
     * @param request ListOTAUnfinishedTaskByDeviceRequest
     * @return ListOTAUnfinishedTaskByDeviceResponse
     */
    public ListOTAUnfinishedTaskByDeviceResponse listOTAUnfinishedTaskByDevice(ListOTAUnfinishedTaskByDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listOTAUnfinishedTaskByDeviceWithOptions(request, runtime);
    }

    /**
     * @param request ListParserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListParserResponse
     */
    public ListParserResponse listParserWithOptions(ListParserRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.searchName)) {
            query.put("SearchName", request.searchName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListParser"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListParserResponse());
    }

    /**
     * @param request ListParserRequest
     * @return ListParserResponse
     */
    public ListParserResponse listParser(ListParserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listParserWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Queries the data sources of a parser.</p>
     * 
     * @param request ListParserDataSourceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListParserDataSourceResponse
     */
    public ListParserDataSourceResponse listParserDataSourceWithOptions(ListParserDataSourceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.page)) {
            query.put("Page", request.page);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.searchName)) {
            query.put("SearchName", request.searchName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListParserDataSource"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListParserDataSourceResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Queries the data sources of a parser.</p>
     * 
     * @param request ListParserDataSourceRequest
     * @return ListParserDataSourceResponse
     */
    public ListParserDataSourceResponse listParserDataSource(ListParserDataSourceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listParserDataSourceWithOptions(request, runtime);
    }

    /**
     * @param request ListParserDestinationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListParserDestinationResponse
     */
    public ListParserDestinationResponse listParserDestinationWithOptions(ListParserDestinationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.isFailover)) {
            query.put("IsFailover", request.isFailover);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.parserId)) {
            query.put("ParserId", request.parserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListParserDestination"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListParserDestinationResponse());
    }

    /**
     * @param request ListParserDestinationRequest
     * @return ListParserDestinationResponse
     */
    public ListParserDestinationResponse listParserDestination(ListParserDestinationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listParserDestinationWithOptions(request, runtime);
    }

    /**
     * @param request ListPowerStationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListPowerStationResponse
     */
    public ListPowerStationResponse listPowerStationWithOptions(ListPowerStationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.algorithmInstanceUid)) {
            query.put("AlgorithmInstanceUid", request.algorithmInstanceUid);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNo)) {
            query.put("PageNo", request.pageNo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.powerStationName)) {
            query.put("PowerStationName", request.powerStationName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListPowerStation"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListPowerStationResponse());
    }

    /**
     * @param request ListPowerStationRequest
     * @return ListPowerStationResponse
     */
    public ListPowerStationResponse listPowerStation(ListPowerStationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listPowerStationWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * <li>You can specify a tag key or a tag key-value pair for search.</li>
     * <li>If you specify multiple tags, the logical relationship among these tags is <strong>OR</strong>.</li>
     * </ul>
     * 
     * @param request ListProductByTagsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListProductByTagsResponse
     */
    public ListProductByTagsResponse listProductByTagsWithOptions(ListProductByTagsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productTag)) {
            query.put("ProductTag", request.productTag);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListProductByTags"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListProductByTagsResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * <li>You can specify a tag key or a tag key-value pair for search.</li>
     * <li>If you specify multiple tags, the logical relationship among these tags is <strong>OR</strong>.</li>
     * </ul>
     * 
     * @param request ListProductByTagsRequest
     * @return ListProductByTagsResponse
     */
    public ListProductByTagsResponse listProductByTags(ListProductByTagsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listProductByTagsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries all the tags of a product.</p>
     * 
     * @param request ListProductTagsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListProductTagsResponse
     */
    public ListProductTagsResponse listProductTagsWithOptions(ListProductTagsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListProductTags"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListProductTagsResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries all the tags of a product.</p>
     * 
     * @param request ListProductTagsRequest
     * @return ListProductTagsResponse
     */
    public ListProductTagsResponse listProductTags(ListProductTagsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listProductTagsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 20 times per second per account.</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries rules by page.</p>
     * 
     * @param request ListRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListRuleResponse
     */
    public ListRuleResponse listRuleWithOptions(ListRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListRuleResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 20 times per second per account.</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries rules by page.</p>
     * 
     * @param request ListRuleRequest
     * @return ListRuleResponse
     */
    public ListRuleResponse listRule(ListRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listRuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries all the configured data forwarding actions of a specific rule. When the rule is triggered, data can be forwarded to different destinations based on the configured actions.</p>
     * 
     * @param request ListRuleActionsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListRuleActionsResponse
     */
    public ListRuleActionsResponse listRuleActionsWithOptions(ListRuleActionsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListRuleActions"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListRuleActionsResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries all the configured data forwarding actions of a specific rule. When the rule is triggered, data can be forwarded to different destinations based on the configured actions.</p>
     * 
     * @param request ListRuleActionsRequest
     * @return ListRuleActionsResponse
     */
    public ListRuleActionsResponse listRuleActions(ListRuleActionsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listRuleActionsWithOptions(request, runtime);
    }

    /**
     * @param tmpReq ListTaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListTaskResponse
     */
    public ListTaskResponse listTaskWithOptions(ListTaskRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        ListTaskShrinkRequest request = new ListTaskShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.device)) {
            request.deviceShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.device, "Device", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceShrink)) {
            query.put("Device", request.deviceShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.limit)) {
            query.put("Limit", request.limit);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextToken)) {
            query.put("NextToken", request.nextToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            query.put("Status", request.status);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListTask"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListTaskResponse());
    }

    /**
     * @param request ListTaskRequest
     * @return ListTaskResponse
     */
    public ListTaskResponse listTask(ListTaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listTaskWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can manage TSL models by version. After you import a TSL model by calling the <a href="https://help.aliyun.com/document_detail/150320.html">ImportThingModelTsl</a> operation, copy a TSL model by calling the <a href="https://help.aliyun.com/document_detail/150322.html">CopyThingModel</a> operation, or edit a TSL model, you must publish the TSL model by calling the <a href="https://help.aliyun.com/document_detail/150311.html">PublishThingModel</a> operation. Then, the TSL model can be used. Each time a TSL model of a product is published, a new version is generated.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the Thing Specification Language (TSL) model versions of a specified product.</p>
     * 
     * @param request ListThingModelVersionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListThingModelVersionResponse
     */
    public ListThingModelVersionResponse listThingModelVersionWithOptions(ListThingModelVersionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListThingModelVersion"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListThingModelVersionResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can manage TSL models by version. After you import a TSL model by calling the <a href="https://help.aliyun.com/document_detail/150320.html">ImportThingModelTsl</a> operation, copy a TSL model by calling the <a href="https://help.aliyun.com/document_detail/150322.html">CopyThingModel</a> operation, or edit a TSL model, you must publish the TSL model by calling the <a href="https://help.aliyun.com/document_detail/150311.html">PublishThingModel</a> operation. Then, the TSL model can be used. Each time a TSL model of a product is published, a new version is generated.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the Thing Specification Language (TSL) model versions of a specified product.</p>
     * 
     * @param request ListThingModelVersionRequest
     * @return ListThingModelVersionResponse
     */
    public ListThingModelVersionResponse listThingModelVersion(ListThingModelVersionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listThingModelVersionWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>IoT Platform provides product categories that have defined TSL models, such as street lamps, vehicle location cards, and water immersion detectors.
     * When you call the <a href="https://help.aliyun.com/document_detail/69123.html">CreateProduct</a> operation to create a product, you can set the CategoryKey parameter to specify a product category. The product that you create references the standardized TSL model of the specified category.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries standard product categories that are predefined by IoT Platform.</p>
     * 
     * @param request ListThingTemplatesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ListThingTemplatesResponse
     */
    public ListThingTemplatesResponse listThingTemplatesWithOptions(ListThingTemplatesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ListThingTemplates"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ListThingTemplatesResponse());
    }

    /**
     * <b>description</b> :
     * <p>IoT Platform provides product categories that have defined TSL models, such as street lamps, vehicle location cards, and water immersion detectors.
     * When you call the <a href="https://help.aliyun.com/document_detail/69123.html">CreateProduct</a> operation to create a product, you can set the CategoryKey parameter to specify a product category. The product that you create references the standardized TSL model of the specified category.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries standard product categories that are predefined by IoT Platform.</p>
     * 
     * @param request ListThingTemplatesRequest
     * @return ListThingTemplatesResponse
     */
    public ListThingTemplatesResponse listThingTemplates(ListThingTemplatesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.listThingTemplatesWithOptions(request, runtime);
    }

    /**
     * @param request ModifyOTAFirmwareRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyOTAFirmwareResponse
     */
    public ModifyOTAFirmwareResponse modifyOTAFirmwareWithOptions(ModifyOTAFirmwareRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.firmwareDesc)) {
            query.put("FirmwareDesc", request.firmwareDesc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareId)) {
            query.put("FirmwareId", request.firmwareId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareName)) {
            query.put("FirmwareName", request.firmwareName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.firmwareUdi)) {
            query.put("FirmwareUdi", request.firmwareUdi);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyOTAFirmware"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyOTAFirmwareResponse());
    }

    /**
     * @param request ModifyOTAFirmwareRequest
     * @return ModifyOTAFirmwareResponse
     */
    public ModifyOTAFirmwareResponse modifyOTAFirmware(ModifyOTAFirmwareRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyOTAFirmwareWithOptions(request, runtime);
    }

    /**
     * @param request ModifyPowerStationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ModifyPowerStationResponse
     */
    public ModifyPowerStationResponse modifyPowerStationWithOptions(ModifyPowerStationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.algorithmInstanceUid)) {
            query.put("AlgorithmInstanceUid", request.algorithmInstanceUid);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.powerStationName)) {
            query.put("PowerStationName", request.powerStationName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.powerStationUid)) {
            query.put("PowerStationUid", request.powerStationUid);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ratedPower)) {
            query.put("RatedPower", request.ratedPower);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ModifyPowerStation"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ModifyPowerStationResponse());
    }

    /**
     * @param request ModifyPowerStationRequest
     * @return ModifyPowerStationResponse
     */
    public ModifyPowerStationResponse modifyPowerStation(ModifyPowerStationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.modifyPowerStationWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>A successful response indicates that the command to add topological relationships is sent to the gateway. It does not indicate that the topological relationships are added.
     * When you develop the gateway, you must subscribe to the topic that is used to send notifications when you add topological relationships. For more information about the topic and message format, see <a href="https://help.aliyun.com/document_detail/89299.html">Manage topological relationships</a>.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Notifies a gateway to add topological relationships.</p>
     * 
     * @param request NotifyAddThingTopoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return NotifyAddThingTopoResponse
     */
    public NotifyAddThingTopoResponse notifyAddThingTopoWithOptions(NotifyAddThingTopoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceListStr)) {
            query.put("DeviceListStr", request.deviceListStr);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.gwDeviceName)) {
            query.put("GwDeviceName", request.gwDeviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.gwIotId)) {
            query.put("GwIotId", request.gwIotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.gwProductKey)) {
            query.put("GwProductKey", request.gwProductKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "NotifyAddThingTopo"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new NotifyAddThingTopoResponse());
    }

    /**
     * <b>description</b> :
     * <p>A successful response indicates that the command to add topological relationships is sent to the gateway. It does not indicate that the topological relationships are added.
     * When you develop the gateway, you must subscribe to the topic that is used to send notifications when you add topological relationships. For more information about the topic and message format, see <a href="https://help.aliyun.com/document_detail/89299.html">Manage topological relationships</a>.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Notifies a gateway to add topological relationships.</p>
     * 
     * @param request NotifyAddThingTopoRequest
     * @return NotifyAddThingTopoResponse
     */
    public NotifyAddThingTopoResponse notifyAddThingTopo(NotifyAddThingTopoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.notifyAddThingTopoWithOptions(request, runtime);
    }

    /**
     * @param request OpenIotServiceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return OpenIotServiceResponse
     */
    public OpenIotServiceResponse openIotServiceWithOptions(OpenIotServiceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.ownerId)) {
            query.put("OwnerId", request.ownerId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "OpenIotService"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new OpenIotServiceResponse());
    }

    /**
     * @param request OpenIotServiceRequest
     * @return OpenIotServiceResponse
     */
    public OpenIotServiceResponse openIotService(OpenIotServiceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.openIotServiceWithOptions(request, runtime);
    }

    /**
     * @param request PackageSoundCodeLabelBatchAudioRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PackageSoundCodeLabelBatchAudioResponse
     */
    public PackageSoundCodeLabelBatchAudioResponse packageSoundCodeLabelBatchAudioWithOptions(PackageSoundCodeLabelBatchAudioRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.batchCode)) {
            body.put("BatchCode", request.batchCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "PackageSoundCodeLabelBatchAudio"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PackageSoundCodeLabelBatchAudioResponse());
    }

    /**
     * @param request PackageSoundCodeLabelBatchAudioRequest
     * @return PackageSoundCodeLabelBatchAudioResponse
     */
    public PackageSoundCodeLabelBatchAudioResponse packageSoundCodeLabelBatchAudio(PackageSoundCodeLabelBatchAudioRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.packageSoundCodeLabelBatchAudioWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this operation up to 100 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the speeches that you share.</p>
     * 
     * @param request PageQuerySharedSpeechOpenRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PageQuerySharedSpeechOpenResponse
     */
    public PageQuerySharedSpeechOpenResponse pageQuerySharedSpeechOpenWithOptions(PageQuerySharedSpeechOpenRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            body.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shareTaskCode)) {
            body.put("ShareTaskCode", request.shareTaskCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            body.put("Status", request.status);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "PageQuerySharedSpeechOpen"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PageQuerySharedSpeechOpenResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this operation up to 100 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the speeches that you share.</p>
     * 
     * @param request PageQuerySharedSpeechOpenRequest
     * @return PageQuerySharedSpeechOpenResponse
     */
    public PageQuerySharedSpeechOpenResponse pageQuerySharedSpeechOpen(PageQuerySharedSpeechOpenRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.pageQuerySharedSpeechOpenWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>You can call this operation to query only shared speech broadcasting data six hours ago. For example, if a shared speech was broadcasted at 07:15, you can query the speech after 13:15.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this operation up to 100 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the shared speech broadcasting data of a specific hour by page in Speech Sending Service.</p>
     * 
     * @param request PageQuerySpeechBroadcastHourRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PageQuerySpeechBroadcastHourResponse
     */
    public PageQuerySpeechBroadcastHourResponse pageQuerySpeechBroadcastHourWithOptions(PageQuerySpeechBroadcastHourRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.queryDateTimeHour)) {
            query.put("QueryDateTimeHour", request.queryDateTimeHour);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageToken)) {
            body.put("PageToken", request.pageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shareTaskCode)) {
            body.put("ShareTaskCode", request.shareTaskCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "PageQuerySpeechBroadcastHour"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PageQuerySpeechBroadcastHourResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>You can call this operation to query only shared speech broadcasting data six hours ago. For example, if a shared speech was broadcasted at 07:15, you can query the speech after 13:15.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this operation up to 100 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the shared speech broadcasting data of a specific hour by page in Speech Sending Service.</p>
     * 
     * @param request PageQuerySpeechBroadcastHourRequest
     * @return PageQuerySpeechBroadcastHourResponse
     */
    public PageQuerySpeechBroadcastHourResponse pageQuerySpeechBroadcastHour(PageQuerySpeechBroadcastHourRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.pageQuerySpeechBroadcastHourWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Before you call this operation, a receipt template must be available in the Letter Sending Service console. Otherwise, the request fails.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Prints a receipt that follows the template in the Letter Sending Service console.</p>
     * 
     * @param request PrintByTemplateRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PrintByTemplateResponse
     */
    public PrintByTemplateResponse printByTemplateWithOptions(PrintByTemplateRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.historyPrintTopic)) {
            body.put("HistoryPrintTopic", request.historyPrintTopic);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            body.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.paramsJsonString)) {
            body.put("ParamsJsonString", request.paramsJsonString);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.templateBizCode)) {
            body.put("TemplateBizCode", request.templateBizCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "PrintByTemplate"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PrintByTemplateResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Before you call this operation, a receipt template must be available in the Letter Sending Service console. Otherwise, the request fails.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Prints a receipt that follows the template in the Letter Sending Service console.</p>
     * 
     * @param request PrintByTemplateRequest
     * @return PrintByTemplateResponse
     */
    public PrintByTemplateResponse printByTemplate(PrintByTemplateRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.printByTemplateWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>This operation does not support device property settings and service invocations.</p>
     * <ul>
     * <li>To set properties, call the <a href="https://help.aliyun.com/document_detail/69579.html">SetDeviceProperty</a> or <a href="https://help.aliyun.com/document_detail/96243.html">SetDevicesProperty</a> operation.</li>
     * <li>To invoke a service, call the <a href="https://help.aliyun.com/document_detail/69584.html">InvokeThingService</a> or <a href="https://help.aliyun.com/document_detail/96242.html">InvokeThingsService</a> operation.</li>
     * </ul>
     * <h2>QPS limit</h2>
     * <p>You can call this API operation up to 1,600 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Publishes a message to a specified device by using a custom topic.</p>
     * 
     * @param request PubRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PubResponse
     */
    public PubResponse pubWithOptions(PubRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.contentType)) {
            query.put("ContentType", request.contentType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.correlationData)) {
            query.put("CorrelationData", request.correlationData);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.messageExpiryInterval)) {
            query.put("MessageExpiryInterval", request.messageExpiryInterval);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.payloadFormatIndicator)) {
            query.put("PayloadFormatIndicator", request.payloadFormatIndicator);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.qos)) {
            query.put("Qos", request.qos);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.responseTopic)) {
            query.put("ResponseTopic", request.responseTopic);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.retained)) {
            query.put("Retained", request.retained);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicAlias)) {
            query.put("TopicAlias", request.topicAlias);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicFullName)) {
            query.put("TopicFullName", request.topicFullName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userProp)) {
            query.put("UserProp", request.userProp);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.messageContent)) {
            body.put("MessageContent", request.messageContent);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "Pub"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PubResponse());
    }

    /**
     * <b>description</b> :
     * <p>This operation does not support device property settings and service invocations.</p>
     * <ul>
     * <li>To set properties, call the <a href="https://help.aliyun.com/document_detail/69579.html">SetDeviceProperty</a> or <a href="https://help.aliyun.com/document_detail/96243.html">SetDevicesProperty</a> operation.</li>
     * <li>To invoke a service, call the <a href="https://help.aliyun.com/document_detail/69584.html">InvokeThingService</a> or <a href="https://help.aliyun.com/document_detail/96242.html">InvokeThingsService</a> operation.</li>
     * </ul>
     * <h2>QPS limit</h2>
     * <p>You can call this API operation up to 1,600 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Publishes a message to a specified device by using a custom topic.</p>
     * 
     * @param request PubRequest
     * @return PubResponse
     */
    public PubResponse pub(PubRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.pubWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can use the <strong>TopicFullName</strong> parameter in the <strong>request</strong> to specify the devices to which you want to broadcast messages. For more information, see the description about the <strong>TopicFullName</strong> parameter in this topic.</p>
     * <h2>QPS limits</h2>
     * <ul>
     * <li>Each Alibaba Cloud account can run only one query per second (QPS) to broadcast a message to devices that subscribe to a topic.</li>
     * <li>Each Alibaba Cloud account can run only one query per minute (QPM) to broadcast a message to all online devices of a product.      &gt;  The RAM users of an Alibaba Cloud account share the quota of the account.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Broadcasts messages to online devices of a product. You can specify all online devices or only the online devices that subscribe to a specified topic.</p>
     * 
     * @param request PubBroadcastRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PubBroadcastResponse
     */
    public PubBroadcastResponse pubBroadcastWithOptions(PubBroadcastRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.messageContent)) {
            query.put("MessageContent", request.messageContent);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicFullName)) {
            query.put("TopicFullName", request.topicFullName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "PubBroadcast"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PubBroadcastResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can use the <strong>TopicFullName</strong> parameter in the <strong>request</strong> to specify the devices to which you want to broadcast messages. For more information, see the description about the <strong>TopicFullName</strong> parameter in this topic.</p>
     * <h2>QPS limits</h2>
     * <ul>
     * <li>Each Alibaba Cloud account can run only one query per second (QPS) to broadcast a message to devices that subscribe to a topic.</li>
     * <li>Each Alibaba Cloud account can run only one query per minute (QPM) to broadcast a message to all online devices of a product.      &gt;  The RAM users of an Alibaba Cloud account share the quota of the account.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Broadcasts messages to online devices of a product. You can specify all online devices or only the online devices that subscribe to a specified topic.</p>
     * 
     * @param request PubBroadcastRequest
     * @return PubBroadcastResponse
     */
    public PubBroadcastResponse pubBroadcast(PubBroadcastRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.pubBroadcastWithOptions(request, runtime);
    }

    /**
     * @param request PublishScriptRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PublishScriptResponse
     */
    public PublishScriptResponse publishScriptWithOptions(PublishScriptRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.parserId)) {
            query.put("ParserId", request.parserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "PublishScript"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PublishScriptResponse());
    }

    /**
     * @param request PublishScriptRequest
     * @return PublishScriptResponse
     */
    public PublishScriptResponse publishScript(PublishScriptRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.publishScriptWithOptions(request, runtime);
    }

    /**
     * @param request PublishStudioAppRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PublishStudioAppResponse
     */
    public PublishStudioAppResponse publishStudioAppWithOptions(PublishStudioAppRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            body.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectId)) {
            body.put("ProjectId", request.projectId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "PublishStudioApp"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PublishStudioAppResponse());
    }

    /**
     * @param request PublishStudioAppRequest
     * @return PublishStudioAppResponse
     */
    public PublishStudioAppResponse publishStudioApp(PublishStudioAppRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.publishStudioAppWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>If a product is published, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product before you call this operation.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request PublishThingModelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PublishThingModelResponse
     */
    public PublishThingModelResponse publishThingModelWithOptions(PublishThingModelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.modelVersion)) {
            query.put("ModelVersion", request.modelVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "PublishThingModel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PublishThingModelResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>If a product is published, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product before you call this operation.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request PublishThingModelRequest
     * @return PublishThingModelResponse
     */
    public PublishThingModelResponse publishThingModel(PublishThingModelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.publishThingModelWithOptions(request, runtime);
    }

    /**
     * @param request PublishThingModelAsyncRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PublishThingModelAsyncResponse
     */
    public PublishThingModelAsyncResponse publishThingModelAsyncWithOptions(PublishThingModelAsyncRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.thingModelVersion)) {
            query.put("ThingModelVersion", request.thingModelVersion);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "PublishThingModelAsync"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PublishThingModelAsyncResponse());
    }

    /**
     * @param request PublishThingModelAsyncRequest
     * @return PublishThingModelAsyncResponse
     */
    public PublishThingModelAsyncResponse publishThingModelAsync(PublishThingModelAsyncRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.publishThingModelAsyncWithOptions(request, runtime);
    }

    /**
     * @param request PublishThingModelAsyncInnerRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PublishThingModelAsyncInnerResponse
     */
    public PublishThingModelAsyncInnerResponse publishThingModelAsyncInnerWithOptions(PublishThingModelAsyncInnerRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.insId)) {
            query.put("InsId", request.insId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "PublishThingModelAsyncInner"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PublishThingModelAsyncInnerResponse());
    }

    /**
     * @param request PublishThingModelAsyncInnerRequest
     * @return PublishThingModelAsyncInnerResponse
     */
    public PublishThingModelAsyncInnerResponse publishThingModelAsyncInner(PublishThingModelAsyncInnerRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.publishThingModelAsyncInnerWithOptions(request, runtime);
    }

    /**
     * @param request PushSpeechRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return PushSpeechResponse
     */
    public PushSpeechResponse pushSpeechWithOptions(PushSpeechRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            body.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectCode)) {
            body.put("ProjectCode", request.projectCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pushMode)) {
            body.put("PushMode", request.pushMode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechCodeList)) {
            body.put("SpeechCodeList", request.speechCodeList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "PushSpeech"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new PushSpeechResponse());
    }

    /**
     * @param request PushSpeechRequest
     * @return PushSpeechResponse
     */
    public PushSpeechResponse pushSpeech(PushSpeechRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.pushSpeechWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 30 times per second per account.</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryBatchRegisterDeviceStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryBatchRegisterDeviceStatusResponse
     */
    public QueryBatchRegisterDeviceStatusResponse queryBatchRegisterDeviceStatusWithOptions(QueryBatchRegisterDeviceStatusRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.applyId)) {
            query.put("ApplyId", request.applyId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryBatchRegisterDeviceStatus"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryBatchRegisterDeviceStatusResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 30 times per second per account.</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryBatchRegisterDeviceStatusRequest
     * @return QueryBatchRegisterDeviceStatusResponse
     */
    public QueryBatchRegisterDeviceStatusResponse queryBatchRegisterDeviceStatus(QueryBatchRegisterDeviceStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryBatchRegisterDeviceStatusWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the URL from which you can download the X.509 certificates of created devices.</p>
     * 
     * @param request QueryCertUrlByApplyIdRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryCertUrlByApplyIdResponse
     */
    public QueryCertUrlByApplyIdResponse queryCertUrlByApplyIdWithOptions(QueryCertUrlByApplyIdRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.applyId)) {
            query.put("ApplyId", request.applyId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryCertUrlByApplyId"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryCertUrlByApplyIdResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the URL from which you can download the X.509 certificates of created devices.</p>
     * 
     * @param request QueryCertUrlByApplyIdRequest
     * @return QueryCertUrlByApplyIdResponse
     */
    public QueryCertUrlByApplyIdResponse queryCertUrlByApplyId(QueryCertUrlByApplyIdRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryCertUrlByApplyIdWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryClientIdsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryClientIdsResponse
     */
    public QueryClientIdsResponse queryClientIdsWithOptions(QueryClientIdsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryClientIds"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryClientIdsResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryClientIdsRequest
     * @return QueryClientIdsResponse
     */
    public QueryClientIdsResponse queryClientIds(QueryClientIdsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryClientIdsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryConsumerGroupByGroupIdRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryConsumerGroupByGroupIdResponse
     */
    public QueryConsumerGroupByGroupIdResponse queryConsumerGroupByGroupIdWithOptions(QueryConsumerGroupByGroupIdRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryConsumerGroupByGroupId"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryConsumerGroupByGroupIdResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryConsumerGroupByGroupIdRequest
     * @return QueryConsumerGroupByGroupIdResponse
     */
    public QueryConsumerGroupByGroupIdResponse queryConsumerGroupByGroupId(QueryConsumerGroupByGroupIdRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryConsumerGroupByGroupIdWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries all consumer groups of the current account when you use AMQP server-side subscriptions. You can also call this operation to perform a fuzzy search by consumer group name.</p>
     * 
     * @param request QueryConsumerGroupListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryConsumerGroupListResponse
     */
    public QueryConsumerGroupListResponse queryConsumerGroupListWithOptions(QueryConsumerGroupListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fuzzy)) {
            query.put("Fuzzy", request.fuzzy);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupName)) {
            query.put("GroupName", request.groupName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subBizCode)) {
            query.put("SubBizCode", request.subBizCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryConsumerGroupList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryConsumerGroupListResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries all consumer groups of the current account when you use AMQP server-side subscriptions. You can also call this operation to perform a fuzzy search by consumer group name.</p>
     * 
     * @param request QueryConsumerGroupListRequest
     * @return QueryConsumerGroupListResponse
     */
    public QueryConsumerGroupListResponse queryConsumerGroupList(QueryConsumerGroupListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryConsumerGroupListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the status of a consumer group when you use an AMQP server-side subscription. The status information includes online client information, message consumption rate, number of accumulated messages, and last message consumption time.</p>
     * 
     * @param request QueryConsumerGroupStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryConsumerGroupStatusResponse
     */
    public QueryConsumerGroupStatusResponse queryConsumerGroupStatusWithOptions(QueryConsumerGroupStatusRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryConsumerGroupStatus"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryConsumerGroupStatusResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the status of a consumer group when you use an AMQP server-side subscription. The status information includes online client information, message consumption rate, number of accumulated messages, and last message consumption time.</p>
     * 
     * @param request QueryConsumerGroupStatusRequest
     * @return QueryConsumerGroupStatusResponse
     */
    public QueryConsumerGroupStatusResponse queryConsumerGroupStatus(QueryConsumerGroupStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryConsumerGroupStatusWithOptions(request, runtime);
    }

    /**
     * @param request QueryCustomTimelineTableStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryCustomTimelineTableStatusResponse
     */
    public QueryCustomTimelineTableStatusResponse queryCustomTimelineTableStatusWithOptions(QueryCustomTimelineTableStatusRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tableName)) {
            query.put("TableName", request.tableName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryCustomTimelineTableStatus"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryCustomTimelineTableStatusResponse());
    }

    /**
     * @param request QueryCustomTimelineTableStatusRequest
     * @return QueryCustomTimelineTableStatusResponse
     */
    public QueryCustomTimelineTableStatusResponse queryCustomTimelineTableStatus(QueryCustomTimelineTableStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryCustomTimelineTableStatusWithOptions(request, runtime);
    }

    /**
     * @param request QueryDetailSceneRuleLogRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDetailSceneRuleLogResponse
     */
    public QueryDetailSceneRuleLogResponse queryDetailSceneRuleLogWithOptions(QueryDetailSceneRuleLogRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.traceId)) {
            query.put("TraceId", request.traceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDetailSceneRuleLog"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDetailSceneRuleLogResponse());
    }

    /**
     * @param request QueryDetailSceneRuleLogRequest
     * @return QueryDetailSceneRuleLogResponse
     */
    public QueryDetailSceneRuleLogResponse queryDetailSceneRuleLog(QueryDetailSceneRuleLogRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDetailSceneRuleLogWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>The QueryDevice operation can return up to one million devices each time you call the operation.</p>
     * <h2>QPS limits</h2>
     * <ul>
     * <li>You can call this API operation up to 50 times per second per account. &gt;  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</li>
     * <li>If the product of the value of the <strong>CurrentPage</strong> parameter and the value of the <strong>PageSize</strong> parameter is greater than or equal to 100,000, the queries per second (QPS) of this operation decreases. 
     * In this case, you can call this API operation up to two times per second per account.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the devices of a product.</p>
     * 
     * @param request QueryDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceResponse
     */
    public QueryDeviceResponse queryDeviceWithOptions(QueryDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextToken)) {
            query.put("NextToken", request.nextToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <p>The QueryDevice operation can return up to one million devices each time you call the operation.</p>
     * <h2>QPS limits</h2>
     * <ul>
     * <li>You can call this API operation up to 50 times per second per account. &gt;  The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</li>
     * <li>If the product of the value of the <strong>CurrentPage</strong> parameter and the value of the <strong>PageSize</strong> parameter is greater than or equal to 100,000, the queries per second (QPS) of this operation decreases. 
     * In this case, you can call this API operation up to two times per second per account.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the devices of a product.</p>
     * 
     * @param request QueryDeviceRequest
     * @return QueryDeviceResponse
     */
    public QueryDeviceResponse queryDevice(QueryDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can query devices on Enterprise Edition instances only in the China (Shanghai) and Japan (Tokyo) regions.</p>
     * <ul>
     * <li>The QueryDeviceBySQL operation can return up to 10,000 devices each time you call the operation. For more information, see the &quot;<code>Syntax of LIMIT clauses</code>&quot; section of this topic.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries devices by executing an SQL-like statement. This operation returns the devices that meet the conditions that you specified in the SQL-like statement.</p>
     * 
     * @param request QueryDeviceBySQLRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceBySQLResponse
     */
    public QueryDeviceBySQLResponse queryDeviceBySQLWithOptions(QueryDeviceBySQLRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.SQL)) {
            query.put("SQL", request.SQL);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceBySQL"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceBySQLResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can query devices on Enterprise Edition instances only in the China (Shanghai) and Japan (Tokyo) regions.</p>
     * <ul>
     * <li>The QueryDeviceBySQL operation can return up to 10,000 devices each time you call the operation. For more information, see the &quot;<code>Syntax of LIMIT clauses</code>&quot; section of this topic.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries devices by executing an SQL-like statement. This operation returns the devices that meet the conditions that you specified in the SQL-like statement.</p>
     * 
     * @param request QueryDeviceBySQLRequest
     * @return QueryDeviceBySQLResponse
     */
    public QueryDeviceBySQLResponse queryDeviceBySQL(QueryDeviceBySQLRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceBySQLWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>After the status of a device changes, the new status is applied within 10 seconds. After the new status is applied, you can search for the device by using the new status. Before the new status is applied, you can search for the device by using the previous status.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries devices by status.</p>
     * 
     * @param request QueryDeviceByStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceByStatusResponse
     */
    public QueryDeviceByStatusResponse queryDeviceByStatusWithOptions(QueryDeviceByStatusRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            query.put("Status", request.status);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceByStatus"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceByStatusResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>After the status of a device changes, the new status is applied within 10 seconds. After the new status is applied, you can search for the device by using the new status. Before the new status is applied, you can search for the device by using the previous status.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries devices by status.</p>
     * 
     * @param request QueryDeviceByStatusRequest
     * @return QueryDeviceByStatusResponse
     */
    public QueryDeviceByStatusResponse queryDeviceByStatus(QueryDeviceByStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceByStatusWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can specify a maximum of 10 tags in a single call.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries devices by tag.</p>
     * 
     * @param request QueryDeviceByTagsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceByTagsResponse
     */
    public QueryDeviceByTagsResponse queryDeviceByTagsWithOptions(QueryDeviceByTagsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tag)) {
            query.put("Tag", request.tag);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceByTags"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceByTagsResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can specify a maximum of 10 tags in a single call.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries devices by tag.</p>
     * 
     * @param request QueryDeviceByTagsRequest
     * @return QueryDeviceByTagsResponse
     */
    public QueryDeviceByTagsResponse queryDeviceByTags(QueryDeviceByTagsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceByTagsWithOptions(request, runtime);
    }

    /**
     * @param request QueryDeviceCertRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceCertResponse
     */
    public QueryDeviceCertResponse queryDeviceCertWithOptions(QueryDeviceCertRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceCert"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceCertResponse());
    }

    /**
     * @param request QueryDeviceCertRequest
     * @return QueryDeviceCertResponse
     */
    public QueryDeviceCertResponse queryDeviceCert(QueryDeviceCertRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceCertWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The desired values of read-only properties cannot be queried.</p>
     * <ul>
     * <li>You can query the desired values of up to 10 properties in a single call.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the desired values of properties of a device.</p>
     * 
     * @param request QueryDeviceDesiredPropertyRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceDesiredPropertyResponse
     */
    public QueryDeviceDesiredPropertyResponse queryDeviceDesiredPropertyWithOptions(QueryDeviceDesiredPropertyRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockId)) {
            query.put("FunctionBlockId", request.functionBlockId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.identifier)) {
            query.put("Identifier", request.identifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceDesiredProperty"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceDesiredPropertyResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The desired values of read-only properties cannot be queried.</p>
     * <ul>
     * <li>You can query the desired values of up to 10 properties in a single call.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the desired values of properties of a device.</p>
     * 
     * @param request QueryDeviceDesiredPropertyRequest
     * @return QueryDeviceDesiredPropertyResponse
     */
    public QueryDeviceDesiredPropertyResponse queryDeviceDesiredProperty(QueryDeviceDesiredPropertyRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceDesiredPropertyWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDeviceDetailRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceDetailResponse
     */
    public QueryDeviceDetailResponse queryDeviceDetailWithOptions(QueryDeviceDetailRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceDetail"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceDetailResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDeviceDetailRequest
     * @return QueryDeviceDetailResponse
     */
    public QueryDeviceDetailResponse queryDeviceDetail(QueryDeviceDetailRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceDetailWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  This operation can be called only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request QueryDeviceDistributeDetailRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceDistributeDetailResponse
     */
    public QueryDeviceDistributeDetailResponse queryDeviceDistributeDetailWithOptions(QueryDeviceDistributeDetailRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceDistributeDetail"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceDistributeDetailResponse());
    }

    /**
     * <b>description</b> :
     * <p>  This operation can be called only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request QueryDeviceDistributeDetailRequest
     * @return QueryDeviceDistributeDetailResponse
     */
    public QueryDeviceDistributeDetailResponse queryDeviceDistributeDetail(QueryDeviceDistributeDetailRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceDistributeDetailWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  This operation can be called only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request QueryDeviceDistributeJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceDistributeJobResponse
     */
    public QueryDeviceDistributeJobResponse queryDeviceDistributeJobWithOptions(QueryDeviceDistributeJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceDistributeJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceDistributeJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>  This operation can be called only by using the following <strong>endpoint</strong>: <code>iot.cn-shanghai.aliyuncs.com</code>.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request QueryDeviceDistributeJobRequest
     * @return QueryDeviceDistributeJobResponse
     */
    public QueryDeviceDistributeJobResponse queryDeviceDistributeJob(QueryDeviceDistributeJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceDistributeJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can query only the event records that are generated in the previous 30 days.</p>
     * <blockquote>
     * <p> The storage period of an event record is calculated from the day when the record is generated.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the event records of a specified device.</p>
     * 
     * @param request QueryDeviceEventDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceEventDataResponse
     */
    public QueryDeviceEventDataResponse queryDeviceEventDataWithOptions(QueryDeviceEventDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.asc)) {
            query.put("Asc", request.asc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.eventType)) {
            query.put("EventType", request.eventType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.identifier)) {
            query.put("Identifier", request.identifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceEventData"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceEventDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can query only the event records that are generated in the previous 30 days.</p>
     * <blockquote>
     * <p> The storage period of an event record is calculated from the day when the record is generated.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the event records of a specified device.</p>
     * 
     * @param request QueryDeviceEventDataRequest
     * @return QueryDeviceEventDataResponse
     */
    public QueryDeviceEventDataResponse queryDeviceEventData(QueryDeviceEventDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceEventDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDeviceFileRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceFileResponse
     */
    public QueryDeviceFileResponse queryDeviceFileWithOptions(QueryDeviceFileRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fileId)) {
            query.put("FileId", request.fileId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceFile"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceFileResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDeviceFileRequest
     * @return QueryDeviceFileResponse
     */
    public QueryDeviceFileResponse queryDeviceFile(QueryDeviceFileRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceFileWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>The returned file information for this operation call does not contain download URLs. To obtain the download URL of a file, call <a href="https://help.aliyun.com/document_detail/112002.html">QueryDeviceFile</a>.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries information about all files that are uploaded to IoT Platform from a device.</p>
     * 
     * @param request QueryDeviceFileListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceFileListResponse
     */
    public QueryDeviceFileListResponse queryDeviceFileListWithOptions(QueryDeviceFileListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceFileList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceFileListResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>The returned file information for this operation call does not contain download URLs. To obtain the download URL of a file, call <a href="https://help.aliyun.com/document_detail/112002.html">QueryDeviceFile</a>.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries information about all files that are uploaded to IoT Platform from a device.</p>
     * 
     * @param request QueryDeviceFileListRequest
     * @return QueryDeviceFileListResponse
     */
    public QueryDeviceFileListResponse queryDeviceFileList(QueryDeviceFileListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceFileListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can add a device to a maximum of 10 groups.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries groups to which a device belongs.</p>
     * 
     * @param request QueryDeviceGroupByDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceGroupByDeviceResponse
     */
    public QueryDeviceGroupByDeviceResponse queryDeviceGroupByDeviceWithOptions(QueryDeviceGroupByDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceGroupByDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceGroupByDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can add a device to a maximum of 10 groups.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries groups to which a device belongs.</p>
     * 
     * @param request QueryDeviceGroupByDeviceRequest
     * @return QueryDeviceGroupByDeviceResponse
     */
    public QueryDeviceGroupByDeviceResponse queryDeviceGroupByDevice(QueryDeviceGroupByDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceGroupByDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries device groups by tag.</p>
     * 
     * @param request QueryDeviceGroupByTagsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceGroupByTagsResponse
     */
    public QueryDeviceGroupByTagsResponse queryDeviceGroupByTagsWithOptions(QueryDeviceGroupByTagsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tag)) {
            query.put("Tag", request.tag);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceGroupByTags"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceGroupByTagsResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries device groups by tag.</p>
     * 
     * @param request QueryDeviceGroupByTagsRequest
     * @return QueryDeviceGroupByTagsResponse
     */
    public QueryDeviceGroupByTagsResponse queryDeviceGroupByTags(QueryDeviceGroupByTagsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceGroupByTagsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 30 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of a group.</p>
     * 
     * @param request QueryDeviceGroupInfoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceGroupInfoResponse
     */
    public QueryDeviceGroupInfoResponse queryDeviceGroupInfoWithOptions(QueryDeviceGroupInfoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupType)) {
            query.put("GroupType", request.groupType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceGroupInfo"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceGroupInfoResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 30 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of a group.</p>
     * 
     * @param request QueryDeviceGroupInfoRequest
     * @return QueryDeviceGroupInfoResponse
     */
    public QueryDeviceGroupInfoResponse queryDeviceGroupInfo(QueryDeviceGroupInfoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceGroupInfoWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 100 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries groups by page.</p>
     * 
     * @param request QueryDeviceGroupListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceGroupListResponse
     */
    public QueryDeviceGroupListResponse queryDeviceGroupListWithOptions(QueryDeviceGroupListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupName)) {
            query.put("GroupName", request.groupName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupTypes)) {
            query.put("GroupTypes", request.groupTypes);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.superGroupId)) {
            query.put("SuperGroupId", request.superGroupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceGroupList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceGroupListResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 100 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries groups by page.</p>
     * 
     * @param request QueryDeviceGroupListRequest
     * @return QueryDeviceGroupListResponse
     */
    public QueryDeviceGroupListResponse queryDeviceGroupList(QueryDeviceGroupListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceGroupListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the tags of a group.</p>
     * 
     * @param request QueryDeviceGroupTagListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceGroupTagListResponse
     */
    public QueryDeviceGroupTagListResponse queryDeviceGroupTagListWithOptions(QueryDeviceGroupTagListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupType)) {
            query.put("GroupType", request.groupType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceGroupTagList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceGroupTagListResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the tags of a group.</p>
     * 
     * @param request QueryDeviceGroupTagListRequest
     * @return QueryDeviceGroupTagListResponse
     */
    public QueryDeviceGroupTagListResponse queryDeviceGroupTagList(QueryDeviceGroupTagListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceGroupTagListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/30561.html">Common request parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDeviceInfoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceInfoResponse
     */
    public QueryDeviceInfoResponse queryDeviceInfoWithOptions(QueryDeviceInfoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceInfo"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceInfoResponse());
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/30561.html">Common request parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDeviceInfoRequest
     * @return QueryDeviceInfoResponse
     */
    public QueryDeviceInfoResponse queryDeviceInfo(QueryDeviceInfoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceInfoWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDeviceListByDeviceGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceListByDeviceGroupResponse
     */
    public QueryDeviceListByDeviceGroupResponse queryDeviceListByDeviceGroupWithOptions(QueryDeviceListByDeviceGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceListByDeviceGroup"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceListByDeviceGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDeviceListByDeviceGroupRequest
     * @return QueryDeviceListByDeviceGroupResponse
     */
    public QueryDeviceListByDeviceGroupResponse queryDeviceListByDeviceGroup(QueryDeviceListByDeviceGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceListByDeviceGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can query only the event records that are generated in the last 30 days.<blockquote>
     * <p> The storage period of an event record is calculated from the day when the record is generated.</p>
     * </blockquote>
     * </li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the event records that are submitted by a specified device. These records include events that are verified and not verified by a specified Thing Specification Language (TSL) model.</p>
     * 
     * @param request QueryDeviceOriginalEventDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceOriginalEventDataResponse
     */
    public QueryDeviceOriginalEventDataResponse queryDeviceOriginalEventDataWithOptions(QueryDeviceOriginalEventDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.asc)) {
            query.put("Asc", request.asc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.identifier)) {
            query.put("Identifier", request.identifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextPageToken)) {
            query.put("NextPageToken", request.nextPageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceOriginalEventData"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceOriginalEventDataResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can query only the event records that are generated in the last 30 days.<blockquote>
     * <p> The storage period of an event record is calculated from the day when the record is generated.</p>
     * </blockquote>
     * </li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the event records that are submitted by a specified device. These records include events that are verified and not verified by a specified Thing Specification Language (TSL) model.</p>
     * 
     * @param request QueryDeviceOriginalEventDataRequest
     * @return QueryDeviceOriginalEventDataResponse
     */
    public QueryDeviceOriginalEventDataResponse queryDeviceOriginalEventData(QueryDeviceOriginalEventDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceOriginalEventDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can query only the property records that are generated within the previous 30 days.</p>
     * <blockquote>
     * <p> The data of a property is stored from the day when the data is generated.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the original property records that are submitted by a specified device. These records include the records of properties that passed and failed the verification of a specified Thing Specification Language (TSL) model.</p>
     * 
     * @param request QueryDeviceOriginalPropertyDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceOriginalPropertyDataResponse
     */
    public QueryDeviceOriginalPropertyDataResponse queryDeviceOriginalPropertyDataWithOptions(QueryDeviceOriginalPropertyDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.asc)) {
            query.put("Asc", request.asc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.identifier)) {
            query.put("Identifier", request.identifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextPageToken)) {
            query.put("NextPageToken", request.nextPageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceOriginalPropertyData"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceOriginalPropertyDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can query only the property records that are generated within the previous 30 days.</p>
     * <blockquote>
     * <p> The data of a property is stored from the day when the data is generated.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the original property records that are submitted by a specified device. These records include the records of properties that passed and failed the verification of a specified Thing Specification Language (TSL) model.</p>
     * 
     * @param request QueryDeviceOriginalPropertyDataRequest
     * @return QueryDeviceOriginalPropertyDataResponse
     */
    public QueryDeviceOriginalPropertyDataResponse queryDeviceOriginalPropertyData(QueryDeviceOriginalPropertyDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceOriginalPropertyDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the original property snapshots that are submitted by a specified device. These snapshots include properties that are verified and not verified by a specified Thing Specification Language (TSL) model.</p>
     * 
     * @param request QueryDeviceOriginalPropertyStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceOriginalPropertyStatusResponse
     */
    public QueryDeviceOriginalPropertyStatusResponse queryDeviceOriginalPropertyStatusWithOptions(QueryDeviceOriginalPropertyStatusRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.asc)) {
            query.put("Asc", request.asc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextPageToken)) {
            query.put("NextPageToken", request.nextPageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceOriginalPropertyStatus"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceOriginalPropertyStatusResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the original property snapshots that are submitted by a specified device. These snapshots include properties that are verified and not verified by a specified Thing Specification Language (TSL) model.</p>
     * 
     * @param request QueryDeviceOriginalPropertyStatusRequest
     * @return QueryDeviceOriginalPropertyStatusResponse
     */
    public QueryDeviceOriginalPropertyStatusResponse queryDeviceOriginalPropertyStatus(QueryDeviceOriginalPropertyStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceOriginalPropertyStatusWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can query only the service call records that are generated in the last 30 days.<blockquote>
     * <p> The storage period of a service call record is calculated from the day when the service is called.</p>
     * </blockquote>
     * </li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the original service records that are submitted by a specified device. These records include services that are verified and not verified by a specified Thing Specification Language (TSL) model.</p>
     * 
     * @param request QueryDeviceOriginalServiceDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceOriginalServiceDataResponse
     */
    public QueryDeviceOriginalServiceDataResponse queryDeviceOriginalServiceDataWithOptions(QueryDeviceOriginalServiceDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.asc)) {
            query.put("Asc", request.asc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.identifier)) {
            query.put("Identifier", request.identifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextPageToken)) {
            query.put("NextPageToken", request.nextPageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceOriginalServiceData"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceOriginalServiceDataResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You can query only the service call records that are generated in the last 30 days.<blockquote>
     * <p> The storage period of a service call record is calculated from the day when the service is called.</p>
     * </blockquote>
     * </li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the original service records that are submitted by a specified device. These records include services that are verified and not verified by a specified Thing Specification Language (TSL) model.</p>
     * 
     * @param request QueryDeviceOriginalServiceDataRequest
     * @return QueryDeviceOriginalServiceDataResponse
     */
    public QueryDeviceOriginalServiceDataResponse queryDeviceOriginalServiceData(QueryDeviceOriginalServiceDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceOriginalServiceDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDevicePropRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDevicePropResponse
     */
    public QueryDevicePropResponse queryDevicePropWithOptions(QueryDevicePropRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceProp"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDevicePropResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDevicePropRequest
     * @return QueryDevicePropResponse
     */
    public QueryDevicePropResponse queryDeviceProp(QueryDevicePropRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDevicePropWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>When you call this operation to query property records within a specified period, the number of records for a property at a point in time may reach the limit.**** The limit is specified by the <strong>PageSize</strong> parameter. In this case, the query stops. Some records of other properties may be not returned.**** You can check whether all records of a property are returned based on the NextValid repsonse parameter: </p>
     * <ul>
     * <li>If the value of the <strong>NextValid</strong> parameter is true, unretrieved records exist in the period that is indicated by the <strong>NextTime</strong> and <strong>EndTime</strong> parameter.<br>You can use the value of the <strong>NextTime</strong> response parameter as the value of the StartTime request parameter and call this operation again to query the rest records. You can call this operation multiple times until the value of the <strong>NextValid</strong> parameter is false.  &gt;  To retrieve all property records within a specified period, you can set the <strong>PageSize</strong> parameter to the maximum value. Then, call this operation multiple times until the value of the <strong>NextValid</strong> parameter is false.</li>
     * <li>If the value of the <strong>NextValid</strong> parameter is false, all property records are returned.</li>
     * </ul>
     * <h2>Limits</h2>
     * <ul>
     * <li>A maximum of 10 properties can be queried at a time. A maximum of 100 records can be queried for each property.</li>
     * <li>You can query property data that is generated within the last 30 days.<blockquote>
     * <p>The storage period of a property record is calculated from the day when the property record was generated.</p>
     * </blockquote>
     * </li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries multiple properties that are submitted by a device within a specified period.</p>
     * 
     * @param request QueryDevicePropertiesDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDevicePropertiesDataResponse
     */
    public QueryDevicePropertiesDataResponse queryDevicePropertiesDataWithOptions(QueryDevicePropertiesDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.asc)) {
            query.put("Asc", request.asc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.identifier)) {
            query.put("Identifier", request.identifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDevicePropertiesData"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDevicePropertiesDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>When you call this operation to query property records within a specified period, the number of records for a property at a point in time may reach the limit.**** The limit is specified by the <strong>PageSize</strong> parameter. In this case, the query stops. Some records of other properties may be not returned.**** You can check whether all records of a property are returned based on the NextValid repsonse parameter: </p>
     * <ul>
     * <li>If the value of the <strong>NextValid</strong> parameter is true, unretrieved records exist in the period that is indicated by the <strong>NextTime</strong> and <strong>EndTime</strong> parameter.<br>You can use the value of the <strong>NextTime</strong> response parameter as the value of the StartTime request parameter and call this operation again to query the rest records. You can call this operation multiple times until the value of the <strong>NextValid</strong> parameter is false.  &gt;  To retrieve all property records within a specified period, you can set the <strong>PageSize</strong> parameter to the maximum value. Then, call this operation multiple times until the value of the <strong>NextValid</strong> parameter is false.</li>
     * <li>If the value of the <strong>NextValid</strong> parameter is false, all property records are returned.</li>
     * </ul>
     * <h2>Limits</h2>
     * <ul>
     * <li>A maximum of 10 properties can be queried at a time. A maximum of 100 records can be queried for each property.</li>
     * <li>You can query property data that is generated within the last 30 days.<blockquote>
     * <p>The storage period of a property record is calculated from the day when the property record was generated.</p>
     * </blockquote>
     * </li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries multiple properties that are submitted by a device within a specified period.</p>
     * 
     * @param request QueryDevicePropertiesDataRequest
     * @return QueryDevicePropertiesDataResponse
     */
    public QueryDevicePropertiesDataResponse queryDevicePropertiesData(QueryDevicePropertiesDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDevicePropertiesDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>If a device or a digital twin node has multiple properties, you can call this operation to query the data of the properties multiple times. You must specify a value for the <strong>Identifier</strong> parameter each time you call the operation. You can also call the <a href="https://help.aliyun.com/document_detail/99237.html">QueryDevicePropertiesData</a> operation and specify multiple values for the <strong>Identifier</strong> parameter to query the data of the properties.</p>
     * <h2>Limits</h2>
     * <p>You can query only property data that is generated within the previous 30 days. </p>
     * <blockquote>
     * <p> The data of a property is stored from the day when the data is generated.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the data of a property in a device or a digital twin node within a specified period of time.</p>
     * 
     * @param request QueryDevicePropertyDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDevicePropertyDataResponse
     */
    public QueryDevicePropertyDataResponse queryDevicePropertyDataWithOptions(QueryDevicePropertyDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.asc)) {
            query.put("Asc", request.asc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.identifier)) {
            query.put("Identifier", request.identifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDevicePropertyData"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDevicePropertyDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>If a device or a digital twin node has multiple properties, you can call this operation to query the data of the properties multiple times. You must specify a value for the <strong>Identifier</strong> parameter each time you call the operation. You can also call the <a href="https://help.aliyun.com/document_detail/99237.html">QueryDevicePropertiesData</a> operation and specify multiple values for the <strong>Identifier</strong> parameter to query the data of the properties.</p>
     * <h2>Limits</h2>
     * <p>You can query only property data that is generated within the previous 30 days. </p>
     * <blockquote>
     * <p> The data of a property is stored from the day when the data is generated.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the data of a property in a device or a digital twin node within a specified period of time.</p>
     * 
     * @param request QueryDevicePropertyDataRequest
     * @return QueryDevicePropertyDataResponse
     */
    public QueryDevicePropertyDataResponse queryDevicePropertyData(QueryDevicePropertyDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDevicePropertyDataWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>To query the property data of a digital twin node, you must set the <strong>IotId</strong> parameter to the ID of the digital twin node.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 200 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries all the property snapshots of a device or digital twin node.</p>
     * 
     * @param request QueryDevicePropertyStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDevicePropertyStatusResponse
     */
    public QueryDevicePropertyStatusResponse queryDevicePropertyStatusWithOptions(QueryDevicePropertyStatusRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockId)) {
            query.put("FunctionBlockId", request.functionBlockId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDevicePropertyStatus"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDevicePropertyStatusResponse());
    }

    /**
     * <b>description</b> :
     * <p>To query the property data of a digital twin node, you must set the <strong>IotId</strong> parameter to the ID of the digital twin node.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 200 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries all the property snapshots of a device or digital twin node.</p>
     * 
     * @param request QueryDevicePropertyStatusRequest
     * @return QueryDevicePropertyStatusResponse
     */
    public QueryDevicePropertyStatusResponse queryDevicePropertyStatus(QueryDevicePropertyStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDevicePropertyStatusWithOptions(request, runtime);
    }

    /**
     * @param request QueryDeviceProvisioningRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceProvisioningResponse
     */
    public QueryDeviceProvisioningResponse queryDeviceProvisioningWithOptions(QueryDeviceProvisioningRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceProvisioning"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceProvisioningResponse());
    }

    /**
     * @param request QueryDeviceProvisioningRequest
     * @return QueryDeviceProvisioningResponse
     */
    public QueryDeviceProvisioningResponse queryDeviceProvisioning(QueryDeviceProvisioningRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceProvisioningWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can query only the service call records of the previous 30 days.</p>
     * <blockquote>
     * <p> The storage period of a service call record is calculated from the day when the service is called.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the service call records of a specified device.</p>
     * 
     * @param request QueryDeviceServiceDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceServiceDataResponse
     */
    public QueryDeviceServiceDataResponse queryDeviceServiceDataWithOptions(QueryDeviceServiceDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.asc)) {
            query.put("Asc", request.asc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.identifier)) {
            query.put("Identifier", request.identifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceServiceData"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceServiceDataResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can query only the service call records of the previous 30 days.</p>
     * <blockquote>
     * <p> The storage period of a service call record is calculated from the day when the service is called.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the service call records of a specified device.</p>
     * 
     * @param request QueryDeviceServiceDataRequest
     * @return QueryDeviceServiceDataResponse
     */
    public QueryDeviceServiceDataResponse queryDeviceServiceData(QueryDeviceServiceDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceServiceDataWithOptions(request, runtime);
    }

    /**
     * @param request QueryDeviceSpeechRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceSpeechResponse
     */
    public QueryDeviceSpeechResponse queryDeviceSpeechWithOptions(QueryDeviceSpeechRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            body.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceSpeech"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceSpeechResponse());
    }

    /**
     * @param request QueryDeviceSpeechRequest
     * @return QueryDeviceSpeechResponse
     */
    public QueryDeviceSpeechResponse queryDeviceSpeech(QueryDeviceSpeechRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceSpeechWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDeviceStatisticsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceStatisticsResponse
     */
    public QueryDeviceStatisticsResponse queryDeviceStatisticsWithOptions(QueryDeviceStatisticsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceStatistics"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceStatisticsResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDeviceStatisticsRequest
     * @return QueryDeviceStatisticsResponse
     */
    public QueryDeviceStatisticsResponse queryDeviceStatistics(QueryDeviceStatisticsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceStatisticsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this operation up to 100 times per second per account.</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDeviceSubTopicRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceSubTopicResponse
     */
    public QueryDeviceSubTopicResponse queryDeviceSubTopicWithOptions(QueryDeviceSubTopicRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceSubTopic"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceSubTopicResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this operation up to 100 times per second per account.</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryDeviceSubTopicRequest
     * @return QueryDeviceSubTopicResponse
     */
    public QueryDeviceSubTopicResponse queryDeviceSubTopic(QueryDeviceSubTopicRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceSubTopicWithOptions(request, runtime);
    }

    /**
     * @param request QueryDeviceTunnelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDeviceTunnelResponse
     */
    public QueryDeviceTunnelResponse queryDeviceTunnelWithOptions(QueryDeviceTunnelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tunnelId)) {
            query.put("TunnelId", request.tunnelId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDeviceTunnel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDeviceTunnelResponse());
    }

    /**
     * @param request QueryDeviceTunnelRequest
     * @return QueryDeviceTunnelResponse
     */
    public QueryDeviceTunnelResponse queryDeviceTunnel(QueryDeviceTunnelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDeviceTunnelWithOptions(request, runtime);
    }

    /**
     * @param request QueryDevicesHotStorageDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDevicesHotStorageDataResponse
     */
    public QueryDevicesHotStorageDataResponse queryDevicesHotStorageDataWithOptions(QueryDevicesHotStorageDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.asc)) {
            query.put("Asc", request.asc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.identifier)) {
            query.put("Identifier", request.identifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextPageToken)) {
            query.put("NextPageToken", request.nextPageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userTopic)) {
            query.put("UserTopic", request.userTopic);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDevicesHotStorageData"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDevicesHotStorageDataResponse());
    }

    /**
     * @param request QueryDevicesHotStorageDataRequest
     * @return QueryDevicesHotStorageDataResponse
     */
    public QueryDevicesHotStorageDataResponse queryDevicesHotStorageData(QueryDevicesHotStorageDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDevicesHotStorageDataWithOptions(request, runtime);
    }

    /**
     * @param request QueryDevicesHotStorageDataStatusRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDevicesHotStorageDataStatusResponse
     */
    public QueryDevicesHotStorageDataStatusResponse queryDevicesHotStorageDataStatusWithOptions(QueryDevicesHotStorageDataStatusRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.asc)) {
            query.put("Asc", request.asc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextPageToken)) {
            query.put("NextPageToken", request.nextPageToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userTopic)) {
            query.put("UserTopic", request.userTopic);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDevicesHotStorageDataStatus"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDevicesHotStorageDataStatusResponse());
    }

    /**
     * @param request QueryDevicesHotStorageDataStatusRequest
     * @return QueryDevicesHotStorageDataStatusResponse
     */
    public QueryDevicesHotStorageDataStatusResponse queryDevicesHotStorageDataStatus(QueryDevicesHotStorageDataStatusRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDevicesHotStorageDataStatusWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>The dynamic group feature is available for public instances and Enterprise Edition instances in the China (Shanghai) region. For more information, see <a href="https://help.aliyun.com/document_detail/147356.html">Manage instances</a>.</li>
     * <li>Each Alibaba Cloud account can run up to 50 queries per second (QPS).
     * **
     * <strong>Note</strong>The RAM users of an Alibaba Cloud account share the quota of the account.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the devices in a dynamic group</p>
     * 
     * @param request QueryDynamicGroupDevicesRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryDynamicGroupDevicesResponse
     */
    public QueryDynamicGroupDevicesResponse queryDynamicGroupDevicesWithOptions(QueryDynamicGroupDevicesRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fuzzyName)) {
            query.put("FuzzyName", request.fuzzyName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nextToken)) {
            query.put("NextToken", request.nextToken);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            query.put("Status", request.status);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryDynamicGroupDevices"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryDynamicGroupDevicesResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>The dynamic group feature is available for public instances and Enterprise Edition instances in the China (Shanghai) region. For more information, see <a href="https://help.aliyun.com/document_detail/147356.html">Manage instances</a>.</li>
     * <li>Each Alibaba Cloud account can run up to 50 queries per second (QPS).
     * **
     * <strong>Note</strong>The RAM users of an Alibaba Cloud account share the quota of the account.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries the devices in a dynamic group</p>
     * 
     * @param request QueryDynamicGroupDevicesRequest
     * @return QueryDynamicGroupDevicesResponse
     */
    public QueryDynamicGroupDevicesResponse queryDynamicGroupDevices(QueryDynamicGroupDevicesRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryDynamicGroupDevicesWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>A single Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * @param request QueryEdgeDriverRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryEdgeDriverResponse
     */
    public QueryEdgeDriverResponse queryEdgeDriverWithOptions(QueryEdgeDriverRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverName)) {
            query.put("DriverName", request.driverName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryEdgeDriver"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryEdgeDriverResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>A single Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * @param request QueryEdgeDriverRequest
     * @return QueryEdgeDriverResponse
     */
    public QueryEdgeDriverResponse queryEdgeDriver(QueryEdgeDriverRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryEdgeDriverWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryEdgeDriverVersionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryEdgeDriverVersionResponse
     */
    public QueryEdgeDriverVersionResponse queryEdgeDriverVersionWithOptions(QueryEdgeDriverVersionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverVersion)) {
            query.put("DriverVersion", request.driverVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.versionState)) {
            query.put("VersionState", request.versionState);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryEdgeDriverVersion"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryEdgeDriverVersionResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryEdgeDriverVersionRequest
     * @return QueryEdgeDriverVersionResponse
     */
    public QueryEdgeDriverVersionResponse queryEdgeDriverVersion(QueryEdgeDriverVersionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryEdgeDriverVersionWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding exclusive request parameters, you must specify common request parameters when calling this API operation. For more information about common request parameters, see <a href="https://help.aliyun.com/document_detail/30561.html">Common parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * @param request QueryEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryEdgeInstanceResponse
     */
    public QueryEdgeInstanceResponse queryEdgeInstanceWithOptions(QueryEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryEdgeInstanceResponse());
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding exclusive request parameters, you must specify common request parameters when calling this API operation. For more information about common request parameters, see <a href="https://help.aliyun.com/document_detail/30561.html">Common parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>A single Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * @param request QueryEdgeInstanceRequest
     * @return QueryEdgeInstanceResponse
     */
    public QueryEdgeInstanceResponse queryEdgeInstance(QueryEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * @param request QueryEdgeInstanceChannelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryEdgeInstanceChannelResponse
     */
    public QueryEdgeInstanceChannelResponse queryEdgeInstanceChannelWithOptions(QueryEdgeInstanceChannelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.channelName)) {
            query.put("ChannelName", request.channelName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryEdgeInstanceChannel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryEdgeInstanceChannelResponse());
    }

    /**
     * @param request QueryEdgeInstanceChannelRequest
     * @return QueryEdgeInstanceChannelResponse
     */
    public QueryEdgeInstanceChannelResponse queryEdgeInstanceChannel(QueryEdgeInstanceChannelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryEdgeInstanceChannelWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the devices that are bound to an edge instance.</p>
     * 
     * @param request QueryEdgeInstanceDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryEdgeInstanceDeviceResponse
     */
    public QueryEdgeInstanceDeviceResponse queryEdgeInstanceDeviceWithOptions(QueryEdgeInstanceDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryEdgeInstanceDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryEdgeInstanceDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the devices that are bound to an edge instance.</p>
     * 
     * @param request QueryEdgeInstanceDeviceRequest
     * @return QueryEdgeInstanceDeviceResponse
     */
    public QueryEdgeInstanceDeviceResponse queryEdgeInstanceDevice(QueryEdgeInstanceDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryEdgeInstanceDeviceWithOptions(request, runtime);
    }

    /**
     * @param request QueryEdgeInstanceDeviceByDriverRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryEdgeInstanceDeviceByDriverResponse
     */
    public QueryEdgeInstanceDeviceByDriverResponse queryEdgeInstanceDeviceByDriverWithOptions(QueryEdgeInstanceDeviceByDriverRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryEdgeInstanceDeviceByDriver"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryEdgeInstanceDeviceByDriverResponse());
    }

    /**
     * @param request QueryEdgeInstanceDeviceByDriverRequest
     * @return QueryEdgeInstanceDeviceByDriverResponse
     */
    public QueryEdgeInstanceDeviceByDriverResponse queryEdgeInstanceDeviceByDriver(QueryEdgeInstanceDeviceByDriverRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryEdgeInstanceDeviceByDriverWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryEdgeInstanceDriverRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryEdgeInstanceDriverResponse
     */
    public QueryEdgeInstanceDriverResponse queryEdgeInstanceDriverWithOptions(QueryEdgeInstanceDriverRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryEdgeInstanceDriver"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryEdgeInstanceDriverResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryEdgeInstanceDriverRequest
     * @return QueryEdgeInstanceDriverResponse
     */
    public QueryEdgeInstanceDriverResponse queryEdgeInstanceDriver(QueryEdgeInstanceDriverRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryEdgeInstanceDriverWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryEdgeInstanceGatewayRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryEdgeInstanceGatewayResponse
     */
    public QueryEdgeInstanceGatewayResponse queryEdgeInstanceGatewayWithOptions(QueryEdgeInstanceGatewayRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryEdgeInstanceGateway"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryEdgeInstanceGatewayResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryEdgeInstanceGatewayRequest
     * @return QueryEdgeInstanceGatewayResponse
     */
    public QueryEdgeInstanceGatewayResponse queryEdgeInstanceGateway(QueryEdgeInstanceGatewayRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryEdgeInstanceGatewayWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryEdgeInstanceHistoricDeploymentRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryEdgeInstanceHistoricDeploymentResponse
     */
    public QueryEdgeInstanceHistoricDeploymentResponse queryEdgeInstanceHistoricDeploymentWithOptions(QueryEdgeInstanceHistoricDeploymentRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryEdgeInstanceHistoricDeployment"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryEdgeInstanceHistoricDeploymentResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryEdgeInstanceHistoricDeploymentRequest
     * @return QueryEdgeInstanceHistoricDeploymentResponse
     */
    public QueryEdgeInstanceHistoricDeploymentResponse queryEdgeInstanceHistoricDeployment(QueryEdgeInstanceHistoricDeploymentRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryEdgeInstanceHistoricDeploymentWithOptions(request, runtime);
    }

    /**
     * @param request QueryEdgeInstanceMessageRoutingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryEdgeInstanceMessageRoutingResponse
     */
    public QueryEdgeInstanceMessageRoutingResponse queryEdgeInstanceMessageRoutingWithOptions(QueryEdgeInstanceMessageRoutingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryEdgeInstanceMessageRouting"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryEdgeInstanceMessageRoutingResponse());
    }

    /**
     * @param request QueryEdgeInstanceMessageRoutingRequest
     * @return QueryEdgeInstanceMessageRoutingResponse
     */
    public QueryEdgeInstanceMessageRoutingResponse queryEdgeInstanceMessageRouting(QueryEdgeInstanceMessageRoutingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryEdgeInstanceMessageRoutingWithOptions(request, runtime);
    }

    /**
     * @param request QueryEdgeInstanceSceneRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryEdgeInstanceSceneRuleResponse
     */
    public QueryEdgeInstanceSceneRuleResponse queryEdgeInstanceSceneRuleWithOptions(QueryEdgeInstanceSceneRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryEdgeInstanceSceneRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryEdgeInstanceSceneRuleResponse());
    }

    /**
     * @param request QueryEdgeInstanceSceneRuleRequest
     * @return QueryEdgeInstanceSceneRuleResponse
     */
    public QueryEdgeInstanceSceneRuleResponse queryEdgeInstanceSceneRule(QueryEdgeInstanceSceneRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryEdgeInstanceSceneRuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries multiple devices that are added at the same time by application ID.</p>
     * 
     * @param request QueryImportedDeviceByApplyIdRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryImportedDeviceByApplyIdResponse
     */
    public QueryImportedDeviceByApplyIdResponse queryImportedDeviceByApplyIdWithOptions(QueryImportedDeviceByApplyIdRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.applyId)) {
            query.put("ApplyId", request.applyId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNo)) {
            query.put("PageNo", request.pageNo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryImportedDeviceByApplyId"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryImportedDeviceByApplyIdResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries multiple devices that are added at the same time by application ID.</p>
     * 
     * @param request QueryImportedDeviceByApplyIdRequest
     * @return QueryImportedDeviceByApplyIdResponse
     */
    public QueryImportedDeviceByApplyIdResponse queryImportedDeviceByApplyId(QueryImportedDeviceByApplyIdRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryImportedDeviceByApplyIdWithOptions(request, runtime);
    }

    /**
     * @param request QueryJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryJobResponse
     */
    public QueryJobResponse queryJobWithOptions(QueryJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryJobResponse());
    }

    /**
     * @param request QueryJobRequest
     * @return QueryJobResponse
     */
    public QueryJobResponse queryJob(QueryJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryJobWithOptions(request, runtime);
    }

    /**
     * @param request QueryJobStatisticsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryJobStatisticsResponse
     */
    public QueryJobStatisticsResponse queryJobStatisticsWithOptions(QueryJobStatisticsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, String> query = com.aliyun.openapiutil.Client.query(com.aliyun.teautil.Common.toMap(request));
        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryJobStatistics"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "GET"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryJobStatisticsResponse());
    }

    /**
     * @param request QueryJobStatisticsRequest
     * @return QueryJobStatisticsResponse
     */
    public QueryJobStatisticsResponse queryJobStatistics(QueryJobStatisticsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryJobStatisticsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the devices that are bound to a license.</p>
     * 
     * @param request QueryLicenseDeviceListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryLicenseDeviceListResponse
     */
    public QueryLicenseDeviceListResponse queryLicenseDeviceListWithOptions(QueryLicenseDeviceListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.licenseCode)) {
            query.put("LicenseCode", request.licenseCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            query.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryLicenseDeviceList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryLicenseDeviceListResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the devices that are bound to a license.</p>
     * 
     * @param request QueryLicenseDeviceListRequest
     * @return QueryLicenseDeviceListResponse
     */
    public QueryLicenseDeviceListResponse queryLicenseDeviceList(QueryLicenseDeviceListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryLicenseDeviceListWithOptions(request, runtime);
    }

    /**
     * @param request QueryLoRaJoinPermissionsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryLoRaJoinPermissionsResponse
     */
    public QueryLoRaJoinPermissionsResponse queryLoRaJoinPermissionsWithOptions(QueryLoRaJoinPermissionsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryLoRaJoinPermissions"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryLoRaJoinPermissionsResponse());
    }

    /**
     * @param request QueryLoRaJoinPermissionsRequest
     * @return QueryLoRaJoinPermissionsResponse
     */
    public QueryLoRaJoinPermissionsResponse queryLoRaJoinPermissions(QueryLoRaJoinPermissionsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryLoRaJoinPermissionsWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Queries the details of an upstream or downstream device message. The details include the content, time when the message was created, and name of the topic from which the message is sent.</p>
     * 
     * @param request QueryMessageInfoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryMessageInfoResponse
     */
    public QueryMessageInfoResponse queryMessageInfoWithOptions(QueryMessageInfoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.uniMsgId)) {
            query.put("UniMsgId", request.uniMsgId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryMessageInfo"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryMessageInfoResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Queries the details of an upstream or downstream device message. The details include the content, time when the message was created, and name of the topic from which the message is sent.</p>
     * 
     * @param request QueryMessageInfoRequest
     * @return QueryMessageInfoResponse
     */
    public QueryMessageInfoResponse queryMessageInfo(QueryMessageInfoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryMessageInfoWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryOTAFirmwareRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryOTAFirmwareResponse
     */
    public QueryOTAFirmwareResponse queryOTAFirmwareWithOptions(QueryOTAFirmwareRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.firmwareId)) {
            query.put("FirmwareId", request.firmwareId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryOTAFirmware"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryOTAFirmwareResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryOTAFirmwareRequest
     * @return QueryOTAFirmwareResponse
     */
    public QueryOTAFirmwareResponse queryOTAFirmware(QueryOTAFirmwareRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryOTAFirmwareWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>After you call the <a href="https://help.aliyun.com/document_detail/147480.html">CreateOTAVerifyJob</a>, <a href="https://help.aliyun.com/document_detail/147496.html">CreateOTAStaticUpgradeJob</a>, or <a href="https://help.aliyun.com/document_detail/147887.html">CreateOTADynamicUpgradeJob</a> API operation to create an update batch, the <strong>JobId</strong> parameter is returned. You can use this parameter to query the details of the update batch.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of an update batch.</p>
     * 
     * @param request QueryOTAJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryOTAJobResponse
     */
    public QueryOTAJobResponse queryOTAJobWithOptions(QueryOTAJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryOTAJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryOTAJobResponse());
    }

    /**
     * <b>description</b> :
     * <p>After you call the <a href="https://help.aliyun.com/document_detail/147480.html">CreateOTAVerifyJob</a>, <a href="https://help.aliyun.com/document_detail/147496.html">CreateOTAStaticUpgradeJob</a>, or <a href="https://help.aliyun.com/document_detail/147887.html">CreateOTADynamicUpgradeJob</a> API operation to create an update batch, the <strong>JobId</strong> parameter is returned. You can use this parameter to query the details of the update batch.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the details of an update batch.</p>
     * 
     * @param request QueryOTAJobRequest
     * @return QueryOTAJobResponse
     */
    public QueryOTAJobResponse queryOTAJob(QueryOTAJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryOTAJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the information of multiple devices that you have registered.</p>
     * 
     * @param request QueryPageByApplyIdRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryPageByApplyIdResponse
     */
    public QueryPageByApplyIdResponse queryPageByApplyIdWithOptions(QueryPageByApplyIdRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.applyId)) {
            query.put("ApplyId", request.applyId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryPageByApplyId"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryPageByApplyIdResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the information of multiple devices that you have registered.</p>
     * 
     * @param request QueryPageByApplyIdRequest
     * @return QueryPageByApplyIdResponse
     */
    public QueryPageByApplyIdResponse queryPageByApplyId(QueryPageByApplyIdRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryPageByApplyIdWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryProductRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryProductResponse
     */
    public QueryProductResponse queryProductWithOptions(QueryProductRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryProduct"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryProductResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryProductRequest
     * @return QueryProductResponse
     */
    public QueryProductResponse queryProduct(QueryProductRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryProductWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 30 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the X.509 certificate information of a product.</p>
     * 
     * @param request QueryProductCertInfoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryProductCertInfoResponse
     */
    public QueryProductCertInfoResponse queryProductCertInfoWithOptions(QueryProductCertInfoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryProductCertInfo"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryProductCertInfoResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 30 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the X.509 certificate information of a product.</p>
     * 
     * @param request QueryProductCertInfoRequest
     * @return QueryProductCertInfoResponse
     */
    public QueryProductCertInfoResponse queryProductCertInfo(QueryProductCertInfoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryProductCertInfoWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <ul>
     * <li>Each Alibaba Cloud account can run up to 50 queries per second (QPS).<blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * </li>
     * <li>If the product of the value of the <strong>CurrentPage</strong> parameter and the value of the <strong>PageSize</strong> parameter is greater than or equal to 100,000, the QPS of this operation decreases.
     * In this case, each Alibaba Cloud account can run up to 2 QPS.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries all products.</p>
     * 
     * @param request QueryProductListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryProductListResponse
     */
    public QueryProductListResponse queryProductListWithOptions(QueryProductListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.aliyunCommodityCode)) {
            query.put("AliyunCommodityCode", request.aliyunCommodityCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryProductList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryProductListResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <ul>
     * <li>Each Alibaba Cloud account can run up to 50 queries per second (QPS).<blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * </li>
     * <li>If the product of the value of the <strong>CurrentPage</strong> parameter and the value of the <strong>PageSize</strong> parameter is greater than or equal to 100,000, the QPS of this operation decreases.
     * In this case, each Alibaba Cloud account can run up to 2 QPS.</li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Queries all products.</p>
     * 
     * @param request QueryProductListRequest
     * @return QueryProductListResponse
     */
    public QueryProductListResponse queryProductList(QueryProductListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryProductListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 3 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the topic categories of a specified product.</p>
     * 
     * @param request QueryProductTopicRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryProductTopicResponse
     */
    public QueryProductTopicResponse queryProductTopicWithOptions(QueryProductTopicRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryProductTopic"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryProductTopicResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 3 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the topic categories of a specified product.</p>
     * 
     * @param request QueryProductTopicRequest
     * @return QueryProductTopicResponse
     */
    public QueryProductTopicResponse queryProductTopic(QueryProductTopicRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryProductTopicWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to three times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the devices to which a project is shared.</p>
     * 
     * @param request QueryProjectShareDeviceListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryProjectShareDeviceListResponse
     */
    public QueryProjectShareDeviceListResponse queryProjectShareDeviceListWithOptions(QueryProjectShareDeviceListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryProjectShareDeviceList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryProjectShareDeviceListResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to three times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the devices to which a project is shared.</p>
     * 
     * @param request QueryProjectShareDeviceListRequest
     * @return QueryProjectShareDeviceListResponse
     */
    public QueryProjectShareDeviceListResponse queryProjectShareDeviceList(QueryProjectShareDeviceListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryProjectShareDeviceListWithOptions(request, runtime);
    }

    /**
     * @param request QuerySceneRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySceneRuleResponse
     */
    public QuerySceneRuleResponse querySceneRuleWithOptions(QuerySceneRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleName)) {
            query.put("RuleName", request.ruleName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySceneRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySceneRuleResponse());
    }

    /**
     * @param request QuerySceneRuleRequest
     * @return QuerySceneRuleResponse
     */
    public QuerySceneRuleResponse querySceneRule(QuerySceneRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySceneRuleWithOptions(request, runtime);
    }

    /**
     * @param request QuerySchedulePeriodListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySchedulePeriodListResponse
     */
    public QuerySchedulePeriodListResponse querySchedulePeriodListWithOptions(QuerySchedulePeriodListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scheduleCode)) {
            body.put("ScheduleCode", request.scheduleCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySchedulePeriodList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySchedulePeriodListResponse());
    }

    /**
     * @param request QuerySchedulePeriodListRequest
     * @return QuerySchedulePeriodListResponse
     */
    public QuerySchedulePeriodListResponse querySchedulePeriodList(QuerySchedulePeriodListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySchedulePeriodListWithOptions(request, runtime);
    }

    /**
     * @param request QueryShareProductNameByProductKeyRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryShareProductNameByProductKeyResponse
     */
    public QueryShareProductNameByProductKeyResponse queryShareProductNameByProductKeyWithOptions(QueryShareProductNameByProductKeyRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shareTaskCode)) {
            body.put("ShareTaskCode", request.shareTaskCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryShareProductNameByProductKey"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryShareProductNameByProductKeyResponse());
    }

    /**
     * @param request QueryShareProductNameByProductKeyRequest
     * @return QueryShareProductNameByProductKeyResponse
     */
    public QueryShareProductNameByProductKeyResponse queryShareProductNameByProductKey(QueryShareProductNameByProductKeyRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryShareProductNameByProductKeyWithOptions(request, runtime);
    }

    /**
     * @param request QuerySharePromotionActivityAuditResultRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySharePromotionActivityAuditResultResponse
     */
    public QuerySharePromotionActivityAuditResultResponse querySharePromotionActivityAuditResultWithOptions(QuerySharePromotionActivityAuditResultRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sharePromotionActivityId)) {
            body.put("SharePromotionActivityId", request.sharePromotionActivityId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shareTaskCode)) {
            body.put("ShareTaskCode", request.shareTaskCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySharePromotionActivityAuditResult"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySharePromotionActivityAuditResultResponse());
    }

    /**
     * @param request QuerySharePromotionActivityAuditResultRequest
     * @return QuerySharePromotionActivityAuditResultResponse
     */
    public QuerySharePromotionActivityAuditResultResponse querySharePromotionActivityAuditResult(QuerySharePromotionActivityAuditResultRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySharePromotionActivityAuditResultWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to three times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the devices in a sharing task.</p>
     * 
     * @param request QueryShareTaskDeviceListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryShareTaskDeviceListResponse
     */
    public QueryShareTaskDeviceListResponse queryShareTaskDeviceListWithOptions(QueryShareTaskDeviceListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shareTaskId)) {
            body.put("ShareTaskId", request.shareTaskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryShareTaskDeviceList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryShareTaskDeviceListResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to three times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the devices in a sharing task.</p>
     * 
     * @param request QueryShareTaskDeviceListRequest
     * @return QueryShareTaskDeviceListResponse
     */
    public QueryShareTaskDeviceListResponse queryShareTaskDeviceList(QueryShareTaskDeviceListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryShareTaskDeviceListWithOptions(request, runtime);
    }

    /**
     * @param request QuerySolutionDeviceGroupPageRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySolutionDeviceGroupPageResponse
     */
    public QuerySolutionDeviceGroupPageResponse querySolutionDeviceGroupPageWithOptions(QuerySolutionDeviceGroupPageRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.fuzzyGroupName)) {
            query.put("FuzzyGroupName", request.fuzzyGroupName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            query.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectCode)) {
            query.put("ProjectCode", request.projectCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySolutionDeviceGroupPage"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySolutionDeviceGroupPageResponse());
    }

    /**
     * @param request QuerySolutionDeviceGroupPageRequest
     * @return QuerySolutionDeviceGroupPageResponse
     */
    public QuerySolutionDeviceGroupPageResponse querySolutionDeviceGroupPage(QuerySolutionDeviceGroupPageRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySolutionDeviceGroupPageWithOptions(request, runtime);
    }

    /**
     * @param request QuerySoundCodeLabelBatchFailedResultRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySoundCodeLabelBatchFailedResultResponse
     */
    public QuerySoundCodeLabelBatchFailedResultResponse querySoundCodeLabelBatchFailedResultWithOptions(QuerySoundCodeLabelBatchFailedResultRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.batchCode)) {
            body.put("BatchCode", request.batchCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySoundCodeLabelBatchFailedResult"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySoundCodeLabelBatchFailedResultResponse());
    }

    /**
     * @param request QuerySoundCodeLabelBatchFailedResultRequest
     * @return QuerySoundCodeLabelBatchFailedResultResponse
     */
    public QuerySoundCodeLabelBatchFailedResultResponse querySoundCodeLabelBatchFailedResult(QuerySoundCodeLabelBatchFailedResultRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySoundCodeLabelBatchFailedResultWithOptions(request, runtime);
    }

    /**
     * @param request QuerySoundCodeLabelBatchListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySoundCodeLabelBatchListResponse
     */
    public QuerySoundCodeLabelBatchListResponse querySoundCodeLabelBatchListWithOptions(QuerySoundCodeLabelBatchListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scheduleCode)) {
            body.put("ScheduleCode", request.scheduleCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySoundCodeLabelBatchList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySoundCodeLabelBatchListResponse());
    }

    /**
     * @param request QuerySoundCodeLabelBatchListRequest
     * @return QuerySoundCodeLabelBatchListResponse
     */
    public QuerySoundCodeLabelBatchListResponse querySoundCodeLabelBatchList(QuerySoundCodeLabelBatchListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySoundCodeLabelBatchListWithOptions(request, runtime);
    }

    /**
     * @param request QuerySoundCodeLabelListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySoundCodeLabelListResponse
     */
    public QuerySoundCodeLabelListResponse querySoundCodeLabelListWithOptions(QuerySoundCodeLabelListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scheduleCode)) {
            body.put("ScheduleCode", request.scheduleCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySoundCodeLabelList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySoundCodeLabelListResponse());
    }

    /**
     * @param request QuerySoundCodeLabelListRequest
     * @return QuerySoundCodeLabelListResponse
     */
    public QuerySoundCodeLabelListResponse querySoundCodeLabelList(QuerySoundCodeLabelListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySoundCodeLabelListWithOptions(request, runtime);
    }

    /**
     * @param request QuerySoundCodeListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySoundCodeListResponse
     */
    public QuerySoundCodeListResponse querySoundCodeListWithOptions(QuerySoundCodeListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySoundCodeList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySoundCodeListResponse());
    }

    /**
     * @param request QuerySoundCodeListRequest
     * @return QuerySoundCodeListResponse
     */
    public QuerySoundCodeListResponse querySoundCodeList(QuerySoundCodeListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySoundCodeListWithOptions(request, runtime);
    }

    /**
     * @param request QuerySoundCodeScheduleListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySoundCodeScheduleListResponse
     */
    public QuerySoundCodeScheduleListResponse querySoundCodeScheduleListWithOptions(QuerySoundCodeScheduleListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySoundCodeScheduleList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySoundCodeScheduleListResponse());
    }

    /**
     * @param request QuerySoundCodeScheduleListRequest
     * @return QuerySoundCodeScheduleListResponse
     */
    public QuerySoundCodeScheduleListResponse querySoundCodeScheduleList(QuerySoundCodeScheduleListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySoundCodeScheduleListWithOptions(request, runtime);
    }

    /**
     * @param request QuerySpeechRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySpeechResponse
     */
    public QuerySpeechResponse querySpeechWithOptions(QuerySpeechRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechCode)) {
            body.put("SpeechCode", request.speechCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySpeech"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySpeechResponse());
    }

    /**
     * @param request QuerySpeechRequest
     * @return QuerySpeechResponse
     */
    public QuerySpeechResponse querySpeech(QuerySpeechRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySpeechWithOptions(request, runtime);
    }

    /**
     * @param request QuerySpeechDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySpeechDeviceResponse
     */
    public QuerySpeechDeviceResponse querySpeechDeviceWithOptions(QuerySpeechDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.availableSpace)) {
            body.put("AvailableSpace", request.availableSpace);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.availableSpaceScope)) {
            body.put("AvailableSpaceScope", request.availableSpaceScope);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectCode)) {
            body.put("ProjectCode", request.projectCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySpeechDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySpeechDeviceResponse());
    }

    /**
     * @param request QuerySpeechDeviceRequest
     * @return QuerySpeechDeviceResponse
     */
    public QuerySpeechDeviceResponse querySpeechDevice(QuerySpeechDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySpeechDeviceWithOptions(request, runtime);
    }

    /**
     * @param request QuerySpeechLicenseAvailableQuotaRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySpeechLicenseAvailableQuotaResponse
     */
    public QuerySpeechLicenseAvailableQuotaResponse querySpeechLicenseAvailableQuotaWithOptions(QuerySpeechLicenseAvailableQuotaRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySpeechLicenseAvailableQuota"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySpeechLicenseAvailableQuotaResponse());
    }

    /**
     * @param request QuerySpeechLicenseAvailableQuotaRequest
     * @return QuerySpeechLicenseAvailableQuotaResponse
     */
    public QuerySpeechLicenseAvailableQuotaResponse querySpeechLicenseAvailableQuota(QuerySpeechLicenseAvailableQuotaRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySpeechLicenseAvailableQuotaWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to three times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about devices that are bound to Speech Sending Service licenses.</p>
     * 
     * @param request QuerySpeechLicenseDeviceListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySpeechLicenseDeviceListResponse
     */
    public QuerySpeechLicenseDeviceListResponse querySpeechLicenseDeviceListWithOptions(QuerySpeechLicenseDeviceListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            query.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.checkGroupId)) {
            body.put("CheckGroupId", request.checkGroupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.licenseStatusList)) {
            body.put("LicenseStatusList", request.licenseStatusList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySpeechLicenseDeviceList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySpeechLicenseDeviceListResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to three times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about devices that are bound to Speech Sending Service licenses.</p>
     * 
     * @param request QuerySpeechLicenseDeviceListRequest
     * @return QuerySpeechLicenseDeviceListResponse
     */
    public QuerySpeechLicenseDeviceListResponse querySpeechLicenseDeviceList(QuerySpeechLicenseDeviceListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySpeechLicenseDeviceListWithOptions(request, runtime);
    }

    /**
     * @param request QuerySpeechListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySpeechListResponse
     */
    public QuerySpeechListResponse querySpeechListWithOptions(QuerySpeechListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.audioFormat)) {
            body.put("AudioFormat", request.audioFormat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectCode)) {
            body.put("ProjectCode", request.projectCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySpeechList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySpeechListResponse());
    }

    /**
     * @param request QuerySpeechListRequest
     * @return QuerySpeechListResponse
     */
    public QuerySpeechListResponse querySpeechList(QuerySpeechListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySpeechListWithOptions(request, runtime);
    }

    /**
     * @param request QuerySpeechPushJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySpeechPushJobResponse
     */
    public QuerySpeechPushJobResponse querySpeechPushJobWithOptions(QuerySpeechPushJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.jobCode)) {
            query.put("JobCode", request.jobCode);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectCode)) {
            body.put("ProjectCode", request.projectCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pushMode)) {
            body.put("PushMode", request.pushMode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.statusList)) {
            body.put("StatusList", request.statusList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySpeechPushJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySpeechPushJobResponse());
    }

    /**
     * @param request QuerySpeechPushJobRequest
     * @return QuerySpeechPushJobResponse
     */
    public QuerySpeechPushJobResponse querySpeechPushJob(QuerySpeechPushJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySpeechPushJobWithOptions(request, runtime);
    }

    /**
     * @param request QuerySpeechPushJobDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySpeechPushJobDeviceResponse
     */
    public QuerySpeechPushJobDeviceResponse querySpeechPushJobDeviceWithOptions(QuerySpeechPushJobDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobCode)) {
            body.put("JobCode", request.jobCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            body.put("Status", request.status);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySpeechPushJobDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySpeechPushJobDeviceResponse());
    }

    /**
     * @param request QuerySpeechPushJobDeviceRequest
     * @return QuerySpeechPushJobDeviceResponse
     */
    public QuerySpeechPushJobDeviceResponse querySpeechPushJobDevice(QuerySpeechPushJobDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySpeechPushJobDeviceWithOptions(request, runtime);
    }

    /**
     * @param request QuerySpeechPushJobSpeechRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySpeechPushJobSpeechResponse
     */
    public QuerySpeechPushJobSpeechResponse querySpeechPushJobSpeechWithOptions(QuerySpeechPushJobSpeechRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobCode)) {
            body.put("JobCode", request.jobCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageId)) {
            body.put("PageId", request.pageId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySpeechPushJobSpeech"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySpeechPushJobSpeechResponse());
    }

    /**
     * @param request QuerySpeechPushJobSpeechRequest
     * @return QuerySpeechPushJobSpeechResponse
     */
    public QuerySpeechPushJobSpeechResponse querySpeechPushJobSpeech(QuerySpeechPushJobSpeechRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySpeechPushJobSpeechWithOptions(request, runtime);
    }

    /**
     * @param request QueryStudioAppDomainListOpenRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryStudioAppDomainListOpenResponse
     */
    public QueryStudioAppDomainListOpenResponse queryStudioAppDomainListOpenWithOptions(QueryStudioAppDomainListOpenRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectId)) {
            body.put("ProjectId", request.projectId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryStudioAppDomainListOpen"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryStudioAppDomainListOpenResponse());
    }

    /**
     * @param request QueryStudioAppDomainListOpenRequest
     * @return QueryStudioAppDomainListOpenResponse
     */
    public QueryStudioAppDomainListOpenResponse queryStudioAppDomainListOpen(QueryStudioAppDomainListOpenRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryStudioAppDomainListOpenWithOptions(request, runtime);
    }

    /**
     * @param request QueryStudioAppListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryStudioAppListResponse
     */
    public QueryStudioAppListResponse queryStudioAppListWithOptions(QueryStudioAppListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.fuzzyName)) {
            body.put("FuzzyName", request.fuzzyName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNo)) {
            body.put("PageNo", request.pageNo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectId)) {
            body.put("ProjectId", request.projectId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.types)) {
            body.put("Types", request.types);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryStudioAppList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryStudioAppListResponse());
    }

    /**
     * @param request QueryStudioAppListRequest
     * @return QueryStudioAppListResponse
     */
    public QueryStudioAppListResponse queryStudioAppList(QueryStudioAppListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryStudioAppListWithOptions(request, runtime);
    }

    /**
     * @param request QueryStudioAppPageListOpenRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryStudioAppPageListOpenResponse
     */
    public QueryStudioAppPageListOpenResponse queryStudioAppPageListOpenWithOptions(QueryStudioAppPageListOpenRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.isRelease)) {
            body.put("IsRelease", request.isRelease);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNo)) {
            body.put("PageNo", request.pageNo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectId)) {
            body.put("ProjectId", request.projectId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryStudioAppPageListOpen"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryStudioAppPageListOpenResponse());
    }

    /**
     * @param request QueryStudioAppPageListOpenRequest
     * @return QueryStudioAppPageListOpenResponse
     */
    public QueryStudioAppPageListOpenResponse queryStudioAppPageListOpen(QueryStudioAppPageListOpenRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryStudioAppPageListOpenWithOptions(request, runtime);
    }

    /**
     * @param request QueryStudioProjectListRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryStudioProjectListResponse
     */
    public QueryStudioProjectListResponse queryStudioProjectListWithOptions(QueryStudioProjectListRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            body.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageNo)) {
            body.put("PageNo", request.pageNo);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            body.put("PageSize", request.pageSize);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryStudioProjectList"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryStudioProjectListResponse());
    }

    /**
     * @param request QueryStudioProjectListRequest
     * @return QueryStudioProjectListResponse
     */
    public QueryStudioProjectListResponse queryStudioProjectList(QueryStudioProjectListRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryStudioProjectListWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QuerySubscribeRelationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySubscribeRelationResponse
     */
    public QuerySubscribeRelationResponse querySubscribeRelationWithOptions(QuerySubscribeRelationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySubscribeRelation"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySubscribeRelationResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QuerySubscribeRelationRequest
     * @return QuerySubscribeRelationResponse
     */
    public QuerySubscribeRelationResponse querySubscribeRelation(QuerySubscribeRelationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySubscribeRelationWithOptions(request, runtime);
    }

    /**
     * @param request QuerySummarySceneRuleLogRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySummarySceneRuleLogResponse
     */
    public QuerySummarySceneRuleLogResponse querySummarySceneRuleLogWithOptions(QuerySummarySceneRuleLogRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentPage)) {
            query.put("CurrentPage", request.currentPage);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            query.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pageSize)) {
            query.put("PageSize", request.pageSize);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            query.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            query.put("Status", request.status);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySummarySceneRuleLog"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySummarySceneRuleLogResponse());
    }

    /**
     * @param request QuerySummarySceneRuleLogRequest
     * @return QuerySummarySceneRuleLogResponse
     */
    public QuerySummarySceneRuleLogResponse querySummarySceneRuleLog(QuerySummarySceneRuleLogRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySummarySceneRuleLogWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the information of a parent group by subgroup ID.</p>
     * 
     * @param request QuerySuperDeviceGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QuerySuperDeviceGroupResponse
     */
    public QuerySuperDeviceGroupResponse querySuperDeviceGroupWithOptions(QuerySuperDeviceGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QuerySuperDeviceGroup"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QuerySuperDeviceGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the information of a parent group by subgroup ID.</p>
     * 
     * @param request QuerySuperDeviceGroupRequest
     * @return QuerySuperDeviceGroupResponse
     */
    public QuerySuperDeviceGroupResponse querySuperDeviceGroup(QuerySuperDeviceGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.querySuperDeviceGroupWithOptions(request, runtime);
    }

    /**
     * @param request QueryTaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryTaskResponse
     */
    public QueryTaskResponse queryTaskWithOptions(QueryTaskRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryTask"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryTaskResponse());
    }

    /**
     * @param request QueryTaskRequest
     * @return QueryTaskResponse
     */
    public QueryTaskResponse queryTask(QueryTaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryTaskWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>TSL features include properties, services, and events.
     * If you add custom modules to a TSL model and the value of the <strong>FunctionBlockId</strong> parameter is empty, you can obtain the TSL features of each custom module. If the value of the FunctionBlockId parameter is not empty, you can obtain the TSL features of a specified custom module.
     * For more information about the data format of the <strong>ThingModelJson</strong> parameter, see <a href="https://help.aliyun.com/document_detail/150457.html">Data structure of ThingModelJson</a>.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the TSL features of a specified product.</p>
     * 
     * @param request QueryThingModelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryThingModelResponse
     */
    public QueryThingModelResponse queryThingModelWithOptions(QueryThingModelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockId)) {
            query.put("FunctionBlockId", request.functionBlockId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.modelVersion)) {
            query.put("ModelVersion", request.modelVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryThingModel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryThingModelResponse());
    }

    /**
     * <b>description</b> :
     * <p>TSL features include properties, services, and events.
     * If you add custom modules to a TSL model and the value of the <strong>FunctionBlockId</strong> parameter is empty, you can obtain the TSL features of each custom module. If the value of the FunctionBlockId parameter is not empty, you can obtain the TSL features of a specified custom module.
     * For more information about the data format of the <strong>ThingModelJson</strong> parameter, see <a href="https://help.aliyun.com/document_detail/150457.html">Data structure of ThingModelJson</a>.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the TSL features of a specified product.</p>
     * 
     * @param request QueryThingModelRequest
     * @return QueryThingModelResponse
     */
    public QueryThingModelResponse queryThingModel(QueryThingModelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryThingModelWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryThingModelExtendConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryThingModelExtendConfigResponse
     */
    public QueryThingModelExtendConfigResponse queryThingModelExtendConfigWithOptions(QueryThingModelExtendConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockId)) {
            query.put("FunctionBlockId", request.functionBlockId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.modelVersion)) {
            query.put("ModelVersion", request.modelVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryThingModelExtendConfig"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryThingModelExtendConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryThingModelExtendConfigRequest
     * @return QueryThingModelExtendConfigResponse
     */
    public QueryThingModelExtendConfigResponse queryThingModelExtendConfig(QueryThingModelExtendConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryThingModelExtendConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryThingModelExtendConfigPublishedRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryThingModelExtendConfigPublishedResponse
     */
    public QueryThingModelExtendConfigPublishedResponse queryThingModelExtendConfigPublishedWithOptions(QueryThingModelExtendConfigPublishedRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockId)) {
            query.put("FunctionBlockId", request.functionBlockId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.modelVersion)) {
            query.put("ModelVersion", request.modelVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryThingModelExtendConfigPublished"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryThingModelExtendConfigPublishedResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryThingModelExtendConfigPublishedRequest
     * @return QueryThingModelExtendConfigPublishedResponse
     */
    public QueryThingModelExtendConfigPublishedResponse queryThingModelExtendConfigPublished(QueryThingModelExtendConfigPublishedRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryThingModelExtendConfigPublishedWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryThingModelPublishedRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryThingModelPublishedResponse
     */
    public QueryThingModelPublishedResponse queryThingModelPublishedWithOptions(QueryThingModelPublishedRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockId)) {
            query.put("FunctionBlockId", request.functionBlockId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.modelVersion)) {
            query.put("ModelVersion", request.modelVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.resourceGroupId)) {
            query.put("ResourceGroupId", request.resourceGroupId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryThingModelPublished"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryThingModelPublishedResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryThingModelPublishedRequest
     * @return QueryThingModelPublishedResponse
     */
    public QueryThingModelPublishedResponse queryThingModelPublished(QueryThingModelPublishedRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryThingModelPublishedWithOptions(request, runtime);
    }

    /**
     * @param request QueryTopicConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryTopicConfigResponse
     */
    public QueryTopicConfigResponse queryTopicConfigWithOptions(QueryTopicConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryTopicConfig"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryTopicConfigResponse());
    }

    /**
     * @param request QueryTopicConfigRequest
     * @return QueryTopicConfigResponse
     */
    public QueryTopicConfigResponse queryTopicConfig(QueryTopicConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryTopicConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/30561.html">Common request parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryTopicReverseRouteTableRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryTopicReverseRouteTableResponse
     */
    public QueryTopicReverseRouteTableResponse queryTopicReverseRouteTableWithOptions(QueryTopicReverseRouteTableRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.regionId)) {
            query.put("RegionId", request.regionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topic)) {
            query.put("Topic", request.topic);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryTopicReverseRouteTable"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryTopicReverseRouteTableResponse());
    }

    /**
     * <b>description</b> :
     * <p>In addition to the preceding operation-specific request parameters, you must specify common request parameters when you call this operation. For more information, see <a href="https://help.aliyun.com/document_detail/30561.html">Common request parameters</a>.</p>
     * 
     * <b>summary</b> : 
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryTopicReverseRouteTableRequest
     * @return QueryTopicReverseRouteTableResponse
     */
    public QueryTopicReverseRouteTableResponse queryTopicReverseRouteTable(QueryTopicReverseRouteTableRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryTopicReverseRouteTableWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryTopicRouteTableRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryTopicRouteTableResponse
     */
    public QueryTopicRouteTableResponse queryTopicRouteTableWithOptions(QueryTopicRouteTableRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topic)) {
            query.put("Topic", request.topic);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryTopicRouteTable"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryTopicRouteTableResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request QueryTopicRouteTableRequest
     * @return QueryTopicRouteTableResponse
     */
    public QueryTopicRouteTableResponse queryTopicRouteTable(QueryTopicRouteTableRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryTopicRouteTableWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the information about a device of a JT/T 808 gateway product.</p>
     * <ul>
     * <li>When you call this operation, you must specify a <strong>ProductKey</strong> and a <strong>DeviceName</strong>. Otherwise, the call fails.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about a device of a JT/T 808 gateway product.</p>
     * 
     * @param request QueryVehicleDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return QueryVehicleDeviceResponse
     */
    public QueryVehicleDeviceResponse queryVehicleDeviceWithOptions(QueryVehicleDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "QueryVehicleDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new QueryVehicleDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You can call this operation to query the information about a device of a JT/T 808 gateway product.</p>
     * <ul>
     * <li>When you call this operation, you must specify a <strong>ProductKey</strong> and a <strong>DeviceName</strong>. Otherwise, the call fails.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account. </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Queries the information about a device of a JT/T 808 gateway product.</p>
     * 
     * @param request QueryVehicleDeviceRequest
     * @return QueryVehicleDeviceResponse
     */
    public QueryVehicleDeviceResponse queryVehicleDevice(QueryVehicleDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.queryVehicleDeviceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>If the device fails to send a response within the timeout period after you call the operation, IoT Platform considers that the call fails even if the device receives the message. The timeout period is specified by the <strong>Timeout</strong> parameter.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 1000 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Sends a request to a specified device and synchronously receives a response from the device.</p>
     * 
     * @param request RRpcRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RRpcResponse
     */
    public RRpcResponse rRpcWithOptions(RRpcRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.contentType)) {
            query.put("ContentType", request.contentType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.timeout)) {
            query.put("Timeout", request.timeout);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topic)) {
            query.put("Topic", request.topic);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.requestBase64Byte)) {
            body.put("RequestBase64Byte", request.requestBase64Byte);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RRpc"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RRpcResponse());
    }

    /**
     * <b>description</b> :
     * <p>If the device fails to send a response within the timeout period after you call the operation, IoT Platform considers that the call fails even if the device receives the message. The timeout period is specified by the <strong>Timeout</strong> parameter.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 1000 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Sends a request to a specified device and synchronously receives a response from the device.</p>
     * 
     * @param request RRpcRequest
     * @return RRpcResponse
     */
    public RRpcResponse rRpc(RRpcRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.rRpcWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to five times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Rebinds a license to multiple devices of a specific product.</p>
     * 
     * @param request ReBindLicenseDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ReBindLicenseDeviceResponse
     */
    public ReBindLicenseDeviceResponse reBindLicenseDeviceWithOptions(ReBindLicenseDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.licenseCode)) {
            query.put("LicenseCode", request.licenseCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceNameList)) {
            body.put("DeviceNameList", request.deviceNameList);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query)),
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ReBindLicenseDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ReBindLicenseDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to five times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Rebinds a license to multiple devices of a specific product.</p>
     * 
     * @param request ReBindLicenseDeviceRequest
     * @return ReBindLicenseDeviceResponse
     */
    public ReBindLicenseDeviceResponse reBindLicenseDevice(ReBindLicenseDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.reBindLicenseDeviceWithOptions(request, runtime);
    }

    /**
     * @param request RefreshDeviceTunnelSharePasswordRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RefreshDeviceTunnelSharePasswordResponse
     */
    public RefreshDeviceTunnelSharePasswordResponse refreshDeviceTunnelSharePasswordWithOptions(RefreshDeviceTunnelSharePasswordRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RefreshDeviceTunnelSharePassword"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RefreshDeviceTunnelSharePasswordResponse());
    }

    /**
     * @param request RefreshDeviceTunnelSharePasswordRequest
     * @return RefreshDeviceTunnelSharePasswordResponse
     */
    public RefreshDeviceTunnelSharePasswordResponse refreshDeviceTunnelSharePassword(RefreshDeviceTunnelSharePasswordRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.refreshDeviceTunnelSharePasswordWithOptions(request, runtime);
    }

    /**
     * @param request RefreshStudioAppTokenOpenRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RefreshStudioAppTokenOpenResponse
     */
    public RefreshStudioAppTokenOpenResponse refreshStudioAppTokenOpenWithOptions(RefreshStudioAppTokenOpenRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectId)) {
            body.put("ProjectId", request.projectId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RefreshStudioAppTokenOpen"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RefreshStudioAppTokenOpenResponse());
    }

    /**
     * @param request RefreshStudioAppTokenOpenRequest
     * @return RefreshStudioAppTokenOpenResponse
     */
    public RefreshStudioAppTokenOpenResponse refreshStudioAppTokenOpen(RefreshStudioAppTokenOpenRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.refreshStudioAppTokenOpenWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>If you call this operation to register a device under a product, the device is added to the product in the IoT Platform console. After the device is registered, IoT Platform issues the IotId parameter to the device. This parameter is a globally unique identifier (GUID) of the device. To perform operations on a device, you must use the IotId parameter to identify the device.
     * You can also use a combination of the ProductKey and DeviceName parameters to identify a device. A ProductKey is issued by IoT Platform to a product when you create the product. A DeviceName is specified or randomly generated when you create a device. The IotId parameter has a higher priority than a combination of the ProductKey and DeviceName parameters.
     * For information about how to register multiple devices under a product at the same time, see <a href="https://help.aliyun.com/document_detail/69514.html">BatchRegisterDeviceWithApplyId</a>.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 30 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Registers a device under a product.</p>
     * 
     * @param request RegisterDeviceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RegisterDeviceResponse
     */
    public RegisterDeviceResponse registerDeviceWithOptions(RegisterDeviceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appKey)) {
            query.put("AppKey", request.appKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.devEui)) {
            query.put("DevEui", request.devEui);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.joinEui)) {
            query.put("JoinEui", request.joinEui);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.loraNodeType)) {
            query.put("LoraNodeType", request.loraNodeType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.nickname)) {
            query.put("Nickname", request.nickname);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.pinCode)) {
            query.put("PinCode", request.pinCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RegisterDevice"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RegisterDeviceResponse());
    }

    /**
     * <b>description</b> :
     * <p>If you call this operation to register a device under a product, the device is added to the product in the IoT Platform console. After the device is registered, IoT Platform issues the IotId parameter to the device. This parameter is a globally unique identifier (GUID) of the device. To perform operations on a device, you must use the IotId parameter to identify the device.
     * You can also use a combination of the ProductKey and DeviceName parameters to identify a device. A ProductKey is issued by IoT Platform to a product when you create the product. A DeviceName is specified or randomly generated when you create a device. The IotId parameter has a higher priority than a combination of the ProductKey and DeviceName parameters.
     * For information about how to register multiple devices under a product at the same time, see <a href="https://help.aliyun.com/document_detail/69514.html">BatchRegisterDeviceWithApplyId</a>.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 30 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Registers a device under a product.</p>
     * 
     * @param request RegisterDeviceRequest
     * @return RegisterDeviceResponse
     */
    public RegisterDeviceResponse registerDevice(RegisterDeviceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.registerDeviceWithOptions(request, runtime);
    }

    /**
     * @param request ReleaseEdgeDriverVersionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ReleaseEdgeDriverVersionResponse
     */
    public ReleaseEdgeDriverVersionResponse releaseEdgeDriverVersionWithOptions(ReleaseEdgeDriverVersionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverVersion)) {
            query.put("DriverVersion", request.driverVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ReleaseEdgeDriverVersion"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ReleaseEdgeDriverVersionResponse());
    }

    /**
     * @param request ReleaseEdgeDriverVersionRequest
     * @return ReleaseEdgeDriverVersionResponse
     */
    public ReleaseEdgeDriverVersionResponse releaseEdgeDriverVersion(ReleaseEdgeDriverVersionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.releaseEdgeDriverVersionWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  After a product is published, you cannot call the <a href="https://help.aliyun.com/document_detail/150323.html">CreateThingModel</a>, <a href="https://help.aliyun.com/document_detail/151240.html">UpdateThingModel</a>, <a href="https://help.aliyun.com/document_detail/150320.html">ImportThingModelTSL</a>, <a href="https://help.aliyun.com/document_detail/150311.html">PublishThingModel</a>, <a href="https://help.aliyun.com/document_detail/150312.html">DeleteThingModel</a>, or <a href="https://help.aliyun.com/document_detail/150322.html">CopyThingModel</a> operation to edit the Thing Specification Language (TSL) model of the product. To edit the TSL model, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request ReleaseProductRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ReleaseProductResponse
     */
    public ReleaseProductResponse releaseProductWithOptions(ReleaseProductRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ReleaseProduct"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ReleaseProductResponse());
    }

    /**
     * <b>description</b> :
     * <p>  After a product is published, you cannot call the <a href="https://help.aliyun.com/document_detail/150323.html">CreateThingModel</a>, <a href="https://help.aliyun.com/document_detail/151240.html">UpdateThingModel</a>, <a href="https://help.aliyun.com/document_detail/150320.html">ImportThingModelTSL</a>, <a href="https://help.aliyun.com/document_detail/150311.html">PublishThingModel</a>, <a href="https://help.aliyun.com/document_detail/150312.html">DeleteThingModel</a>, or <a href="https://help.aliyun.com/document_detail/150322.html">CopyThingModel</a> operation to edit the Thing Specification Language (TSL) model of the product. To edit the TSL model, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request ReleaseProductRequest
     * @return ReleaseProductResponse
     */
    public ReleaseProductResponse releaseProduct(ReleaseProductRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.releaseProductWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  If you specify a gateway, this operation removes the topological relationships between the gateway and all attached sub-devices.</p>
     * <ul>
     * <li>If you specify a sub-device, this operation removes the topological relationship between the sub-device and the gateway to which the sub-device is attached.</li>
     * </ul>
     * <h1>QPS limits</h1>
     * <p>Each Alibaba Cloud account can run up to 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Deletes the topological relationships between a gateway and all attached sub-devices, or the topological relationship between a sub-device and the gateway to which the sub-device is attached.</p>
     * 
     * @param request RemoveThingTopoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RemoveThingTopoResponse
     */
    public RemoveThingTopoResponse removeThingTopoWithOptions(RemoveThingTopoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RemoveThingTopo"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RemoveThingTopoResponse());
    }

    /**
     * <b>description</b> :
     * <p>  If you specify a gateway, this operation removes the topological relationships between the gateway and all attached sub-devices.</p>
     * <ul>
     * <li>If you specify a sub-device, this operation removes the topological relationship between the sub-device and the gateway to which the sub-device is attached.</li>
     * </ul>
     * <h1>QPS limits</h1>
     * <p>Each Alibaba Cloud account can run up to 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Deletes the topological relationships between a gateway and all attached sub-devices, or the topological relationship between a sub-device and the gateway to which the sub-device is attached.</p>
     * 
     * @param request RemoveThingTopoRequest
     * @return RemoveThingTopoResponse
     */
    public RemoveThingTopoResponse removeThingTopo(RemoveThingTopoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.removeThingTopoWithOptions(request, runtime);
    }

    /**
     * @param request ReplaceEdgeInstanceGatewayRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ReplaceEdgeInstanceGatewayResponse
     */
    public ReplaceEdgeInstanceGatewayResponse replaceEdgeInstanceGatewayWithOptions(ReplaceEdgeInstanceGatewayRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.currentGatewayId)) {
            query.put("CurrentGatewayId", request.currentGatewayId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.newGatewayId)) {
            query.put("NewGatewayId", request.newGatewayId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ReplaceEdgeInstanceGateway"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ReplaceEdgeInstanceGatewayResponse());
    }

    /**
     * @param request ReplaceEdgeInstanceGatewayRequest
     * @return ReplaceEdgeInstanceGatewayResponse
     */
    public ReplaceEdgeInstanceGatewayResponse replaceEdgeInstanceGateway(ReplaceEdgeInstanceGatewayRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.replaceEdgeInstanceGatewayWithOptions(request, runtime);
    }

    /**
     * @param request RerunJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RerunJobResponse
     */
    public RerunJobResponse rerunJobWithOptions(RerunJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RerunJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RerunJobResponse());
    }

    /**
     * @param request RerunJobRequest
     * @return RerunJobResponse
     */
    public RerunJobResponse rerunJob(RerunJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.rerunJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request ResetConsumerGroupPositionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ResetConsumerGroupPositionResponse
     */
    public ResetConsumerGroupPositionResponse resetConsumerGroupPositionWithOptions(ResetConsumerGroupPositionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ResetConsumerGroupPosition"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ResetConsumerGroupPositionResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request ResetConsumerGroupPositionRequest
     * @return ResetConsumerGroupPositionResponse
     */
    public ResetConsumerGroupPositionResponse resetConsumerGroupPosition(ResetConsumerGroupPositionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.resetConsumerGroupPositionWithOptions(request, runtime);
    }

    /**
     * @param request ResetDeviceTimelineRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ResetDeviceTimelineResponse
     */
    public ResetDeviceTimelineResponse resetDeviceTimelineWithOptions(ResetDeviceTimelineRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ResetDeviceTimeline"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ResetDeviceTimelineResponse());
    }

    /**
     * @param request ResetDeviceTimelineRequest
     * @return ResetDeviceTimelineResponse
     */
    public ResetDeviceTimelineResponse resetDeviceTimeline(ResetDeviceTimelineRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.resetDeviceTimelineWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  After you use dynamic registration to obtain the device certificate information of a directly connected device and activate the device, you can call this operation to reset the dynamic registration status of the status to unregistered in the IoT Platform console. Then, you can use dynamic registration again to obtain the device certificate information. The device certificate information includes ProductKey, DeviceName, and DeviceSecret.</p>
     * <blockquote>
     * <p>This operation is called to reset the dynamic registration status instead of activation status of a device. After you call the operation to reset the dynamic registration status of a device, the status of the device in the IoT Platform console is not reset to inactive.</p>
     * </blockquote>
     * <ul>
     * <li>If you specify a gateway and the number of sub-devices that belong to the gateway exceeds 2,000, you can call this operation to create a device job to delete the topological relationships in an asynchronous manner. The operation returns the <strong>JobId</strong> parameter.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Resets the unique-certificate-per-product registration status of a device that is directly connected to IoT Platform, or deletes the current topology of the device.</p>
     * 
     * @param request ResetThingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ResetThingResponse
     */
    public ResetThingResponse resetThingWithOptions(ResetThingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ResetThing"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ResetThingResponse());
    }

    /**
     * <b>description</b> :
     * <p>  After you use dynamic registration to obtain the device certificate information of a directly connected device and activate the device, you can call this operation to reset the dynamic registration status of the status to unregistered in the IoT Platform console. Then, you can use dynamic registration again to obtain the device certificate information. The device certificate information includes ProductKey, DeviceName, and DeviceSecret.</p>
     * <blockquote>
     * <p>This operation is called to reset the dynamic registration status instead of activation status of a device. After you call the operation to reset the dynamic registration status of a device, the status of the device in the IoT Platform console is not reset to inactive.</p>
     * </blockquote>
     * <ul>
     * <li>If you specify a gateway and the number of sub-devices that belong to the gateway exceeds 2,000, you can call this operation to create a device job to delete the topological relationships in an asynchronous manner. The operation returns the <strong>JobId</strong> parameter.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Resets the unique-certificate-per-product registration status of a device that is directly connected to IoT Platform, or deletes the current topology of the device.</p>
     * 
     * @param request ResetThingRequest
     * @return ResetThingResponse
     */
    public ResetThingResponse resetThing(ResetThingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.resetThingWithOptions(request, runtime);
    }

    /**
     * @param request RetrySoundCodeLabelBatchRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return RetrySoundCodeLabelBatchResponse
     */
    public RetrySoundCodeLabelBatchResponse retrySoundCodeLabelBatchWithOptions(RetrySoundCodeLabelBatchRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.batchCode)) {
            body.put("BatchCode", request.batchCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "RetrySoundCodeLabelBatch"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new RetrySoundCodeLabelBatchResponse());
    }

    /**
     * @param request RetrySoundCodeLabelBatchRequest
     * @return RetrySoundCodeLabelBatchResponse
     */
    public RetrySoundCodeLabelBatchResponse retrySoundCodeLabelBatch(RetrySoundCodeLabelBatchRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.retrySoundCodeLabelBatchWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>If the update task requires confirmation, you must make sure that it has been confirmed before you call this operation. You can call the <a href="https://help.aliyun.com/document_detail/254666.html">ConfirmOTATask</a> operation to confirm update tasks.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Reruns one or more failed or canceled device update tasks in a specified update batch.</p>
     * 
     * @param request ReupgradeOTATaskRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ReupgradeOTATaskResponse
     */
    public ReupgradeOTATaskResponse reupgradeOTATaskWithOptions(ReupgradeOTATaskRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.taskId)) {
            query.put("TaskId", request.taskId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ReupgradeOTATask"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ReupgradeOTATaskResponse());
    }

    /**
     * <b>description</b> :
     * <p>If the update task requires confirmation, you must make sure that it has been confirmed before you call this operation. You can call the <a href="https://help.aliyun.com/document_detail/254666.html">ConfirmOTATask</a> operation to confirm update tasks.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 20 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Reruns one or more failed or canceled device update tasks in a specified update batch.</p>
     * 
     * @param request ReupgradeOTATaskRequest
     * @return ReupgradeOTATaskResponse
     */
    public ReupgradeOTATaskResponse reupgradeOTATask(ReupgradeOTATaskRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.reupgradeOTATaskWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  A device can have a maximum of 100 tags.</p>
     * <ul>
     * <li>You can modify or add a maximum of 100 tags at a time.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Specifies a tag for a device.</p>
     * 
     * @param request SaveDevicePropRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SaveDevicePropResponse
     */
    public SaveDevicePropResponse saveDevicePropWithOptions(SaveDevicePropRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.props)) {
            query.put("Props", request.props);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SaveDeviceProp"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SaveDevicePropResponse());
    }

    /**
     * <b>description</b> :
     * <p>  A device can have a maximum of 100 tags.</p>
     * <ul>
     * <li>You can modify or add a maximum of 100 tags at a time.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Specifies a tag for a device.</p>
     * 
     * @param request SaveDevicePropRequest
     * @return SaveDevicePropResponse
     */
    public SaveDevicePropResponse saveDeviceProp(SaveDevicePropRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.saveDevicePropWithOptions(request, runtime);
    }

    /**
     * @param request SaveScriptRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SaveScriptResponse
     */
    public SaveScriptResponse saveScriptWithOptions(SaveScriptRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.parserId)) {
            query.put("ParserId", request.parserId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scriptDraft)) {
            query.put("ScriptDraft", request.scriptDraft);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SaveScript"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SaveScriptResponse());
    }

    /**
     * @param request SaveScriptRequest
     * @return SaveScriptResponse
     */
    public SaveScriptResponse saveScript(SaveScriptRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.saveScriptWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  You cannot query the desired values of read-only properties.</p>
     * <ul>
     * <li>You can specify up to 10 desired property values in a call.</li>
     * <li>After a device is created, the value of the <strong>Version</strong> parameter is 0. If you want to configure the <strong>Version</strong> parameter the first time you specify a desired property value, set the <strong>Version</strong> parameter to 0.<blockquote>
     * <p>If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Specifies desired values for multiple device properties at a time.</p>
     * 
     * @param request SetDeviceDesiredPropertyRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetDeviceDesiredPropertyResponse
     */
    public SetDeviceDesiredPropertyResponse setDeviceDesiredPropertyWithOptions(SetDeviceDesiredPropertyRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.items)) {
            query.put("Items", request.items);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.versions)) {
            query.put("Versions", request.versions);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetDeviceDesiredProperty"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetDeviceDesiredPropertyResponse());
    }

    /**
     * <b>description</b> :
     * <p>  You cannot query the desired values of read-only properties.</p>
     * <ul>
     * <li>You can specify up to 10 desired property values in a call.</li>
     * <li>After a device is created, the value of the <strong>Version</strong> parameter is 0. If you want to configure the <strong>Version</strong> parameter the first time you specify a desired property value, set the <strong>Version</strong> parameter to 0.<blockquote>
     * <p>If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.</p>
     * </blockquote>
     * </li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Specifies desired values for multiple device properties at a time.</p>
     * 
     * @param request SetDeviceDesiredPropertyRequest
     * @return SetDeviceDesiredPropertyResponse
     */
    public SetDeviceDesiredPropertyResponse setDeviceDesiredProperty(SetDeviceDesiredPropertyRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setDeviceDesiredPropertyWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>A device group can have a maximum of 100 tags.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Adds, updates, or deletes group tags.</p>
     * 
     * @param request SetDeviceGroupTagsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetDeviceGroupTagsResponse
     */
    public SetDeviceGroupTagsResponse setDeviceGroupTagsWithOptions(SetDeviceGroupTagsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupType)) {
            query.put("GroupType", request.groupType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tagString)) {
            query.put("TagString", request.tagString);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetDeviceGroupTags"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetDeviceGroupTagsResponse());
    }

    /**
     * <b>description</b> :
     * <p>A device group can have a maximum of 100 tags.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 50 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Adds, updates, or deletes group tags.</p>
     * 
     * @param request SetDeviceGroupTagsRequest
     * @return SetDeviceGroupTagsResponse
     */
    public SetDeviceGroupTagsResponse setDeviceGroupTags(SetDeviceGroupTagsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setDeviceGroupTagsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>After IoT Platform sends a request to configure device properties, the device receives and processes the request in an asynchronous manner. When you call this operation, a successful response indicates that IoT Platform sent a request. The response does not indicate that the device received and processed the request. After the device SDK responds to the request, the device properties are configured.</p>
     * <blockquote>
     * <p>If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Specifies values for the properties of a device.</p>
     * 
     * @param request SetDevicePropertyRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetDevicePropertyResponse
     */
    public SetDevicePropertyResponse setDevicePropertyWithOptions(SetDevicePropertyRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.items)) {
            query.put("Items", request.items);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.qos)) {
            query.put("Qos", request.qos);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetDeviceProperty"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetDevicePropertyResponse());
    }

    /**
     * <b>description</b> :
     * <p>After IoT Platform sends a request to configure device properties, the device receives and processes the request in an asynchronous manner. When you call this operation, a successful response indicates that IoT Platform sent a request. The response does not indicate that the device received and processed the request. After the device SDK responds to the request, the device properties are configured.</p>
     * <blockquote>
     * <p>If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Specifies values for the properties of a device.</p>
     * 
     * @param request SetDevicePropertyRequest
     * @return SetDevicePropertyResponse
     */
    public SetDevicePropertyResponse setDeviceProperty(SetDevicePropertyRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setDevicePropertyWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Specifies values for multiple device properties at a time.</p>
     * 
     * @param request SetDevicesPropertyRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetDevicesPropertyResponse
     */
    public SetDevicesPropertyResponse setDevicesPropertyWithOptions(SetDevicesPropertyRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.items)) {
            query.put("Items", request.items);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.qos)) {
            query.put("Qos", request.qos);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetDevicesProperty"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetDevicesPropertyResponse());
    }

    /**
     * <b>description</b> :
     * <p>If the Thing Specification Language (TSL) data is of the float or double type, the parameter values that correspond to the TSL data contain at least one decimal place. Examples: 10.0 and 11.1.</p>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Specifies values for multiple device properties at a time.</p>
     * 
     * @param request SetDevicesPropertyRequest
     * @return SetDevicesPropertyResponse
     */
    public SetDevicesPropertyResponse setDevicesProperty(SetDevicesPropertyRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setDevicesPropertyWithOptions(request, runtime);
    }

    /**
     * @param request SetEdgeInstanceDriverConfigsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetEdgeInstanceDriverConfigsResponse
     */
    public SetEdgeInstanceDriverConfigsResponse setEdgeInstanceDriverConfigsWithOptions(SetEdgeInstanceDriverConfigsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.configs)) {
            query.put("Configs", request.configs);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetEdgeInstanceDriverConfigs"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetEdgeInstanceDriverConfigsResponse());
    }

    /**
     * @param request SetEdgeInstanceDriverConfigsRequest
     * @return SetEdgeInstanceDriverConfigsResponse
     */
    public SetEdgeInstanceDriverConfigsResponse setEdgeInstanceDriverConfigs(SetEdgeInstanceDriverConfigsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setEdgeInstanceDriverConfigsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 30 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Specifies X.509 certificate information for a product.</p>
     * 
     * @param request SetProductCertInfoRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetProductCertInfoResponse
     */
    public SetProductCertInfoResponse setProductCertInfoWithOptions(SetProductCertInfoRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.issueModel)) {
            query.put("IssueModel", request.issueModel);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetProductCertInfo"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetProductCertInfoResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 30 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Specifies X.509 certificate information for a product.</p>
     * 
     * @param request SetProductCertInfoRequest
     * @return SetProductCertInfoResponse
     */
    public SetProductCertInfoResponse setProductCertInfo(SetProductCertInfoRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setProductCertInfoWithOptions(request, runtime);
    }

    /**
     * @param request SetStudioProjectCooperationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetStudioProjectCooperationResponse
     */
    public SetStudioProjectCooperationResponse setStudioProjectCooperationWithOptions(SetStudioProjectCooperationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            body.put("Status", request.status);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetStudioProjectCooperation"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetStudioProjectCooperationResponse());
    }

    /**
     * @param request SetStudioProjectCooperationRequest
     * @return SetStudioProjectCooperationResponse
     */
    public SetStudioProjectCooperationResponse setStudioProjectCooperation(SetStudioProjectCooperationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setStudioProjectCooperationWithOptions(request, runtime);
    }

    /**
     * @param request SetupStudioAppAuthModeOpenRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SetupStudioAppAuthModeOpenResponse
     */
    public SetupStudioAppAuthModeOpenResponse setupStudioAppAuthModeOpenWithOptions(SetupStudioAppAuthModeOpenRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.appId)) {
            body.put("AppId", request.appId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.authMode)) {
            body.put("AuthMode", request.authMode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectId)) {
            body.put("ProjectId", request.projectId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SetupStudioAppAuthModeOpen"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SetupStudioAppAuthModeOpenResponse());
    }

    /**
     * @param request SetupStudioAppAuthModeOpenRequest
     * @return SetupStudioAppAuthModeOpenResponse
     */
    public SetupStudioAppAuthModeOpenResponse setupStudioAppAuthModeOpen(SetupStudioAppAuthModeOpenRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.setupStudioAppAuthModeOpenWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Shares and combines audio files for broadcasting on a device.</p>
     * 
     * @param request ShareSpeechByCombinationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return ShareSpeechByCombinationResponse
     */
    public ShareSpeechByCombinationResponse shareSpeechByCombinationWithOptions(ShareSpeechByCombinationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.audioFormat)) {
            body.put("AudioFormat", request.audioFormat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.combinationList)) {
            body.put("CombinationList", request.combinationList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            body.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechId)) {
            body.put("SpeechId", request.speechId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "ShareSpeechByCombination"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new ShareSpeechByCombinationResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 50 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Shares and combines audio files for broadcasting on a device.</p>
     * 
     * @param request ShareSpeechByCombinationRequest
     * @return ShareSpeechByCombinationResponse
     */
    public ShareSpeechByCombinationResponse shareSpeechByCombination(ShareSpeechByCombinationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.shareSpeechByCombinationWithOptions(request, runtime);
    }

    /**
     * @param request SpeechByCombinationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SpeechByCombinationResponse
     */
    public SpeechByCombinationResponse speechByCombinationWithOptions(SpeechByCombinationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.audioFormat)) {
            body.put("AudioFormat", request.audioFormat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.combinationList)) {
            body.put("CombinationList", request.combinationList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.enforceFlag)) {
            body.put("EnforceFlag", request.enforceFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            body.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechId)) {
            body.put("SpeechId", request.speechId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SpeechByCombination"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SpeechByCombinationResponse());
    }

    /**
     * @param request SpeechByCombinationRequest
     * @return SpeechByCombinationResponse
     */
    public SpeechByCombinationResponse speechByCombination(SpeechByCombinationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.speechByCombinationWithOptions(request, runtime);
    }

    /**
     * @param request SpeechBySynthesisRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SpeechBySynthesisResponse
     */
    public SpeechBySynthesisResponse speechBySynthesisWithOptions(SpeechBySynthesisRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.audioFormat)) {
            body.put("AudioFormat", request.audioFormat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            body.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechId)) {
            body.put("SpeechId", request.speechId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechRate)) {
            body.put("SpeechRate", request.speechRate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.text)) {
            body.put("Text", request.text);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.voice)) {
            body.put("Voice", request.voice);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.volume)) {
            body.put("Volume", request.volume);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SpeechBySynthesis"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SpeechBySynthesisResponse());
    }

    /**
     * @param request SpeechBySynthesisRequest
     * @return SpeechBySynthesisResponse
     */
    public SpeechBySynthesisResponse speechBySynthesis(SpeechBySynthesisRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.speechBySynthesisWithOptions(request, runtime);
    }

    /**
     * @param request StartPTDetectionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StartPTDetectionResponse
     */
    public StartPTDetectionResponse startPTDetectionWithOptions(StartPTDetectionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.algorithmInstanceUid)) {
            query.put("AlgorithmInstanceUid", request.algorithmInstanceUid);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.data)) {
            query.put("Data", request.data);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.dataCollectionTime)) {
            query.put("DataCollectionTime", request.dataCollectionTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.fileName)) {
            query.put("FileName", request.fileName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.powerPlantsNumber)) {
            query.put("PowerPlantsNumber", request.powerPlantsNumber);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.powerStationUid)) {
            query.put("PowerStationUid", request.powerStationUid);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sensitivity)) {
            query.put("Sensitivity", request.sensitivity);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StartPTDetection"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StartPTDetectionResponse());
    }

    /**
     * @param request StartPTDetectionRequest
     * @return StartPTDetectionResponse
     */
    public StartPTDetectionResponse startPTDetection(StartPTDetectionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.startPTDetectionWithOptions(request, runtime);
    }

    /**
     * @param request StartParserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StartParserResponse
     */
    public StartParserResponse startParserWithOptions(StartParserRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.parserId)) {
            query.put("ParserId", request.parserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StartParser"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StartParserResponse());
    }

    /**
     * @param request StartParserRequest
     * @return StartParserResponse
     */
    public StartParserResponse startParser(StartParserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.startParserWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You must verify that the rule has SQL statements configured before you start the rule. If you do not set an SQL statement when you create the rule, call the <a href="https://help.aliyun.com/document_detail/69513.html">UpdateRule</a> operation to add an SQL statement and update the rule.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request StartRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StartRuleResponse
     */
    public StartRuleResponse startRuleWithOptions(StartRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StartRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StartRuleResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You must verify that the rule has SQL statements configured before you start the rule. If you do not set an SQL statement when you create the rule, call the <a href="https://help.aliyun.com/document_detail/69513.html">UpdateRule</a> operation to add an SQL statement and update the rule.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request StartRuleRequest
     * @return StartRuleResponse
     */
    public StartRuleResponse startRule(StartRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.startRuleWithOptions(request, runtime);
    }

    /**
     * @param request StopParserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StopParserResponse
     */
    public StopParserResponse stopParserWithOptions(StopParserRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.parserId)) {
            query.put("ParserId", request.parserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StopParser"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StopParserResponse());
    }

    /**
     * @param request StopParserRequest
     * @return StopParserResponse
     */
    public StopParserResponse stopParser(StopParserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.stopParserWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request StopRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return StopRuleResponse
     */
    public StopRuleResponse stopRuleWithOptions(StopRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "StopRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new StopRuleResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request StopRuleRequest
     * @return StopRuleResponse
     */
    public StopRuleResponse stopRule(StopRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.stopRuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  The device that needs to subscribe to topics must be connected to IoT Platform and online.</p>
     * <ul>
     * <li>You can call this operation to subscribe to the topics of a specified device. You can specify a maximum of 10 topics in a single call.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Subscribes to one or more topics for a device.</p>
     * 
     * @param request SubscribeTopicRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SubscribeTopicResponse
     */
    public SubscribeTopicResponse subscribeTopicWithOptions(SubscribeTopicRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topic)) {
            query.put("Topic", request.topic);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SubscribeTopic"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SubscribeTopicResponse());
    }

    /**
     * <b>description</b> :
     * <p>  The device that needs to subscribe to topics must be connected to IoT Platform and online.</p>
     * <ul>
     * <li>You can call this operation to subscribe to the topics of a specified device. You can specify a maximum of 10 topics in a single call.</li>
     * </ul>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run up to 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the Alibaba Cloud account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Subscribes to one or more topics for a device.</p>
     * 
     * @param request SubscribeTopicRequest
     * @return SubscribeTopicResponse
     */
    public SubscribeTopicResponse subscribeTopic(SubscribeTopicRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.subscribeTopicWithOptions(request, runtime);
    }

    /**
     * @param request SyncSpeechByCombinationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return SyncSpeechByCombinationResponse
     */
    public SyncSpeechByCombinationResponse syncSpeechByCombinationWithOptions(SyncSpeechByCombinationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.audioFormat)) {
            body.put("AudioFormat", request.audioFormat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.combinationList)) {
            body.put("CombinationList", request.combinationList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            body.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.enforceFlag)) {
            body.put("EnforceFlag", request.enforceFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            body.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            body.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechId)) {
            body.put("SpeechId", request.speechId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "SyncSpeechByCombination"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new SyncSpeechByCombinationResponse());
    }

    /**
     * @param request SyncSpeechByCombinationRequest
     * @return SyncSpeechByCombinationResponse
     */
    public SyncSpeechByCombinationResponse syncSpeechByCombination(SyncSpeechByCombinationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.syncSpeechByCombinationWithOptions(request, runtime);
    }

    /**
     * @param tmpReq TestSpeechRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return TestSpeechResponse
     */
    public TestSpeechResponse testSpeechWithOptions(TestSpeechRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        TestSpeechShrinkRequest request = new TestSpeechShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.soundCodeConfig)) {
            request.soundCodeConfigShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.soundCodeConfig, "SoundCodeConfig", "json");
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.audioFormat)) {
            body.put("AudioFormat", request.audioFormat);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.enableSoundCode)) {
            body.put("EnableSoundCode", request.enableSoundCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectCode)) {
            body.put("ProjectCode", request.projectCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.soundCodeConfigShrink)) {
            body.put("SoundCodeConfig", request.soundCodeConfigShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechRate)) {
            body.put("SpeechRate", request.speechRate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechType)) {
            body.put("SpeechType", request.speechType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.text)) {
            body.put("Text", request.text);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.voice)) {
            body.put("Voice", request.voice);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.volume)) {
            body.put("Volume", request.volume);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "TestSpeech"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new TestSpeechResponse());
    }

    /**
     * @param request TestSpeechRequest
     * @return TestSpeechResponse
     */
    public TestSpeechResponse testSpeech(TestSpeechRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.testSpeechWithOptions(request, runtime);
    }

    /**
     * @param request TestSwitchRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return TestSwitchResponse
     */
    public TestSwitchResponse testSwitchWithOptions(TestSwitchRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "TestSwitch"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new TestSwitchResponse());
    }

    /**
     * @param request TestSwitchRequest
     * @return TestSwitchResponse
     */
    public TestSwitchResponse testSwitch(TestSwitchRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.testSwitchWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/371985.html">QueryClientIds</a> operation to view the ClientIDs of a device.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Specifies a valid ClientID for a device to prevent illegal logons if the device contains multiple ClientIDs. This API operation applies to preregistration-free unique-certificate-per-product authentication.</p>
     * 
     * @param request TransformClientIdRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return TransformClientIdResponse
     */
    public TransformClientIdResponse transformClientIdWithOptions(TransformClientIdRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.clientId)) {
            query.put("ClientId", request.clientId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "TransformClientId"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new TransformClientIdResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can call the <a href="https://help.aliyun.com/document_detail/371985.html">QueryClientIds</a> operation to view the ClientIDs of a device.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Specifies a valid ClientID for a device to prevent illegal logons if the device contains multiple ClientIDs. This API operation applies to preregistration-free unique-certificate-per-product authentication.</p>
     * 
     * @param request TransformClientIdRequest
     * @return TransformClientIdResponse
     */
    public TransformClientIdResponse transformClientId(TransformClientIdRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.transformClientIdWithOptions(request, runtime);
    }

    /**
     * @param request TriggerSceneRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return TriggerSceneRuleResponse
     */
    public TriggerSceneRuleResponse triggerSceneRuleWithOptions(TriggerSceneRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "TriggerSceneRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new TriggerSceneRuleResponse());
    }

    /**
     * @param request TriggerSceneRuleRequest
     * @return TriggerSceneRuleResponse
     */
    public TriggerSceneRuleResponse triggerSceneRule(TriggerSceneRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.triggerSceneRuleWithOptions(request, runtime);
    }

    /**
     * @param request UnbindApplicationFromEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UnbindApplicationFromEdgeInstanceResponse
     */
    public UnbindApplicationFromEdgeInstanceResponse unbindApplicationFromEdgeInstanceWithOptions(UnbindApplicationFromEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.applicationId)) {
            query.put("ApplicationId", request.applicationId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UnbindApplicationFromEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UnbindApplicationFromEdgeInstanceResponse());
    }

    /**
     * @param request UnbindApplicationFromEdgeInstanceRequest
     * @return UnbindApplicationFromEdgeInstanceResponse
     */
    public UnbindApplicationFromEdgeInstanceResponse unbindApplicationFromEdgeInstance(UnbindApplicationFromEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.unbindApplicationFromEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UnbindDriverFromEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UnbindDriverFromEdgeInstanceResponse
     */
    public UnbindDriverFromEdgeInstanceResponse unbindDriverFromEdgeInstanceWithOptions(UnbindDriverFromEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UnbindDriverFromEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UnbindDriverFromEdgeInstanceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UnbindDriverFromEdgeInstanceRequest
     * @return UnbindDriverFromEdgeInstanceResponse
     */
    public UnbindDriverFromEdgeInstanceResponse unbindDriverFromEdgeInstance(UnbindDriverFromEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.unbindDriverFromEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>A license is bound with a product. For more information, see <a href="https://help.aliyun.com/document_detail/427956.html">BindLicenseProduct</a> or <a href="https://help.aliyun.com/document_detail/427937.html">Bind a license to a product</a>.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Unbinds a license from a specific product.</p>
     * 
     * @param request UnbindLicenseProductRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UnbindLicenseProductResponse
     */
    public UnbindLicenseProductResponse unbindLicenseProductWithOptions(UnbindLicenseProductRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.licenseCode)) {
            query.put("LicenseCode", request.licenseCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UnbindLicenseProduct"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UnbindLicenseProductResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Usage notes</h2>
     * <p>A license is bound with a product. For more information, see <a href="https://help.aliyun.com/document_detail/427956.html">BindLicenseProduct</a> or <a href="https://help.aliyun.com/document_detail/427937.html">Bind a license to a product</a>.</p>
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p>The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Unbinds a license from a specific product.</p>
     * 
     * @param request UnbindLicenseProductRequest
     * @return UnbindLicenseProductResponse
     */
    public UnbindLicenseProductResponse unbindLicenseProduct(UnbindLicenseProductRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.unbindLicenseProductWithOptions(request, runtime);
    }

    /**
     * @param request UnbindRoleFromEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UnbindRoleFromEdgeInstanceResponse
     */
    public UnbindRoleFromEdgeInstanceResponse unbindRoleFromEdgeInstanceWithOptions(UnbindRoleFromEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UnbindRoleFromEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UnbindRoleFromEdgeInstanceResponse());
    }

    /**
     * @param request UnbindRoleFromEdgeInstanceRequest
     * @return UnbindRoleFromEdgeInstanceResponse
     */
    public UnbindRoleFromEdgeInstanceResponse unbindRoleFromEdgeInstance(UnbindRoleFromEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.unbindRoleFromEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * @param request UnbindSceneRuleFromEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UnbindSceneRuleFromEdgeInstanceResponse
     */
    public UnbindSceneRuleFromEdgeInstanceResponse unbindSceneRuleFromEdgeInstanceWithOptions(UnbindSceneRuleFromEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UnbindSceneRuleFromEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UnbindSceneRuleFromEdgeInstanceResponse());
    }

    /**
     * @param request UnbindSceneRuleFromEdgeInstanceRequest
     * @return UnbindSceneRuleFromEdgeInstanceResponse
     */
    public UnbindSceneRuleFromEdgeInstanceResponse unbindSceneRuleFromEdgeInstance(UnbindSceneRuleFromEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.unbindSceneRuleFromEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * @param request UnsubscribeTopicRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UnsubscribeTopicResponse
     */
    public UnsubscribeTopicResponse unsubscribeTopicWithOptions(UnsubscribeTopicRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topic)) {
            query.put("Topic", request.topic);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UnsubscribeTopic"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UnsubscribeTopicResponse());
    }

    /**
     * @param request UnsubscribeTopicRequest
     * @return UnsubscribeTopicResponse
     */
    public UnsubscribeTopicResponse unsubscribeTopic(UnsubscribeTopicRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.unsubscribeTopicWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You cannot modify the default consumer group provided by IoT Platform.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request UpdateConsumerGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateConsumerGroupResponse
     */
    public UpdateConsumerGroupResponse updateConsumerGroupWithOptions(UpdateConsumerGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.newGroupName)) {
            query.put("NewGroupName", request.newGroupName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateConsumerGroup"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateConsumerGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>You cannot modify the default consumer group provided by IoT Platform.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request UpdateConsumerGroupRequest
     * @return UpdateConsumerGroupResponse
     */
    public UpdateConsumerGroupResponse updateConsumerGroup(UpdateConsumerGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateConsumerGroupWithOptions(request, runtime);
    }

    /**
     * @param request UpdateDestinationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateDestinationResponse
     */
    public UpdateDestinationResponse updateDestinationWithOptions(UpdateDestinationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.configuration)) {
            query.put("Configuration", request.configuration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.destinationId)) {
            query.put("DestinationId", request.destinationId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateDestination"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateDestinationResponse());
    }

    /**
     * @param request UpdateDestinationRequest
     * @return UpdateDestinationResponse
     */
    public UpdateDestinationResponse updateDestination(UpdateDestinationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateDestinationWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateDeviceGroupRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateDeviceGroupResponse
     */
    public UpdateDeviceGroupResponse updateDeviceGroupWithOptions(UpdateDeviceGroupRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.groupDesc)) {
            query.put("GroupDesc", request.groupDesc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupId)) {
            query.put("GroupId", request.groupId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.groupType)) {
            query.put("GroupType", request.groupType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateDeviceGroup"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateDeviceGroupResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateDeviceGroupRequest
     * @return UpdateDeviceGroupResponse
     */
    public UpdateDeviceGroupResponse updateDeviceGroup(UpdateDeviceGroupRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateDeviceGroupWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 500 times per second per account.</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateDeviceShadowRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateDeviceShadowResponse
     */
    public UpdateDeviceShadowResponse updateDeviceShadowWithOptions(UpdateDeviceShadowRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deltaUpdate)) {
            query.put("DeltaUpdate", request.deltaUpdate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shadowMessage)) {
            query.put("ShadowMessage", request.shadowMessage);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateDeviceShadow"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateDeviceShadowResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 500 times per second per account.</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateDeviceShadowRequest
     * @return UpdateDeviceShadowResponse
     */
    public UpdateDeviceShadowResponse updateDeviceShadow(UpdateDeviceShadowRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateDeviceShadowWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>If a request parameter is not specified, the original value of the parameter will be cleared for the driver version.</li>
     * <li>You are not allowed to update a published driver version.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Updates a driver version.</p>
     * 
     * @param request UpdateEdgeDriverVersionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateEdgeDriverVersionResponse
     */
    public UpdateEdgeDriverVersionResponse updateEdgeDriverVersionWithOptions(UpdateEdgeDriverVersionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.argument)) {
            query.put("Argument", request.argument);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.configCheckRule)) {
            query.put("ConfigCheckRule", request.configCheckRule);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.containerConfig)) {
            query.put("ContainerConfig", request.containerConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverConfig)) {
            query.put("DriverConfig", request.driverConfig);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverVersion)) {
            query.put("DriverVersion", request.driverVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.edgeVersion)) {
            query.put("EdgeVersion", request.edgeVersion);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceConfig)) {
            query.put("SourceConfig", request.sourceConfig);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateEdgeDriverVersion"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateEdgeDriverVersionResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>If a request parameter is not specified, the original value of the parameter will be cleared for the driver version.</li>
     * <li>You are not allowed to update a published driver version.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <b>summary</b> : 
     * <p>Updates a driver version.</p>
     * 
     * @param request UpdateEdgeDriverVersionRequest
     * @return UpdateEdgeDriverVersionResponse
     */
    public UpdateEdgeDriverVersionResponse updateEdgeDriverVersion(UpdateEdgeDriverVersionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateEdgeDriverVersionWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateEdgeInstanceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateEdgeInstanceResponse
     */
    public UpdateEdgeInstanceResponse updateEdgeInstanceWithOptions(UpdateEdgeInstanceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.bizEnable)) {
            query.put("BizEnable", request.bizEnable);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.spec)) {
            query.put("Spec", request.spec);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tags)) {
            query.put("Tags", request.tags);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateEdgeInstance"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateEdgeInstanceResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of five queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateEdgeInstanceRequest
     * @return UpdateEdgeInstanceResponse
     */
    public UpdateEdgeInstanceResponse updateEdgeInstance(UpdateEdgeInstanceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateEdgeInstanceWithOptions(request, runtime);
    }

    /**
     * @param request UpdateEdgeInstanceChannelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateEdgeInstanceChannelResponse
     */
    public UpdateEdgeInstanceChannelResponse updateEdgeInstanceChannelWithOptions(UpdateEdgeInstanceChannelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.channelId)) {
            query.put("ChannelId", request.channelId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.channelName)) {
            query.put("ChannelName", request.channelName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.configs)) {
            query.put("Configs", request.configs);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.driverId)) {
            query.put("DriverId", request.driverId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateEdgeInstanceChannel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateEdgeInstanceChannelResponse());
    }

    /**
     * @param request UpdateEdgeInstanceChannelRequest
     * @return UpdateEdgeInstanceChannelResponse
     */
    public UpdateEdgeInstanceChannelResponse updateEdgeInstanceChannel(UpdateEdgeInstanceChannelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateEdgeInstanceChannelWithOptions(request, runtime);
    }

    /**
     * @param request UpdateEdgeInstanceMessageRoutingRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateEdgeInstanceMessageRoutingResponse
     */
    public UpdateEdgeInstanceMessageRoutingResponse updateEdgeInstanceMessageRoutingWithOptions(UpdateEdgeInstanceMessageRoutingRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.instanceId)) {
            query.put("InstanceId", request.instanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.routeId)) {
            query.put("RouteId", request.routeId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceData)) {
            query.put("SourceData", request.sourceData);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.sourceType)) {
            query.put("SourceType", request.sourceType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetData)) {
            query.put("TargetData", request.targetData);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetIotHubQos)) {
            query.put("TargetIotHubQos", request.targetIotHubQos);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetType)) {
            query.put("TargetType", request.targetType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicFilter)) {
            query.put("TopicFilter", request.topicFilter);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateEdgeInstanceMessageRouting"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateEdgeInstanceMessageRoutingResponse());
    }

    /**
     * @param request UpdateEdgeInstanceMessageRoutingRequest
     * @return UpdateEdgeInstanceMessageRoutingResponse
     */
    public UpdateEdgeInstanceMessageRoutingResponse updateEdgeInstanceMessageRouting(UpdateEdgeInstanceMessageRoutingRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateEdgeInstanceMessageRoutingWithOptions(request, runtime);
    }

    /**
     * @param tmpReq UpdateJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateJobResponse
     */
    public UpdateJobResponse updateJobWithOptions(UpdateJobRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        UpdateJobShrinkRequest request = new UpdateJobShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.rolloutConfig)) {
            request.rolloutConfigShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.rolloutConfig, "RolloutConfig", "json");
        }

        if (!com.aliyun.teautil.Common.isUnset(tmpReq.timeoutConfig)) {
            request.timeoutConfigShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.timeoutConfig, "TimeoutConfig", "json");
        }

        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.rolloutConfigShrink)) {
            query.put("RolloutConfig", request.rolloutConfigShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.timeoutConfigShrink)) {
            query.put("TimeoutConfig", request.timeoutConfigShrink);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateJobResponse());
    }

    /**
     * @param request UpdateJobRequest
     * @return UpdateJobResponse
     */
    public UpdateJobResponse updateJob(UpdateJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateJobWithOptions(request, runtime);
    }

    /**
     * @param request UpdateOTAJobRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateOTAJobResponse
     */
    public UpdateOTAJobResponse updateOTAJobWithOptions(UpdateOTAJobRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.jobId)) {
            query.put("JobId", request.jobId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.maximumPerMinute)) {
            query.put("MaximumPerMinute", request.maximumPerMinute);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.srcVersionList)) {
            query.put("SrcVersionList", request.srcVersionList);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.tags)) {
            query.put("Tags", request.tags);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.targetSelection)) {
            query.put("TargetSelection", request.targetSelection);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.timeoutInMinutes)) {
            query.put("TimeoutInMinutes", request.timeoutInMinutes);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.upgradeType)) {
            query.put("UpgradeType", request.upgradeType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateOTAJob"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateOTAJobResponse());
    }

    /**
     * @param request UpdateOTAJobRequest
     * @return UpdateOTAJobResponse
     */
    public UpdateOTAJobResponse updateOTAJob(UpdateOTAJobRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateOTAJobWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateOTAModuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateOTAModuleResponse
     */
    public UpdateOTAModuleResponse updateOTAModuleWithOptions(UpdateOTAModuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.aliasName)) {
            query.put("AliasName", request.aliasName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.desc)) {
            query.put("Desc", request.desc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.moduleName)) {
            query.put("ModuleName", request.moduleName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateOTAModule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateOTAModuleResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateOTAModuleRequest
     * @return UpdateOTAModuleResponse
     */
    public UpdateOTAModuleResponse updateOTAModule(UpdateOTAModuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateOTAModuleWithOptions(request, runtime);
    }

    /**
     * @param request UpdateParserRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateParserResponse
     */
    public UpdateParserResponse updateParserWithOptions(UpdateParserRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.parserId)) {
            query.put("ParserId", request.parserId);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateParser"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateParserResponse());
    }

    /**
     * @param request UpdateParserRequest
     * @return UpdateParserResponse
     */
    public UpdateParserResponse updateParser(UpdateParserRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateParserWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Updates a data source for a parser.</p>
     * 
     * @param request UpdateParserDataSourceRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateParserDataSourceResponse
     */
    public UpdateParserDataSourceResponse updateParserDataSourceWithOptions(UpdateParserDataSourceRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.dataSourceId)) {
            query.put("DataSourceId", request.dataSourceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateParserDataSource"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateParserDataSourceResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Updates a data source for a parser.</p>
     * 
     * @param request UpdateParserDataSourceRequest
     * @return UpdateParserDataSourceResponse
     */
    public UpdateParserDataSourceResponse updateParserDataSource(UpdateParserDataSourceRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateParserDataSourceWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateProductRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateProductResponse
     */
    public UpdateProductResponse updateProductWithOptions(UpdateProductRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productName)) {
            query.put("ProductName", request.productName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateProduct"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateProductResponse());
    }

    /**
     * <b>description</b> :
     * <h2>QPS limits</h2>
     * <p>You can call this API operation up to 10 times per second per account.</p>
     * <blockquote>
     * <p> The RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateProductRequest
     * @return UpdateProductResponse
     */
    public UpdateProductResponse updateProduct(UpdateProductRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateProductWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Message deduplication rules</h2>
     * <p>Based on the rules that you set, IoT Platform determines whether to use the rules engine or server-side subscriptions to forward property data that is submitted by devices to a specified destination.
     * The triggering conditions of rules are related by the logic AND relation. For example, if you set the PropertyValueFilter=true and PropertyTimestampFilter=true conditions, the rule to remove duplicate messages is triggered only when both of the conditions are met.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Updates the deduplication rules for property messages that are submitted by the devices of a product. If the call succeeds, the new rules are applied to all the devices of the product.</p>
     * 
     * @param request UpdateProductFilterConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateProductFilterConfigResponse
     */
    public UpdateProductFilterConfigResponse updateProductFilterConfigWithOptions(UpdateProductFilterConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.propertyTimestampFilter)) {
            query.put("PropertyTimestampFilter", request.propertyTimestampFilter);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.propertyValueFilter)) {
            query.put("PropertyValueFilter", request.propertyValueFilter);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateProductFilterConfig"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateProductFilterConfigResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Message deduplication rules</h2>
     * <p>Based on the rules that you set, IoT Platform determines whether to use the rules engine or server-side subscriptions to forward property data that is submitted by devices to a specified destination.
     * The triggering conditions of rules are related by the logic AND relation. For example, if you set the PropertyValueFilter=true and PropertyTimestampFilter=true conditions, the rule to remove duplicate messages is triggered only when both of the conditions are met.</p>
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS). </p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Updates the deduplication rules for property messages that are submitted by the devices of a product. If the call succeeds, the new rules are applied to all the devices of the product.</p>
     * 
     * @param request UpdateProductFilterConfigRequest
     * @return UpdateProductFilterConfigResponse
     */
    public UpdateProductFilterConfigResponse updateProductFilterConfig(UpdateProductFilterConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateProductFilterConfigWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>You can update a maximum of 10 tags in a single call.</p>
     * <blockquote>
     * <p>You must specify the tag keys and tag values. Otherwise, the call fails. For description about the tag values, see the &quot;<strong>Request parameters</strong>&quot; section of this topic.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Updates product tags.</p>
     * 
     * @param request UpdateProductTagsRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateProductTagsResponse
     */
    public UpdateProductTagsResponse updateProductTagsWithOptions(UpdateProductTagsRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productTag)) {
            query.put("ProductTag", request.productTag);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateProductTags"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateProductTagsResponse());
    }

    /**
     * <b>description</b> :
     * <p>You can update a maximum of 10 tags in a single call.</p>
     * <blockquote>
     * <p>You must specify the tag keys and tag values. Otherwise, the call fails. For description about the tag values, see the &quot;<strong>Request parameters</strong>&quot; section of this topic.</p>
     * </blockquote>
     * <h2>QPS limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 500 queries per second (QPS). </p>
     * <blockquote>
     * <p> The Resource Access Management (RAM) users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Updates product tags.</p>
     * 
     * @param request UpdateProductTagsRequest
     * @return UpdateProductTagsResponse
     */
    public UpdateProductTagsResponse updateProductTags(UpdateProductTagsRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateProductTagsWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateProductTopicRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateProductTopicResponse
     */
    public UpdateProductTopicResponse updateProductTopicWithOptions(UpdateProductTopicRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.codec)) {
            query.put("Codec", request.codec);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.desc)) {
            query.put("Desc", request.desc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.enableProxySubscribe)) {
            query.put("EnableProxySubscribe", request.enableProxySubscribe);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.operation)) {
            query.put("Operation", request.operation);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicId)) {
            query.put("TopicId", request.topicId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicShortName)) {
            query.put("TopicShortName", request.topicShortName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateProductTopic"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateProductTopicResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateProductTopicRequest
     * @return UpdateProductTopicResponse
     */
    public UpdateProductTopicResponse updateProductTopic(UpdateProductTopicRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateProductTopicWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateRuleResponse
     */
    public UpdateRuleResponse updateRuleWithOptions(UpdateRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            query.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleDesc)) {
            query.put("RuleDesc", request.ruleDesc);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.select)) {
            query.put("Select", request.select);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.shortTopic)) {
            query.put("ShortTopic", request.shortTopic);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topic)) {
            query.put("Topic", request.topic);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicType)) {
            query.put("TopicType", request.topicType);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.where)) {
            query.put("Where", request.where);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateRuleResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateRuleRequest
     * @return UpdateRuleResponse
     */
    public UpdateRuleResponse updateRule(UpdateRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateRuleWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateRuleActionRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateRuleActionResponse
     */
    public UpdateRuleActionResponse updateRuleActionWithOptions(UpdateRuleActionRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.actionId)) {
            query.put("ActionId", request.actionId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.configuration)) {
            query.put("Configuration", request.configuration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateRuleAction"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateRuleActionResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 50 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * @param request UpdateRuleActionRequest
     * @return UpdateRuleActionResponse
     */
    public UpdateRuleActionResponse updateRuleAction(UpdateRuleActionRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateRuleActionWithOptions(request, runtime);
    }

    /**
     * @param request UpdateSceneRuleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateSceneRuleResponse
     */
    public UpdateSceneRuleResponse updateSceneRuleWithOptions(UpdateSceneRuleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleContent)) {
            query.put("RuleContent", request.ruleContent);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleDescription)) {
            query.put("RuleDescription", request.ruleDescription);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleId)) {
            query.put("RuleId", request.ruleId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.ruleName)) {
            query.put("RuleName", request.ruleName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateSceneRule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateSceneRuleResponse());
    }

    /**
     * @param request UpdateSceneRuleRequest
     * @return UpdateSceneRuleResponse
     */
    public UpdateSceneRuleResponse updateSceneRule(UpdateSceneRuleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateSceneRuleWithOptions(request, runtime);
    }

    /**
     * @param request UpdateSchedulePeriodRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateSchedulePeriodResponse
     */
    public UpdateSchedulePeriodResponse updateSchedulePeriodWithOptions(UpdateSchedulePeriodRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            body.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            body.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.periodCode)) {
            body.put("PeriodCode", request.periodCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.soundCodeContent)) {
            body.put("SoundCodeContent", request.soundCodeContent);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            body.put("StartTime", request.startTime);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateSchedulePeriod"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateSchedulePeriodResponse());
    }

    /**
     * @param request UpdateSchedulePeriodRequest
     * @return UpdateSchedulePeriodResponse
     */
    public UpdateSchedulePeriodResponse updateSchedulePeriod(UpdateSchedulePeriodRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateSchedulePeriodWithOptions(request, runtime);
    }

    /**
     * @param request UpdateSoundCodeRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateSoundCodeResponse
     */
    public UpdateSoundCodeResponse updateSoundCodeWithOptions(UpdateSoundCodeRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.duration)) {
            body.put("Duration", request.duration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            body.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.soundCode)) {
            body.put("SoundCode", request.soundCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.soundCodeContent)) {
            body.put("SoundCodeContent", request.soundCodeContent);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateSoundCode"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateSoundCodeResponse());
    }

    /**
     * @param request UpdateSoundCodeRequest
     * @return UpdateSoundCodeResponse
     */
    public UpdateSoundCodeResponse updateSoundCode(UpdateSoundCodeRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateSoundCodeWithOptions(request, runtime);
    }

    /**
     * @param request UpdateSoundCodeLabelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateSoundCodeLabelResponse
     */
    public UpdateSoundCodeLabelResponse updateSoundCodeLabelWithOptions(UpdateSoundCodeLabelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.label)) {
            body.put("Label", request.label);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.soundCode)) {
            body.put("SoundCode", request.soundCode);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateSoundCodeLabel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateSoundCodeLabelResponse());
    }

    /**
     * @param request UpdateSoundCodeLabelRequest
     * @return UpdateSoundCodeLabelResponse
     */
    public UpdateSoundCodeLabelResponse updateSoundCodeLabel(UpdateSoundCodeLabelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateSoundCodeLabelWithOptions(request, runtime);
    }

    /**
     * @param request UpdateSoundCodeScheduleRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateSoundCodeScheduleResponse
     */
    public UpdateSoundCodeScheduleResponse updateSoundCodeScheduleWithOptions(UpdateSoundCodeScheduleRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            body.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endDate)) {
            body.put("EndDate", request.endDate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.endTime)) {
            body.put("EndTime", request.endTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.name)) {
            body.put("Name", request.name);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scheduleCode)) {
            body.put("ScheduleCode", request.scheduleCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startDate)) {
            body.put("StartDate", request.startDate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.startTime)) {
            body.put("StartTime", request.startTime);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.status)) {
            body.put("Status", request.status);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateSoundCodeSchedule"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateSoundCodeScheduleResponse());
    }

    /**
     * @param request UpdateSoundCodeScheduleRequest
     * @return UpdateSoundCodeScheduleResponse
     */
    public UpdateSoundCodeScheduleResponse updateSoundCodeSchedule(UpdateSoundCodeScheduleRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateSoundCodeScheduleWithOptions(request, runtime);
    }

    /**
     * @param tmpReq UpdateSpeechRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateSpeechResponse
     */
    public UpdateSpeechResponse updateSpeechWithOptions(UpdateSpeechRequest tmpReq, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(tmpReq);
        UpdateSpeechShrinkRequest request = new UpdateSpeechShrinkRequest();
        com.aliyun.openapiutil.Client.convert(tmpReq, request);
        if (!com.aliyun.teautil.Common.isUnset(tmpReq.soundCodeConfig)) {
            request.soundCodeConfigShrink = com.aliyun.openapiutil.Client.arrayToStringWithSpecifiedStyle(tmpReq.soundCodeConfig, "SoundCodeConfig", "json");
        }

        java.util.Map<String, Object> body = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.enableSoundCode)) {
            body.put("EnableSoundCode", request.enableSoundCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            body.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.projectCode)) {
            body.put("ProjectCode", request.projectCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.soundCodeConfigShrink)) {
            body.put("SoundCodeConfig", request.soundCodeConfigShrink);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechCode)) {
            body.put("SpeechCode", request.speechCode);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.speechRate)) {
            body.put("SpeechRate", request.speechRate);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.voice)) {
            body.put("Voice", request.voice);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.volume)) {
            body.put("Volume", request.volume);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("body", com.aliyun.openapiutil.Client.parseToMap(body))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateSpeech"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateSpeechResponse());
    }

    /**
     * @param request UpdateSpeechRequest
     * @return UpdateSpeechResponse
     */
    public UpdateSpeechResponse updateSpeech(UpdateSpeechRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateSpeechWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Modifies a Message Service (MNS) or AMQP server-side subscription.</p>
     * 
     * @param request UpdateSubscribeRelationRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateSubscribeRelationResponse
     */
    public UpdateSubscribeRelationResponse updateSubscribeRelationWithOptions(UpdateSubscribeRelationRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.consumerGroupIds)) {
            query.put("ConsumerGroupIds", request.consumerGroupIds);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceDataFlag)) {
            query.put("DeviceDataFlag", request.deviceDataFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceLifeCycleFlag)) {
            query.put("DeviceLifeCycleFlag", request.deviceLifeCycleFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceStatusChangeFlag)) {
            query.put("DeviceStatusChangeFlag", request.deviceStatusChangeFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceTagFlag)) {
            query.put("DeviceTagFlag", request.deviceTagFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.deviceTopoLifeCycleFlag)) {
            query.put("DeviceTopoLifeCycleFlag", request.deviceTopoLifeCycleFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.foundDeviceListFlag)) {
            query.put("FoundDeviceListFlag", request.foundDeviceListFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.mnsConfiguration)) {
            query.put("MnsConfiguration", request.mnsConfiguration);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.otaEventFlag)) {
            query.put("OtaEventFlag", request.otaEventFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.otaJobFlag)) {
            query.put("OtaJobFlag", request.otaJobFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.otaVersionFlag)) {
            query.put("OtaVersionFlag", request.otaVersionFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.subscribeFlags)) {
            query.put("SubscribeFlags", request.subscribeFlags);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.thingHistoryFlag)) {
            query.put("ThingHistoryFlag", request.thingHistoryFlag);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.type)) {
            query.put("Type", request.type);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateSubscribeRelation"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateSubscribeRelationResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <p>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).</p>
     * <blockquote>
     * <p> RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * 
     * <b>summary</b> : 
     * <p>Modifies a Message Service (MNS) or AMQP server-side subscription.</p>
     * 
     * @param request UpdateSubscribeRelationRequest
     * @return UpdateSubscribeRelationResponse
     */
    public UpdateSubscribeRelationResponse updateSubscribeRelation(UpdateSubscribeRelationRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateSubscribeRelationWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>If a product is published, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product before you call this operation.</li>
     * <li>When you call this operation, you can use the <a href="https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb">json-schema</a> library to verify the input parameters in <strong>ThingModelJson</strong>. For more information, see <a href="https://help.aliyun.com/document_detail/150457.html">Data structure of ThingModelJson</a>.</li>
     * <li>You can call this operation to update only one feature. TSL features include properties, services, and events.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request UpdateThingModelRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateThingModelResponse
     */
    public UpdateThingModelResponse updateThingModelWithOptions(UpdateThingModelRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockId)) {
            query.put("FunctionBlockId", request.functionBlockId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.functionBlockName)) {
            query.put("FunctionBlockName", request.functionBlockName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.identifier)) {
            query.put("Identifier", request.identifier);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.thingModelJson)) {
            query.put("ThingModelJson", request.thingModelJson);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateThingModel"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateThingModelResponse());
    }

    /**
     * <b>description</b> :
     * <h2>Limits</h2>
     * <ul>
     * <li>If a product is published, you must call the <a href="https://help.aliyun.com/document_detail/213875.html">CancelReleaseProduct</a> operation to unpublish the product before you call this operation.</li>
     * <li>When you call this operation, you can use the <a href="https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb">json-schema</a> library to verify the input parameters in <strong>ThingModelJson</strong>. For more information, see <a href="https://help.aliyun.com/document_detail/150457.html">Data structure of ThingModelJson</a>.</li>
     * <li>You can call this operation to update only one feature. TSL features include properties, services, and events.</li>
     * <li>Each Alibaba Cloud account can run a maximum of 5 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request UpdateThingModelRequest
     * @return UpdateThingModelResponse
     */
    public UpdateThingModelResponse updateThingModel(UpdateThingModelRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateThingModelWithOptions(request, runtime);
    }

    /**
     * <b>description</b> :
     * <p>  A data parsing script is used to convert the custom-formatted data to JSON data after the data is submitted by a device. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see <a href="https://help.aliyun.com/document_detail/149963.html">Submit scripts for data parsing</a>.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request UpdateThingScriptRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateThingScriptResponse
     */
    public UpdateThingScriptResponse updateThingScriptWithOptions(UpdateThingScriptRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scriptContent)) {
            query.put("ScriptContent", request.scriptContent);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.scriptType)) {
            query.put("ScriptType", request.scriptType);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateThingScript"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateThingScriptResponse());
    }

    /**
     * <b>description</b> :
     * <p>  A data parsing script is used to convert the custom-formatted data to JSON data after the data is submitted by a device. You can write a script in JavaScript, Python 2.7, and PHP 7.2. For more information, see <a href="https://help.aliyun.com/document_detail/149963.html">Submit scripts for data parsing</a>.</p>
     * <ul>
     * <li>Each Alibaba Cloud account can run a maximum of 10 queries per second (QPS).<blockquote>
     * <p>RAM users of an Alibaba Cloud account share the quota of the account.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * @param request UpdateThingScriptRequest
     * @return UpdateThingScriptResponse
     */
    public UpdateThingScriptResponse updateThingScript(UpdateThingScriptRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateThingScriptWithOptions(request, runtime);
    }

    /**
     * <b>summary</b> : 
     * <p>Enables or disables the retained message broadcasting feature for a custom topic.</p>
     * 
     * @param request UpdateTopicConfigRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return UpdateTopicConfigResponse
     */
    public UpdateTopicConfigResponse updateTopicConfigWithOptions(UpdateTopicConfigRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.codec)) {
            query.put("Codec", request.codec);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.description)) {
            query.put("Description", request.description);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.enableBroadcast)) {
            query.put("EnableBroadcast", request.enableBroadcast);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.enableProxySubscribe)) {
            query.put("EnableProxySubscribe", request.enableProxySubscribe);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.operation)) {
            query.put("Operation", request.operation);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.topicFullName)) {
            query.put("TopicFullName", request.topicFullName);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "UpdateTopicConfig"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new UpdateTopicConfigResponse());
    }

    /**
     * <b>summary</b> : 
     * <p>Enables or disables the retained message broadcasting feature for a custom topic.</p>
     * 
     * @param request UpdateTopicConfigRequest
     * @return UpdateTopicConfigResponse
     */
    public UpdateTopicConfigResponse updateTopicConfig(UpdateTopicConfigRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.updateTopicConfigWithOptions(request, runtime);
    }

    /**
     * @param request WriteDevicesHotStorageDataRequest
     * @param runtime runtime options for this request RuntimeOptions
     * @return WriteDevicesHotStorageDataResponse
     */
    public WriteDevicesHotStorageDataResponse writeDevicesHotStorageDataWithOptions(WriteDevicesHotStorageDataRequest request, com.aliyun.teautil.models.RuntimeOptions runtime) throws Exception {
        com.aliyun.teautil.Common.validateModel(request);
        java.util.Map<String, Object> query = new java.util.HashMap<>();
        if (!com.aliyun.teautil.Common.isUnset(request.deviceName)) {
            query.put("DeviceName", request.deviceName);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotId)) {
            query.put("IotId", request.iotId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.iotInstanceId)) {
            query.put("IotInstanceId", request.iotInstanceId);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.items)) {
            query.put("Items", request.items);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.productKey)) {
            query.put("ProductKey", request.productKey);
        }

        if (!com.aliyun.teautil.Common.isUnset(request.userTopic)) {
            query.put("UserTopic", request.userTopic);
        }

        com.aliyun.teaopenapi.models.OpenApiRequest req = com.aliyun.teaopenapi.models.OpenApiRequest.build(TeaConverter.buildMap(
            new TeaPair("query", com.aliyun.openapiutil.Client.query(query))
        ));
        com.aliyun.teaopenapi.models.Params params = com.aliyun.teaopenapi.models.Params.build(TeaConverter.buildMap(
            new TeaPair("action", "WriteDevicesHotStorageData"),
            new TeaPair("version", "2018-01-20"),
            new TeaPair("protocol", "HTTPS"),
            new TeaPair("pathname", "/"),
            new TeaPair("method", "POST"),
            new TeaPair("authType", "AK"),
            new TeaPair("style", "RPC"),
            new TeaPair("reqBodyType", "formData"),
            new TeaPair("bodyType", "json")
        ));
        return TeaModel.toModel(this.callApi(params, req, runtime), new WriteDevicesHotStorageDataResponse());
    }

    /**
     * @param request WriteDevicesHotStorageDataRequest
     * @return WriteDevicesHotStorageDataResponse
     */
    public WriteDevicesHotStorageDataResponse writeDevicesHotStorageData(WriteDevicesHotStorageDataRequest request) throws Exception {
        com.aliyun.teautil.models.RuntimeOptions runtime = new com.aliyun.teautil.models.RuntimeOptions();
        return this.writeDevicesHotStorageDataWithOptions(request, runtime);
    }
}
