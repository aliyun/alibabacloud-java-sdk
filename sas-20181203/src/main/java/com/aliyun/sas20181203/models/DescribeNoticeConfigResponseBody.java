// This file is auto-generated, don't edit it. Thanks.
package com.aliyun.sas20181203.models;

import com.aliyun.tea.*;

public class DescribeNoticeConfigResponseBody extends TeaModel {
    /**
     * <p>An array that consists of the notification settings.</p>
     */
    @NameInMap("NoticeConfigList")
    public java.util.List<DescribeNoticeConfigResponseBodyNoticeConfigList> noticeConfigList;

    /**
     * <p>The ID of the request, which is used to locate and troubleshoot issues.</p>
     */
    @NameInMap("RequestId")
    public String requestId;

    public static DescribeNoticeConfigResponseBody build(java.util.Map<String, ?> map) throws Exception {
        DescribeNoticeConfigResponseBody self = new DescribeNoticeConfigResponseBody();
        return TeaModel.build(map, self);
    }

    public DescribeNoticeConfigResponseBody setNoticeConfigList(java.util.List<DescribeNoticeConfigResponseBodyNoticeConfigList> noticeConfigList) {
        this.noticeConfigList = noticeConfigList;
        return this;
    }
    public java.util.List<DescribeNoticeConfigResponseBodyNoticeConfigList> getNoticeConfigList() {
        return this.noticeConfigList;
    }

    public DescribeNoticeConfigResponseBody setRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }
    public String getRequestId() {
        return this.requestId;
    }

    public static class DescribeNoticeConfigResponseBodyNoticeConfigList extends TeaModel {
        /**
         * <p>The ID of the user.</p>
         */
        @NameInMap("AliUid")
        public Long aliUid;

        /**
         * <p>The page number of the returned page.</p>
         */
        @NameInMap("CurrentPage")
        public Integer currentPage;

        /**
         * <p>The identifier of the notification item. Valid values:</p>
         * <br>
         * <p>*   **yundun\_security_Weekreport**: notification for vulnerabilities</p>
         * <p>*   **yundun\_sas\_antiransomware_task**: notification for results of restoration tasks</p>
         * <p>*   **sas_healthcheck**: notification for baseline checks</p>
         * <p>*   **sas_suspicious**: notification for alerts generated by Security Center</p>
         * <p>*   **yundun\_aegis\_AV_true**: notification for precision defense</p>
         * <p>*   **yundun\_sas\_ak_leakage**: notification for AccessKey pair leaks</p>
         * <p>*   **yundun\_sas\_config_alert**: notification for configuration assessment</p>
         * <p>*   **yundun\_sas\_vul_Emergency**: notification for urgent vulnerabilities</p>
         * <p>*   **yundun\_webguard_event**: notification for web tamper proofing</p>
         * <p>*   **yundun\_sas\_cloud\_native_firewall**: notification for alerts generated by the container firewall feature</p>
         * <p>*   **yundun\_sas\_cloud\_native\_firewall_Defense**: notification for proactive defense implemented by the container firewall feature</p>
         * <p>*   **yundun\_IP_Blocking**: notification for blocked brute-force attacks initiated from malicious IP addresses</p>
         * <p>*   **yundun\_sas\_anti\_virus_config**: notification for virus scan</p>
         * <p>*   **yundun\_sas_log**: notification for excess logs</p>
         * <p>*   **yundun\_honeypot_alarm**: notification for alerts generated by the honeypot feature</p>
         * <p>*   **aliyun\_rasp_alarm**: notification for alerts generated by the application security feature</p>
         * <p>*   **virusScheduleTask**: notification for completion of scheduled virus scans</p>
         * <p>*   **yundun\_anti_Virus**: notification that no security checks are performed</p>
         * <p>*   **sas_vulnerability**: notification for vulnerabilities</p>
         * <p>*   **weeklyreport**: notification for weekly reports</p>
         * <p>*   **agent**: notification that the Security Center agent is offline</p>
         * <p>*   **bruteforcesuccess**: notification for protection against brute-force attacks</p>
         * <p>*   **webshell**: notification for webshells</p>
         * <p>*   **suspicious**: notification for alerts generated by Server Guard</p>
         * <p>*   **patch**: deprecated</p>
         * <p>*   **remotelogin**: notification for remote logons</p>
         * <p>*   **health**: notification for security checks</p>
         * <p>*   **yundun\_sas\_cloudsiem_log**: notifications of insufficient threat analysis log capacity</p>
         * <br>
         * <p>> If the value is **yundun\_security_Weekreport**, weekly reports are sent to notify you of unhandled vulnerabilities.</p>
         */
        @NameInMap("Project")
        public String project;

        /**
         * <p>The notification method. Valid values:</p>
         * <br>
         * <p>*   **1**: text message</p>
         * <p>*   **2**: email</p>
         * <p>*   **4**: internal message</p>
         * <p>*   **3**: text message and email</p>
         * <p>*   **5**: text message and internal message</p>
         * <p>*   **6**: email and internal message</p>
         * <p>*   **7**: text message, email, and internal message</p>
         */
        @NameInMap("Route")
        public Integer route;

        /**
         * <p>The time period during which Security Center sends notifications. Valid values:</p>
         * <br>
         * <p>*   **0**: any time</p>
         * <p>*   **1**: 08:00 to 22:00</p>
         */
        @NameInMap("TimeLimit")
        public Integer timeLimit;

        public static DescribeNoticeConfigResponseBodyNoticeConfigList build(java.util.Map<String, ?> map) throws Exception {
            DescribeNoticeConfigResponseBodyNoticeConfigList self = new DescribeNoticeConfigResponseBodyNoticeConfigList();
            return TeaModel.build(map, self);
        }

        public DescribeNoticeConfigResponseBodyNoticeConfigList setAliUid(Long aliUid) {
            this.aliUid = aliUid;
            return this;
        }
        public Long getAliUid() {
            return this.aliUid;
        }

        public DescribeNoticeConfigResponseBodyNoticeConfigList setCurrentPage(Integer currentPage) {
            this.currentPage = currentPage;
            return this;
        }
        public Integer getCurrentPage() {
            return this.currentPage;
        }

        public DescribeNoticeConfigResponseBodyNoticeConfigList setProject(String project) {
            this.project = project;
            return this;
        }
        public String getProject() {
            return this.project;
        }

        public DescribeNoticeConfigResponseBodyNoticeConfigList setRoute(Integer route) {
            this.route = route;
            return this;
        }
        public Integer getRoute() {
            return this.route;
        }

        public DescribeNoticeConfigResponseBodyNoticeConfigList setTimeLimit(Integer timeLimit) {
            this.timeLimit = timeLimit;
            return this;
        }
        public Integer getTimeLimit() {
            return this.timeLimit;
        }

    }

}
