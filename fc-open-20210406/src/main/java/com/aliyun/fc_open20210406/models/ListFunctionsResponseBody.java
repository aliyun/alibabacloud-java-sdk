// This file is auto-generated, don't edit it. Thanks.
package com.aliyun.fc_open20210406.models;

import com.aliyun.tea.*;

public class ListFunctionsResponseBody extends TeaModel {
    /**
     * <p>The information about functions.</p>
     */
    @NameInMap("functions")
    public java.util.List<ListFunctionsResponseBodyFunctions> functions;

    /**
     * <p>The token used to obtain more results. If this parameter is not returned, all the layers are returned.</p>
     * 
     * <strong>example:</strong>
     * <p>8bj81uI8n****</p>
     */
    @NameInMap("nextToken")
    public String nextToken;

    public static ListFunctionsResponseBody build(java.util.Map<String, ?> map) throws Exception {
        ListFunctionsResponseBody self = new ListFunctionsResponseBody();
        return TeaModel.build(map, self);
    }

    public ListFunctionsResponseBody setFunctions(java.util.List<ListFunctionsResponseBodyFunctions> functions) {
        this.functions = functions;
        return this;
    }
    public java.util.List<ListFunctionsResponseBodyFunctions> getFunctions() {
        return this.functions;
    }

    public ListFunctionsResponseBody setNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    public String getNextToken() {
        return this.nextToken;
    }

    public static class ListFunctionsResponseBodyFunctions extends TeaModel {
        /**
         * <p>The port on which the HTTP server listens for the custom runtime or Custom Container runtime.</p>
         * 
         * <strong>example:</strong>
         * <p>9000</p>
         */
        @NameInMap("caPort")
        public Integer caPort;

        /**
         * <p>The CRC64 value of the function code package.</p>
         * 
         * <strong>example:</strong>
         * <p>5434025278388143772</p>
         */
        @NameInMap("codeChecksum")
        public String codeChecksum;

        /**
         * <p>The size of the function code package returned by the system. Unit: bytes.</p>
         * 
         * <strong>example:</strong>
         * <p>1024</p>
         */
        @NameInMap("codeSize")
        public Long codeSize;

        /**
         * <p>The CPU size of the function. Unit: vCPUs. The value is a multiple of 0.05 vCPUs.</p>
         * 
         * <strong>example:</strong>
         * <p>1.5</p>
         */
        @NameInMap("cpu")
        public Float cpu;

        /**
         * <p>The time when the function was created.</p>
         * 
         * <strong>example:</strong>
         * <p>2016-08-15T15:00:00.000+0000</p>
         */
        @NameInMap("createdTime")
        public String createdTime;

        /**
         * <p>The configurations of the Custom Container runtime.</p>
         */
        @NameInMap("customContainerConfig")
        public CustomContainerConfig customContainerConfig;

        /**
         * <p>The custom Domain Name System (DNS) settings of the function.</p>
         */
        @NameInMap("customDNS")
        public CustomDNS customDNS;

        /**
         * <p>The custom health check configurations of the function. This parameter is applicable only to custom runtimes and Custom Container runtimes.</p>
         */
        @NameInMap("customHealthCheckConfig")
        public CustomHealthCheckConfig customHealthCheckConfig;

        /**
         * <p>The custom runtime configurations.</p>
         */
        @NameInMap("customRuntimeConfig")
        public CustomRuntimeConfig customRuntimeConfig;

        /**
         * <p>The description of the function.</p>
         * 
         * <strong>example:</strong>
         * <p>This is a demo hello world function</p>
         */
        @NameInMap("description")
        public String description;

        /**
         * <p>The disk size of the function. Unit: MB. Valid values: 512 MB and 10240 MB.</p>
         * 
         * <strong>example:</strong>
         * <p>512</p>
         */
        @NameInMap("diskSize")
        public Integer diskSize;

        /**
         * <p>The environment variables that are configured for the function. You can obtain the values of the environment variables from the function.</p>
         */
        @NameInMap("environmentVariables")
        public java.util.Map<String, String> environmentVariables;

        /**
         * <p>The ID generated by the system for each function. The ID is globally unique.</p>
         * 
         * <strong>example:</strong>
         * <p>2d28e0e9-9ba5-4eed-8b1a-d3d9cd24****</p>
         */
        @NameInMap("functionId")
        public String functionId;

        /**
         * <p>The function name.</p>
         * 
         * <strong>example:</strong>
         * <p>demo-function</p>
         */
        @NameInMap("functionName")
        public String functionName;

        /**
         * <p>The GPU memory size of the function. Unit: MB, which is a multiple of 1024MB.</p>
         * 
         * <strong>example:</strong>
         * <p>2048</p>
         */
        @NameInMap("gpuMemorySize")
        public Integer gpuMemorySize;

        /**
         * <p>The handler of the function.</p>
         * 
         * <strong>example:</strong>
         * <p>index.handler</p>
         */
        @NameInMap("handler")
        public String handler;

        /**
         * <p>The timeout period for the Initializer hook to run. Unit: seconds. Default value: 3. Minimum value: 1. Maximum value: 300. When the period ends, the execution of the Initializer hook is terminated.</p>
         * 
         * <strong>example:</strong>
         * <p>60</p>
         */
        @NameInMap("initializationTimeout")
        public Integer initializationTimeout;

        /**
         * <p>The handler of the initializer function. The format of the value varies based on the programming language that you use. For more information, see <a href="https://help.aliyun.com/document_detail/157704.html">Initializer function</a>.</p>
         * 
         * <strong>example:</strong>
         * <p>index.handler</p>
         */
        @NameInMap("initializer")
        public String initializer;

        /**
         * <p>The number of requests that can be concurrently processed by a single instance.</p>
         * 
         * <strong>example:</strong>
         * <p>10</p>
         */
        @NameInMap("instanceConcurrency")
        public Integer instanceConcurrency;

        /**
         * <p>The lifecycle configurations of instances.</p>
         */
        @NameInMap("instanceLifecycleConfig")
        public InstanceLifecycleConfig instanceLifecycleConfig;

        /**
         * <p>The soft concurrency of the instance. You can use this property to implement graceful scale-ups for instances. If the number of concurrent requests on an instance is greater than the soft concurrency value of the instance, an instance scale-up is triggered. For example, if your instance requires a long time to start, you can specify a suitable soft concurrency to start the instance in advance.</p>
         * <p>The value must be less than or equal to that of <strong>instanceConcurrency</strong>.</p>
         * 
         * <strong>example:</strong>
         * <p>5</p>
         */
        @NameInMap("instanceSoftConcurrency")
        public Integer instanceSoftConcurrency;

        /**
         * <p>The instance type of the function. Valid values:</p>
         * <ul>
         * <li><strong>e1</strong>: elastic instances</li>
         * <li><strong>c1</strong>: performance instances</li>
         * <li><strong>fc.gpu.tesla.1</strong>: GPU-accelerated instances with Tesla series cards</li>
         * <li><strong>fc.gpu.ampere.1</strong>: GPU-accelerated instances with Ampere series cards</li>
         * <li><strong>fc.gpu.ada.1</strong>: GPU-accelerated instances with Ada series cards</li>
         * <li><strong>g1</strong>: same as <strong>fc.gpu.tesla.1</strong></li>
         * </ul>
         * 
         * <strong>example:</strong>
         * <p>e1</p>
         */
        @NameInMap("instanceType")
        public String instanceType;

        /**
         * <p>The time when the function was last modified.</p>
         * 
         * <strong>example:</strong>
         * <p>2016-08-15T17:00:00.000+0000</p>
         */
        @NameInMap("lastModifiedTime")
        public String lastModifiedTime;

        /**
         * <p>A list of layers.</p>
         * <blockquote>
         * <p> If multiple layers exist, the layers are merged based on the array subscripts in descending order. The content of a layer with a smaller subscript overwrites that of a larger subscript.</p>
         * </blockquote>
         */
        @NameInMap("layers")
        public java.util.List<String> layers;

        /**
         * <p>A list of layer ARNs.</p>
         */
        @NameInMap("layersArnV2")
        public java.util.List<String> layersArnV2;

        /**
         * <p>The memory size of the function. Unit: MB.</p>
         * 
         * <strong>example:</strong>
         * <p>512</p>
         */
        @NameInMap("memorySize")
        public Integer memorySize;

        /**
         * <p>The runtime of the function. Valid values: <strong>nodejs16</strong>, <strong>nodejs14</strong>, <strong>nodejs12</strong>, <strong>nodejs10</strong>, <strong>nodejs8</strong>, <strong>nodejs6</strong>, <strong>nodejs4.4</strong>, <strong>python3.10</strong>, <strong>python3.9</strong>, <strong>python3</strong>, <strong>python2.7</strong>, <strong>java11</strong>, <strong>java8</strong>, <strong>go1</strong>, <strong>php7.2</strong>, <strong>dotnetcore3.1</strong>, <strong>dotnetcore2.1</strong>, <strong>custom.debian10</strong>, <strong>custom</strong>, and <strong>custom-container</strong>. For more information, see <a href="https://help.aliyun.com/document_detail/73338.html">Runtimes that are supported by Function Compute</a>.</p>
         * 
         * <strong>example:</strong>
         * <p>python3.9</p>
         */
        @NameInMap("runtime")
        public String runtime;

        /**
         * <p>The timeout period for the function to run. Unit: seconds. Default value: 60. Minimum value: 1. Maximum value: 600. When this period expires, the execution of the function is terminated.</p>
         * 
         * <strong>example:</strong>
         * <p>10</p>
         */
        @NameInMap("timeout")
        public Integer timeout;

        public static ListFunctionsResponseBodyFunctions build(java.util.Map<String, ?> map) throws Exception {
            ListFunctionsResponseBodyFunctions self = new ListFunctionsResponseBodyFunctions();
            return TeaModel.build(map, self);
        }

        public ListFunctionsResponseBodyFunctions setCaPort(Integer caPort) {
            this.caPort = caPort;
            return this;
        }
        public Integer getCaPort() {
            return this.caPort;
        }

        public ListFunctionsResponseBodyFunctions setCodeChecksum(String codeChecksum) {
            this.codeChecksum = codeChecksum;
            return this;
        }
        public String getCodeChecksum() {
            return this.codeChecksum;
        }

        public ListFunctionsResponseBodyFunctions setCodeSize(Long codeSize) {
            this.codeSize = codeSize;
            return this;
        }
        public Long getCodeSize() {
            return this.codeSize;
        }

        public ListFunctionsResponseBodyFunctions setCpu(Float cpu) {
            this.cpu = cpu;
            return this;
        }
        public Float getCpu() {
            return this.cpu;
        }

        public ListFunctionsResponseBodyFunctions setCreatedTime(String createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        public String getCreatedTime() {
            return this.createdTime;
        }

        public ListFunctionsResponseBodyFunctions setCustomContainerConfig(CustomContainerConfig customContainerConfig) {
            this.customContainerConfig = customContainerConfig;
            return this;
        }
        public CustomContainerConfig getCustomContainerConfig() {
            return this.customContainerConfig;
        }

        public ListFunctionsResponseBodyFunctions setCustomDNS(CustomDNS customDNS) {
            this.customDNS = customDNS;
            return this;
        }
        public CustomDNS getCustomDNS() {
            return this.customDNS;
        }

        public ListFunctionsResponseBodyFunctions setCustomHealthCheckConfig(CustomHealthCheckConfig customHealthCheckConfig) {
            this.customHealthCheckConfig = customHealthCheckConfig;
            return this;
        }
        public CustomHealthCheckConfig getCustomHealthCheckConfig() {
            return this.customHealthCheckConfig;
        }

        public ListFunctionsResponseBodyFunctions setCustomRuntimeConfig(CustomRuntimeConfig customRuntimeConfig) {
            this.customRuntimeConfig = customRuntimeConfig;
            return this;
        }
        public CustomRuntimeConfig getCustomRuntimeConfig() {
            return this.customRuntimeConfig;
        }

        public ListFunctionsResponseBodyFunctions setDescription(String description) {
            this.description = description;
            return this;
        }
        public String getDescription() {
            return this.description;
        }

        public ListFunctionsResponseBodyFunctions setDiskSize(Integer diskSize) {
            this.diskSize = diskSize;
            return this;
        }
        public Integer getDiskSize() {
            return this.diskSize;
        }

        public ListFunctionsResponseBodyFunctions setEnvironmentVariables(java.util.Map<String, String> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }
        public java.util.Map<String, String> getEnvironmentVariables() {
            return this.environmentVariables;
        }

        public ListFunctionsResponseBodyFunctions setFunctionId(String functionId) {
            this.functionId = functionId;
            return this;
        }
        public String getFunctionId() {
            return this.functionId;
        }

        public ListFunctionsResponseBodyFunctions setFunctionName(String functionName) {
            this.functionName = functionName;
            return this;
        }
        public String getFunctionName() {
            return this.functionName;
        }

        public ListFunctionsResponseBodyFunctions setGpuMemorySize(Integer gpuMemorySize) {
            this.gpuMemorySize = gpuMemorySize;
            return this;
        }
        public Integer getGpuMemorySize() {
            return this.gpuMemorySize;
        }

        public ListFunctionsResponseBodyFunctions setHandler(String handler) {
            this.handler = handler;
            return this;
        }
        public String getHandler() {
            return this.handler;
        }

        public ListFunctionsResponseBodyFunctions setInitializationTimeout(Integer initializationTimeout) {
            this.initializationTimeout = initializationTimeout;
            return this;
        }
        public Integer getInitializationTimeout() {
            return this.initializationTimeout;
        }

        public ListFunctionsResponseBodyFunctions setInitializer(String initializer) {
            this.initializer = initializer;
            return this;
        }
        public String getInitializer() {
            return this.initializer;
        }

        public ListFunctionsResponseBodyFunctions setInstanceConcurrency(Integer instanceConcurrency) {
            this.instanceConcurrency = instanceConcurrency;
            return this;
        }
        public Integer getInstanceConcurrency() {
            return this.instanceConcurrency;
        }

        public ListFunctionsResponseBodyFunctions setInstanceLifecycleConfig(InstanceLifecycleConfig instanceLifecycleConfig) {
            this.instanceLifecycleConfig = instanceLifecycleConfig;
            return this;
        }
        public InstanceLifecycleConfig getInstanceLifecycleConfig() {
            return this.instanceLifecycleConfig;
        }

        public ListFunctionsResponseBodyFunctions setInstanceSoftConcurrency(Integer instanceSoftConcurrency) {
            this.instanceSoftConcurrency = instanceSoftConcurrency;
            return this;
        }
        public Integer getInstanceSoftConcurrency() {
            return this.instanceSoftConcurrency;
        }

        public ListFunctionsResponseBodyFunctions setInstanceType(String instanceType) {
            this.instanceType = instanceType;
            return this;
        }
        public String getInstanceType() {
            return this.instanceType;
        }

        public ListFunctionsResponseBodyFunctions setLastModifiedTime(String lastModifiedTime) {
            this.lastModifiedTime = lastModifiedTime;
            return this;
        }
        public String getLastModifiedTime() {
            return this.lastModifiedTime;
        }

        public ListFunctionsResponseBodyFunctions setLayers(java.util.List<String> layers) {
            this.layers = layers;
            return this;
        }
        public java.util.List<String> getLayers() {
            return this.layers;
        }

        public ListFunctionsResponseBodyFunctions setLayersArnV2(java.util.List<String> layersArnV2) {
            this.layersArnV2 = layersArnV2;
            return this;
        }
        public java.util.List<String> getLayersArnV2() {
            return this.layersArnV2;
        }

        public ListFunctionsResponseBodyFunctions setMemorySize(Integer memorySize) {
            this.memorySize = memorySize;
            return this;
        }
        public Integer getMemorySize() {
            return this.memorySize;
        }

        public ListFunctionsResponseBodyFunctions setRuntime(String runtime) {
            this.runtime = runtime;
            return this;
        }
        public String getRuntime() {
            return this.runtime;
        }

        public ListFunctionsResponseBodyFunctions setTimeout(Integer timeout) {
            this.timeout = timeout;
            return this;
        }
        public Integer getTimeout() {
            return this.timeout;
        }

    }

}
