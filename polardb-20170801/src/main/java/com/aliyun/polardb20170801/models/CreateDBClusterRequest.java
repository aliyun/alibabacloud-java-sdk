// This file is auto-generated, don't edit it. Thanks.
package com.aliyun.polardb20170801.models;

import com.aliyun.tea.*;

public class CreateDBClusterRequest extends TeaModel {
    /**
     * <p>Whether to enable idle pause. Values:</p>
     * <ul>
     * <li><p><strong>true</strong>: Enabled</p>
     * </li>
     * <li><p><strong>false</strong>: Disabled (default)</p>
     * </li>
     * </ul>
     * <blockquote>
     * <p>Only supported by Serverless clusters.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>true</p>
     */
    @NameInMap("AllowShutDown")
    public String allowShutDown;

    /**
     * <p>CPU architecture. Available values include:</p>
     * <ul>
     * <li>X86</li>
     * <li>ARM</li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>X86</p>
     */
    @NameInMap("Architecture")
    public String architecture;

    /**
     * <p>Whether to enable auto-renewal, with available values as follows:</p>
     * <ul>
     * <li><strong>true</strong>: Auto-renew.</li>
     * <li><strong>false</strong>: Do not auto-renew.</li>
     * </ul>
     * <p>The default is <strong>false</strong>.</p>
     * <blockquote>
     * <p>This parameter takes effect only when <strong>PayType</strong> is set to <strong>Prepaid</strong>.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>true</p>
     */
    @NameInMap("AutoRenew")
    public Boolean autoRenew;

    /**
     * <p>Backup retention policy upon cluster deletion, with valid values as follows:</p>
     * <ul>
     * <li><strong>ALL</strong>: Permanently retain all backups.</li>
     * <li><strong>LATEST</strong>: Permanently retain the latest backup (automatically backed up before deletion).</li>
     * <li><strong>NONE</strong>: Do not retain backup sets upon cluster deletion.</li>
     * </ul>
     * <p>By default, the value is set to <strong>NONE</strong>, indicating no backup sets are retained upon cluster deletion.</p>
     * <blockquote>
     * <p>This parameter applies only when <strong>DBType</strong> is <strong>MySQL</strong>.
     * Serverless clusters do not support this parameter.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>NONE</p>
     */
    @NameInMap("BackupRetentionPolicyOnClusterDeletion")
    public String backupRetentionPolicyOnClusterDeletion;

    @NameInMap("BurstingEnabled")
    public String burstingEnabled;

    /**
     * <p>Used to ensure idempotency of the request. Generated by the client, ensuring uniqueness across different requests, case-sensitive, and not exceeding 64 ASCII characters.</p>
     * 
     * <strong>example:</strong>
     * <p>6000170000591aed949d0f5********************</p>
     */
    @NameInMap("ClientToken")
    public String clientToken;

    /**
     * <p>The point in time to clone data, with the following options:</p>
     * <ul>
     * <li><strong>LATEST</strong>: Data from the latest time point.</li>
     * <li><strong>BackupID</strong>: Historical backup set ID, please enter the specific backup set ID.</li>
     * <li><strong>Timestamp</strong>: Historical time point, please enter the specific time in the format <code>YYYY-MM-DDThh:mm:ssZ</code> (UTC time).</li>
     * </ul>
     * <p>The default value is <strong>LATEST</strong>.</p>
     * <blockquote>
     * <p>If <strong>CreationOption</strong> is <strong>CloneFromRDS</strong>, this parameter can only be set to <strong>LATEST</strong>.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>LATEST</p>
     */
    @NameInMap("CloneDataPoint")
    public String cloneDataPoint;

    /**
     * <p>Cluster network type, currently only VPC is supported, with a fixed value of <strong>VPC</strong>.</p>
     * 
     * <strong>example:</strong>
     * <p>VPC</p>
     */
    @NameInMap("ClusterNetworkType")
    public String clusterNetworkType;

    /**
     * <p>Product series, with valid values as follows:</p>
     * <ul>
     * <li><strong>Normal</strong>: Cluster Edition (default)</li>
     * <li><strong>Basic</strong>: Single-node</li>
     * <li><strong>ArchiveNormal</strong>: High Compression Engine (X-Engine)</li>
     * <li><strong>NormalMultimaster</strong>: Multi-master Cluster Edition</li>
     * <li><strong>SENormal</strong>: Standard Edition</li>
     * </ul>
     * <blockquote>
     * <ul>
     * <li><strong>MySQL</strong> <strong>5.6</strong>, <strong>5.7</strong>, <strong>8.0</strong>, <strong>PostgreSQL</strong> <strong>14</strong>, and <strong>Oracle Syntax Compatible 2.0</strong> support <strong>Basic</strong>.</li>
     * <li><strong>MySQL</strong> <strong>8.0</strong> supports <strong>ArchiveNormal</strong> and <strong>NormalMultimaster</strong>.</li>
     * <li><strong>MySQL</strong> <strong>5.6</strong>, <strong>5.7</strong>, <strong>8.0</strong>, and <strong>PostgreSQL</strong> <strong>14</strong> support <strong>SENormal</strong>.</li>
     * </ul>
     * </blockquote>
     * <p>For more information about product series, see <a href="https://help.aliyun.com/document_detail/183258.html">Product Series</a>.</p>
     * 
     * <strong>example:</strong>
     * <p>Normal</p>
     */
    @NameInMap("CreationCategory")
    public String creationCategory;

    /**
     * <p>Creation method, with the following values supported:</p>
     * <ul>
     * <li><p><strong>Normal</strong>: Creates a brand new PolarDB cluster. For console operations, refer to the following documents:</p>
     * <ul>
     * <li><a href="https://help.aliyun.com/document_detail/58769.html">Create a PolarDB MySQL Edition Database Cluster</a></li>
     * <li><a href="https://help.aliyun.com/document_detail/118063.html">Create a PolarDB PostgreSQL Edition Database Cluster</a></li>
     * <li><a href="https://help.aliyun.com/document_detail/118182.html">Create a PolarDB PostgreSQL Edition (Oracle Compatible) Database Cluster</a></li>
     * </ul>
     * </li>
     * <li><p><strong>CloneFromPolarDB</strong>: Clones data from an existing PolarDB cluster to a new PolarDB cluster. For console operations, refer to the following documents:</p>
     * <ul>
     * <li><a href="https://help.aliyun.com/document_detail/87966.html">Clone a PolarDB MySQL Edition Cluster</a></li>
     * <li><a href="https://help.aliyun.com/document_detail/118108.html">Clone a PolarDB PostgreSQL Edition Cluster</a></li>
     * <li><a href="https://help.aliyun.com/document_detail/118221.html">Clone a PolarDB PostgreSQL Edition (Oracle Compatible) Cluster</a></li>
     * </ul>
     * </li>
     * <li><p><strong>RecoverFromRecyclebin</strong>: Recovers data from a released PolarDB cluster to a new PolarDB cluster. For console operations, refer to the following documents:</p>
     * <ul>
     * <li><a href="https://help.aliyun.com/document_detail/164880.html">Restore a Released PolarDB MySQL Edition Cluster</a></li>
     * <li><a href="https://help.aliyun.com/document_detail/432844.html">Restore a Released PolarDB PostgreSQL Edition Cluster</a></li>
     * <li><a href="https://help.aliyun.com/document_detail/424632.html">Restore a Released PolarDB PostgreSQL Edition (Oracle Compatible) Cluster</a></li>
     * </ul>
     * </li>
     * <li><p><strong>CloneFromRDS</strong>: Clones data from an existing RDS instance to a new PolarDB cluster. Console operation guide is available at <a href="https://help.aliyun.com/document_detail/121812.html">One-click Clone from RDS MySQL to PolarDB MySQL Edition</a>.</p>
     * </li>
     * <li><p><strong>MigrationFromRDS</strong>: Migrates data from an existing RDS instance to a new PolarDB cluster. The created PolarDB cluster operates in read-only mode with Binlog enabled by default. Console operation guide is at <a href="https://help.aliyun.com/document_detail/121582.html">One-click Upgrade from RDS MySQL to PolarDB MySQL Edition</a>.</p>
     * </li>
     * <li><p><strong>CreateGdnStandby</strong>: Creates a standby cluster. Console operation guide can be found at <a href="https://help.aliyun.com/document_detail/160381.html">Add Standby Cluster</a>.</p>
     * </li>
     * <li><p><strong>UpgradeFromPolarDB</strong>: Upgrades and migrates from PolarDB. Console operation guide is detailed in <a href="https://help.aliyun.com/document_detail/459712.html">Major Version Upgrade</a>.</p>
     * </li>
     * </ul>
     * <p>The default value is <strong>Normal</strong>.</p>
     * <blockquote>
     * <p>When <strong>DBType</strong> is <strong>MySQL</strong> and <strong>DBVersion</strong> is <strong>8.0</strong>, this parameter can also take the value <strong>CreateGdnStandby</strong>.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>Normal</p>
     */
    @NameInMap("CreationOption")
    public String creationOption;

    /**
     * <p>Cluster name, which must meet the following requirements:</p>
     * <ul>
     * <li>Cannot start with <code>http://</code> or <code>https://</code>.</li>
     * <li>Length should be between 2 and 256 characters.</li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>test</p>
     */
    @NameInMap("DBClusterDescription")
    public String DBClusterDescription;

    /**
     * <p>Database engine minor version number. Valid values include:</p>
     * <ul>
     * <li><strong>8.0.2</strong></li>
     * <li><strong>8.0.1</strong></li>
     * </ul>
     * <blockquote>
     * <p>This parameter takes effect only when <strong>DBType</strong> is <strong>MySQL</strong> and <strong>DBVersion</strong> is <strong>8.0</strong>.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>8.0.1</p>
     */
    @NameInMap("DBMinorVersion")
    public String DBMinorVersion;

    /**
     * <p>Node specifications. For details, refer to the following documents:</p>
     * <ul>
     * <li>PolarDB MySQL Edition: <a href="https://help.aliyun.com/document_detail/102542.html">Compute Node Specifications</a>.</li>
     * <li>PolarDB PostgreSQL Edition (Oracle Compatible): <a href="https://help.aliyun.com/document_detail/207921.html">Compute Node Specifications</a>.</li>
     * <li>PolarDB PostgreSQL Edition: <a href="https://help.aliyun.com/document_detail/209380.html">Compute Node Specifications</a>.</li>
     * </ul>
     * <blockquote>
     * <ul>
     * <li>For a Serverless cluster in PolarDB MySQL, enter <strong>polar.mysql.sl.small</strong>.
     * &lt;props=&quot;china&quot;&gt;&gt; - For a Serverless cluster in both PolarDB PostgreSQL (Oracle Compatible) and PolarDB PostgreSQL, enter <strong>polar.pg.sl.small.c</strong>.</li>
     * </ul>
     * </blockquote>
     * <p>This parameter is required.</p>
     * 
     * <strong>example:</strong>
     * <p>polar.mysql.x4.medium</p>
     */
    @NameInMap("DBNodeClass")
    public String DBNodeClass;

    /**
     * <p>The number of nodes. This parameter is supported for Standard Edition clusters. Valid values:</p>
     * <ul>
     * <li><strong>1</strong> (default): only one primary node.</li>
     * <li><strong>2</strong>: one read-only node and one primary node.</li>
     * </ul>
     * <blockquote>
     * </blockquote>
     * <ul>
     * <li><p>By default, an Enterprise Edition cluster has two nodes and a Standard Edition cluster has one node.</p>
     * </li>
     * <li><p>This parameter is supported only for PolarDB for MySQL clusters.</p>
     * </li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>1</p>
     */
    @NameInMap("DBNodeNum")
    public Integer DBNodeNum;

    /**
     * <p>Database engine type, with available values as follows:</p>
     * <ul>
     * <li><strong>MySQL</strong></li>
     * <li><strong>PostgreSQL</strong></li>
     * <li><strong>Oracle</strong></li>
     * </ul>
     * <p>This parameter is required.</p>
     * 
     * <strong>example:</strong>
     * <p>MySQL</p>
     */
    @NameInMap("DBType")
    public String DBType;

    /**
     * <p>Database engine version number.</p>
     * <ul>
     * <li><p>For MySQL, the version numbers are as follows:</p>
     * <ul>
     * <li><strong>5.6</strong></li>
     * <li><strong>5.7</strong></li>
     * <li><strong>8.0</strong></li>
     * </ul>
     * </li>
     * <li><p>For PostgreSQL, the version numbers are as follows:</p>
     * <ul>
     * <li><p><strong>11</strong></p>
     * </li>
     * <li><p><strong>14</strong></p>
     * </li>
     * <li><p><strong>15</strong>
     *   &lt;props=&quot;china&quot;&gt;</p>
     * <blockquote>
     * <p>When creating a Serverless cluster in PolarDB PostgreSQL, only version <strong>14</strong> is supported.</p>
     * </blockquote>
     * </li>
     * </ul>
     * </li>
     * <li><p>For Oracle, the version numbers are as follows:</p>
     * <ul>
     * <li><strong>11</strong></li>
     * <li><strong>14</strong></li>
     * </ul>
     * </li>
     * </ul>
     * <p>This parameter is required.</p>
     * 
     * <strong>example:</strong>
     * <p>5.6</p>
     */
    @NameInMap("DBVersion")
    public String DBVersion;

    /**
     * <p>Cluster timezone (UTC), with selectable values ranging from <strong>-12:00</strong> to <strong>+13:00</strong> at whole-hour intervals, e.g., <strong>00:00</strong>. The default value is <strong>SYSTEM</strong>, which matches the Region\&quot;s timezone.</p>
     * <blockquote>
     * <p>This parameter applies only when <strong>DBType</strong> is <strong>MySQL</strong>.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>SYSTEM</p>
     */
    @NameInMap("DefaultTimeZone")
    public String defaultTimeZone;

    /**
     * <p>Global Database Network (GDN) ID.</p>
     * <blockquote>
     * <p>This parameter is required when <strong>CreationOption</strong> is <strong>CreateGdnStandby</strong>.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>gdn-***********</p>
     */
    @NameInMap("GDNId")
    public String GDNId;

    /**
     * <p>Whether to enable the hot standby cluster. Values are as follows:</p>
     * <ul>
     * <li><strong>ON</strong> (default): Enables the hot standby cluster.</li>
     * <li><strong>OFF</strong>: Disables the hot standby cluster.</li>
     * <li><strong>STANDBY</strong>: Enables the hot standby cluster for the standard edition.<blockquote>
     * <p>The default value for standard edition clusters is <strong>STANDBY</strong>.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>ON</p>
     */
    @NameInMap("HotStandbyCluster")
    public String hotStandbyCluster;

    /**
     * <p>Enable Binlog feature, valid values are as follows:</p>
     * <ul>
     * <li><strong>ON</strong>: Cluster enables the Binlog feature. - <strong>OFF</strong>: Cluster disables the Binlog feature. &gt; This parameter takes effect only when the <strong>DBType</strong> parameter is set to <strong>MySQL</strong>.</li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>ON</p>
     */
    @NameInMap("LoosePolarLogBin")
    public String loosePolarLogBin;

    /**
     * <p>Enable the X-Engine storage engine feature, with valid values as follows:</p>
     * <ul>
     * <li><strong>ON</strong>: The cluster enables the X-Engine engine.</li>
     * <li><strong>OFF</strong>: The cluster disables the X-Engine engine.<blockquote>
     * <p>This parameter is effective only when <strong>CreationOption</strong> is not <strong>CreateGdnStandby</strong>, <strong>DBType</strong> is <strong>MySQL</strong>, and <strong>DBVersion</strong> is <strong>8.0</strong>. The memory specification of nodes that enable the X-Engine engine must be at least 8 GB.</p>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>ON</p>
     */
    @NameInMap("LooseXEngine")
    public String looseXEngine;

    /**
     * <p>Set the ratio for enabling the X-Engine storage engine, with a range of integers from 10 to 90.</p>
     * <blockquote>
     * <p>This parameter takes effect only when <strong>LooseXEngine</strong> is <strong>ON</strong>.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>50</p>
     */
    @NameInMap("LooseXEngineUseMemoryPct")
    public String looseXEngineUseMemoryPct;

    /**
     * <p>Whether table names are case-sensitive, with valid values as follows:</p>
     * <ul>
     * <li><strong>1</strong>: Case-insensitive</li>
     * <li><strong>0</strong>: Case-sensitive</li>
     * </ul>
     * <p>The default value is <strong>1</strong>.</p>
     * <blockquote>
     * <p>This parameter applies only when <strong>DBType</strong> is <strong>MySQL</strong>.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>1</p>
     */
    @NameInMap("LowerCaseTableNames")
    public String lowerCaseTableNames;

    @NameInMap("OwnerAccount")
    public String ownerAccount;

    @NameInMap("OwnerId")
    public Long ownerId;

    /**
     * <p>Parameter template ID.</p>
     * <blockquote>
     * <p>You can view the list of parameter templates in the target region, including the parameter template ID, by calling the <a href="https://help.aliyun.com/document_detail/207178.html">DescribeParameterGroups</a> interface.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>pcpg-**************</p>
     */
    @NameInMap("ParameterGroupId")
    public String parameterGroupId;

    /**
     * <p>Payment type, with available values as follows:</p>
     * <ul>
     * <li><strong>Postpaid</strong>: Pay-as-you-go.</li>
     * <li><strong>Prepaid</strong>: Subscription (monthly or yearly).</li>
     * </ul>
     * <p>This parameter is required.</p>
     * 
     * <strong>example:</strong>
     * <p>Postpaid</p>
     */
    @NameInMap("PayType")
    public String payType;

    /**
     * <p>If the payment type is <strong>Prepaid</strong>, this parameter is required. It specifies whether the prepaid cluster is on a monthly or yearly basis.</p>
     * <ul>
     * <li><strong>Year</strong>: Yearly subscription.</li>
     * <li><strong>Month</strong>: Monthly subscription.</li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>Month</p>
     */
    @NameInMap("Period")
    public String period;

    /**
     * <p id="p_wyg_t4a_glm">The provisioned read and write IOPS for ESSD AutoPL cloud disks. Possible values: 0 to min{50,000, 1000*capacity-Baseline Performance}.</p>
     * <p id="p_6de_jxy_k2g">Baseline Performance = min{1,800+50*capacity, 50000}.</p>
     * <note id="note_7kj_j0o_rgs">This parameter is supported only when StorageType is ESSDAUTOPL.</note>
     * 
     * <strong>example:</strong>
     * <p>1000</p>
     */
    @NameInMap("ProvisionedIops")
    public Long provisionedIops;

    /**
     * <p>Standard edition database proxy specifications. Values are as follows:</p>
     * <ul>
     * <li><strong>polar.maxscale.g2.medium.c</strong>: 2 cores.</li>
     * <li><strong>polar.maxscale.g2.large.c</strong>: 4 cores.</li>
     * <li><strong>polar.maxscale.g2.xlarge.c</strong>: 8 cores.</li>
     * <li><strong>polar.maxscale.g2.2xlarge.c</strong>: 16 cores.</li>
     * <li><strong>polar.maxscale.g2.3xlarge.c</strong>: 24 cores.</li>
     * <li><strong>polar.maxscale.g2.4xlarge.c</strong>: 32 cores.</li>
     * <li><strong>polar.maxscale.g2.8xlarge.c</strong>: 64 cores.</li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>polar.maxscale.g2.medium.c</p>
     */
    @NameInMap("ProxyClass")
    public String proxyClass;

    /**
     * <p>Database proxy type, with values including:</p>
     * <ul>
     * <li><strong>EXCLUSIVE</strong>: Enterprise Exclusive Edition</li>
     * <li><strong>GENERAL</strong>: Enterprise General Purpose Edition<blockquote>
     * <p>The proxy type must match the type of the cluster\&quot;s node specifications, i.e.,</p>
     * <ul>
     * <li>If the node specification is general, the proxy type should be Enterprise General Purpose Edition;</li>
     * <li>If the node specification is dedicated, the proxy type should be Enterprise Exclusive Edition.</li>
     * </ul>
     * </blockquote>
     * </li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>Exclusive</p>
     */
    @NameInMap("ProxyType")
    public String proxyType;

    /**
     * <p>Region ID.</p>
     * <blockquote>
     * <p>You can view available regions through the <a href="https://help.aliyun.com/document_detail/98041.html">DescribeRegions</a> interface.</p>
     * </blockquote>
     * <p>This parameter is required.</p>
     * 
     * <strong>example:</strong>
     * <p>cn-hangzhou</p>
     */
    @NameInMap("RegionId")
    public String regionId;

    /**
     * <p>Resource group ID.</p>
     * 
     * <strong>example:</strong>
     * <p>rg-************</p>
     */
    @NameInMap("ResourceGroupId")
    public String resourceGroupId;

    @NameInMap("ResourceOwnerAccount")
    public String resourceOwnerAccount;

    @NameInMap("ResourceOwnerId")
    public Long resourceOwnerId;

    /**
     * <p>Maximum scaling limit for a single node. The value range is: 1 PCU~32 PCU.</p>
     * <blockquote>
     * <p>Only supported by Serverless clusters.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>3</p>
     */
    @NameInMap("ScaleMax")
    public String scaleMax;

    /**
     * <p>Minimum scaling limit for a single node. The value range is: 1 PCU~31 PCU.</p>
     * <blockquote>
     * <p>Only supported by Serverless clusters.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>1</p>
     */
    @NameInMap("ScaleMin")
    public String scaleMin;

    /**
     * <p>Maximum scaling limit for the number of read-only nodes. The value range is: 0~15.</p>
     * <blockquote>
     * <p>Only supported by Serverless clusters.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>4</p>
     */
    @NameInMap("ScaleRoNumMax")
    public String scaleRoNumMax;

    /**
     * <p>Minimum scaling limit for the number of read-only nodes. The value range is: 0~15.</p>
     * <blockquote>
     * <p>Only supported by Serverless clusters.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>2</p>
     */
    @NameInMap("ScaleRoNumMin")
    public String scaleRoNumMin;

    /**
     * <p>PolarDB cluster whitelist IP address.</p>
     * <blockquote>
     * <p>Supports configuring multiple whitelist IP addresses, with English commas separating multiple IP addresses.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>10.<em><strong>.</strong></em>.***</p>
     */
    @NameInMap("SecurityIPList")
    public String securityIPList;

    /**
     * <p>Serverless type. The current value is fixed to <strong>AgileServerless</strong> (sensitive mode).</p>
     * <blockquote>
     * <p>This parameter is only supported by Serverless clusters.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>AgileServerless</p>
     */
    @NameInMap("ServerlessType")
    public String serverlessType;

    /**
     * <p>Source RDS instance ID or source PolarDB cluster ID. This parameter is mandatory only when <strong>CreationOption</strong> is set to <strong>MigrationFromRDS</strong>, <strong>CloneFromRDS</strong>, <strong>CloneFromPolarDB</strong>, or <strong>RecoverFromRecyclebin</strong>.</p>
     * <ul>
     * <li><p>If <strong>CreationOption</strong> is <strong>MigrationFromRDS</strong> or <strong>CloneFromRDS</strong>, you need to input the source RDS instance ID. The source RDS instance version must be RDS MySQL 5.6, 5.7, or 8.0 High Availability edition.</p>
     * </li>
     * <li><p>If <strong>CreationOption</strong> is <strong>CloneFromPolarDB</strong>, you need to input the source PolarDB cluster ID. The DBType of the cloned cluster will default to match the source cluster. For example, if the source cluster is MySQL 8.0, the cloned cluster must also have <strong>DBType</strong> set to <strong>MySQL</strong> and <strong>DBVersion</strong> to <strong>8.0</strong>.</p>
     * </li>
     * <li><p>If <strong>CreationOption</strong> is <strong>RecoverFromRecyclebin</strong>, you need to input the released source PolarDB cluster ID. The DBType of the cluster being recovered from the recycle bin must match the source cluster. For example, if the source cluster was MySQL 8.0, the recovered cluster must also have <strong>DBType</strong> set to <strong>MySQL</strong> and <strong>DBVersion</strong> to <strong>8.0</strong>.</p>
     * </li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>rm-*************</p>
     */
    @NameInMap("SourceResourceId")
    public String sourceResourceId;

    /**
     * <p>The availability zone where the hot standby cluster is stored. Applicable to the standard edition 3AZ scenario.</p>
     * <blockquote>
     * <p>This parameter takes effect only when multi-zone data strong consistency is enabled.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>cn-hangzhou-g</p>
     */
    @NameInMap("StandbyAZ")
    public String standbyAZ;

    /**
     * <p>Whether to enable automatic storage expansion for standard edition clusters, with valid values as follows:</p>
     * <ul>
     * <li>Enable: Enables automatic storage expansion.</li>
     * <li>Disable: Disables automatic storage expansion.</li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>Enable</p>
     */
    @NameInMap("StorageAutoScale")
    public String storageAutoScale;

    @NameInMap("StorageEncryption")
    public Boolean storageEncryption;

    @NameInMap("StorageEncryptionKey")
    public String storageEncryptionKey;

    /**
     * <p>The storage billing type, with valid values as follows:</p>
     * <ul>
     * <li>Postpaid: Pay-as-you-go (hourly).</li>
     * <li>Prepaid: Pay-per-use based on space (subscription).</li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>Prepaid</p>
     */
    @NameInMap("StoragePayType")
    public String storagePayType;

    /**
     * <p>Storage space for pay-by-space (subscription) billing. Unit: GB.</p>
     * <blockquote>
     * <ul>
     * <li>For PolarDB MySQL Standard Edition, the storage space range is 20 to 32000.</li>
     * <li>When the Standard Edition storage type is ESSDAUTOPL, the storage space range is 40 to 64000, with a minimum step size of 10, meaning you can only enter values like 40, 50, 60, and so on.</li>
     * </ul>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>50</p>
     */
    @NameInMap("StorageSpace")
    public Long storageSpace;

    /**
     * <p>Enterprise edition storage types include:</p>
     * <ul>
     * <li><strong>PSL5</strong></li>
     * <li><strong>PSL4</strong></li>
     * </ul>
     * <p>Standard edition storage types include:</p>
     * <ul>
     * <li><strong>ESSDPL0</strong></li>
     * <li><strong>ESSDPL1</strong></li>
     * <li><strong>ESSDPL2</strong></li>
     * <li><strong>ESSDPL3</strong></li>
     * <li><strong>ESSDAUTOPL</strong></li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>PSL4</p>
     */
    @NameInMap("StorageType")
    public String storageType;

    /**
     * <p>Set the upper limit for automatic storage expansion of standard edition clusters, in GB.</p>
     * <blockquote>
     * <p>The maximum value is 32000.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>800</p>
     */
    @NameInMap("StorageUpperBound")
    public Long storageUpperBound;

    /**
     * <p>Whether the cluster has enabled strong data consistency across multiple zones. Values are as follows:</p>
     * <ul>
     * <li><p><strong>ON</strong>: Indicates strong data consistency across multiple zones is enabled, applicable to the standard edition 3AZ scenario.</p>
     * </li>
     * <li><p><strong>OFF</strong>: Indicates strong data consistency across multiple zones is not enabled.</p>
     * </li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>ON</p>
     */
    @NameInMap("StrictConsistency")
    public String strictConsistency;

    /**
     * <p>Enables TDE encryption. Valid values are as follows:</p>
     * <ul>
     * <li><strong>true</strong>: Enabled.</li>
     * <li><strong>false</strong>: Disabled (default).</li>
     * </ul>
     * <blockquote>
     * <ul>
     * <li>This parameter takes effect only when <strong>DBType</strong> is <strong>PostgreSQL</strong> or <strong>Oracle</strong>.</li>
     * <li>You can call the <a href="https://help.aliyun.com/document_detail/167982.html">ModifyDBClusterTDE</a> interface to enable TDE encryption for a PolarDB MySQL cluster.</li>
     * <li>Once the TDE feature is enabled, it cannot be disabled.</li>
     * </ul>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>true</p>
     */
    @NameInMap("TDEStatus")
    public Boolean TDEStatus;

    /**
     * <p>List of tags.</p>
     */
    @NameInMap("Tag")
    public java.util.List<CreateDBClusterRequestTag> tag;

    @NameInMap("TargetMinorVersion")
    public String targetMinorVersion;

    /**
     * <p>If the payment type is <strong>Prepaid</strong>, this parameter is required.</p>
     * <ul>
     * <li>When <strong>Period</strong> is <strong>Month</strong>, <strong>UsedTime</strong> should be an integer within <code>[1-9]</code>.</li>
     * <li>When <strong>Period</strong> is <strong>Year</strong>, <strong>UsedTime</strong> should be an integer within <code>[1-3]</code>.</li>
     * </ul>
     * 
     * <strong>example:</strong>
     * <p>1</p>
     */
    @NameInMap("UsedTime")
    public String usedTime;

    /**
     * <p>VPC ID.</p>
     * 
     * <strong>example:</strong>
     * <p>vpc-**********</p>
     */
    @NameInMap("VPCId")
    public String VPCId;

    /**
     * <p>Virtual switch ID.</p>
     * <blockquote>
     * <p>If VPCId has been selected, VSwitchId is mandatory.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>vsw-**********</p>
     */
    @NameInMap("VSwitchId")
    public String vSwitchId;

    /**
     * <p>Availability Zone ID.</p>
     * <blockquote>
     * <p>You can view the available zones through the <a href="https://help.aliyun.com/document_detail/98041.html">DescribeRegions</a> interface.</p>
     * </blockquote>
     * 
     * <strong>example:</strong>
     * <p>cn-hangzhou-j</p>
     */
    @NameInMap("ZoneId")
    public String zoneId;

    public static CreateDBClusterRequest build(java.util.Map<String, ?> map) throws Exception {
        CreateDBClusterRequest self = new CreateDBClusterRequest();
        return TeaModel.build(map, self);
    }

    public CreateDBClusterRequest setAllowShutDown(String allowShutDown) {
        this.allowShutDown = allowShutDown;
        return this;
    }
    public String getAllowShutDown() {
        return this.allowShutDown;
    }

    public CreateDBClusterRequest setArchitecture(String architecture) {
        this.architecture = architecture;
        return this;
    }
    public String getArchitecture() {
        return this.architecture;
    }

    public CreateDBClusterRequest setAutoRenew(Boolean autoRenew) {
        this.autoRenew = autoRenew;
        return this;
    }
    public Boolean getAutoRenew() {
        return this.autoRenew;
    }

    public CreateDBClusterRequest setBackupRetentionPolicyOnClusterDeletion(String backupRetentionPolicyOnClusterDeletion) {
        this.backupRetentionPolicyOnClusterDeletion = backupRetentionPolicyOnClusterDeletion;
        return this;
    }
    public String getBackupRetentionPolicyOnClusterDeletion() {
        return this.backupRetentionPolicyOnClusterDeletion;
    }

    public CreateDBClusterRequest setBurstingEnabled(String burstingEnabled) {
        this.burstingEnabled = burstingEnabled;
        return this;
    }
    public String getBurstingEnabled() {
        return this.burstingEnabled;
    }

    public CreateDBClusterRequest setClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    public String getClientToken() {
        return this.clientToken;
    }

    public CreateDBClusterRequest setCloneDataPoint(String cloneDataPoint) {
        this.cloneDataPoint = cloneDataPoint;
        return this;
    }
    public String getCloneDataPoint() {
        return this.cloneDataPoint;
    }

    public CreateDBClusterRequest setClusterNetworkType(String clusterNetworkType) {
        this.clusterNetworkType = clusterNetworkType;
        return this;
    }
    public String getClusterNetworkType() {
        return this.clusterNetworkType;
    }

    public CreateDBClusterRequest setCreationCategory(String creationCategory) {
        this.creationCategory = creationCategory;
        return this;
    }
    public String getCreationCategory() {
        return this.creationCategory;
    }

    public CreateDBClusterRequest setCreationOption(String creationOption) {
        this.creationOption = creationOption;
        return this;
    }
    public String getCreationOption() {
        return this.creationOption;
    }

    public CreateDBClusterRequest setDBClusterDescription(String DBClusterDescription) {
        this.DBClusterDescription = DBClusterDescription;
        return this;
    }
    public String getDBClusterDescription() {
        return this.DBClusterDescription;
    }

    public CreateDBClusterRequest setDBMinorVersion(String DBMinorVersion) {
        this.DBMinorVersion = DBMinorVersion;
        return this;
    }
    public String getDBMinorVersion() {
        return this.DBMinorVersion;
    }

    public CreateDBClusterRequest setDBNodeClass(String DBNodeClass) {
        this.DBNodeClass = DBNodeClass;
        return this;
    }
    public String getDBNodeClass() {
        return this.DBNodeClass;
    }

    public CreateDBClusterRequest setDBNodeNum(Integer DBNodeNum) {
        this.DBNodeNum = DBNodeNum;
        return this;
    }
    public Integer getDBNodeNum() {
        return this.DBNodeNum;
    }

    public CreateDBClusterRequest setDBType(String DBType) {
        this.DBType = DBType;
        return this;
    }
    public String getDBType() {
        return this.DBType;
    }

    public CreateDBClusterRequest setDBVersion(String DBVersion) {
        this.DBVersion = DBVersion;
        return this;
    }
    public String getDBVersion() {
        return this.DBVersion;
    }

    public CreateDBClusterRequest setDefaultTimeZone(String defaultTimeZone) {
        this.defaultTimeZone = defaultTimeZone;
        return this;
    }
    public String getDefaultTimeZone() {
        return this.defaultTimeZone;
    }

    public CreateDBClusterRequest setGDNId(String GDNId) {
        this.GDNId = GDNId;
        return this;
    }
    public String getGDNId() {
        return this.GDNId;
    }

    public CreateDBClusterRequest setHotStandbyCluster(String hotStandbyCluster) {
        this.hotStandbyCluster = hotStandbyCluster;
        return this;
    }
    public String getHotStandbyCluster() {
        return this.hotStandbyCluster;
    }

    public CreateDBClusterRequest setLoosePolarLogBin(String loosePolarLogBin) {
        this.loosePolarLogBin = loosePolarLogBin;
        return this;
    }
    public String getLoosePolarLogBin() {
        return this.loosePolarLogBin;
    }

    public CreateDBClusterRequest setLooseXEngine(String looseXEngine) {
        this.looseXEngine = looseXEngine;
        return this;
    }
    public String getLooseXEngine() {
        return this.looseXEngine;
    }

    public CreateDBClusterRequest setLooseXEngineUseMemoryPct(String looseXEngineUseMemoryPct) {
        this.looseXEngineUseMemoryPct = looseXEngineUseMemoryPct;
        return this;
    }
    public String getLooseXEngineUseMemoryPct() {
        return this.looseXEngineUseMemoryPct;
    }

    public CreateDBClusterRequest setLowerCaseTableNames(String lowerCaseTableNames) {
        this.lowerCaseTableNames = lowerCaseTableNames;
        return this;
    }
    public String getLowerCaseTableNames() {
        return this.lowerCaseTableNames;
    }

    public CreateDBClusterRequest setOwnerAccount(String ownerAccount) {
        this.ownerAccount = ownerAccount;
        return this;
    }
    public String getOwnerAccount() {
        return this.ownerAccount;
    }

    public CreateDBClusterRequest setOwnerId(Long ownerId) {
        this.ownerId = ownerId;
        return this;
    }
    public Long getOwnerId() {
        return this.ownerId;
    }

    public CreateDBClusterRequest setParameterGroupId(String parameterGroupId) {
        this.parameterGroupId = parameterGroupId;
        return this;
    }
    public String getParameterGroupId() {
        return this.parameterGroupId;
    }

    public CreateDBClusterRequest setPayType(String payType) {
        this.payType = payType;
        return this;
    }
    public String getPayType() {
        return this.payType;
    }

    public CreateDBClusterRequest setPeriod(String period) {
        this.period = period;
        return this;
    }
    public String getPeriod() {
        return this.period;
    }

    public CreateDBClusterRequest setProvisionedIops(Long provisionedIops) {
        this.provisionedIops = provisionedIops;
        return this;
    }
    public Long getProvisionedIops() {
        return this.provisionedIops;
    }

    public CreateDBClusterRequest setProxyClass(String proxyClass) {
        this.proxyClass = proxyClass;
        return this;
    }
    public String getProxyClass() {
        return this.proxyClass;
    }

    public CreateDBClusterRequest setProxyType(String proxyType) {
        this.proxyType = proxyType;
        return this;
    }
    public String getProxyType() {
        return this.proxyType;
    }

    public CreateDBClusterRequest setRegionId(String regionId) {
        this.regionId = regionId;
        return this;
    }
    public String getRegionId() {
        return this.regionId;
    }

    public CreateDBClusterRequest setResourceGroupId(String resourceGroupId) {
        this.resourceGroupId = resourceGroupId;
        return this;
    }
    public String getResourceGroupId() {
        return this.resourceGroupId;
    }

    public CreateDBClusterRequest setResourceOwnerAccount(String resourceOwnerAccount) {
        this.resourceOwnerAccount = resourceOwnerAccount;
        return this;
    }
    public String getResourceOwnerAccount() {
        return this.resourceOwnerAccount;
    }

    public CreateDBClusterRequest setResourceOwnerId(Long resourceOwnerId) {
        this.resourceOwnerId = resourceOwnerId;
        return this;
    }
    public Long getResourceOwnerId() {
        return this.resourceOwnerId;
    }

    public CreateDBClusterRequest setScaleMax(String scaleMax) {
        this.scaleMax = scaleMax;
        return this;
    }
    public String getScaleMax() {
        return this.scaleMax;
    }

    public CreateDBClusterRequest setScaleMin(String scaleMin) {
        this.scaleMin = scaleMin;
        return this;
    }
    public String getScaleMin() {
        return this.scaleMin;
    }

    public CreateDBClusterRequest setScaleRoNumMax(String scaleRoNumMax) {
        this.scaleRoNumMax = scaleRoNumMax;
        return this;
    }
    public String getScaleRoNumMax() {
        return this.scaleRoNumMax;
    }

    public CreateDBClusterRequest setScaleRoNumMin(String scaleRoNumMin) {
        this.scaleRoNumMin = scaleRoNumMin;
        return this;
    }
    public String getScaleRoNumMin() {
        return this.scaleRoNumMin;
    }

    public CreateDBClusterRequest setSecurityIPList(String securityIPList) {
        this.securityIPList = securityIPList;
        return this;
    }
    public String getSecurityIPList() {
        return this.securityIPList;
    }

    public CreateDBClusterRequest setServerlessType(String serverlessType) {
        this.serverlessType = serverlessType;
        return this;
    }
    public String getServerlessType() {
        return this.serverlessType;
    }

    public CreateDBClusterRequest setSourceResourceId(String sourceResourceId) {
        this.sourceResourceId = sourceResourceId;
        return this;
    }
    public String getSourceResourceId() {
        return this.sourceResourceId;
    }

    public CreateDBClusterRequest setStandbyAZ(String standbyAZ) {
        this.standbyAZ = standbyAZ;
        return this;
    }
    public String getStandbyAZ() {
        return this.standbyAZ;
    }

    public CreateDBClusterRequest setStorageAutoScale(String storageAutoScale) {
        this.storageAutoScale = storageAutoScale;
        return this;
    }
    public String getStorageAutoScale() {
        return this.storageAutoScale;
    }

    public CreateDBClusterRequest setStorageEncryption(Boolean storageEncryption) {
        this.storageEncryption = storageEncryption;
        return this;
    }
    public Boolean getStorageEncryption() {
        return this.storageEncryption;
    }

    public CreateDBClusterRequest setStorageEncryptionKey(String storageEncryptionKey) {
        this.storageEncryptionKey = storageEncryptionKey;
        return this;
    }
    public String getStorageEncryptionKey() {
        return this.storageEncryptionKey;
    }

    public CreateDBClusterRequest setStoragePayType(String storagePayType) {
        this.storagePayType = storagePayType;
        return this;
    }
    public String getStoragePayType() {
        return this.storagePayType;
    }

    public CreateDBClusterRequest setStorageSpace(Long storageSpace) {
        this.storageSpace = storageSpace;
        return this;
    }
    public Long getStorageSpace() {
        return this.storageSpace;
    }

    public CreateDBClusterRequest setStorageType(String storageType) {
        this.storageType = storageType;
        return this;
    }
    public String getStorageType() {
        return this.storageType;
    }

    public CreateDBClusterRequest setStorageUpperBound(Long storageUpperBound) {
        this.storageUpperBound = storageUpperBound;
        return this;
    }
    public Long getStorageUpperBound() {
        return this.storageUpperBound;
    }

    public CreateDBClusterRequest setStrictConsistency(String strictConsistency) {
        this.strictConsistency = strictConsistency;
        return this;
    }
    public String getStrictConsistency() {
        return this.strictConsistency;
    }

    public CreateDBClusterRequest setTDEStatus(Boolean TDEStatus) {
        this.TDEStatus = TDEStatus;
        return this;
    }
    public Boolean getTDEStatus() {
        return this.TDEStatus;
    }

    public CreateDBClusterRequest setTag(java.util.List<CreateDBClusterRequestTag> tag) {
        this.tag = tag;
        return this;
    }
    public java.util.List<CreateDBClusterRequestTag> getTag() {
        return this.tag;
    }

    public CreateDBClusterRequest setTargetMinorVersion(String targetMinorVersion) {
        this.targetMinorVersion = targetMinorVersion;
        return this;
    }
    public String getTargetMinorVersion() {
        return this.targetMinorVersion;
    }

    public CreateDBClusterRequest setUsedTime(String usedTime) {
        this.usedTime = usedTime;
        return this;
    }
    public String getUsedTime() {
        return this.usedTime;
    }

    public CreateDBClusterRequest setVPCId(String VPCId) {
        this.VPCId = VPCId;
        return this;
    }
    public String getVPCId() {
        return this.VPCId;
    }

    public CreateDBClusterRequest setVSwitchId(String vSwitchId) {
        this.vSwitchId = vSwitchId;
        return this;
    }
    public String getVSwitchId() {
        return this.vSwitchId;
    }

    public CreateDBClusterRequest setZoneId(String zoneId) {
        this.zoneId = zoneId;
        return this;
    }
    public String getZoneId() {
        return this.zoneId;
    }

    public static class CreateDBClusterRequestTag extends TeaModel {
        /**
         * <p>Tag key. If you need to add multiple tags to the target cluster at once, click <strong>Add</strong> to add a tag key.</p>
         * <blockquote>
         * <p>Up to 20 pairs of tags can be added each time, where <code>Tag.N.Key</code> corresponds to <code>Tag.N.Value</code>.</p>
         * </blockquote>
         * 
         * <strong>example:</strong>
         * <p>type</p>
         */
        @NameInMap("Key")
        public String key;

        /**
         * <p>Tag value. If you need to add multiple tags to the target cluster at once, click <strong>Add</strong> to add tag values.</p>
         * <blockquote>
         * <p>Up to 20 pairs of tags can be added each time, where <code>Tag.N.Value</code> corresponds to <code>Tag.N.Key</code>.</p>
         * </blockquote>
         * 
         * <strong>example:</strong>
         * <p>test</p>
         */
        @NameInMap("Value")
        public String value;

        public static CreateDBClusterRequestTag build(java.util.Map<String, ?> map) throws Exception {
            CreateDBClusterRequestTag self = new CreateDBClusterRequestTag();
            return TeaModel.build(map, self);
        }

        public CreateDBClusterRequestTag setKey(String key) {
            this.key = key;
            return this;
        }
        public String getKey() {
            return this.key;
        }

        public CreateDBClusterRequestTag setValue(String value) {
            this.value = value;
            return this;
        }
        public String getValue() {
            return this.value;
        }

    }

}
